{"version":3,"sources":["../../../widgets/CartoMaintenanceWgt/Widget.js"],"names":["declare","BaseWidget","_WidgetsInTemplateMixin","Draw","Edit","Graphic","SimpleFillSymbol","SimpleMarkerSymbol","SimpleLineSymbol","Color","GraphicsLayer","Point","LayerInfos","lang","FeatureLayer","QueryTask","Query","WidgetManager","geometryEngine","Polyline","webMercatorUtils","Geoprocessor","BusyIndicator","Message","turf","XLSX","Deferred","TextSymbol","Font","requestToAttendState","requestsObservedState","requestsAttendState","idLyrCatastroFiscal","idLyrCfPredios","idLyrCfLotes_pun","idLyrCfEje_vial","idLyrCfNumeracion","idLyrCfArancel","idLyrCfLotes","idLyrCfUnidadesurbanas","idLyrCfParques","idLyrCfManzana","idLyrCfSector","idLyrActpuntoimg","idLyrDistricts","iconByState","_UBIGEO_FIELD","_ID_LOTE_P_FIELD","_COD_MZN_FIELD","_F_MZN_FIELD","_COD_SECT_FIELD","_COD_PRE_FIELD","_COD_LOTE_FIELD","samplePdf","toolbarCm","params","URLSearchParams","window","location","search","paramsApp","keys","key","get","symbolPuntoLote","STYLE_SQUARE","STYLE_SOLID","symbolFusionLote","symbolEliminarLote","STYLE_DIAGONAL_CROSS","symbolLoteSelected","symbolDivisionLote","STYLE_DASH","symbolPredio","symbolPredioSelected","symbolSnapPointCm","STYLE_CROSS","idGraphicPredioCm","idGraphicPredioByDivison","idGraphicPredioSelectedCm","idGraphicLoteCm","idGraphicLoteSelectedCm","idGraphicPuntoLote","idGraphicFrenteLote","idGraphicLineaDivision","idGraphicLoteDeleteCm","idGraphicLabelLineaDivision","idGraphicLabelCodLote","symbolByCase","graphicLayerLineaDivision","id","graphicLayerLabelLineaDivision","graphicLayerPredioByDivison","baseClass","codRequestsCm","currentTabActive","layersMap","queryUbigeo","case","caseDescription","lotesQuery","idlotes","arancel","codigosPredios","xy","idxLines","idPredioDivision","idPredioAcumulacion","editToolbar","queryRequests","ubigeo","postCreate","inherited","arguments","console","log","_getAllLayers","selfCm","_filterByDistrictCm","_startExtentByDistrictCm","esri","bundle","toolbars","draw","addPoint","addShape","resume","start","getInstance","map","itemInfo","then","hitch","layerInfosObj","_showMessage","message","type","title","nls","_widgetLabel","titleLabel","_showMessagePromise","messagetext","deferred","buttons","label","onClick","resolve","hide","promise","_showMessageConfirm","mensaje","queryPredios","getLayerInfoById","getFilter","setFilter","query","where","qTask","getUrl","executeForExtent","results","setExtent","extent","homeWidget","getWidgetsByName","homeDijit","error","startup","busyIndicator","create","target","domNode","parentNode","backgroundOpacity","_callApiRestServices","baseUrl","url","URL","Object","forEach","searchParams","append","fetch","response","Error","status","json","catch","err","_getRequestsTrayDataCm","responseData","state","data","filter","i","_loadIniRequestsCm","dojo","click","_parseDateStringtoFormat","dateString","date","Date","day","getDate","month","getMonth","year","getFullYear","_loadRequestsByEventCm","evt","_loadRequestsCm","show","config","applicationListUrl","estado","desc","dataHtml","lands","lnd","join","idType","icon","tbody","innerHTML","tb","getElementsByTagName","length","tableRequestApCm","removeChild","appendChild","on","_openFormCase","_openFormResult","removeClass","classList","add","_zoomToPredSelectedEvt","cod_pred","currentTarget","children","split","_zoomToPredSelected","_removeLayerGraphic","prediosLayer","propertyLayer","mode","MODE_ONDEMAND","outFields","selectFeatures","SELECTION_NEW","featureSelected","addLayer","centerAt","geometry","interval","setInterval","graphics","symbol","setSymbol","setTimeout","clearInterval","_openSupportingDocument","open","focus","_zoomExtentToLote","cod_pre","returnGeometry","returnDistinctValues","execute","idLote","features","attributes","idmanzana","idsector","queryLote","qTaskLote","expand","arr","push","_unionFeatures","graphic","_zoomHomeRequests","_populateFormsByPredio","id_solicitud","landsByApplicationUrl","rows","cpm","streetName","row","closest","rowList","td","value","reasignarApCm","toggle","fusionApCm","divisionApCm","actGeomApCm","eliminacionApCm","resultCtnApCm","remove","obsCtnApCm","requestTrayApCm","casesCtnApCm","deactivate","disableSnapping","bodyTbLinesDvApCm","bodyTbPrediosDvApCm","bodyTbDatosLoteDvApCm","clear","_openFormObs","textAreaObsApCm","imageDiv","style","backgroundImage","_FormResult","caseCm","urlPredioResults","resultsByApplication","bodyTbResultsApCm","predio","index","_centerAtPredioResult","replace","_createToolbar","_addToMap","screenPoint","toScreen","snappingManager","getSnappingPoint","undefined","point_g","webMercatorToGeographic","graphicLayer","x","y","setInfoWindowOnClick","alert","errorSnapingLocate","nameIdLine","_populateTableDrawLine","_addNameToLine","layerId","graphicsLayerIds","includes","removeLayer","getLayer","_activateTool","_activateSnappingByReasignar","activate","_activateToolAcumulacion","_activateSnappingByAcumulacion","_activateToolLinesDivision","_activateSnappingByDivision","cflayer","snapManager","enableSnapping","snapPointSymbol","tolerance","layerInfos","layer","setLayerInfos","graphicLayerPuntoLote","graphicsLayerInfo","layers","LayerInfo","name","union","_ApplyAcumulacionLotes","graphicLayerLoteFusion","_extent","urlLotes","_etiquetasCodLote","bodyTbDatosLoteFsApCm","orderByFields","graphicLayerFrenteLote","graphicFusion","frentes","isItc","intersects","hasOwnProperty","unionFrentes","idx","itcFrentesByLotes","intersect","polyline","paths","spatialReference","wkid","polylineOne","_getLongestPolyline","puntoLoteTurf","_findMidpoint","puntoLote","coordinates","puntoLoteGraphic","symbolFrenteLote","Math","floor","random","frente","_populateTablePredio","bodyTbPrediosFsApCm","_getMidpoint","geodesicLength","midpoint","geodesicDensify","getPoint","lengthPolylineChunk","line","lineString","options","units","along","longestPath","path","polylineChunk","_dividePolygon","poly","lines","divide","cut","idLine","tr","cursor","_deleteRowLine","_zoonToLineDivision","_editaNameLineDivision","elem","item","graphicLabel","polylineGeom","polylineGeomUtm","midPoint","pointLabel","font","STYLE_NORMAL","VARIANT_NORMAL","WEIGHT_BOLD","txtSym","setOffset","setAlign","ALIGN_END","setHaloColor","setHaloSize","text","innerText","refresh","bodyTable","drawFunction","_activateSnappingPrediosByDivision","graphiclayer","_activateToolPrediosByDivision","_changeValueCodLote","selectedIndex","cod_lote","lyr","graphicSelected","_centerAtLabelCodLoteDivision","_editLoteUrbanoDivision","lot_urb","textContent","_buildDataLoteTable","tableBody","predios","document","createElement","indexCell","className","num","codigoCell","select","option","p","selected","loteUrbCell","contentEditable","locationMarker","_ordenarPoligonosNorteSur","poligonos","coordenadasNorte","poligono","getExtent","ymax","poligonosOrdenados","slice","sort","a","b","coordenadaNorteA","indexOf","coordenadaNorteB","graphicLayerLabelCodLoteDivision","dataLoteTable","polygon","rings","center","pointOnFeature","_zfill","setColor","setSize","idGraphic","clase","_enableEditingLabelsLotesDivision","MOVE","len","Array","fill","campo","queryWhere","tipoEstadistica","polygonos","estadisticaDef","tasks","StatisticDefinition","statisticType","onStatisticField","outStatisticFieldName","outStatistics","queryTask","result","resultado","parseInt","_ApplyDivideLotes","graphicLayerLoteDivision","unionGraphicLayerLineaDivision","lineGeometry","geomLote","geomLoteDivided","lote","reorderLayer","graphicLoteDivision","idItcFrentesByLotes","_executeReasignacionGpService","_executeGPService","reasignacionUrl","_executeAcumulacionGpService","labelCodLotesLayer","JSON","stringify","toJson","acumulacionUrl","_executeSubdivisionGpService","subdivisionUrl","_executeInactivarGpService","inactivacionUrl","urlStatusRequest","idStatus","buzyElm","imgElm","querySelector","loadingText","position","topMessage","parseFloat","top","leftImg","left","width","transform","background","zIndex","gp","submitJob","_completeCallback","_statusCallback","JobInfo","jobId","textMessage","messages","description","jobStatus","getResultData","setVisibility","_cancelProcess","cancelJob","info","_exportTableToExcel","table","headerRow","querySelectorAll","headers","headerCols","h","cols","j","wb","utils","book_new","ws","json_to_sheet","sheetName","book_append_sheet","writeFile","_dataURItoBlob","dataURI","byteString","atob","mimeString","buffer","ArrayBuffer","dataView","Uint8Array","charCodeAt","Blob","_sendObservation","file","imgUploadApCm","files","reader","FileReader","FormData","onloadend","observationUrl","method","body","ok","readAsDataURL","_uploadImagenObs","backgroundSize","backgroundRepeat","backgroundPosition","_searchRequestByCodPred","keyCode","onOpen","panel","getPanel","height","setPosition","panelManager","normalizePanel","isModified"],"mappings":"QAAoB,oB,EACG,iB,EACa,+B,EACnB,oB,EACA,oB,EACG,c,EACS,+B,EACE,iC,EACF,+B,EACX,kB,EACQ,2B,EACR,qB,EACK,4B,EACN,iB,EACQ,0B,EACH,sB,EACJ,kB,EACQ,oB,EACC,8B,EACN,wB,EACQ,gC,EACJ,yB,EACC,+B,EACN,oB,EACH,M,EACA,M,EACI,e,EACE,yB,EACN,mB,aA5BVA,O,EACAC,U,EACAC,uB,EACAC,I,EACAC,I,EACAC,O,EACAC,gB,EACAC,kB,EACAC,gB,EACAC,K,EACAC,a,EACAC,K,EACAC,U,EACAC,I,EACAC,Y,EACAC,S,EACAC,K,EACAC,a,EACAC,c,EACAC,Q,EACAC,gB,EACAC,Y,EACAC,a,EACAC,O,EACAC,I,EACAC,I,EACAC,Q,EACAC,U,EACAC,I;AACP;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,MAAMC,uBAAuB,aAA7B;AACA,MAAMC,wBAAwB,WAA9B;AACA,MAAMC,sBAAsB,UAA5B;;AAGA;AACA,MAAMC,sBAAsB,mBAA5B;AACA,MAAMC,iBAAiB,qBAAvB;AACA,MAAMC,mBAAmB,qBAAzB;AACA,MAAMC,kBAAkB,qBAAxB;AACA,MAAMC,oBAAoB,qBAA1B;AACA,MAAMC,iBAAiB,qBAAvB;AACA,MAAMC,eAAe,qBAArB;AACA,MAAMC,yBAAyB,qBAA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","file":"Widget.js","sourcesContent":["import declare from 'dojo/_base/declare';\r\nimport BaseWidget from 'jimu/BaseWidget';\r\nimport _WidgetsInTemplateMixin from 'dijit/_WidgetsInTemplateMixin';\r\nimport Draw from \"esri/toolbars/draw\";\r\nimport Edit from \"esri/toolbars/edit\";\r\nimport Graphic from \"esri/graphic\";\r\nimport SimpleFillSymbol from \"esri/symbols/SimpleFillSymbol\";\r\nimport SimpleMarkerSymbol from \"esri/symbols/SimpleMarkerSymbol\";\r\nimport SimpleLineSymbol from \"esri/symbols/SimpleLineSymbol\";\r\nimport Color from 'dojo/_base/Color';\r\nimport GraphicsLayer from \"esri/layers/GraphicsLayer\"\r\nimport Point from \"esri/geometry/Point\"\r\nimport LayerInfos from \"jimu/LayerInfos/LayerInfos\";\r\nimport lang from \"dojo/_base/lang\";\r\nimport FeatureLayer from \"esri/layers/FeatureLayer\";\r\nimport QueryTask from \"esri/tasks/QueryTask\";\r\nimport Query from \"esri/tasks/query\";\r\nimport WidgetManager from \"jimu/WidgetManager\"\r\nimport geometryEngine from \"esri/geometry/geometryEngine\";\r\nimport Polyline from \"esri/geometry/Polyline\";\r\nimport webMercatorUtils from \"esri/geometry/webMercatorUtils\";\r\nimport Geoprocessor from \"esri/tasks/Geoprocessor\";\r\nimport BusyIndicator from 'esri/dijit/util/busyIndicator';\r\nimport Message from \"jimu/dijit/Message\";\r\nimport turf from \"turf\";\r\nimport XLSX from \"xlsx\";\r\nimport Deferred from \"dojo/Deferred\";\r\nimport TextSymbol from \"esri/symbols/TextSymbol\";\r\nimport Font from \"esri/symbols/Font\";\r\n// import 'core-js/stable'\r\n// import 'regenerator-runtime/runtime'\r\n\r\n\r\n// const dataRequestsToAttendCm = [\r\n//   {\"case\":\"Reasignar\",\"caseId\":1,\"cod_pre\":\"01-34-0017\",\"estado\":\"por_atender\",\"fec_solicitud\":\"10/11/2022\", \"id_solicitud\":1},\r\n//   {\"case\":\"Acumulación\",\"caseId\":2,\"cod_pre\":\"01-34-0011,01-34-0012\",\"estado\":\"por_atender\",\"fec_solicitud\":\"10/11/2022\",\"id_solicitud\":2},\r\n//   {\"case\":\"División\",\"caseId\":3,\"cod_pre\":\"01-34-0010\",\"estado\":\"por_atender\",\"fec_solicitud\":\"10/11/2022\",\"id_solicitud\":3},\r\n//   {\"case\":\"Inactivar\",\"caseId\":5,\"cod_pre\":\"01-23-0036\",\"estado\":\"por_atender\",\"fec_solicitud\":\"10/11/2022\",\"id_solicitud\":5},\r\n//   {\"case\":\"Reasignar\",\"caseId\":1,\"cod_pre\":\"01-38-0010\",\"estado\":\"por_atender\",\"fec_solicitud\":\"10/11/2022\",\"id_solicitud\":6},\r\n//   {\"case\":\"Acumulación\",\"caseId\":2,\"cod_pre\":\"01-58-0004,01-58-0003\",\"estado\":\"por_atender\",\"fec_solicitud\":\"10/11/2022\",\"id_solicitud\":7},\r\n//   {\"case\":\"División\",\"caseId\":3,\"cod_pre\":\"01-12-0028\",\"estado\":\"por_atender\",\"fec_solicitud\":\"10/11/2022\",\"id_solicitud\":11},\r\n//   {\"case\":\"Fusión\",\"caseId\":2,\"cod_pre\":\"1376\",\"estado\":\"obaservado\",\"fec_solicitud\":\"10/11/2022\",\"id_solicitud\":8},\r\n//   {\"case\":\"División\",\"caseId\":3,\"cod_pre\":\"1376\",\"estado\":\"observado\",\"fec_solicitud\":\"10/11/2022\",\"id_solicitud\":9},\r\n//   {\"case\":\"Inactivar\",\"caseId\":4,\"cod_pre\":\"1376\",\"estado\":\"atendido\",\"fec_solicitud\":\"10/11/2022\",\"id_solicitud\":10}\r\n//   ]\r\n\r\n// const dataRequestsToAttendCm2 = {\r\n// \t\"count\":1,\r\n// \t\"next\":null,\r\n// \t\"previous\":null,\r\n// \t\"results\":[\r\n// \t\t{\"type\":\"Reasignar\",\"idType\":1,\"lands\":[{\"cup\":\"01-34-0017\"}],\"status\":\"Por atender\",\"idStatus\":1,\"date\":\"2023-05-14T22:38:35.742809\",\"id\":1},\r\n// \t\t{\"type\":\"Acumulación\",\"idType\":2,\"lands\":[{\"cup\":\"01-34-0011\"},{\"cup\":\"01-34-0012\"}],\"status\":\"Por atender\",\"idStatus\":1,\"date\":\"2023-05-14T22:38:35.742809\",\"id\":2},\r\n// \t\t{\"type\":\"División\",\"idType\":3,\"lands\":[{\"cup\":\"01-34-0010\"}],\"status\":\"Por atender\",\"idStatus\":1,\"date\":\"2023-05-14T22:38:35.742809\",\"id\":3},\r\n// \t\t{\"type\":\"Inactivar\",\"idType\":5,\"lands\":[{\"cup\":\"01-23-0036\"}],\"status\":\"Por atender\",\"idStatus\":1,\"date\":\"2023-05-14T22:38:35.742809\",\"id\":5},\r\n// \t\t{\"type\":\"Reasignar\",\"idType\":1,\"lands\":[{\"cup\":\"01-38-0010\"}],\"status\":\"Por atender\",\"idStatus\":1,\"date\":\"2023-05-14T22:38:35.742809\",\"id\":6},\r\n// \t\t{\"type\":\"Acumulación\",\"idType\":2,\"lands\":[{\"cup\":\"01-58-0004\"},{\"cup\":\"01-58-0003\"}],\"status\":\"Por atender\",\"idStatus\":1,\"date\":\"2023-05-14T22:38:35.742809\",\"id\":7},\r\n// \t\t{\"type\":\"División\",\"idType\":3,\"lands\":[{\"cup\":\"01-12-0028\"}],\"status\":\"Por atender\",\"idStatus\":1,\"date\":\"2023-05-14T22:38:35.742809\",\"id\":11},\r\n// \t\t{\"type\":\"Fusión\",\"idType\":2,\"lands\":[{\"cup\":\"1376\"}],\"status\":\"Observado\",\"idStatus\":3,\"date\":\"2023-05-14T22:38:35.742809\",\"id\":8},\r\n// \t\t{\"type\":\"División\",\"idType\":3,\"lands\":[{\"cup\":\"1376\"}],\"status\":\"Observado\",\"idStatus\":3,\"date\":\"2023-05-14T22:38:35.742809\",\"id\":9},\r\n// \t\t{\"type\":\"Inactivar\",\"idType\":4,\"lands\":[{\"cup\":\"1376\"}],\"status\":\"Atendido\",\"idStatus\":2,\"date\":\"2023-05-14T22:38:35.742809\",\"id\":10}\r\n// \t]\r\n// }\r\n\r\n\r\n// const dataByRequest = {\r\n//   \"1\": [{\"cod_pre\": \"01-34-0017\", \"x\": -79.739827, \"y\": -6.643564, \"direccion\": \"Av. Los Jazmines 123\", \"num_alt\": 567, \"sec_eje\": \"Sección 1\", \"cod_cuc\": \"ABC123\"}],\r\n//   \"2\": [\r\n//     {\"cod_pre\": \"01-34-0011\",\"x\": -67.89,\"y\": -12,\"direccion\": \"Calle Las Rosas 456\",\"num_alt\": 789,\"sec_eje\": \"Sección 2\",\"cod_cuc\": \"DEF456\"}, \r\n//     { \"cod_pre\": \"01-34-0012\", \"x\": 345.67, \"y\": 89.01, \"direccion\": \"Jr. Los Girasoles 789\", \"num_alt\": 234, \"sec_eje\": \"Sección 3\", \"cod_cuc\": \"GHI789\"},\r\n//   ],\r\n//   \"3\": [{\"cod_pre\": \"01-34-0010\",\"x\": -67.89,\"y\": -12,\"direccion\": \"Calle Las Rosas 456\",\"num_alt\": 789,\"sec_eje\": \"Sección 2\", \"cod_cuc\": \"DEF456\"}],\r\n//   \"5\": [{\"cod_pre\": \"01-23-0036\",\"x\": -67.89,\"y\": -12,\"direccion\": \"Jr. Los Girasoles 789\",\"num_alt\": 234,\"sec_eje\": \"Sección 3\",\"cod_cuc\": \"GHI789\"}],\r\n//   \"6\": [{\"cod_pre\": \"01-38-0010\", \"x\": -79.739827, \"y\": -6.643564, \"direccion\": \"Av. Los Jazmines 123\", \"num_alt\": 567, \"sec_eje\": \"Sección 1\", \"cod_cuc\": \"ABC123\"}],\r\n//   \"7\": [\r\n//     {\"cod_pre\": \"01-58-0004\",\"x\": -67.89,\"y\": -12,\"direccion\": \"Calle Las Rosas 456\",\"num_alt\": 789,\"sec_eje\": \"Sección 2\",\"cod_cuc\": \"DEF456\"}, \r\n//     { \"cod_pre\": \"01-58-0003\", \"x\": 345.67, \"y\": 89.01, \"direccion\": \"Jr. Los Girasoles 789\", \"num_alt\": 234, \"sec_eje\": \"Sección 3\", \"cod_cuc\": \"GHI789\"},\r\n//   ],\r\n//   \"11\": [{\"cod_pre\": \"01-12-0028\",\"x\": -67.89,\"y\": -12,\"direccion\": \"Calle Las Rosas 456\",\"num_alt\": 789,\"sec_eje\": \"Sección 2\", \"cod_cuc\": \"DEF456\"}],\r\n// }\r\n\r\n// const dataByRequest2 = {\r\n//   \"1\": [\r\n//   \t{\"cpm\": \"01-34-0017\", \"streetName\": \"Av. Los Jazmines 123\", \"streetNameAlt\": 567, \"secEjec\": \"Sección 1\", \"codCuc\": \"ABC123\"}\r\n//   ],\r\n//   \"2\": [\r\n//     {\"cpm\": \"01-34-0011\", \"streetName\": \"Calle Las Rosas 456\",\"streetNameAlt\": 789,\"secEjec\": \"Sección 2\",\"codCuc\": \"DEF456\"}, \r\n//     { \"cpm\": \"01-34-0012\", \"streetName\": \"Jr. Los Girasoles 789\", \"streetNameAlt\": 234, \"secEjec\": \"Sección 3\", \"codCuc\": \"GHI789\"},\r\n//   ],\r\n//   \"3\": [\r\n//   \t{\"cpm\": \"01-34-0010\", \"streetName\": \"Calle Las Rosas 456\",\"streetNameAlt\": 789,\"secEjec\": \"Sección 2\", \"codCuc\": \"DEF456\"}\r\n//   ],\r\n//   \"5\": [\r\n//   \t{\"cpm\": \"01-23-0036\", \"streetName\": \"Jr. Los Girasoles 789\",\"streetNameAlt\": 234,\"secEjec\": \"Sección 3\",\"codCuc\": \"GHI789\"}\r\n//   ],\r\n//   \"6\": [\r\n//   \t{\"cpm\": \"01-38-0010\", \"streetName\": \"Av. Los Jazmines 123\", \"streetNameAlt\": 567, \"secEjec\": \"Sección 1\", \"codCuc\": \"ABC123\"}\r\n//   ],\r\n//   \"7\": [\r\n//     {\"cpm\": \"01-58-0004\", \"streetName\": \"Calle Las Rosas 456\",\"streetNameAlt\": 789,\"secEjec\": \"Sección 2\",\"codCuc\": \"DEF456\"}, \r\n//     { \"cpm\": \"01-58-0003\", \"streetName\": \"Jr. Los Girasoles 789\", \"streetNameAlt\": 234, \"secEjec\": \"Sección 3\", \"codCuc\": \"GHI789\"},\r\n//   ],\r\n//   \"11\": [\r\n//   \t{\"cpm\": \"01-12-0028\", \"streetName\": \"Calle Las Rosas 456\",\"streetNameAlt\": 789,\"secEjec\": \"Sección 2\", \"codCuc\": \"DEF456\"}\r\n//   ],\r\n// }\r\n\r\n// const responseDivision = {\r\n//   \"6\": [\r\n//     {\"cod_pre\": \"prueba-69\", \"direccion\": \"Calle Las Rosas 456 con av. Argentina 123\"},\r\n//     {\"cod_pre\": \"prueba-70\", \"direccion\": \"Calle Las Rosas 457 con av. Argentina 123\"},\r\n//   ],\r\n//   \"11\": [\r\n//     {\"cod_pre\": \"prueba-71\", \"direccion\": \"Calle Las Rosas 456 con av. Argentina 123\"},\r\n//     {\"cod_pre\": \"prueba-72\", \"direccion\": \"Calle Las Rosas 457 con av. Argentina 123\"},\r\n//   ],\r\n//   \"2\": [\r\n//     {\"cod_pre\": \"prueba-73\", \"direccion\": \"Calle Las Rosas 456 con av. Argentina 123\"},\r\n//   ],\r\n//   \"1\": [\r\n//     {\"cod_pre\": \"01-34-0017\", \"direccion\": \"Calle Las Rosas 456 con av. Argentina 123\"},\r\n//   ],\r\n//   \"5\":[\r\n//     {\"cod_pre\": \"01-23-0036\", \"direccion\": \"Calle Las Rosas 456 con av. Argentina 123\"},\r\n//   ]\r\n// }\r\n\r\n\r\nconst requestToAttendState = \"por_atender\"\r\nconst requestsObservedState = \"observado\"\r\nconst requestsAttendState = \"atendido\"\r\n\r\n\r\n// Layers ids\r\nconst idLyrCatastroFiscal = \"CARTO_FISCAL_6806\"\r\nconst idLyrCfPredios = \"CARTO_FISCAL_6806_0\"\r\nconst idLyrCfLotes_pun = \"CARTO_FISCAL_6806_1\"\r\nconst idLyrCfEje_vial = \"CARTO_FISCAL_6806_2\"\r\nconst idLyrCfNumeracion = \"CARTO_FISCAL_6806_3\"\r\nconst idLyrCfArancel = \"CARTO_FISCAL_6806_4\"\r\nconst idLyrCfLotes = \"CARTO_FISCAL_6806_5\"\r\nconst idLyrCfUnidadesurbanas = \"CARTO_FISCAL_6806_6\"\r\nconst idLyrCfParques = \"CARTO_FISCAL_6806_7\"\r\nconst idLyrCfManzana = \"CARTO_FISCAL_6806_8\"\r\nconst idLyrCfSector= \"CARTO_FISCAL_6806_9\"\r\nconst idLyrActpuntoimg = \"ACTUALIZACION_DE_PUNTO_IMG_1890\"\r\nconst idLyrDistricts = \"limites_nacional_1821_2\"\r\n\r\nconst iconByState = {\r\n  \"por_atender\": {'icon': 'fas fa-pencil-alt', 'id': 'editRequestsCm', 'desc': \"Por atender\"},\r\n  \"observado\": {'icon': 'fas fa-pause', 'id': 'obsRequestsCm', 'desc': \"Observado\"},\r\n  \"atendido\": {'icon': 'fas fa-check', 'id': 'goodRequestsCm', 'desc': \"Atendido\"},\r\n}\r\n\r\n// Fields \r\nconst _UBIGEO_FIELD = \"UBIGEO\"\r\nconst _ID_LOTE_P_FIELD = \"ID_LOTE_P\"\r\nconst _COD_MZN_FIELD = \"COD_MZN\"\r\nconst _F_MZN_FIELD = \"F_MZN\"\r\nconst _COD_SECT_FIELD = \"COD_SECT\"\r\nconst _COD_PRE_FIELD = \"COD_PRE\"\r\nconst _COD_LOTE_FIELD = \"COD_LOTE\"\r\n\r\n\r\nconst samplePdf = \"https://www.africau.edu/images/default/sample.pdf\"\r\n\r\nlet toolbarCm\r\n\r\nconst params = new URLSearchParams(window.location.search)\r\nconst paramsApp = {}\r\n\r\nfor (let key of params.keys()) {\r\n  paramsApp[key] = params.get(key)\r\n}\r\n\r\n// console.log(paramsApp)\r\n// Styles\r\nconst symbolPuntoLote = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_SQUARE, \r\n  20, \r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID, \r\n    new Color([255, 0, 0]), 2), \r\n    new Color([0, 92, 230, 1]\r\n  )\r\n)\r\n\r\nconst symbolFusionLote = new SimpleFillSymbol(\r\n  SimpleFillSymbol.STYLE_SOLID,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0]),\r\n    2\r\n  ),\r\n  new Color([255, 255, 0, 0.25])\r\n)\r\n\r\nconst symbolEliminarLote = new SimpleFillSymbol(\r\n  SimpleFillSymbol.STYLE_DIAGONAL_CROSS,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([100, 100, 100]),\r\n    2\r\n  ),\r\n  new Color([229, 229, 229, 0.9])\r\n)\r\n\r\nconst symbolLoteSelected = new SimpleFillSymbol(\r\n  SimpleFillSymbol.STYLE_SOLID,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0, 0.75]),\r\n    4\r\n  ),\r\n  new Color([0, 255, 0, 0])\r\n)\r\n\r\nconst symbolDivisionLote = new SimpleLineSymbol(\r\n  SimpleLineSymbol.STYLE_DASH,\r\n  new Color([255, 0, 0]),\r\n  2\r\n)\r\n\r\nconst symbolPredio = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_SQUARE, \r\n  20, \r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID, \r\n    new Color([255, 0, 0]), 2), \r\n    new Color([235, 69, 95, 1]\r\n  )\r\n)\r\n\r\nconst symbolPredioSelected = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_SQUARE, 20,\r\n  new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID, \r\n  new Color([255, 0, 0]), 4),\r\n  new Color([0, 255, 0, 0])\r\n);\r\n\r\nconst symbolSnapPointCm = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_CROSS,\r\n  20,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0]),\r\n    2\r\n  ),\r\n  new Color([0, 255, 0, 0.25])\r\n)\r\n\r\n\r\n// Identificadores de graficos\r\nconst idGraphicPredioCm = \"graphicPredioCm2\"\r\nconst idGraphicPredioByDivison = \"graphicPredioByDivison\"\r\nconst idGraphicPredioSelectedCm = \"graphicPredioSelected\"\r\nconst idGraphicLoteCm = \"graphicLoteCm\"\r\nconst idGraphicLoteSelectedCm = \"graphicLoteSelectedCm\"\r\nconst idGraphicPuntoLote = \"graphicPuntoLote\"\r\nconst idGraphicFrenteLote = \"graphicFrenteLote\"\r\nconst idGraphicLineaDivision = \"graphicLineaDivision\"\r\nconst idGraphicLoteDeleteCm = \"graphicLoteDeleteCm\"\r\nconst idGraphicLabelLineaDivision = \"graphicLabelLineaDivision\"\r\nconst idGraphicLabelCodLote = \"graphicLabelCodLoteDivision\"\r\n\r\n// symbol by case\r\nconst symbolByCase = {\r\n  \"1\": {\"symbol\": symbolPredio},\r\n  \"2\": {\"symbol\": symbolPredio},\r\n  \"3\": {\"symbol\": symbolPredio},\r\n}\r\n\r\n// graphicsLayer main\r\nlet graphicLayerLineaDivision = new GraphicsLayer({\r\n  id: idGraphicLineaDivision,\r\n});\r\n\r\nlet graphicLayerLabelLineaDivision = new GraphicsLayer({\r\n  id: idGraphicLabelLineaDivision,\r\n});\r\n\r\n// let graphicLayerLabelCodLoteDivision = new GraphicsLayer({\r\n//   id: idGraphicLabelCodLote,\r\n// });\r\n\r\nlet graphicLayerPredioByDivison = new GraphicsLayer({\r\n  id: idGraphicPredioByDivison,\r\n});\r\n\r\n// To create a widget, you need to derive from BaseWidget.\r\nexport default declare([BaseWidget], {\r\n\r\n  // Custom widget code goes here\r\n\r\n  baseClass: 'carto-maintenance-wgt',\r\n  codRequestsCm: null,\r\n  currentTabActive: null,\r\n  layersMap: [],\r\n  queryUbigeo: paramsApp['ubigeo'] ? `${_UBIGEO_FIELD} = '${paramsApp['ubigeo']}'` : \"1=1\",\r\n  case: 0,\r\n  caseDescription: '',\r\n  lotesQuery: null,\r\n  idlotes: null,\r\n  arancel: null,\r\n  codigosPredios: null,\r\n  xy: [],\r\n  idxLines: 0,\r\n  idPredioDivision: '',\r\n  idPredioAcumulacion: '',\r\n  editToolbar: null,\r\n  queryRequests: {\r\n    ubigeo: paramsApp['ubigeo']\r\n  },\r\n\r\n  // add additional properties here\r\n\r\n  // methods to communication with app container:\r\n  postCreate () {\r\n    this.inherited(arguments);\r\n    console.log('CartoMaintenanceWgt::postCreate');\r\n    this._getAllLayers();\r\n    selfCm = this;\r\n    this._filterByDistrictCm();\r\n    this._startExtentByDistrictCm();\r\n    esri.bundle.toolbars.draw.addPoint = esri.bundle.toolbars.draw.addPoint + \"<br/>Pulsar <strong>CTRL</strong> para activar la alineación\";\r\n    esri.bundle.toolbars.draw.addShape = esri.bundle.toolbars.draw.addShape + \"<br/>Pulsar <strong>CTRL</strong> para activar la alineación\";\r\n    esri.bundle.toolbars.draw.resume = esri.bundle.toolbars.draw.resume + \"<br/>Pulsar <strong>CTRL</strong> para activar la alineación\";\r\n    esri.bundle.toolbars.draw.start = esri.bundle.toolbars.draw.start + \"<br/>Pulsar <strong>CTRL</strong> para activar la alineación\";\r\n  },\r\n  _getAllLayers() {\r\n    LayerInfos.getInstance(this.map, this.map.itemInfo).then(lang.hitch(this, function (layerInfosObj) {\r\n      this.layersMap = layerInfosObj;\r\n    }));\r\n  },\r\n\r\n  _showMessage(message, type = 'message') {\r\n    let title = `${this.nls._widgetLabel}: ${type}`\r\n    switch (type) {\r\n        case 'error':\r\n            new Message({\r\n                type: type,\r\n                titleLabel: title,\r\n                message: message,\r\n            });\r\n            break;\r\n        default:\r\n            new Message({\r\n                type: type,\r\n                titleLabel: title,\r\n                message: message,\r\n            });\r\n            break;\r\n    }\r\n\r\n  },\r\n\r\n  _showMessagePromise(messagetext) {\r\n    let deferred = new Deferred();\r\n    let message = new Message({\r\n        message: messagetext,\r\n        buttons: [{\r\n            label: \"Ok\",\r\n            onClick: function () {\r\n                deferred.resolve(true);\r\n                message.hide();\r\n            }\r\n        }]\r\n    });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _showMessageConfirm(){\r\n    let deferred = new Deferred();\r\n    let mensaje = new Message({\r\n      message: \"¿Estás seguro de que deseas continuar?\",\r\n      type: \"question\",\r\n      buttons: [{\r\n        label: \"Sí\",\r\n        onClick: function() {\r\n          deferred.resolve(true);\r\n          mensaje.hide();\r\n        }\r\n      }, {\r\n        label: \"No\",\r\n        onClick: function() {\r\n          deferred.resolve(false);\r\n          mensaje.hide();\r\n        }\r\n      }]\r\n    });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _filterByDistrictCm(){\r\n    // let queryUbigeo = `${_UBIGEO_FIELD} = '${paramsApp['ubigeo']}'`\r\n    let queryPredios = selfCm.layersMap.getLayerInfoById(idLyrCfPredios).getFilter()\r\n    queryPredios = queryPredios ? queryPredios + \" AND \" + selfCm.queryUbigeo : selfCm.queryUbigeo\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfPredios).setFilter(queryPredios)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfLotes_pun).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfEje_vial).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfNumeracion).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfArancel).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfLotes).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfUnidadesurbanas).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfParques).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfManzana).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfSector).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrActpuntoimg).setFilter(selfCm.queryUbigeo)\r\n  },\r\n\r\n  _startExtentByDistrictCm(){\r\n    let query = new Query()\r\n    query.where = selfCm.queryUbigeo\r\n\r\n    let qTask = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrDistricts).getUrl())\r\n\r\n    qTask.executeForExtent(query, function(results){\r\n      selfCm.map.setExtent(results.extent).then(function(){\r\n        // get the next scale value from the current scale\r\n        let homeWidget = WidgetManager.getInstance().getWidgetsByName(\"HomeButton\");\r\n        homeWidget[0].homeDijit.extent = selfCm.map.extent;\r\n      })       \r\n    }, function(error){\r\n      console.log(error)\r\n    })\r\n  },\r\n\r\n  startup() {\r\n    this.inherited(arguments);\r\n    console.log('CartoMaintenanceWgt::startup');\r\n\r\n    this.busyIndicator = BusyIndicator.create({\r\n      target: this.domNode.parentNode.parentNode,\r\n      backgroundOpacity: 0\r\n    });\r\n  },\r\n\r\n  _callApiRestServices(baseUrl, params){\r\n    let url = new URL(baseUrl);\r\n    Object.keys(params).forEach(key => url.searchParams.append(key,params[key]));\r\n\r\n    return fetch(url)\r\n      .then(response => {\r\n        if (!response) {\r\n          selfCm.busyIndicator.hide();\r\n          throw new Error(\"HTTP error \" + response.status);\r\n        }\r\n        return response.json();\r\n      })\r\n      .catch(function(err) {\r\n        selfCm.busyIndicator.hide();\r\n        console.log(\"An error occurred while fetching the data.\");\r\n      });    \r\n  },\r\n\r\n  _getRequestsTrayDataCm(responseData, state){\r\n    // Reemplazar todo el metodo para capturar datos de servicio\r\n    // let response = selfCm._fetchServices(selfCm.config.applicationListUrl, {'ubigeo': paramsApp['ubigeo']})\r\n    // let response = selfCm._fetchServices(selfCm.config.applicationListUrl, {userId: 1})\r\n    // console.log(response)\r\n    let data = responseData.filter((i) => i.status == state);\r\n    return data\r\n  },\r\n\r\n  _loadIniRequestsCm(){\r\n    dojo.query(`#${requestToAttendState}`)[0].click()\r\n  },\r\n\r\n  _parseDateStringtoFormat(dateString){\r\n    let date = new Date(dateString)\r\n    let day = date.getDate()\r\n    let month = date.getMonth() + 1\r\n    let year = date.getFullYear()\r\n    return `${day}/${month}/${year}`\r\n  },\r\n\r\n  _loadRequestsByEventCm(evt){\r\n    let params = {\r\n      ubigeo : paramsApp['ubigeo'],\r\n    }\r\n    let target = evt.target\r\n    selfCm._loadRequestsCm(params, target)\r\n  },\r\n\r\n  _loadRequestsCm(evt){\r\n    selfCm.busyIndicator.show();\r\n    selfCm._callApiRestServices(selfCm.config.applicationListUrl, selfCm.queryRequests).then(response => {\r\n      // ----------------------------------------------\r\n      // comentar esta linea cuando se pase a produccion\r\n      // response = dataRequestsToAttendCm2\r\n      // ----------------------------------------------\r\n      selfCm.currentTabActive = evt.target.id;\r\n      let estado = iconByState[evt.target.id].desc;\r\n      let data = selfCm._getRequestsTrayDataCm(response['results'], estado);\r\n      let dataHtml = data.map((i) => `<tr>\r\n                                        <td>${i.id}</td>\r\n                                        <td>${i.type}</td>\r\n                                        <td>${i.lands.map(lnd => lnd['cpm']).join(',')}</td>\r\n                                        <td>${selfCm._parseDateStringtoFormat(i.date)}</td>\r\n                                        <td>\r\n                                          <button id=\"${iconByState[evt.target.id].id}\" value=\"${i.idType}\" class=\"stateRequestClsCm\">\r\n                                            <i class=\"${iconByState[evt.target.id].icon}\"></i>\r\n                                          </button>\r\n                                        </td>\r\n                                      </tr>`\r\n                                      )\r\n      let tbody = dojo.create('tbody', {innerHTML: dataHtml.join('')});\r\n      let tb = dojo.query(\".tableRequestClsCm\")[0]\r\n      if (tb.getElementsByTagName(\"tbody\").length > 0){\r\n        selfCm.tableRequestApCm.removeChild(tb.getElementsByTagName(\"tbody\")[0])\r\n      }\r\n      selfCm.tableRequestApCm.appendChild(tbody);\r\n      if(evt.target.id == requestToAttendState){\r\n        dojo.query(\".stateRequestClsCm\").on('click', selfCm._openFormCase);\r\n      }\r\n      if(evt.target.id == requestsAttendState){\r\n        dojo.query(\".stateRequestClsCm\").on('click', selfCm._openFormResult);\r\n      }\r\n\r\n      dojo.query(\".tablinksCm\").removeClass(\"active\");\r\n      evt.target.classList.add(\"active\");\r\n      selfCm.busyIndicator.hide();\r\n    })\r\n  },\r\n\r\n  _zoomToPredSelectedEvt(evt){\r\n    let cod_pred = evt.currentTarget.children[0].innerHTML.split(': ')[1]\r\n    selfCm._zoomToPredSelected(cod_pred)\r\n  },\r\n\r\n  _zoomToPredSelected(cod_pred){\r\n    selfCm._removeLayerGraphic(idGraphicPredioSelectedCm);\r\n    // let cod_pred = evt.currentTarget.children[0].innerHTML.split(': ')[1]\r\n    let prediosLayer = selfCm.layersMap.getLayerInfoById(idLyrCfPredios);\r\n    let propertyLayer = new FeatureLayer(prediosLayer.getUrl(), {\r\n      mode: FeatureLayer.MODE_ONDEMAND,\r\n      outFields: [\"*\"]\r\n    });\r\n    // crear una consulta para seleccionar la fila deseada\r\n    let query = new Query();\r\n    query.where = `${_UBIGEO_FIELD} = '${paramsApp['ubigeo']}' and ${_COD_PRE_FIELD} = '${cod_pred}'`\r\n    // console.log(query.where)\r\n    \r\n    // propertyLayer.setSelectionSymbol(symbolPredioSelected);\r\n    // seleccionar la fila\r\n    propertyLayer.selectFeatures(query, FeatureLayer.SELECTION_NEW, function(results){\r\n      let featureSelected = new GraphicsLayer({\r\n        id: idGraphicPredioSelectedCm\r\n      });\r\n      featureSelected.add(results[0]);\r\n      selfCm.map.addLayer(featureSelected);\r\n      selfCm.map.centerAt(results[0].geometry);\r\n\r\n      // Parpadeo de seleccion\r\n      let interval = setInterval(function() {\r\n        if (featureSelected.graphics[0].symbol === symbolPredioSelected) {\r\n          featureSelected.graphics[0].setSymbol(null);\r\n        } else {\r\n          featureSelected.graphics[0].setSymbol(symbolPredioSelected);\r\n        }\r\n      }, 200);\r\n      setTimeout(function(){\r\n        clearInterval(interval);\r\n        selfCm._removeLayerGraphic(idGraphicPredioSelectedCm);\r\n      }, 2000);\r\n      \r\n    });\r\n\r\n\r\n  },\r\n  \r\n  _openSupportingDocument(){\r\n    window.open(samplePdf, '_blank').focus();\r\n  },\r\n\r\n  _zoomExtentToLote(cod_pre){\r\n    let query = new Query()\r\n\r\n    query.where = `${_UBIGEO_FIELD} = '${paramsApp['ubigeo']}' and ${_COD_PRE_FIELD} in ('${(cod_pre.split(',')).join(\"', '\")}')`\r\n    // console.log(query.where)\r\n    // fields return\r\n    query.outFields = [_ID_LOTE_P_FIELD, _COD_MZN_FIELD, _COD_SECT_FIELD]\r\n    query.returnGeometry = false\r\n    // Return distinct values\r\n    query.returnDistinctValues = true\r\n\r\n    let qTask = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrCfPredios).getUrl())\r\n\r\n    qTask.execute(query, function(results){\r\n      let idLote = results.features.map((i) => i.attributes[_ID_LOTE_P_FIELD])\r\n      selfCm.idlotes = idLote\r\n      let idmanzana = results.features.map((i) => i.attributes[_COD_MZN_FIELD])\r\n      let idsector = results.features.map((i) => i.attributes[_COD_SECT_FIELD])\r\n      let queryLote = new Query()\r\n      queryLote.where = `${_ID_LOTE_P_FIELD} in (${idLote.join(\",\")}) and (${_UBIGEO_FIELD} = ${paramsApp['ubigeo']})`\r\n      selfCm.lotesQuery = queryLote.where\r\n      selfCm.arancel = `${_UBIGEO_FIELD} = '${paramsApp.ubigeo}' and (${_COD_MZN_FIELD} in (${idmanzana.join(\",\")})) and (${_COD_SECT_FIELD} IN (${idsector.join(\",\")}))`\r\n      queryLote.returnGeometry = true\r\n      let qTaskLote = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl())\r\n      qTaskLote.executeForExtent(queryLote, function(results){\r\n        selfCm.map.setExtent(results.extent.expand(2)).then(function(){\r\n          qTaskLote.execute(queryLote, function(results){\r\n            let arr = []\r\n            for (let i of results.features) {\r\n              arr.push(i.geometry)\r\n            }\r\n            let response = selfCm._unionFeatures(arr)\r\n            let graphic = new Graphic(response, symbolLoteSelected);\r\n            let featureSelected = new GraphicsLayer({\r\n              id: idGraphicLoteSelectedCm\r\n            });\r\n            featureSelected.add(graphic);\r\n            selfCm.map.addLayer(featureSelected);\r\n            \r\n            // Parpadeo de seleccion\r\n            let interval = setInterval(function() {\r\n              if (featureSelected.graphics[0].symbol === symbolLoteSelected) {\r\n                featureSelected.graphics[0].setSymbol(null);\r\n              } else {\r\n                featureSelected.graphics[0].setSymbol(symbolLoteSelected);\r\n              }\r\n            }, 200);\r\n            setTimeout(function(){\r\n              clearInterval(interval);\r\n              selfCm._removeLayerGraphic(idGraphicLoteSelectedCm);\r\n            }, 2000);\r\n            \r\n          })\r\n        })\r\n      })\r\n    })\r\n  },\r\n  _zoomHomeRequests(){\r\n    selfCm._zoomExtentToLote(selfCm.codigosPredios)\r\n  },\r\n\r\n  // _getDataPredioByRequests(id_solicitud){\r\n  //   // get data predio by id_solicitud\r\n  //   let data = dataByRequest2[id_solicitud];\r\n  //   // console.log(data)\r\n  //   return data\r\n  // },\r\n\r\n  _populateFormsByPredio(id_solicitud){\r\n    let url = `${selfCm.config.landsByApplicationUrl}/${id_solicitud}`\r\n    selfCm._callApiRestServices(url, {}).then(response => {\r\n      // -----------------------------------------------\r\n      // Eliminar la siguiente linea cuando existan casos de prueba\r\n      // response['results'] = selfCm._getDataPredioByRequests(id_solicitud)\r\n      // -----------------------------------------------\r\n      if (response.results.length == 0) {\r\n        // Escribir mensaje de error\r\n        selfCm._showMessage(`No existe registro de los predios asociados a esta solicitud: ${id_solicitud}`, type=\"error\");\r\n        return\r\n      }\r\n      let rows = response['results'].map((i) => {\r\n        return `<div class=\"caseInfoClsCm\">\r\n          <div class=\"headPredInfoClsCm\">\r\n            <span class=\"alignVCenter\">Predio: ${i.cpm}</span>\r\n          </div>\r\n          <div class=\"bodyPredInfoClsCm\">\r\n            <label for=\"direccion\">Dirección:</label>\r\n            <input type=\"text\" id=\"direccion\" name=\"direccion\" value=\"${i.streetName}\" readonly>\r\n  \r\n          </div>\r\n        </div>`\r\n      })\r\n\r\n      dojo.query('.CtnPredInfoClsCm')[0].innerHTML = rows.join('')\r\n      dojo.query(\".headPredInfoClsCm\").on('click', selfCm._zoomToPredSelectedEvt)\r\n      selfCm.codigosPredios = response['results'].map((i) => i.cpm).join(',')\r\n      // console.log(selfCm.codigosPredios)\r\n      selfCm._zoomExtentToLote(selfCm.codigosPredios)\r\n      // selfCm._zoomHomeRequests()\r\n    })\r\n  },\r\n\r\n  _openFormCase(evt){\r\n    if (evt.currentTarget.id == \"editRequestsCm\"){\r\n      let row = dojo.query(evt.currentTarget).closest(\"tr\")[0];\r\n      let rowList = dojo.query(\"td\", row).map(td => td.innerHTML);\r\n      selfCm.codRequestsCm = rowList[0]\r\n      selfCm.caseDescription = rowList[1]\r\n      dojo.query('#titleCaseCm')[0].innerHTML = `<span>${selfCm.caseDescription} <span class=\"fa fa-search\" style=\"font-size: 15px\"></span></span>`\r\n      selfCm._populateFormsByPredio(selfCm.codRequestsCm)\r\n      // dojo.query('.codPredClsCm')[0].innerHTML = `<span class=\"alignVCenter\">Predios: ${rowList[2]}</span>`\r\n      // dojo.query('.headPredInfoClsCm')[0].innerHTML = `<span class=\"alignVCenter\">Predio: ${rowList[2]}</span>`\r\n\r\n      selfCm.case = evt.currentTarget.value\r\n      switch (selfCm.case) {\r\n        case \"1\":\r\n          selfCm.reasignarApCm.classList.toggle('active')\r\n          break;\r\n        case \"2\":\r\n          selfCm.fusionApCm.classList.toggle('active')\r\n          break\r\n        case \"3\":\r\n          selfCm.divisionApCm.classList.toggle('active')\r\n          break\r\n        case \"4\":\r\n          selfCm.actGeomApCm.classList.toggle('active')\r\n          break\r\n        case \"5\":\r\n          selfCm.eliminacionApCm.classList.toggle('active')\r\n          break\r\n        default:\r\n          break;\r\n      }\r\n\r\n      // selfCm.codigosPredios = rowList[2]\r\n      // selfCm._zoomHomeRequests()\r\n      selfCm.resultCtnApCm.classList.remove('active')\r\n      selfCm.obsCtnApCm.classList.remove('active')\r\n      selfCm.requestTrayApCm.classList.remove('active')\r\n      selfCm.casesCtnApCm.classList.toggle('active')\r\n\r\n    } else if (evt.currentTarget.id == 'backTrayCm' || evt.currentTarget.id == 'backTrayResultCm') {\r\n      // desactivar el toolbarCm de edicion si esta activado\r\n      // toolbarCm.deactivate()\r\n      toolbarCm.deactivate();\r\n\r\n      // deshabilitar snapping\r\n      selfCm.map.disableSnapping()\r\n      selfCm.bodyTbLinesDvApCm.innerHTML = ''\r\n      // selfCm.CtnPrediosDvApCm.style.display = 'none'\r\n      selfCm.bodyTbPrediosDvApCm.innerHTML = ''\r\n      // selfCm.map.enableSnapping({\r\n      //   snapPoint: false,\r\n      //   snapLine: false,\r\n      //   snapPolygon: false\r\n      // });\r\n\r\n      dojo.query(\".caseClsCm\").removeClass(\"active\")\r\n      // remove all graphics layer if exist\r\n      selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n      selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n      selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n      selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n      selfCm._removeLayerGraphic(idGraphicPredioSelectedCm);\r\n      selfCm._removeLayerGraphic(idGraphicLabelCodLote)\r\n      selfCm.bodyTbDatosLoteDvApCm.innerHTML = ''\r\n\r\n      // selfCm._removeLayerGraphic(idGraphicLineaDivision)\r\n      graphicLayerLineaDivision.clear();\r\n      graphicLayerLabelLineaDivision.clear();\r\n      graphicLayerPredioByDivison.clear();\r\n\r\n      selfCm.lotesQuery = null\r\n      selfCm.arancel = null\r\n      selfCm.xy = null\r\n\r\n      selfCm.casesCtnApCm.classList.remove('active')\r\n      selfCm.resultCtnApCm.classList.remove('active')\r\n      selfCm.obsCtnApCm.classList.remove('active')\r\n      selfCm.requestTrayApCm.classList.toggle('active')\r\n    }\r\n    \r\n    // selfCm.casesCtnApCm.classList.remove('active')\r\n    // selfCm.resultCtnApCm.classList.remove('active')\r\n    // selfCm.obsCtnApCm.classList.remove('active')\r\n    // selfCm.requestTrayApCm.classList.toggle('active')\r\n  },\r\n  _openFormObs(){\r\n    // console.log('aqui')\r\n    selfCm.textAreaObsApCm.value = ''\r\n    let imageDiv = dojo.query(\".thumbnailClsCm\")[0];\r\n    imageDiv.style.backgroundImage = \"none\";\r\n    imageDiv.innerHTML = \"<span><i class='far fa-image'></i></span>\";\r\n    dojo.query('#headeRequestsCtnCm')[0].innerHTML = `<span class=\"alignVCenter\">Solicitud: ${selfCm.codRequestsCm}</span>`\r\n    selfCm.casesCtnApCm.classList.toggle(\"active\");\r\n    selfCm.obsCtnApCm.classList.toggle('active')\r\n  },\r\n\r\n  _FormResult(id_solicitud, caseCm){\r\n    let urlPredioResults = `${selfCm.config.resultsByApplication}/${id_solicitud}`\r\n    selfCm._callApiRestServices(urlPredioResults, {}).then(function (response) {\r\n      try {\r\n        // ----------------------------------------------------\r\n        // Comentar esta linea cuando se consuma el servicio\r\n        // response = responseDivision[id_solicitud]\r\n        // ----------------------------------------------------\r\n        selfCm.bodyTbResultsApCm.innerHTML = ''\r\n        dojo.query(\"#titleCaseResult\")[0].innerHTML = `<span>Solicitud ${id_solicitud}: ${caseCm}</span>`\r\n\r\n        let rows = response.results.map((predio, index) => {\r\n          return `<tr><td class=\"center-aligned\">${index + 1}</td>\r\n                  <td>${predio['cpm']}</td>\r\n                  <td>${predio['address']}</td>\r\n                  <td class=\"center-aligned\">\r\n                    <span id=\"${predio['cpm']}_search\" class=\"zoomPredioResultClsCm\"><i class=\"fas fa-search\"></i></span>\r\n                  </td></tr>`        \r\n        })\r\n        selfCm.bodyTbResultsApCm.innerHTML = rows.join('')\r\n        dojo.query('.zoomPredioResultClsCm').on('click', selfCm._centerAtPredioResult)\r\n        selfCm.casesCtnApCm.classList.remove(\"active\");\r\n        selfCm.obsCtnApCm.classList.remove('active')\r\n        selfCm.requestTrayApCm.classList.remove('active')\r\n        selfCm.resultCtnApCm.classList.toggle('active')\r\n        selfCm.busyIndicator.hide()\r\n      }\r\n      catch (error) {\r\n        console.log(error)\r\n      }\r\n    })\r\n  },\r\n\r\n  _centerAtPredioResult(evt){\r\n    let cod_pre = evt.currentTarget.id.replace('_search', '')\r\n    selfCm._zoomToPredSelected(cod_pre)\r\n  },\r\n\r\n  _openFormResult(evt){\r\n    let row = dojo.query(evt.currentTarget).closest(\"tr\")[0];\r\n    let rowList = dojo.query(\"td\", row).map(td => td.innerHTML);\r\n    selfCm.codRequestsCm = rowList[0]\r\n    selfCm.caseDescription = rowList[1]\r\n    selfCm._FormResult(selfCm.codRequestsCm, selfCm.caseDescription)\r\n  },\r\n\r\n  // Toolbar function\r\n  _createToolbar() {\r\n    toolbarCm = new Draw(selfCm.map);\r\n    toolbarCm.on(\"draw-end\", selfCm._addToMap);\r\n  },\r\n\r\n  _addToMap(evt) {\r\n    if (evt.geometry.type === \"point\") {\r\n      let screenPoint = selfCm.map.toScreen(evt.geometry)\r\n      let deferred = selfCm.map.snappingManager.getSnappingPoint(screenPoint);\r\n      deferred.then(function(value){\r\n        if(value !== undefined){\r\n          let point_g = webMercatorUtils.webMercatorToGeographic(new Point(value));\r\n          let graphic = new Graphic(point_g, symbolByCase[selfCm.case].symbol);\r\n          // si es el caso reasignacion de predio\r\n          if (selfCm.case == 1 || selfCm.case == 2) {\r\n            \r\n            let graphicLayer = new GraphicsLayer({\r\n              id: idGraphicPredioCm,\r\n            });\r\n            graphicLayer.add(graphic);\r\n            selfCm.map.addLayer(graphicLayer);\r\n            selfCm.xy = [point_g.x, point_g.y]\r\n          }\r\n          else if (selfCm.case == 3){\r\n            graphic['attributes'] = {id: selfCm.idPredioDivision}\r\n            graphicLayerPredioByDivison.add(graphic);\r\n          }\r\n          selfCm.map.setInfoWindowOnClick(true);\r\n          toolbarCm.deactivate();\r\n        } else {\r\n          alert(selfCm.nls.errorSnapingLocate);\r\n        }\r\n      }, function(error){\r\n        console.log(error);\r\n      });\r\n    } else if (evt.geometry.type === \"polyline\") {\r\n      selfCm.idxLines = selfCm.idxLines + 1\r\n      let nameIdLine = `Polyline_${selfCm.idxLines}`\r\n      let graphic = new Graphic(evt.geometry, symbolDivisionLote, {id: nameIdLine});\r\n      graphicLayerLineaDivision.add(graphic);\r\n      selfCm._populateTableDrawLine(nameIdLine)\r\n      selfCm._addNameToLine(nameIdLine, evt.geometry)\r\n      selfCm.map.addLayer(graphicLayerLineaDivision);\r\n      selfCm.map.setInfoWindowOnClick(true);\r\n      toolbarCm.deactivate();\r\n    }\r\n  },\r\n\r\n  _removeLayerGraphic(layerId){\r\n    if (selfCm.map.graphicsLayerIds.includes(layerId)) {\r\n      selfCm.map.removeLayer(selfCm.map.getLayer(layerId));\r\n    }\r\n  },\r\n\r\n  _activateTool() {\r\n    selfCm._activateSnappingByReasignar();\r\n    selfCm.map.setInfoWindowOnClick(false);\r\n    selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n    toolbarCm.activate(Draw[\"POINT\"]);\r\n  },\r\n\r\n  _activateToolAcumulacion(evt){\r\n    let id = evt.currentTarget.id\r\n    selfCm.idPredioAcumulacion = id\r\n    selfCm.map.setInfoWindowOnClick(false);\r\n    selfCm._activateSnappingByAcumulacion();\r\n    selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n    toolbarCm.activate(Draw[\"POINT\"]);\r\n  },\r\n\r\n  _activateToolLinesDivision(){\r\n    selfCm.map.setInfoWindowOnClick(false);\r\n    selfCm._activateSnappingByDivision();\r\n    selfCm._removeLayerGraphic(idGraphicLoteCm)\r\n    selfCm._removeLayerGraphic(idGraphicPuntoLote)\r\n    selfCm._removeLayerGraphic(idGraphicFrenteLote)\r\n    selfCm._removeLayerGraphic(idGraphicLabelCodLote)\r\n    selfCm.bodyTbDatosLoteDvApCm.innerHTML = ''\r\n    selfCm.bodyTbPrediosDvApCm.innerHTML = ''\r\n    graphicLayerPredioByDivison.clear()\r\n    toolbarCm.activate(Draw[\"POLYLINE\"]);\r\n  },\r\n\r\n  _activateSnappingByReasignar() {\r\n    let cflayer = selfCm.layersMap.getLayerInfoById(idLyrCfLotes_pun)\r\n    let propertyLayer = new FeatureLayer(cflayer.getUrl(), {\r\n      mode: FeatureLayer.MODE_ONDEMAND,\r\n      outFields: [\"*\"]\r\n    });\r\n    let snapManager = selfCm.map.enableSnapping({\r\n      // alwaysSnap: true,\r\n      // snapKey: keys.CTRL,\r\n      snapPointSymbol: symbolSnapPointCm,\r\n      tolerance: 5,\r\n    });\r\n    // get layerinfo by id of layer to snap\r\n    let layerInfos = [{\r\n      layer: propertyLayer\r\n    }];\r\n    \r\n    snapManager.setLayerInfos(layerInfos);\r\n  },\r\n\r\n  _activateSnappingByAcumulacion(){\r\n    let graphicLayerPuntoLote = selfCm.map.getLayer(idGraphicPuntoLote)\r\n    let graphicsLayerInfo = new esri.layers.LayerInfo({\r\n      id: graphicLayerPuntoLote.id, // El id del `GraphicsLayer`\r\n      name: graphicLayerPuntoLote.name, // El nombre del `GraphicsLayer`\r\n      layer: graphicLayerPuntoLote // El `GraphicsLayer` a utilizar\r\n    });\r\n\r\n    // Agregar el `LayerInfo` al mapa y habilitar el snapping\r\n    selfCm.map.enableSnapping({\r\n      layerInfos: [graphicsLayerInfo], // Agregar el `LayerInfo` al mapa\r\n      // alwaysSnap: true,\r\n      snapPointSymbol: symbolSnapPointCm,\r\n      tolerance: 5,\r\n    });\r\n  },\r\n\r\n  _activateSnappingByDivision(){\r\n    let graphicsLayerInfo = new esri.layers.LayerInfo({\r\n      id: graphicLayerLineaDivision.id, // El id del `GraphicsLayer`\r\n      name: graphicLayerLineaDivision.name, // El nombre del `GraphicsLayer`\r\n      layer: graphicLayerLineaDivision // El `GraphicsLayer` a utilizar\r\n    });\r\n\r\n    let cflayer = selfCm.layersMap.getLayerInfoById(idLyrCfLotes)\r\n    let propertyLayer = new FeatureLayer(cflayer.getUrl(), {\r\n      mode: FeatureLayer.MODE_ONDEMAND,\r\n      outFields: [\"*\"]\r\n    });\r\n\r\n    let layerInfos = [{\r\n      layer: propertyLayer\r\n    }, graphicsLayerInfo];\r\n\r\n    // Agregar el `LayerInfo` al mapa y habilitar el snapping\r\n    selfCm.map.enableSnapping({\r\n      layerInfos: layerInfos, // Agregar el `LayerInfo` al mapa\r\n      // alwaysSnap: true,\r\n      snapPointSymbol: symbolSnapPointCm,\r\n      tolerance: 5,\r\n    });\r\n  },\r\n\r\n  // crear una funcion que permita dos poligonos aceptando dos poligonos json como parametros\r\n  // la funcion debe retornar un poligono json\r\n  _unionFeatures(arr) {  \r\n    let union = geometryEngine.union(arr);\r\n    return union;\r\n  },\r\n\r\n  // Generate function of create graphic by query polygon featurelayer\r\n  _ApplyAcumulacionLotes() {\r\n    selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n    selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n    selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n    selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n    selfCm._removeLayerGraphic(idGraphicLoteDeleteCm);\r\n\r\n    // Creamos grafico de lote fusionado\r\n    let graphicLayerLoteFusion = new GraphicsLayer({\r\n      id: idGraphicLoteCm\r\n    });\r\n\r\n    let query = new Query();\r\n    query.where = selfCm.lotesQuery\r\n    query.outFields = [\"*\"];\r\n    query.returnGeometry = true\r\n    let qTask = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl());\r\n    qTask.execute(query, function (results) {\r\n      let arr = []\r\n      for (let i of results.features) {\r\n        arr.push(i.geometry)\r\n      }\r\n      let response = selfCm._unionFeatures(arr)\r\n      let graphic = new Graphic(response, symbolFusionLote);\r\n\r\n      graphicLayerLoteFusion.add(graphic);\r\n      selfCm.map.addLayer(graphicLayerLoteFusion);\r\n      selfCm.map.setExtent(graphic._extent.expand(1.5), true);\r\n      let urlLotes = selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl()\r\n      selfCm._etiquetasCodLote(urlLotes, _COD_LOTE_FIELD, selfCm.arancel, \"max\", [response], selfCm.bodyTbDatosLoteFsApCm)\r\n    }).then(function () {\r\n      let query = new Query();\r\n      query.where = selfCm.arancel\r\n      // especificar los campos devueltos\r\n      query.outFields = [_UBIGEO_FIELD, _F_MZN_FIELD];\r\n      query.returnGeometry = true\r\n      // query with order by fields\r\n      query.orderByFields = [_F_MZN_FIELD];\r\n      let qTask = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrCfArancel).getUrl());\r\n      qTask.execute(query, function (results) {\r\n        // Creamos grafico de punto lote\r\n        let graphicLayerPuntoLote = new GraphicsLayer({\r\n          id: idGraphicPuntoLote\r\n        });\r\n        // creamos grafico de frente de lote\r\n        let graphicLayerFrenteLote = new GraphicsLayer({\r\n          id: idGraphicFrenteLote\r\n        });\r\n        let graphicFusion = selfCm.map.getLayer(idGraphicLoteCm)\r\n        let frentes = {}\r\n        for (let row of results.features){\r\n          let isItc = geometryEngine.intersects(row.geometry, graphicFusion.graphics[0].geometry)\r\n          if (!isItc){\r\n            continue\r\n          }\r\n          // saber si un key esta dentro del objeto frentes\r\n          if (!frentes.hasOwnProperty(row.attributes[_F_MZN_FIELD])){\r\n            frentes[row.attributes[_F_MZN_FIELD]] = row.geometry;\r\n          }\r\n          else{\r\n            let unionFrentes = geometryEngine.union([frentes[row.attributes[_F_MZN_FIELD]], row.geometry])\r\n            frentes[row.attributes[_F_MZN_FIELD]] = unionFrentes;\r\n          }\r\n        }\r\n        for (let idx in frentes){\r\n          // interseccion entre frentes y lote\r\n          let itcFrentesByLotes = geometryEngine.intersect(frentes[idx], graphicFusion.graphics[0].geometry)\r\n          // Generate symbol by line with random colors\r\n\r\n          // polilinea de frentes resultantes\r\n          let polyline = new Polyline({\r\n            paths: itcFrentesByLotes.paths,\r\n            spatialReference: {wkid: 4326}\r\n          });\r\n          \r\n          let polylineOne = null;\r\n          if (polyline.paths.length > 1){\r\n            polylineOne = selfCm._getLongestPolyline(polyline)\r\n            \r\n          }else{\r\n            polylineOne = polyline\r\n          }\r\n\r\n          // calculamos el punto medio de la polilinea\r\n          let puntoLoteTurf = selfCm._findMidpoint(polylineOne)\r\n\r\n          // crear un punto en el mapa\r\n          let puntoLote = new Point({\r\n            x: puntoLoteTurf.geometry.coordinates[0],\r\n            y: puntoLoteTurf.geometry.coordinates[1],\r\n            spatialReference: {wkid: 4326}\r\n          })\r\n\r\n          // Agregar el punto p al mapa          \r\n          let puntoLoteGraphic = new Graphic(puntoLote, symbolPuntoLote)\r\n          graphicLayerPuntoLote.add(puntoLoteGraphic)\r\n\r\n          // console.log(point)\r\n          const symbolFrenteLote = new SimpleLineSymbol(\r\n            SimpleLineSymbol.STYLE_SOLID,\r\n            new Color(\r\n              [\r\n                Math.floor(Math.random() * 255), \r\n                Math.floor(Math.random() * 255), \r\n                Math.floor(Math.random() * 255)]),\r\n            5\r\n          )\r\n          let frente = new Graphic(polyline, symbolFrenteLote);\r\n          graphicLayerFrenteLote.add(frente);\r\n        }\r\n        \r\n        selfCm.map.addLayer(graphicLayerFrenteLote);\r\n        selfCm.map.addLayer(graphicLayerPuntoLote);\r\n        selfCm._populateTablePredio(selfCm.bodyTbPrediosFsApCm, selfCm._activateToolAcumulacion)\r\n      })\r\n    });\r\n  },\r\n\r\n  _getMidpoint(polyline) {\r\n    let length = geometryEngine.geodesicLength(polyline, \"meters\");\r\n    let midpoint = geometryEngine.geodesicDensify(polyline, length/2, \"meters\").getPoint(0, 0);\r\n    return midpoint;\r\n  },\r\n\r\n  _findMidpoint(polyline) {\r\n    let lengthPolylineChunk = geometryEngine.geodesicLength(polyline, \"meters\")\r\n    let line = turf.lineString(polyline.paths[0]);\r\n    let options = {units: 'meters'};\r\n    let along = turf.along(line, lengthPolylineChunk/2, options);\r\n    return along\r\n  },\r\n\r\n  // funcion que recibe una polilinea con muchas partes y retorna la parte mas larga como una polilinea\r\n  _getLongestPolyline(polyline){\r\n    let paths = polyline.paths\r\n    let longestPath = 0\r\n    let response = null;\r\n    for (let path of paths){\r\n      let polylineChunk = new Polyline({\r\n        paths: [path],\r\n        spatialReference: {wkid: 4326}\r\n      });\r\n      let lengthPolylineChunk = geometryEngine.geodesicLength(polylineChunk, \"meters\")\r\n      if (lengthPolylineChunk > longestPath){ \r\n        longestPath = lengthPolylineChunk\r\n        response = polylineChunk\r\n      }\r\n    }\r\n    return response\r\n  },\r\n\r\n  // --------------------------------------------------------------\r\n  // SUBDIVISION DE LOTES\r\n  // function that allows dividing a polygon from cutting lines, the parameters will be a polygon and several lines in json format\r\n  // the function must return a polygon json\r\n  // --------------------------------------------------------------\r\n  _dividePolygon(poly, lines) {\r\n    let divide = geometryEngine.cut(poly, lines);\r\n    return divide;\r\n  },\r\n\r\n  _populateTableDrawLine(idLine){\r\n    let row = `<td class=\"center-aligned\">${selfCm.idxLines}</td>\r\n              <td contenteditable=\"true\" id=\"${idLine}_name\">${idLine}</td>\r\n              <td class=\"center-aligned\">\r\n                <span id=\"${idLine}_ext\"><i class=\"fas fa-search\"></i></span>\r\n              </td>\r\n              <td class=\"center-aligned\">\r\n                <span id=\"${idLine}_del\" style=\"color: #FF5722;\"><i class=\"far fa-trash-alt\"></i></span>\r\n              </td>`\r\n    let tr = dojo.create('tr');\r\n    tr.id = idLine;\r\n    tr.innerHTML = row;\r\n    tr.style.cursor = \"pointer\";\r\n    selfCm.bodyTbLinesDvApCm.appendChild(tr)\r\n    dojo.query(`#${idLine}_del`).on('click', selfCm._deleteRowLine);\r\n    dojo.query(`#${idLine}_ext`).on('click', selfCm._zoonToLineDivision);\r\n    dojo.query(`#${idLine}_name`).on('input', selfCm._editaNameLineDivision);\r\n  },\r\n\r\n  _deleteRowLine(evt) {\r\n    let id = evt.currentTarget.id.replace('_del', '');\r\n    let elem = dojo.query(`#${id}`);\r\n    let graphic = graphicLayerLineaDivision.graphics.filter(item => item.attributes.id == id);\r\n    graphicLayerLineaDivision.remove(graphic[0])\r\n    let graphicLabel = graphicLayerLabelLineaDivision.graphics.filter(item => item.attributes.id == id);\r\n    graphicLayerLabelLineaDivision.remove(graphicLabel[0])\r\n    // graphicLayerLineaDivision.graphics = graphics;\r\n    // selfCm.map.removeLayer(self_lw.map.getLayer(id));\r\n    elem[0].parentNode.removeChild(elem[0]);\r\n  },\r\n\r\n  _addNameToLine(name, polylineGeom){\r\n    let polylineGeomUtm = webMercatorUtils.webMercatorToGeographic(polylineGeom)\r\n    let midPoint = selfCm._findMidpoint(polylineGeomUtm)\r\n\r\n    let pointLabel = new Point({\r\n      x: midPoint.geometry.coordinates[0],\r\n      y: midPoint.geometry.coordinates[1],\r\n      spatialReference: {wkid: 4326}\r\n    })\r\n\r\n    let font = new Font(\"15px\", Font.STYLE_NORMAL, Font.VARIANT_NORMAL, Font.WEIGHT_BOLD, \"Arial\");\r\n    let txtSym = new TextSymbol(name, font, new Color([250, 0, 0, 0.9]));\r\n    txtSym.setOffset(15, 15).setAlign(TextSymbol.ALIGN_END)\r\n    txtSym.setHaloColor(new Color([255, 255, 255]));\r\n    txtSym.setHaloSize(1.5);\r\n    let graphicLabel = new Graphic(pointLabel, txtSym, {id: name});\r\n\r\n    // graphicLayer.add(graphic);\r\n    graphicLayerLabelLineaDivision.add(graphicLabel);\r\n  },\r\n\r\n  _zoonToLineDivision(evt) {\r\n    let id = evt.currentTarget.id.replace('_ext', '');\r\n    let graphic = graphicLayerLabelLineaDivision.graphics.filter(item => item.attributes.id == id);\r\n    selfCm.map.setExtent(graphic[0]._extent, true);\r\n  },\r\n\r\n  _editaNameLineDivision(evt) {\r\n    let id = evt.currentTarget.id.replace('_name', '');\r\n    let graphic = graphicLayerLabelLineaDivision.graphics.filter(item => item.attributes.id == id)\r\n    graphic[0].symbol.text = evt.currentTarget.innerText;\r\n    graphicLayerLabelLineaDivision.refresh()\r\n        // console.log(evt.currentTarget.innerText);\r\n  },\r\n\r\n  _populateTablePredio(bodyTable, drawFunction){\r\n    // obtener del servicio los predios resultantes de la solicitud\r\n    let urlPredioResults = `${selfCm.config.resultsByApplication}/${selfCm.codRequestsCm}`\r\n    selfCm._callApiRestServices(urlPredioResults, {}).then(response => {\r\n      try {\r\n        // --------------------------------------------------------------\r\n        // Comentar lineas cuando se tenga el servicio\r\n        // response = responseDivision[selfCm.codRequestsCm]\r\n        // --------------------------------------------------------------\r\n        let idx = 1\r\n        bodyTable.innerHTML = ''\r\n        for (let predio of response.results){\r\n          let tr = dojo.create('tr');\r\n          tr.id = `predio_${idx}_${predio['cpm']}`;\r\n          let row = `<td class=\"center-aligned\">${idx}</td>\r\n                     <td>${predio['cpm']}</td>\r\n                     <td>${predio['address']}</td>\r\n                     <td class=\"center-aligned\">\r\n                      <span id=\"${tr.id}_draw\"><i class=\"fas fa-map-marker-alt\"></i></span>\r\n                     </td>`\r\n          tr.innerHTML = row;\r\n          tr.style.cursor = \"pointer\";\r\n          bodyTable.appendChild(tr)\r\n          dojo.query(`#${tr.id}_draw`).on('click', drawFunction)\r\n          idx = idx + 1      \r\n        }\r\n      } catch (error) {\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(error.message, type=\"error\")\r\n      }     \r\n    })\r\n  },\r\n\r\n  _activateSnappingPrediosByDivision(graphiclayer){\r\n    let graphicsLayerInfo = new esri.layers.LayerInfo({\r\n      id: graphiclayer.id, // El id del `GraphicsLayer`\r\n      name: graphiclayer.name, // El nombre del `GraphicsLayer`\r\n      layer: graphiclayer // El `GraphicsLayer` a utilizar\r\n    });\r\n\r\n    // Agregar el `LayerInfo` al mapa y habilitar el snapping\r\n    selfCm.map.enableSnapping({\r\n      layerInfos: [graphicsLayerInfo], // Agregar el `LayerInfo` al mapa\r\n      // alwaysSnap: true,\r\n      snapPointSymbol: symbolSnapPointCm,\r\n      tolerance: 5,\r\n    });\r\n  },\r\n\r\n  _activateToolPrediosByDivision(evt){\r\n    let id = evt.currentTarget.id\r\n    selfCm.idPredioDivision = id\r\n    let graphic = graphicLayerPredioByDivison.graphics.filter(item => item.attributes.id == id);\r\n    graphicLayerPredioByDivison.remove(graphic[0])\r\n    selfCm.map.setInfoWindowOnClick(false);\r\n    let graphicLayerPuntoLote = selfCm.map.getLayer(idGraphicPuntoLote)\r\n    selfCm._activateSnappingPrediosByDivision(graphicLayerPuntoLote);\r\n    toolbarCm.activate(Draw[\"POINT\"]);\r\n  },\r\n\r\n  _changeValueCodLote(evt){\r\n    let id = evt.target.id.split('_')[1]\r\n    let idx = evt.target.selectedIndex\r\n    let cod_lote = evt.target.options[idx].value\r\n    let lyr = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n    let graphicSelected = lyr.graphics.filter(item => item.attributes.id == `label_${id}`)\r\n    graphicSelected[0].symbol.text = cod_lote\r\n    lyr.refresh()\r\n  },\r\n  \r\n  _centerAtLabelCodLoteDivision(evt){\r\n    let id = evt.currentTarget.id\r\n    let lyr = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n    let graphicSelected = lyr.graphics.filter(item => item.attributes.id == id)\r\n    selfCm.map.centerAt(graphicSelected[0].geometry)\r\n  },\r\n\r\n  _editLoteUrbanoDivision(evt) {\r\n    let id = evt.currentTarget.id.replace('loteUrbanoDv_', '');\r\n    let lyr = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n    let graphic = lyr.graphics.filter(item => item.attributes.id == `label_${id}`)\r\n    graphic[0].attributes.lot_urb = evt.currentTarget.textContent\r\n    lyr.refresh()\r\n  },\r\n\r\n  _buildDataLoteTable(tableBody, predios) {\r\n    tableBody.innerHTML = ''\r\n    // const tableBody = document.getElementById(tableBodyId);\r\n    predios.forEach((predio, index) => {\r\n        const row = document.createElement('tr');\r\n\r\n        // celda de índice\r\n        const indexCell = document.createElement('td');\r\n        indexCell.className = \"center-aligned\"\r\n        indexCell.textContent = predio.num;\r\n        row.appendChild(indexCell);\r\n\r\n        // celda de codigo de predio\r\n        const codigoCell = document.createElement('td');\r\n        const select = document.createElement('select');\r\n        select.className = \"codLoteSelectDvCls\"\r\n        select.id = `codLoteSelectDv_${predio.num}`\r\n        predios.forEach(p => {\r\n            const option = document.createElement('option');\r\n            option.value = p.cod_lote;\r\n            option.textContent = p.cod_lote;\r\n            if (p.cod_lote === predio.cod_lote) {\r\n                option.selected = true;\r\n            }\r\n            select.appendChild(option);\r\n        });\r\n        codigoCell.appendChild(select);\r\n        row.appendChild(codigoCell);\r\n\r\n        // celda de lote urbano\r\n        const loteUrbCell = document.createElement('td');\r\n        loteUrbCell.contentEditable = true\r\n        loteUrbCell.textContent = '...';\r\n        loteUrbCell.id = `loteUrbanoDv_${predio.num}`\r\n        loteUrbCell.className = \"loteUrbanoDvCls\"\r\n        row.appendChild(loteUrbCell);\r\n\r\n        const locationMarker = document.createElement('td');\r\n        locationMarker.id = predio.id\r\n        locationMarker.className = \"center-aligned\"\r\n        locationMarker.innerHTML = `<span class=\"locationLabelLoteDvCls\" id=\"${predio.id}\"><i class=\"fas fa-search\"></i></span>`\r\n        row.appendChild(locationMarker);\r\n        tableBody.appendChild(row);\r\n        // dojo.query(`#${predio.id}`).on('click', selfCm._centerAtLabelCodLoteDivision)\r\n        \r\n    });\r\n    dojo.query('.codLoteSelectDvCls').on('change', selfCm._changeValueCodLote)\r\n    dojo.query('.locationLabelLoteDvCls').on('click', selfCm._centerAtLabelCodLoteDivision)\r\n    dojo.query('.loteUrbanoDvCls').on('input', selfCm._editLoteUrbanoDivision);\r\n    \r\n  },\r\n\r\n  _ordenarPoligonosNorteSur(poligonos, idx, bodyTable) {\r\n    // Obtener la coordenada más al norte de cada polígono\r\n    let coordenadasNorte = poligonos.map(poligono => {\r\n      let extent = poligono.getExtent();\r\n      return extent.ymax;\r\n    });\r\n    \r\n    // Ordenar los polígonos en base a la coordenada más al norte\r\n    let poligonosOrdenados = poligonos.slice().sort((a, b) => {\r\n      let coordenadaNorteA = coordenadasNorte[poligonos.indexOf(a)];\r\n      let coordenadaNorteB = coordenadasNorte[poligonos.indexOf(b)];\r\n      return coordenadaNorteB - coordenadaNorteA; // Ordenar de norte a sur\r\n    });\r\n\r\n    let graphicLayerLabelCodLoteDivision = new GraphicsLayer({\r\n      id: idGraphicLabelCodLote,\r\n    });\r\n\r\n    let font = new Font(\"20px\", Font.STYLE_NORMAL, Font.VARIANT_NORMAL, Font.WEIGHT_BOLD, \"Arial\");\r\n\r\n    let dataLoteTable = []\r\n    // Paso 5: Agregar número de polígono a propiedad \"order\"\r\n    poligonosOrdenados.forEach((poligono, index) => {\r\n\r\n      let polygon = turf.polygon(poligono.rings);\r\n      let center = turf.pointOnFeature(polygon);\r\n\r\n      let pointLabel = new Point({\r\n        x: center.geometry.coordinates[0],\r\n        y: center.geometry.coordinates[1],\r\n        spatialReference: {wkid: 4326}\r\n      })\r\n      let cod_lote = selfCm._zfill(idx + 1, 3)\r\n      let txtSym = new TextSymbol(cod_lote, font, new Color([250, 0, 0, 1]));\r\n      txtSym.setColor(new esri.Color([0, 0, 0, 1])); // color blanco\r\n      txtSym.setSize(\"12pt\");\r\n      txtSym.setHaloColor(new esri.Color([255, 255, 255, 1]));\r\n      txtSym.setHaloSize(2);\r\n      let idGraphic = `label_${index + 1}`\r\n      let graphicLabel = new Graphic(pointLabel, txtSym, {id: idGraphic, lot_urb: '', clase: 'labelCodLoteDivision'});\r\n      graphicLayerLabelCodLoteDivision.add(graphicLabel);\r\n      dataLoteTable.push({num: index + 1, id: idGraphic, cod_lote: cod_lote})\r\n      idx = idx + 1\r\n      // editToolbar.activate(Edit.MOVE, graphicLabel, {allowAddVertices: false, allowDeleteVertices: false});\r\n    });\r\n    \r\n\r\n    // Completar table\r\n    selfCm._buildDataLoteTable(bodyTable, dataLoteTable)\r\n    selfCm.map.addLayer(graphicLayerLabelCodLoteDivision)\r\n  },\r\n\r\n  _enableEditingLabelsLotesDivision(evt){\r\n    if (evt && evt.graphic && evt.graphic.attributes && evt.graphic.attributes.clase == 'labelCodLoteDivision'){\r\n      selfCm.map.setInfoWindowOnClick(false)\r\n      selfCm.editToolbar.activate(Edit.MOVE, evt.graphic);\r\n    } else {\r\n      selfCm.editToolbar.deactivate()\r\n    }\r\n  },\r\n\r\n  _zfill(num, len) {\r\n    return (Array(len).fill('0').join('') + num).slice(-len);\r\n  },\r\n\r\n  _etiquetasCodLote(url, campo, queryWhere, tipoEstadistica, polygonos, bodyTable) {\r\n    var estadisticaDef = new esri.tasks.StatisticDefinition();\r\n    estadisticaDef.statisticType = tipoEstadistica;\r\n    estadisticaDef.onStatisticField = campo;\r\n    estadisticaDef.outStatisticFieldName = \"resultado\";\r\n  \r\n    var query = new esri.tasks.Query();\r\n    query.where = queryWhere;\r\n    query.outFields = [campo];\r\n    query.returnGeometry = false;\r\n    query.outStatistics = [estadisticaDef];\r\n  \r\n    var queryTask = new esri.tasks.QueryTask(url);\r\n    queryTask.execute(query, function(result) {\r\n      if(result.features.length > 0) {\r\n        let resultado = result.features[0].attributes.resultado;\r\n        selfCm._ordenarPoligonosNorteSur(polygonos, parseInt(resultado), bodyTable)\r\n      } else {\r\n        return 0;\r\n      }\r\n    }, function(error) {\r\n      console.log(\"Error al ejecutar la consulta: \", error);\r\n    });\r\n  },\r\n\r\n  // Funciones para casuistica de division de lotes\r\n  _ApplyDivideLotes() {\r\n    selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n    selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n    selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n    selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n    selfCm._removeLayerGraphic(idGraphicLoteDeleteCm);\r\n    selfCm._removeLayerGraphic(idGraphicLabelCodLote)\r\n\r\n    // Creamos grafico de lote fusionado\r\n    let graphicLayerLoteDivision = new GraphicsLayer({\r\n      id: idGraphicLoteCm\r\n    });\r\n    \r\n    // Union all graphics of grpahicslayer\r\n    // let graphicLayerLineaDivision = selfCm.map.getLayer(idGraphicLineaDivision);\r\n    if (graphicLayerLineaDivision.graphics.length == 0) {\r\n      selfCm._showMessage('No se ha dibujado ninguna linea de division', 'warning');\r\n      return  \r\n    }\r\n\r\n    let arr = []\r\n    for (let i of graphicLayerLineaDivision.graphics) {\r\n      arr.push(i.geometry)\r\n    }\r\n    let unionGraphicLayerLineaDivision = selfCm._unionFeatures(arr)\r\n\r\n    let lineGeometry = new Polyline({\r\n      paths: unionGraphicLayerLineaDivision.paths,\r\n      spatialReference: { wkid: 102100 }\r\n    });\r\n    lineGeometry = esri.geometry.webMercatorToGeographic(lineGeometry)\r\n\r\n    let query = new Query();\r\n    // query.where = `(${_UBIGEO_FIELD} = '${paramsApp.ubigeo}') and (${_ID_LOTE_P_FIELD} in (49))`\r\n    query.where = selfCm.lotesQuery\r\n    query.outFields = [\"*\"];\r\n    query.returnGeometry = true\r\n    let qTask = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl());\r\n    qTask.execute(query, function (results) {\r\n      let geomLote = results.features[0].geometry\r\n      let geomLoteDivided = selfCm._dividePolygon(geomLote, lineGeometry)\r\n\r\n      if (geomLoteDivided.length == 0) {\r\n        //  genera un mensage show indicando que no se encontro el lote\r\n        selfCm._showMessage('Las lineas de corte ingresadas no generan la división del lote.\\nLas lineas deben iniciar y finalizar en el perimetro del lote.', type = 'error');\r\n        return false;\r\n      }\r\n\r\n      // console.log(geomLoteDivided)\r\n      // iterar sobre los graficos de la capa de division y agregar cada uno a graphicLayerLoteDivision\r\n      for (let i of geomLoteDivided) {\r\n        let lote = new Graphic(i, symbolFusionLote)\r\n\r\n        // agregar el grafico directo al mapa\r\n        graphicLayerLoteDivision.add(lote);\r\n      }\r\n      selfCm.map.addLayer(graphicLayerLoteDivision);\r\n\r\n      let urlLotes = selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl()\r\n      selfCm._etiquetasCodLote(urlLotes, _COD_LOTE_FIELD, selfCm.arancel, \"max\", geomLoteDivided, selfCm.bodyTbDatosLoteDvApCm)\r\n\r\n      // console.log(graphicLayerLoteDivision._extent)\r\n      selfCm.map.reorderLayer(graphicLayerLoteDivision, selfCm.map.graphicsLayerIds.indexOf(graphicLayerLabelLineaDivision.id));\r\n      selfCm.map.setExtent(results.features[0].geometry.getExtent().expand(1.5), true);\r\n    }).then(function () {\r\n      let query = new Query();\r\n      query.where = selfCm.arancel\r\n      // especificar los campos devueltos\r\n      query.outFields = [_UBIGEO_FIELD, _F_MZN_FIELD];\r\n      query.returnGeometry = true\r\n      // query with order by fields\r\n      query.orderByFields = [_F_MZN_FIELD];\r\n      let qTask = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrCfArancel).getUrl());\r\n      qTask.execute(query, function (results) {\r\n        // Creamos grafico de punto lote\r\n        let graphicLayerPuntoLote = new GraphicsLayer({\r\n          id: idGraphicPuntoLote\r\n        });\r\n        // creamos grafico de frente de lote\r\n        let graphicLayerFrenteLote = new GraphicsLayer({\r\n          id: idGraphicFrenteLote\r\n        });\r\n        // let graphicLayerPredio = new GraphicsLayer({\r\n        //   id: idGraphicPredioCm\r\n        // });\r\n        let graphicLoteDivision = selfCm.map.getLayer(idGraphicLoteCm)\r\n        if (!graphicLoteDivision) {\r\n          return;\r\n        }\r\n        let frentes = {}\r\n        for (let row of results.features){\r\n          for (let graphic of graphicLoteDivision.graphics){\r\n            let isItc = geometryEngine.intersects(row.geometry, graphic.geometry)\r\n            if (!isItc){\r\n              continue\r\n            }\r\n            // saber si un key esta dentro del objeot frentes\r\n            if (!frentes.hasOwnProperty(row.attributes[_F_MZN_FIELD])){\r\n              frentes[row.attributes[_F_MZN_FIELD]] = row.geometry;\r\n            }\r\n            else{\r\n              let unionFrentes = geometryEngine.union([frentes[row.attributes[_F_MZN_FIELD]], row.geometry])\r\n              frentes[row.attributes[_F_MZN_FIELD]] = unionFrentes;\r\n            }\r\n          }\r\n        }\r\n        for (let lote of graphicLoteDivision.graphics){\r\n          for (let idx in frentes){\r\n            let idItcFrentesByLotes = geometryEngine.intersects(lote.geometry, frentes[idx])\r\n            if (!idItcFrentesByLotes){\r\n              continue\r\n            }\r\n            let itcFrentesByLotes = geometryEngine.intersect(frentes[idx], lote.geometry)\r\n            // add frentes to graphicLayerFrenteLote\r\n            const symbolFrenteLote = new SimpleLineSymbol(\r\n              SimpleLineSymbol.STYLE_SOLID,\r\n              new Color(\r\n                [\r\n                  Math.floor(Math.random() * 255), \r\n                  Math.floor(Math.random() * 255), \r\n                  Math.floor(Math.random() * 255)]),\r\n              5\r\n            )\r\n            let frente = new Graphic(itcFrentesByLotes, symbolFrenteLote)\r\n            graphicLayerFrenteLote.add(frente);\r\n\r\n            // polilinea de frentes resultantes\r\n            let polyline = new Polyline({\r\n              paths: itcFrentesByLotes.paths,\r\n              spatialReference: {wkid: 4326}\r\n            });\r\n\r\n            let puntoLoteTurf = selfCm._findMidpoint(polyline)\r\n\r\n            // crear un punto en el mapa\r\n            let puntoLote = new Point({\r\n              x: puntoLoteTurf.geometry.coordinates[0],\r\n              y: puntoLoteTurf.geometry.coordinates[1],\r\n              spatialReference: {wkid: 4326}\r\n            })\r\n\r\n            // Agregar el punto p al mapa          \r\n            let puntoLoteGraphic = new Graphic(puntoLote, symbolPuntoLote)\r\n            graphicLayerPuntoLote.add(puntoLoteGraphic)\r\n\r\n          }\r\n        }\r\n        selfCm.map.addLayer(graphicLayerFrenteLote);\r\n        selfCm.map.addLayer(graphicLayerPuntoLote);\r\n        selfCm._removeLayerGraphic(idGraphicPredioByDivison);\r\n        selfCm.map.addLayer(graphicLayerPredioByDivison)\r\n        \r\n        selfCm._populateTablePredio(selfCm.bodyTbPrediosDvApCm, selfCm._activateToolPrediosByDivision)\r\n\r\n      })\r\n    }, function (err) {\r\n      console.log(err)\r\n    })   \r\n  },\r\n\r\n  // ----------------------------------------------------------------------------------------------\r\n  // GeoprocessingServices\r\n  // ----------------------------------------------------------------------------------------------\r\n  _executeReasignacionGpService(evt){\r\n    selfCm._showMessageConfirm().then(function (result) {\r\n      if (result){\r\n        let params = {\r\n          \"cod_pred\": selfCm.codigosPredios,\r\n          \"ubigeo\": paramsApp['ubigeo'],\r\n          \"geometry\": selfCm.xy,\r\n          \"user\": paramsApp['username'],\r\n          \"id_solicitud\": selfCm.codRequestsCm\r\n        }\r\n        console.log(params)\r\n    \r\n        // revisar si alguna propiedad tiene valor nulo o indefinido\r\n        for (let key in params){\r\n          if (params[key] == null || params[key] == undefined){\r\n            selfCm._showMessage(`Debe especificar el valor de ${key}`, type=\"error\");\r\n            return\r\n          }\r\n        }\r\n        selfCm._executeGPService(selfCm.config.reasignacionUrl, params)\r\n      }\r\n      else {\r\n        return\r\n      }\r\n    })\r\n  },\r\n\r\n  _executeAcumulacionGpService(evt){\r\n    selfCm._showMessageConfirm().then(function (result) {\r\n      if (result){\r\n        let labelCodLotesLayer = selfCm.map.getLayer(idGraphicLabelCodLote).graphics[0]\r\n        let params = {\r\n          \"lotes_orig\": selfCm.idlotes, \r\n          \"ubigeo\": paramsApp['ubigeo'], \r\n          \"lote_geom\": JSON.stringify(selfCm.map.getLayer(\"graphicLoteCm\").graphics[0].geometry.toJson()), \r\n          \"lote_pun_geom\": JSON.stringify(selfCm.map.getLayer(idGraphicPuntoLote).graphics.map((i) => {return [i.geometry.x, i.geometry.y]})), \r\n          \"predio_geom\": JSON.stringify({'cod_pre': selfCm.idPredioAcumulacion.split(\"_\")[2], 'coords': selfCm.xy}),\r\n          \"atributos\": JSON.stringify({'cod_lote': labelCodLotesLayer.symbol.text, 'lot_urb': labelCodLotesLayer.attributes.lot_urb}),\r\n          \"user\": paramsApp['username'], \r\n          \"id_solicitud\": selfCm.codRequestsCm\r\n        }\r\n        \r\n        console.log(params)\r\n        // revisar si alguna propiedad tiene valor nulo o indefinido\r\n        for (let key in params){\r\n          if (params[key] == null || params[key] == undefined){\r\n            selfCm._showMessage(`Debe especificar el valor de ${key}`, type=\"error\");\r\n            return\r\n          }\r\n        }\r\n        selfCm._executeGPService(selfCm.config.acumulacionUrl, params)\r\n      }\r\n      else {\r\n        return\r\n      }\r\n    })\r\n  },\r\n\r\n  _executeSubdivisionGpService(evt){\r\n    selfCm._showMessageConfirm().then(function (result) {\r\n      if (!selfCm.map.getLayer(idGraphicLoteCm)){\r\n        selfCm._showMessage(\"La solicitud no se puede realizar porque no se ha previsualizado la división\", type=\"error\")\r\n        return\r\n      }\r\n\r\n      if (graphicLayerPredioByDivison.graphics.length == 0){\r\n        selfCm._showMessage(\"La solicitud no se puede realizar porque no se graficaron los predios resultantes\", type=\"error\")\r\n        return\r\n      }\r\n\r\n      if (result){\r\n        let labelCodLotesLayer = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n        let params = {\r\n          \"lote_orig\": selfCm.idlotes[0], \r\n          \"ubigeo\": paramsApp['ubigeo'], \r\n          \"lotes_geom\": JSON.stringify(selfCm.map.getLayer(idGraphicLoteCm).graphics.map((i) => {return i.geometry.toJson()})), \r\n          \"lotes_pun_geom\": JSON.stringify(selfCm.map.getLayer(idGraphicPuntoLote).graphics.map((i) => {return [i.geometry.x, i.geometry.y]})), \r\n          \"predios_geom\": JSON.stringify(graphicLayerPredioByDivison.graphics.map((i) => {return {'cod_pre': i.attributes.id.split(\"_\")[2], 'coords': [i.geometry.x, i.geometry.y]}})),\r\n          \"atributos\": JSON.stringify(labelCodLotesLayer.graphics.map((i) => {return {'cod_lote': i.symbol.text, 'lot_urb': i.attributes.lot_urb, 'coords': [i.geometry.x, i.geometry.y]}})),\r\n          \"user\": paramsApp['username'], \r\n          \"id_solicitud\": selfCm.codRequestsCm\r\n        }\r\n        console.log(params)\r\n        // revisar si alguna propiedad tiene valor nulo o indefinido\r\n        for (let key in params){\r\n          if (params[key] == null || params[key] == undefined){\r\n            selfCm._showMessage(`Debe especificar el valor de ${key}`, type=\"error\");\r\n            return\r\n          }\r\n        }\r\n        selfCm._executeGPService(selfCm.config.subdivisionUrl, params)\r\n      }\r\n      else {\r\n        return\r\n      }\r\n    })\r\n  },\r\n\r\n  _executeInactivarGpService(evt){\r\n    selfCm._showMessageConfirm().then(function (result) {\r\n      if (result){\r\n        // let labelCodLotesLayer = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n        let params = {\r\n          \"ubigeo\": paramsApp['ubigeo'], \r\n          \"cod_pred\": selfCm.codigosPredios,\r\n          \"user\": paramsApp['username'], \r\n          \"id_solicitud\": selfCm.codRequestsCm\r\n        }\r\n        console.log(params)\r\n        // revisar si alguna propiedad tiene valor nulo o indefinido\r\n        for (let key in params){\r\n          if (params[key] == null || params[key] == undefined){\r\n            selfCm._showMessage(`Debe especificar el valor de ${key}`, type=\"error\");\r\n            return\r\n          }\r\n        }\r\n        selfCm._executeGPService(selfCm.config.inactivacionUrl, params)\r\n      }\r\n      else {\r\n        return\r\n      }\r\n    })    \r\n  },\r\n\r\n  _executeGPService(url, params){\r\n    let urlStatusRequest = `${selfCm.config.applicationListUrl}/${selfCm.codRequestsCm}`\r\n    selfCm._callApiRestServices(urlStatusRequest, {}).then(function (result) {\r\n      try {\r\n        if (result.idStatus != 1){\r\n          throw new Error(`Esta solicitud (${selfCm.codRequestsCm}) ya fue procesada con anterioridad: ${result.date}`)\r\n        }\r\n        selfCm.busyIndicator.show();\r\n        // Agregar un elemento de texto debajo del BusyIndicator\r\n        let buzyElm = dojo.query(\"#dojox_widget_Standby_0\")[0]\r\n        let imgElm = buzyElm.querySelector(\"img\")\r\n        let loadingText = document.createElement('div');\r\n        loadingText.id = 'loadingTextCustom';\r\n        loadingText.style.position = 'absolute';\r\n        let topMessage = parseFloat(imgElm.style.top) + 80;\r\n        loadingText.style.top = `${topMessage}px`;\r\n        let leftImg = parseFloat(imgElm.style.left) + imgElm.width/2;\r\n        loadingText.style.left = `${leftImg}px`;\r\n        loadingText.style.transform = 'translate(-50%, -50%)';\r\n        loadingText.style.background = 'white';\r\n        loadingText.style.zIndex = '1000';\r\n    \r\n        dojo.query(\"#dojox_widget_Standby_0\")[0].appendChild(loadingText);\r\n        // selfCm._FormResult(selfCm.codRequestsCm, selfCm.caseDescription);\r\n        selfCm.gp = new Geoprocessor(url);\r\n        selfCm.gp.submitJob(params, selfCm._completeCallback, selfCm._statusCallback);        \r\n      } catch (error) {\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(error.message, type=\"error\")\r\n      }\r\n\r\n    })\r\n  },\r\n\r\n  _statusCallback(JobInfo) {\r\n    // console.log(JobInfo)\r\n    selfCm.jobId = JobInfo.jobId\r\n    // get last item of JobInfo.messages\r\n    // console.log(JobInfo.jobStatus)\r\n    let textMessage = JobInfo.messages.map((message) => message.description)\r\n    // console.log(textMessage.slice(-1)[0] ? textMessage.slice(-1)[0] : '')\r\n    try {\r\n      dojo.query(\"#loadingTextCustom\")[0].textContent = textMessage.slice(-1)[0] ? textMessage.slice(-1)[0] : ''\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  },\r\n  _completeCallback(JobInfo) {\r\n    switch (JobInfo.jobStatus) {\r\n      case \"esriJobSubmitted\":\r\n        // El trabajo se ha enviado al servidor y está esperando en la cola.\r\n        console.log(\"El trabajo se ha enviado y está esperando en la cola.\");\r\n        break;\r\n      case \"esriJobExecuting\":\r\n        // El trabajo se está ejecutando actualmente en el servidor.\r\n        console.log(\"El trabajo se está ejecutando en el servidor.\");\r\n        break;\r\n      case \"esriJobSucceeded\":\r\n        // El trabajo se ha completado satisfactoriamente y los resultados están disponibles.\r\n        selfCm.gp.getResultData(JobInfo.jobId, \"response\", function (result) {\r\n          if (!result.value.status){\r\n            selfCm.busyIndicator.hide();\r\n            selfCm._showMessage(result.value.message, type=\"error\");\r\n            return\r\n          }\r\n          \r\n\r\n          switch (selfCm.case) {\r\n            case \"1\":\r\n              selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n              break;\r\n            case \"2\":\r\n              selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n              selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n              selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n              selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n              selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n            case \"3\":\r\n              graphicLayerPredioByDivison.clear();\r\n              graphicLayerLineaDivision.clear();\r\n              graphicLayerLabelLineaDivision.clear();\r\n              // selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n              selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n              selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n              selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n              selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n            default:\r\n              break;\r\n          }\r\n          selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(false)\r\n          selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(true)\r\n          selfCm._FormResult(selfCm.codRequestsCm, selfCm.caseDescription);\r\n          // Codigo para mostrar la ventana de resultados\r\n\r\n\r\n        })\r\n        break;\r\n      case \"esriJobFailed\":\r\n        // El trabajo ha fallado y no se han podido generar los resultados.\r\n        selfCm._showMessage(\"El proceso ha fallado y no se han podido generar los resultados.\", type=\"error\");\r\n        break;\r\n      case \"esriJobCancelled\":\r\n        // El trabajo ha sido cancelado por el usuario.\r\n        selfCm._showMessage(\"El proceso ha sido cancelado por el usuario.\");\r\n        break;\r\n      case \"esriJobTimedOut\":\r\n        // El trabajo ha expirado debido a un tiempo de espera.\r\n        selfCm._showMessage(\"El proceso ha superado el tiempo de espera necesario para su ejecución.\", type=\"error\");\r\n        break;\r\n      default:\r\n        // El estado del trabajo no se reconoce.\r\n        selfCm._showMessage(\"El estado del proceso no se reconoce.\");\r\n        break;\r\n    }\r\n    selfCm.busyIndicator.hide();\r\n    // remove 'loadingTextCustom'\r\n    dojo.query(\"#loadingTextCustom\")[0].remove();\r\n  },\r\n  _cancelProcess(evt){\r\n    selfCm.gp.cancelJob(selfCm.jobId, function (info) {\r\n      console.log(info.jobStatus)\r\n    });\r\n  },\r\n\r\n  _exportTableToExcel(evt) {\r\n    // Obtén la tabla HTML\r\n    const table = dojo.query(\"#tableRequestCm\")[0]\r\n    let headerRow = table.querySelector(\"tr\");\r\n    let rows = table.querySelectorAll(\"tr\")\r\n\r\n    let headers = [];\r\n    let headerCols = headerRow.querySelectorAll(\"th\");\r\n    for (let h = 0; h < headerCols.length - 1; h++) {\r\n        headers.push(headerCols[h].innerText);\r\n    }\r\n\r\n    let data = [];\r\n\r\n    // Recorre las filas (ignora la primera fila que contiene los encabezados)\r\n    for (let i = 0; i < rows.length; i++) {\r\n      if (i == 0) continue;\r\n      let row = {}, cols = rows[i].querySelectorAll(\"td\");\r\n\r\n      // Recorre las columnas\r\n      for (let j = 0; j < cols.length - 1; j++) {\r\n          // Usa el texto del encabezado como clave y el texto de la celda como valor\r\n          row[headers[j]] = cols[j].innerText;\r\n      }\r\n\r\n      data.push(row);\r\n    }\r\n\r\n    // Convierte el array de objetos en una cadena JSON\r\n    let wb = XLSX.utils.book_new();\r\n\r\n    // Crear una hoja de cálculo a partir de los datos JSON\r\n    let ws = XLSX.utils.json_to_sheet(data);\r\n    let sheetName = selfCm.currentTabActive.replace(\"_\", \" \");\r\n    XLSX.utils.book_append_sheet(wb, ws, sheetName);\r\n\r\n    // Escribir el libro de trabajo y forzar una descarga\r\n    XLSX.writeFile(wb, `reporte_solicitudes_${selfCm.currentTabActive}.xlsx`);\r\n  },\r\n\r\n  _dataURItoBlob(dataURI) {\r\n    var byteString = atob(dataURI.split(',')[1]);\r\n    var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n    var buffer = new ArrayBuffer(byteString.length);\r\n    var dataView = new Uint8Array(buffer);\r\n    for (var i = 0; i < byteString.length; i++) {\r\n        dataView[i] = byteString.charCodeAt(i);\r\n    }\r\n    return new Blob([buffer], {type: mimeString});\r\n  },\r\n\r\n  _sendObservation(evt) {\r\n    selfCm.busyIndicator.show();\r\n    let file = selfCm.imgUploadApCm.files[0];\r\n    if (file == undefined){\r\n      selfCm.busyIndicator.hide();\r\n      selfCm._showMessage(\"Debe enviar una imagen como elemento de sustento\", type=\"error\");\r\n      return\r\n    }\r\n    let reader = new FileReader();\r\n    let data = new FormData();\r\n    reader.onloadend = function() {\r\n      data.append('application_id', selfCm.codRequestsCm);\r\n      data.append('description', selfCm.textAreaObsApCm.value);\r\n      data.append('img', selfCm.imgUploadApCm.files[0]);\r\n  \r\n      return fetch(selfCm.config.observationUrl, {\r\n          method: 'POST', \r\n          body: data\r\n      })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          selfCm.busyIndicator.hide();\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessagePromise(\"Se envió la solucitud satisfactoriamente.\").then((result) => {\r\n          dojo.query(\".backRequestsClsCm\")[0].click();\r\n          dojo.query(\".backTrayClsCm\")[0].click();\r\n          selfCm._loadIniRequestsCm();\r\n        })\r\n\r\n      }).catch(error => {\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(`Ocurrio un problema al procesar su solicitud: ${error}`, type=\"error\")\r\n      });\r\n    }\r\n    reader.readAsDataURL(file);\r\n  },\r\n\r\n  _uploadImagenObs(evt) {\r\n    let imageDiv = dojo.query(\".thumbnailClsCm\")[0];\r\n    let file = evt.target.files[0];\r\n    let reader = new FileReader();\r\n\r\n    reader.onloadend = function() {\r\n      imageDiv.innerHTML = \"\";\r\n      imageDiv.style.backgroundImage = 'url(' + reader.result + ')';\r\n      imageDiv.style.backgroundSize = 'contain';\r\n      imageDiv.style.backgroundRepeat = 'no-repeat';\r\n      imageDiv.style.backgroundPosition = 'center';\r\n    }\r\n\r\n    if (file) {\r\n        reader.readAsDataURL(file);\r\n    } else {\r\n        imageDiv.innerHTML = \"<span><i class='far fa-image'></i></span>\";\r\n    }\r\n  },\r\n  _searchRequestByCodPred(evt) {\r\n    if (evt.keyCode === 13) {\r\n        if (evt.target.value == '') {\r\n          if ('cpm' in selfCm.queryRequests){\r\n            delete selfCm.queryRequests['cpm'];\r\n          }\r\n        } else {\r\n          selfCm.queryRequests['cpm'] = evt.target.value;\r\n        }\r\n        dojo.query(\".tablinksCm\")[0].click(); \r\n    }\r\n  },\r\n   \r\n  onOpen() {\r\n    console.log('CartoMaintenanceWgt::onOpen');\r\n    let panel = this.getPanel();\r\n    panel.position.height = 750;\r\n    panel.setPosition(panel.position);        \r\n    panel.panelManager.normalizePanel(panel);  \r\n\r\n    this._createToolbar();\r\n\r\n    dojo.query(\".backTrayClsCm\").on('click', this._openFormCase);\r\n    dojo.query(\".tablinksCm\").on('click', this._loadRequestsCm);\r\n    dojo.query(\"#btnObsCaseCm\").on('click', this._openFormObs);\r\n    dojo.query(\".backRequestsClsCm\").on('click', this._openFormObs);\r\n    // dojo.query(\"#goodRequestsCm\").on('click', this._openFormResult);\r\n    dojo.query(\"#showInfoDocCm\").on('click', this._openSupportingDocument)\r\n\r\n    // Reasignacion\r\n    dojo.query(\"#btnDrawMarkerCm\").on('click', this._activateTool);\r\n\r\n    dojo.query(\"#btnFsCm\").on('click', this._ApplyAcumulacionLotes)\r\n    dojo.query(\"#btnDrawLinesDvCm\").on('click', this._activateToolLinesDivision)\r\n    dojo.query(\"#btnApplyDvCm\").on('click', this._ApplyDivideLotes)\r\n    dojo.query(\"#titleCaseCm\").on('click', this._zoomHomeRequests)\r\n    dojo.query(\"#sendDataRsCm\").on('click', this._executeReasignacionGpService)\r\n    dojo.query('#sendDataFsCm').on('click', this._executeAcumulacionGpService)\r\n    dojo.query('#sendDataDvCm').on('click', this._executeSubdivisionGpService)\r\n    dojo.query('#sendDataDtCm').on('click', this._executeInactivarGpService)\r\n    dojo.query('#btnReportCm').on('click', this._exportTableToExcel)\r\n    dojo.query('#imgUploadCm').on('change', this._uploadImagenObs)\r\n    dojo.query('#sendDataObsGrCm').on('click', this._sendObservation)\r\n    dojo.query('#searchTbxCm').on(\"keyup\", this._searchRequestByCodPred)\r\n    this._loadIniRequestsCm()\r\n\r\n    selfCm.map.addLayer(graphicLayerLabelLineaDivision)\r\n    selfCm.editToolbar = new Edit(selfCm.map);\r\n    selfCm.map.on(\"click\", selfCm._enableEditingLabelsLotesDivision);\r\n    selfCm.editToolbar.on(\"deactivate\", function(evt) {\r\n      if(evt.info.isModified){\r\n        selfCm.map.setInfoWindowOnClick(true)\r\n        // firePerimeterFL.applyEdits(null, [evt.graphic], null);\r\n      }\r\n    });\r\n  },\r\n\r\n\r\n  // onClose(){\r\n  //   console.log('CartoMaintenanceWgt::onClose');\r\n  // },\r\n  // onMinimize(){\r\n  //   console.log('CartoMaintenanceWgt::onMinimize');\r\n  // },\r\n  // onMaximize(){\r\n  //   console.log('CartoMaintenanceWgt::onMaximize');\r\n  // },\r\n  // onSignIn(credential){\r\n  //   console.log('CartoMaintenanceWgt::onSignIn', credential);\r\n  // },\r\n  // onSignOut(){\r\n  //   console.log('CartoMaintenanceWgt::onSignOut');\r\n  // }\r\n  // onPositionChange(){\r\n  //   console.log('CartoMaintenanceWgt::onPositionChange');\r\n  // },\r\n  // resize(){\r\n  //   console.log('CartoMaintenanceWgt::resize');\r\n  // }\r\n});\r\n"]}