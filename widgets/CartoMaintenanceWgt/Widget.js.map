{"version":3,"sources":["../../../widgets/CartoMaintenanceWgt/Widget.js"],"names":["declare","BaseWidget","_WidgetsInTemplateMixin","Draw","Graphic","SimpleFillSymbol","SimpleMarkerSymbol","SimpleLineSymbol","Color","GraphicsLayer","Point","LayerInfos","lang","FeatureLayer","QueryTask","Query","WidgetManager","geometryEngine","Polyline","webMercatorUtils","Geoprocessor","BusyIndicator","LoadingShelter","Message","turf","Deferred","dataRequestsToAttendCm","dataByRequest","requestToAttendState","requestsObservedState","requestsAttendState","idLyrCfPredios","idLyrCfLotes_pun","idLyrCfEje_vial","idLyrCfNumeracion","idLyrCfArancel","idLyrCfLotes","idLyrCfUnidadesurbanas","idLyrCfParques","idLyrCfManzana","idLyrCfSector","idLyrActpuntoimg","idLyrDistricts","iconByState","_UBIGEO_FIELD","_ID_LOTE_P_FIELD","_COD_MZN_FIELD","_F_MZN_FIELD","_COD_SECT_FIELD","_COD_PRE_FIELD","samplePdf","toolbarCm","params","URLSearchParams","window","location","search","paramsApp","keys","key","get","symbolPuntoLote","STYLE_SQUARE","STYLE_SOLID","symbolFusionLote","symbolEliminarLote","STYLE_DIAGONAL_CROSS","symbolLoteSelected","symbolDivisionLote","STYLE_DASH","symbolPredio","symbolPredioSelected","symbolSnapPointCm","STYLE_CROSS","idGraphicPredioCm","idGraphicPredioSelectedCm","idGraphicLoteCm","idGraphicLoteSelectedCm","idGraphicPuntoLote","idGraphicFrenteLote","idGraphicLineaDivision","idGraphicLoteDeleteCm","symbolByCase","graphicLayerLineaDivision","id","baseClass","codRequestsCm","layersMap","queryUbigeo","case","lotes","arancel","codigosPredios","xy","postCreate","inherited","arguments","console","log","_getAllLayers","selfCm","_filterByDistrictCm","_startExtentByDistrictCm","getInstance","map","itemInfo","then","hitch","layerInfosObj","_showMessage","message","type","title","nls","_widgetLabel","titleLabel","_showMessageConfirm","deferred","mensaje","buttons","label","onClick","resolve","hide","promise","getLayerInfoById","setFilter","query","where","qTask","getUrl","executeForExtent","results","setExtent","extent","homeWidget","getWidgetsByName","homeDijit","error","startup","loading","hidden","useIcon","placeAt","domNode","parentNode","_getRequestsTrayDataCm","state","data","filter","i","estado","_loadIniRequestsCm","dojo","click","_loadRequestsCm","evt","target","dataHtml","id_solicitud","cod_pre","fec_solicitud","caseId","icon","tbody","create","innerHTML","join","tb","getElementsByTagName","length","tableRequestApCm","removeChild","appendChild","on","_openFormCase","removeClass","classList","add","_zoomToPredSelected","_removeLayerGraphic","cod_pred","currentTarget","children","split","prediosLayer","propertyLayer","mode","MODE_ONDEMAND","outFields","selectFeatures","SELECTION_NEW","featureSelected","addLayer","interval","setInterval","graphics","symbol","setSymbol","setTimeout","clearInterval","_openSupportingDocument","open","focus","_zoomExtentToLote","returnGeometry","returnDistinctValues","execute","idLote","features","attributes","idmanzana","idsector","queryLote","ubigeo","qTaskLote","expand","arr","push","geometry","response","_unionFeatures","graphic","_zoomHomeRequests","_getDataPredioByRequests","_populateFormsByPredio","rows","direccion","y","x","row","closest","rowList","td","deactivate","enableSnapping","snapPoint","snapLine","snapPolygon","clear","value","reasignarApCm","toggle","fusionApCm","divisionApCm","actGeomApCm","eliminacionApCm","casesCtnApCm","requestTrayApCm","_openFormObs","obsCtnApCm","_createToolbar","_addToMap","screenPoint","toScreen","snappingManager","getSnappingPoint","undefined","graphicLayer","setInfoWindowOnClick","p4326","webMercatorToGeographic","alert","errorSnapingLocate","layerId","graphicsLayerIds","includes","removeLayer","getLayer","_activateTool","_activateSnappingByReasignar","activate","_activateToolAcumulacion","_activateToolLinesDivision","_activateSnappingByDivision","_locateMarker","document","getElementsByName","geom","parseFloat","centerAt","cflayer","snapManager","alwaysSnap","snapPointSymbol","tolerance","layerInfos","layer","setLayerInfos","_activateSnappingByAcumulacion","graphiclayer","graphicsLayerInfo","esri","layers","LayerInfo","name","union","_ApplyFusionLotes","graphicLayerLoteFusion","_extent","orderByFields","graphicLayerPuntoLote","graphicLayerFrenteLote","graphicFusion","frentes","isItc","intersects","hasOwnProperty","unionFrentes","idx","itcFrentesByLotes","intersect","polyline","paths","spatialReference","wkid","polylineOne","_getLongestPolyline","puntoLoteTurf","_findMidpoint","puntoLote","coordinates","puntoLoteGraphic","symbolFrenteLote","Math","floor","random","frente","_getMidpoint","geodesicLength","midpoint","geodesicDensify","getPoint","lengthPolylineChunk","line","lineString","options","units","along","longestPath","path","polylineChunk","_dividePolygon","poly","lines","divide","cut","_ApplyDivideLotes","graphicLayerLoteDivision","unionGraphicLayerLineaDivision","lineGeometry","geomLote","geomLoteDivided","lote","getExtent","graphicLayerPredio","graphicLoteDivision","idItcFrentesByLotes","puntoPredio","err","_applyDeleteLote","graphicLayerLoteDelete","_executeReasignacionGpService","result","_executeGPService","config","reasignacionUrl","url","show","gp","submitJob","_completeCallback","_statusCallback","JobInfo","jobId","jobStatus","textMessage","messages","description","textNode","slice","getResultData","status","_cancelProcess","cancelJob","info","onOpen","panel","getPanel","position","height","setPosition","panelManager","normalizePanel"],"mappings":"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","file":"Widget.js","sourcesContent":["import declare from 'dojo/_base/declare';\r\nimport BaseWidget from 'jimu/BaseWidget';\r\nimport _WidgetsInTemplateMixin from 'dijit/_WidgetsInTemplateMixin';\r\nimport Draw from \"esri/toolbars/draw\";\r\nimport Graphic from \"esri/graphic\";\r\nimport SimpleFillSymbol from \"esri/symbols/SimpleFillSymbol\";\r\nimport SimpleMarkerSymbol from \"esri/symbols/SimpleMarkerSymbol\";\r\nimport SimpleLineSymbol from \"esri/symbols/SimpleLineSymbol\";\r\nimport Color from 'dojo/_base/Color';\r\nimport GraphicsLayer from \"esri/layers/GraphicsLayer\"\r\nimport Point from \"esri/geometry/Point\"\r\n// import keys from 'dojo/keys';\r\nimport LayerInfos from \"jimu/LayerInfos/LayerInfos\";\r\nimport lang from \"dojo/_base/lang\";\r\nimport FeatureLayer from \"esri/layers/FeatureLayer\";\r\nimport QueryTask from \"esri/tasks/QueryTask\";\r\nimport Query from \"esri/tasks/query\";\r\nimport WidgetManager from \"jimu/WidgetManager\"\r\nimport geometryEngine from \"esri/geometry/geometryEngine\";\r\n// import Polygon from \"esri/geometry/Polygon\";\r\nimport Polyline from \"esri/geometry/Polyline\";\r\n// importar esri/geometry/webMercatorUtils\r\nimport webMercatorUtils from \"esri/geometry/webMercatorUtils\";\r\nimport Geoprocessor from \"esri/tasks/Geoprocessor\";\r\nimport BusyIndicator from 'esri/dijit/util/busyIndicator';\r\n// importar \"jimu/dijit/LoadingShelter\"\r\nimport LoadingShelter from \"jimu/dijit/LoadingShelter\";\r\nimport Message from \"jimu/dijit/Message\";\r\n// import GeometryService from 'esri/tasks/GeometryService';\r\nimport turf from \"turf\";\r\n// importar \"dojo/Deferred\"\r\nimport Deferred from \"dojo/Deferred\";\r\n\r\n\r\nconst dataRequestsToAttendCm = [\r\n  {\"case\":\"Reasignar\",\"caseId\":1,\"cod_pre\":\"01-23-0009\",\"estado\":\"por_atender\",\"fec_solicitud\":\"10/112022\", \"id_solicitud\":1},\r\n  {\"case\":\"Acumulación\",\"caseId\":2,\"cod_pre\":\"01-23-0027,01-23-0028,01-23-0029\",\"estado\":\"por_atender\",\"fec_solicitud\":\"10/112022\",\"id_solicitud\":2},\r\n  {\"case\":\"División\",\"caseId\":3,\"cod_pre\":\"15-16-0003\",\"estado\":\"por_atender\",\"fec_solicitud\":\"10/11/2022\",\"id_solicitud\":3},\r\n  {\"case\":\"Eliminación\",\"caseId\":5,\"cod_pre\":\"15-16-0001\",\"estado\":\"por_atender\",\"fec_solicitud\":\"10/11/2022\",\"id_solicitud\":5},\r\n  {\"case\":\"Reasignar\",\"caseId\":1,\"cod_pre\":\"1376\",\"estado\":\"por_atender\",\"fec_solicitud\":\"10/11/2022\",\"id_solicitud\":6},\r\n  {\"case\":\"Fusión\",\"caseId\":2,\"cod_pre\":\"1376\",\"estado\":\"obaservado\",\"fec_solicitud\":\"10/11/2022\",\"id_solicitud\":7},\r\n  {\"case\":\"División\",\"caseId\":3,\"cod_pre\":\"1376\",\"estado\":\"observado\",\"fec_solicitud\":\"10/11/2022\",\"id_solicitud\":8},\r\n  {\"case\":\"Eliminación\",\"caseId\":5,\"cod_pre\":\"1376\",\"estado\":\"atendido\",\"fec_solicitud\":\"10/11/2022\",\"id_solicitud\":10}\r\n  ]\r\nconst dataByRequest = {\r\n  \"1\": [{\"cod_pre\": \"01-23-0009\", \"x\": -79.739827, \"y\": -6.643564, \"direccion\": \"Av. Los Jazmines 123\", \"num_alt\": 567, \"sec_eje\": \"Sección 1\", \"cod_cuc\": \"ABC123\"}],\r\n  \"2\": [{\"cod_pre\": \"01-23-0027\",\"x\": -67.89,\"y\": -12,\"direccion\": \"Calle Las Rosas 456\",\"num_alt\": 789,\"sec_eje\": \"Sección 2\",\"cod_cuc\": \"DEF456\"}, { \"cod_pre\": \"01-23-0028\", \"x\": 345.67, \"y\": 89.01, \"direccion\": \"Jr. Los Girasoles 789\", \"num_alt\": 234, \"sec_eje\": \"Sección 3\", \"cod_cuc\": \"GHI789\"}, { \"cod_pre\": \"01-23-0029\", \"x\": 345.67, \"y\": 89.01, \"direccion\": \"Jr. Los Girasoles 789\", \"num_alt\": 234, \"sec_eje\": \"Sección 3\", \"cod_cuc\": \"GHI789\"}],\r\n  \"3\": [{\"cod_pre\": \"15-16-0003\",\"x\": -67.89,\"y\": -12,\"direccion\": \"Calle Las Rosas 456\",\"num_alt\": 789,\"sec_eje\": \"Sección 2\", \"cod_cuc\": \"DEF456\"}],\r\n  \"5\": [{\"cod_pre\": \"15-16-0001\",\"x\": -67.89,\"y\": -12,\"direccion\": \"Jr. Los Girasoles 789\",\"num_alt\": 234,\"sec_eje\": \"Sección 3\",\"cod_cuc\": \"GHI789\"}]\r\n}\r\n\r\nconst requestToAttendState = \"por_atender\"\r\nconst requestsObservedState = \"observado\"\r\nconst requestsAttendState = \"atendido\"\r\n\r\n\r\n// Layers ids\r\nconst idLyrCfPredios = \"CARTO_FISCAL_6806_0\"\r\nconst idLyrCfLotes_pun = \"CARTO_FISCAL_6806_1\"\r\nconst idLyrCfEje_vial = \"CARTO_FISCAL_6806_2\"\r\nconst idLyrCfNumeracion = \"CARTO_FISCAL_6806_3\"\r\nconst idLyrCfArancel = \"CARTO_FISCAL_6806_4\"\r\nconst idLyrCfLotes = \"CARTO_FISCAL_6806_5\"\r\nconst idLyrCfUnidadesurbanas = \"CARTO_FISCAL_6806_6\"\r\nconst idLyrCfParques = \"CARTO_FISCAL_6806_7\"\r\nconst idLyrCfManzana = \"CARTO_FISCAL_6806_8\"\r\nconst idLyrCfSector= \"CARTO_FISCAL_6806_9\"\r\nconst idLyrActpuntoimg = \"ACTUALIZACION_DE_PUNTO_IMG_1890\"\r\nconst idLyrDistricts = \"limites_nacional_1821_2\"\r\n\r\nconst iconByState = {\r\n  \"por_atender\": {'icon': 'fas fa-pencil-alt', 'id': 'editRequestsCm'},\r\n  \"observado\": {'icon': 'fas fa-pause', 'id': 'obsRequestsCm'},\r\n  \"atendido\": {'icon': 'fas fa-check', 'id': 'goodRequestsCm'},\r\n}\r\n\r\n// Fields \r\nconst _UBIGEO_FIELD = \"UBIGEO\"\r\nconst _ID_LOTE_P_FIELD = \"ID_LOTE_P\"\r\nconst _COD_MZN_FIELD = \"COD_MZN\"\r\nconst _F_MZN_FIELD = \"F_MZN\"\r\nconst _COD_SECT_FIELD = \"COD_SECT\"\r\nconst _COD_PRE_FIELD = \"COD_PRE\"\r\n\r\n\r\nconst samplePdf = \"https://www.africau.edu/images/default/sample.pdf\"\r\n\r\nlet toolbarCm\r\n\r\nconst params = new URLSearchParams(window.location.search)\r\nconst paramsApp = {}\r\n\r\nfor (let key of params.keys()) {\r\n  paramsApp[key] = params.get(key)\r\n}\r\n\r\n// console.log(paramsApp)\r\n// Styles\r\nconst symbolPuntoLote = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_SQUARE, \r\n  20, \r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID, \r\n    new Color([255, 0, 0]), 2), \r\n    new Color([0, 92, 230, 0.75]\r\n  )\r\n)\r\n\r\nconst symbolFusionLote = new SimpleFillSymbol(\r\n  SimpleFillSymbol.STYLE_SOLID,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0]),\r\n    2\r\n  ),\r\n  new Color([255, 255, 0, 0.25])\r\n)\r\n\r\nconst symbolEliminarLote = new SimpleFillSymbol(\r\n  SimpleFillSymbol.STYLE_DIAGONAL_CROSS,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([100, 100, 100]),\r\n    2\r\n  ),\r\n  new Color([229, 229, 229, 0.9])\r\n)\r\n\r\nconst symbolLoteSelected = new SimpleFillSymbol(\r\n  SimpleFillSymbol.STYLE_SOLID,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0, 0.75]),\r\n    4\r\n  ),\r\n  new Color([0, 255, 0, 0])\r\n)\r\n\r\nconst symbolDivisionLote = new SimpleLineSymbol(\r\n  SimpleLineSymbol.STYLE_DASH,\r\n  new Color([255, 0, 0]),\r\n  2\r\n)\r\n\r\nconst symbolPredio = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_SQUARE, \r\n  20, \r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID, \r\n    new Color([255, 0, 0]), 2), \r\n    new Color([235, 69, 95, 0.75]\r\n  )\r\n)\r\n\r\nconst symbolPredioSelected = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_SQUARE, 20,\r\n  new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID, \r\n  new Color([255, 0, 0]), 4),\r\n  new Color([0, 255, 0, 0])\r\n);\r\n\r\nconst symbolSnapPointCm = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_CROSS,\r\n  20,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0]),\r\n    2\r\n  ),\r\n  new Color([0, 255, 0, 0.25])\r\n)\r\n\r\n\r\n// Identificadores de graficos\r\nconst idGraphicPredioCm = \"graphicPredioCm2\"\r\nconst idGraphicPredioSelectedCm = \"graphicPredioCm2\"\r\nconst idGraphicLoteCm = \"graphicLoteCm\"\r\nconst idGraphicLoteSelectedCm = \"graphicLoteSelectedCm\"\r\nconst idGraphicPuntoLote = \"graphicPuntoLote\"\r\nconst idGraphicFrenteLote = \"graphicFrenteLote\"\r\nconst idGraphicLineaDivision = \"graphicLineaDivision\"\r\nconst idGraphicLoteDeleteCm = \"graphicLoteDeleteCm\"\r\n\r\n// symbol by case\r\nconst symbolByCase = {\r\n  \"1\": {\"symbol\": symbolPredio},\r\n  \"2\": {\"symbol\": symbolPredio},\r\n  \"3\": {\"symbol\": symbolPredio},\r\n}\r\n\r\n// graphicsLayer main\r\nlet graphicLayerLineaDivision = new GraphicsLayer({\r\n  id: idGraphicLineaDivision,\r\n});\r\n\r\n// To create a widget, you need to derive from BaseWidget.\r\nexport default declare([BaseWidget], {\r\n\r\n  // Custom widget code goes here\r\n\r\n  baseClass: 'carto-maintenance-wgt',\r\n  codRequestsCm: null,\r\n  layersMap: [],\r\n  queryUbigeo: paramsApp['ubigeo'] ? `${_UBIGEO_FIELD} = '${paramsApp['ubigeo']}'` : \"1=1\",\r\n  case: 0,\r\n  lotes: null,\r\n  arancel: null,\r\n  codigosPredios: null,\r\n  xy: [],\r\n\r\n  // add additional properties here\r\n\r\n  // methods to communication with app container:\r\n  postCreate () {\r\n    this.inherited(arguments);\r\n    console.log('CartoMaintenanceWgt::postCreate');\r\n    this._getAllLayers();\r\n    selfCm = this;\r\n    this._filterByDistrictCm();\r\n    this._startExtentByDistrictCm();\r\n  },\r\n  _getAllLayers() {\r\n    LayerInfos.getInstance(this.map, this.map.itemInfo).then(lang.hitch(this, function (layerInfosObj) {\r\n      this.layersMap = layerInfosObj;\r\n    }));\r\n  },\r\n\r\n  _showMessage(message, type = 'message') {\r\n    let title = `${this.nls._widgetLabel}: ${type}`\r\n    switch (type) {\r\n        case 'error':\r\n            new Message({\r\n                type: type,\r\n                titleLabel: title,\r\n                message: message,\r\n            });\r\n            break;\r\n        default:\r\n            new Message({\r\n                type: type,\r\n                titleLabel: title,\r\n                message: message,\r\n            });\r\n            break;\r\n    }\r\n\r\n  },\r\n\r\n  _showMessageConfirm(){\r\n    let deferred = new Deferred();\r\n    let mensaje = new Message({\r\n      message: \"¿Estás seguro de que deseas continuar?\",\r\n      type: \"question\",\r\n      buttons: [{\r\n        label: \"Sí\",\r\n        onClick: function() {\r\n          deferred.resolve(true);\r\n          mensaje.hide();\r\n        }\r\n      }, {\r\n        label: \"No\",\r\n        onClick: function() {\r\n          deferred.resolve(false);\r\n          mensaje.hide();\r\n        }\r\n      }]\r\n    });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _filterByDistrictCm(){\r\n    // let queryUbigeo = `${_UBIGEO_FIELD} = '${paramsApp['ubigeo']}'`\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfPredios).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfLotes_pun).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfEje_vial).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfNumeracion).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfArancel).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfLotes).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfUnidadesurbanas).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfParques).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfManzana).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfSector).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrActpuntoimg).setFilter(selfCm.queryUbigeo)\r\n  },\r\n\r\n  _startExtentByDistrictCm(){\r\n    let query = new Query()\r\n    query.where = selfCm.queryUbigeo\r\n\r\n    let qTask = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrDistricts).getUrl())\r\n\r\n    qTask.executeForExtent(query, function(results){\r\n      selfCm.map.setExtent(results.extent).then(function(){\r\n        // get the next scale value from the current scale\r\n        let homeWidget = WidgetManager.getInstance().getWidgetsByName(\"HomeButton\");\r\n        homeWidget[0].homeDijit.extent = selfCm.map.extent;\r\n      })       \r\n    }, function(error){\r\n      console.log(error)\r\n    })\r\n  },\r\n\r\n  startup() {\r\n    this.inherited(arguments);\r\n    console.log('CartoMaintenanceWgt::startup');\r\n    // crear el objeto LoadingShelter\r\n\r\n    this.loading = new LoadingShelter({\r\n      hidden: true, // Ocultar el widget cuando se crea\r\n      message: \"Cargando...\", // Mensaje de carga personalizado\r\n      useIcon: true, // Mostrar un icono de carga en lugar del mensaje de carga\r\n      // target: this.domNode.parentNode.parentNode.parentNode,\r\n    });\r\n\r\n    this.loading.placeAt(this.domNode.parentNode.parentNode.parentNode)\r\n    this.loading.startup();\r\n    // this.busyIndicator = BusyIndicator.create({\r\n    //   target: this.domNode.parentNode.parentNode.parentNode,\r\n    //   backgroundOpacity: 0\r\n    // });\r\n  },\r\n\r\n  _getRequestsTrayDataCm(state){\r\n    // Reemplazar todo el metodo para capturar datos de servicio\r\n    let data = dataRequestsToAttendCm.filter((i) => i.estado == state);\r\n    return data\r\n  },\r\n\r\n  _loadIniRequestsCm(){\r\n    dojo.query(`#${requestToAttendState}`)[0].click()\r\n  },\r\n\r\n  _loadRequestsCm(evt){\r\n    let data = selfCm._getRequestsTrayDataCm(evt.target.id);\r\n    let dataHtml = data.map((i) => `<tr>\r\n                                      <td>${i.id_solicitud}</td>\r\n                                      <td>${i.case}</td>\r\n                                      <td>${i.cod_pre}</td>\r\n                                      <td>${i.fec_solicitud}</td>\r\n                                      <td>\r\n                                        <button id=\"${iconByState[i.estado].id}\" value=\"${i.caseId}\" class=\"stateRequestClsCm\">\r\n                                          <i class=\"${iconByState[i.estado].icon}\"></i>\r\n                                        </button>\r\n                                      </td>\r\n                                    </tr>`\r\n                                    )\r\n    let tbody = dojo.create('tbody', {innerHTML: dataHtml.join('')});\r\n    let tb = dojo.query(\".tableRequestClsCm\")[0]\r\n    if (tb.getElementsByTagName(\"tbody\").length > 0){\r\n      selfCm.tableRequestApCm.removeChild(tb.getElementsByTagName(\"tbody\")[0])\r\n    }\r\n    selfCm.tableRequestApCm.appendChild(tbody);\r\n    if(evt.target.id == requestToAttendState){\r\n      dojo.query(\".stateRequestClsCm\").on('click', selfCm._openFormCase);\r\n    }\r\n\r\n    dojo.query(\".tablinksCm\").removeClass(\"active\");\r\n    evt.target.classList.add(\"active\");\r\n\r\n  },\r\n\r\n  _zoomToPredSelected(evt){\r\n    selfCm._removeLayerGraphic(idGraphicPredioSelectedCm);\r\n    let cod_pred = evt.currentTarget.children[0].innerHTML.split(': ')[1]\r\n    let prediosLayer = selfCm.layersMap.getLayerInfoById(idLyrCfPredios);\r\n    let propertyLayer = new FeatureLayer(prediosLayer.getUrl(), {\r\n      mode: FeatureLayer.MODE_ONDEMAND,\r\n      outFields: [\"*\"]\r\n    });\r\n    // crear una consulta para seleccionar la fila deseada\r\n    let query = new Query();\r\n    query.where = `${_COD_PRE_FIELD} = '${cod_pred}'`\r\n    // console.log(query.where)\r\n    \r\n    // propertyLayer.setSelectionSymbol(symbolPredioSelected);\r\n    // seleccionar la fila\r\n    propertyLayer.selectFeatures(query, FeatureLayer.SELECTION_NEW, function(results){\r\n      let featureSelected = new GraphicsLayer({\r\n        id: idGraphicPredioSelectedCm\r\n      });\r\n      featureSelected.add(results[0]);\r\n      selfCm.map.addLayer(featureSelected);\r\n      // selfCm.map.centerAt(results[0].geometry);\r\n\r\n      // Parpadeo de seleccion\r\n      let interval = setInterval(function() {\r\n        if (featureSelected.graphics[0].symbol === symbolPredioSelected) {\r\n          featureSelected.graphics[0].setSymbol(null);\r\n        } else {\r\n          featureSelected.graphics[0].setSymbol(symbolPredioSelected);\r\n        }\r\n      }, 200);\r\n      setTimeout(function(){\r\n        clearInterval(interval);\r\n        selfCm._removeLayerGraphic(idGraphicPredioSelectedCm);\r\n      }, 2000);\r\n      \r\n    });\r\n\r\n\r\n  },\r\n  \r\n  _openSupportingDocument(){\r\n    window.open(samplePdf, '_blank').focus();\r\n  },\r\n\r\n  _zoomExtentToLote(cod_pre){\r\n    let query = new Query()\r\n\r\n    query.where = `${_UBIGEO_FIELD} = '${paramsApp['ubigeo']}' and ${_COD_PRE_FIELD} in ('${(cod_pre.split(',')).join(\"', '\")}')`\r\n    // fields return\r\n    query.outFields = [_ID_LOTE_P_FIELD, _COD_MZN_FIELD, _COD_SECT_FIELD]\r\n    query.returnGeometry = false\r\n    // Return distinct values\r\n    query.returnDistinctValues = true\r\n\r\n    let qTask = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrCfPredios).getUrl())\r\n\r\n    qTask.execute(query, function(results){\r\n      let idLote = results.features.map((i) => i.attributes[_ID_LOTE_P_FIELD])\r\n      let idmanzana = results.features.map((i) => i.attributes[_COD_MZN_FIELD])\r\n      let idsector = results.features.map((i) => i.attributes[_COD_SECT_FIELD])\r\n      let queryLote = new Query()\r\n      queryLote.where = `${_ID_LOTE_P_FIELD} in (${idLote.join(\",\")}) and (${_UBIGEO_FIELD} = ${paramsApp['ubigeo']})`\r\n      selfCm.lotes = queryLote.where\r\n      selfCm.arancel = `${_UBIGEO_FIELD} = '${paramsApp.ubigeo}' and (${_COD_MZN_FIELD} in (${idmanzana.join(\",\")})) and (${_COD_SECT_FIELD} IN (${idsector.join(\",\")}))`\r\n      queryLote.returnGeometry = true\r\n      let qTaskLote = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl())\r\n      qTaskLote.executeForExtent(queryLote, function(results){\r\n        selfCm.map.setExtent(results.extent.expand(2)).then(function(){\r\n          qTaskLote.execute(queryLote, function(results){\r\n            let arr = []\r\n            for (let i of results.features) {\r\n              arr.push(i.geometry)\r\n            }\r\n            let response = selfCm._unionFeatures(arr)\r\n            let graphic = new Graphic(response, symbolLoteSelected);\r\n            let featureSelected = new GraphicsLayer({\r\n              id: idGraphicLoteSelectedCm\r\n            });\r\n            featureSelected.add(graphic);\r\n            selfCm.map.addLayer(featureSelected);\r\n            \r\n            // Parpadeo de seleccion\r\n            let interval = setInterval(function() {\r\n              if (featureSelected.graphics[0].symbol === symbolLoteSelected) {\r\n                featureSelected.graphics[0].setSymbol(null);\r\n              } else {\r\n                featureSelected.graphics[0].setSymbol(symbolLoteSelected);\r\n              }\r\n            }, 200);\r\n            setTimeout(function(){\r\n              clearInterval(interval);\r\n              selfCm._removeLayerGraphic(idGraphicLoteSelectedCm);\r\n            }, 2000);\r\n            \r\n          })\r\n        })\r\n      })\r\n    })\r\n  },\r\n  _zoomHomeRequests(){\r\n    selfCm._zoomExtentToLote(selfCm.codigosPredios)\r\n  },\r\n\r\n  _getDataPredioByRequests(id_solicitud){\r\n    // get data predio by id_solicitud\r\n    let data = dataByRequest[id_solicitud];\r\n    console.log(data)\r\n    return data\r\n  },\r\n\r\n  _populateFormsByPredio(id_solicitud){\r\n    let rows = selfCm._getDataPredioByRequests(id_solicitud).map((i) => {\r\n      return `<div class=\"caseInfoClsCm\">\r\n        <div class=\"headPredInfoClsCm\">\r\n          <span class=\"alignVCenter\">Predio: ${i.cod_pre}</span>\r\n        </div>\r\n        <div class=\"bodyPredInfoClsCm\">\r\n          <label for=\"direccion\">Dirección:</label>\r\n          <input type=\"text\" id=\"direccion\" name=\"direccion\" value=\"${i.direccion}\" readonly>\r\n          <div class=\"coordsCtnClsCm\">\r\n            <div class=\"coordClsCm\">\r\n              <label for=\"latitud\">Latitud:</label>\r\n              <input type=\"number\" value=${i.y} name=\"latitud\" readonly>\r\n            </div>\r\n            <div class=\"coordClsCm\">\r\n              <label for=\"longitud\">Longitud:</label>\r\n              <input type=\"number\" value=${i.x} name=\"longitud\" readonly>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>`\r\n    })\r\n    // console.log(rows.join(''))\r\n    dojo.query('.CtnPredInfoClsCm')[0].innerHTML = rows.join('')\r\n    dojo.query(\".headPredInfoClsCm\").on('click', selfCm._zoomToPredSelected)\r\n  },\r\n\r\n  _openFormCase(evt){\r\n    if (evt.currentTarget.id == \"editRequestsCm\"){\r\n      let row = dojo.query(evt.currentTarget).closest(\"tr\")[0];\r\n      let rowList = dojo.query(\"td\", row).map(td => td.innerHTML);\r\n      selfCm.codRequestsCm = rowList[0]\r\n      dojo.query('#titleCaseCm')[0].innerHTML = `<span>${rowList[1]} <span class=\"fa fa-search\" style=\"font-size: 15px\"></span></span>`\r\n      selfCm._populateFormsByPredio(selfCm.codRequestsCm)\r\n      // dojo.query('.codPredClsCm')[0].innerHTML = `<span class=\"alignVCenter\">Predios: ${rowList[2]}</span>`\r\n      // dojo.query('.headPredInfoClsCm')[0].innerHTML = `<span class=\"alignVCenter\">Predio: ${rowList[2]}</span>`\r\n\r\n      selfCm.codigosPredios = rowList[2]\r\n      selfCm._zoomHomeRequests()\r\n\r\n    } else if (evt.currentTarget.id == 'backTrayCm'){\r\n      // desactivar el toolbarCm de edicion si esta activado\r\n      // toolbarCm.deactivate()\r\n      toolbarCm.deactivate();\r\n\r\n      // deshabilitar snapping\r\n      selfCm.map.enableSnapping({\r\n        snapPoint: false,\r\n        snapLine: false,\r\n        snapPolygon: false\r\n      });\r\n\r\n      dojo.query(\".caseClsCm\").removeClass(\"active\")\r\n      // remove all graphics layer if exist\r\n      selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n      selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n      selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n      selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n      selfCm._removeLayerGraphic(idGraphicPredioSelectedCm);\r\n      // selfCm._removeLayerGraphic(idGraphicLineaDivision)\r\n      graphicLayerLineaDivision.clear();\r\n      selfCm.lotes = null\r\n      selfCm.arancel = null\r\n      selfCm.xy = null\r\n    }\r\n    \r\n    selfCm.case = evt.currentTarget.value\r\n    switch (selfCm.case) {\r\n      case \"1\":\r\n        selfCm.reasignarApCm.classList.toggle('active')\r\n        break;\r\n      case \"2\":\r\n        selfCm.fusionApCm.classList.toggle('active')\r\n        break\r\n      case \"3\":\r\n        selfCm.divisionApCm.classList.toggle('active')\r\n        break\r\n      case \"4\":\r\n        selfCm.actGeomApCm.classList.toggle('active')\r\n        break\r\n      case \"5\":\r\n        selfCm.eliminacionApCm.classList.toggle('active')\r\n        break\r\n      default:\r\n        break;\r\n    }\r\n    selfCm.casesCtnApCm.classList.toggle('active')\r\n    selfCm.requestTrayApCm.classList.toggle('active')\r\n\r\n  },\r\n  _openFormObs(){\r\n    // console.log('aqui')\r\n    dojo.query('#headeRequestsCtnCm')[0].innerHTML = `<span class=\"alignVCenter\">Solicitud: ${selfCm.codRequestsCm}</span>`\r\n    selfCm.casesCtnApCm.classList.toggle(\"active\");\r\n    selfCm.obsCtnApCm.classList.toggle('active')\r\n\r\n  },\r\n\r\n  // Toolbar function\r\n  _createToolbar() {\r\n    toolbarCm = new Draw(selfCm.map);\r\n    toolbarCm.on(\"draw-end\", selfCm._addToMap);\r\n  },\r\n\r\n  _addToMap(evt) {\r\n    // let area;\r\n    // console.log(evt.geometry)\r\n    if (evt.geometry.type === \"point\") {\r\n      let screenPoint = selfCm.map.toScreen(evt.geometry)\r\n      let deferred = selfCm.map.snappingManager.getSnappingPoint(screenPoint);\r\n      deferred.then(function(value){\r\n        if(value !== undefined){\r\n          let graphic = new Graphic(value, symbolByCase[selfCm.case].symbol);\r\n          let graphicLayer = new GraphicsLayer({\r\n            id: idGraphicPredioCm,\r\n          });\r\n          graphicLayer.add(graphic);\r\n          selfCm.map.addLayer(graphicLayer);\r\n          selfCm.map.setInfoWindowOnClick(true);\r\n          toolbarCm.deactivate();\r\n          // si es el caso reasignacion de predio\r\n          if (selfCm.case == 1) {\r\n            // obtener las coordenadas x, y del punto\r\n            console.log(value)\r\n            const p4326 = webMercatorUtils.webMercatorToGeographic(new Point(value));\r\n            selfCm.xy = [p4326.x, p4326.y]\r\n          }\r\n        } else {\r\n          alert(selfCm.nls.errorSnapingLocate);\r\n        }\r\n      }, function(error){\r\n        console.log(error);\r\n      });\r\n    } else if (evt.geometry.type === \"polyline\") {\r\n      let graphic = new Graphic(evt.geometry, symbolDivisionLote);\r\n      graphicLayerLineaDivision.add(graphic);\r\n      selfCm.map.addLayer(graphicLayerLineaDivision);\r\n      selfCm.map.setInfoWindowOnClick(true);\r\n      toolbarCm.deactivate();\r\n    }\r\n    \r\n  },\r\n\r\n  _removeLayerGraphic(layerId){\r\n    if (selfCm.map.graphicsLayerIds.includes(layerId)) {\r\n      selfCm.map.removeLayer(selfCm.map.getLayer(layerId));\r\n    }\r\n  },\r\n\r\n  _activateTool() {\r\n    selfCm._activateSnappingByReasignar();\r\n    selfCm.map.setInfoWindowOnClick(false);\r\n    selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n    toolbarCm.activate(Draw[\"POINT\"]);\r\n  },\r\n\r\n  _activateToolAcumulacion(){\r\n    selfCm.map.setInfoWindowOnClick(false);\r\n    selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n    toolbarCm.activate(Draw[\"POINT\"]);\r\n  },\r\n\r\n  _activateToolLinesDivision(){\r\n    selfCm.map.setInfoWindowOnClick(false);\r\n    // selfCm._removeLayerGraphic(idGraphicLineaDivision);\r\n    selfCm._activateSnappingByDivision();\r\n    toolbarCm.activate(Draw[\"POLYLINE\"]);\r\n  },\r\n\r\n  _locateMarker(evt){\r\n    let x = document.getElementsByName(\"longitud\")[0].value;\r\n    let y = document.getElementsByName(\"latitud\")[0].value;\r\n    let geom = new Point(parseFloat(x), parseFloat(y));\r\n    selfCm._removeLayerGraphic(idGraphicPredioCm)\r\n    let graphic = new Graphic(geom, symbolPuntoLote);\r\n    let graphicLayer = new GraphicsLayer({\r\n      id: idGraphicPredioCm\r\n    });\r\n    graphicLayer.add(graphic);\r\n    selfCm.map.addLayer(graphicLayer);\r\n    selfCm.map.centerAt(geom);\r\n    selfCm.map.setInfoWindowOnClick(true);\r\n    selfCm.xy = [parseFloat(x), parseFloat(y)]\r\n  },\r\n  _activateSnappingByReasignar() {\r\n    let cflayer = selfCm.layersMap.getLayerInfoById(idLyrCfLotes_pun)\r\n    let propertyLayer = new FeatureLayer(cflayer.getUrl(), {\r\n      mode: FeatureLayer.MODE_ONDEMAND,\r\n      outFields: [\"*\"]\r\n    });\r\n    let snapManager = selfCm.map.enableSnapping({\r\n      alwaysSnap: true,\r\n      // snapKey: keys.CTRL,\r\n      snapPointSymbol: symbolSnapPointCm,\r\n      tolerance: 100,\r\n    });\r\n    // get layerinfo by id of layer to snap\r\n    let layerInfos = [{\r\n      layer: propertyLayer\r\n    }];\r\n    \r\n    snapManager.setLayerInfos(layerInfos);\r\n  },\r\n\r\n  _activateSnappingByAcumulacion(graphiclayer){\r\n    let graphicsLayerInfo = new esri.layers.LayerInfo({\r\n      id: graphiclayer.id, // El id del `GraphicsLayer`\r\n      name: graphiclayer.name, // El nombre del `GraphicsLayer`\r\n      layer: graphiclayer // El `GraphicsLayer` a utilizar\r\n    });\r\n\r\n    // Agregar el `LayerInfo` al mapa y habilitar el snapping\r\n    selfCm.map.enableSnapping({\r\n      layerInfos: [graphicsLayerInfo], // Agregar el `LayerInfo` al mapa\r\n      alwaysSnap: true,\r\n      snapPointSymbol: symbolSnapPointCm,\r\n      tolerance: 100,\r\n    });\r\n  },\r\n\r\n  _activateSnappingByDivision(){\r\n    let graphicsLayerInfo = new esri.layers.LayerInfo({\r\n      id: graphicLayerLineaDivision.id, // El id del `GraphicsLayer`\r\n      name: graphicLayerLineaDivision.name, // El nombre del `GraphicsLayer`\r\n      layer: graphicLayerLineaDivision // El `GraphicsLayer` a utilizar\r\n    });\r\n\r\n    let cflayer = selfCm.layersMap.getLayerInfoById(idLyrCfLotes)\r\n    let propertyLayer = new FeatureLayer(cflayer.getUrl(), {\r\n      mode: FeatureLayer.MODE_ONDEMAND,\r\n      outFields: [\"*\"]\r\n    });\r\n\r\n    let layerInfos = [{\r\n      layer: propertyLayer\r\n    }, graphicsLayerInfo];\r\n\r\n    // Agregar el `LayerInfo` al mapa y habilitar el snapping\r\n    selfCm.map.enableSnapping({\r\n      layerInfos: layerInfos, // Agregar el `LayerInfo` al mapa\r\n      alwaysSnap: true,\r\n      snapPointSymbol: symbolSnapPointCm,\r\n      tolerance: 5,\r\n    });\r\n  },\r\n\r\n  // crear una funcion que permita dos poligonos aceptando dos poligonos json como parametros\r\n  // la funcion debe retornar un poligono json\r\n  _unionFeatures(arr) {  \r\n    let union = geometryEngine.union(arr);\r\n    return union;\r\n  },\r\n\r\n  // Generate function of create graphic by query polygon featurelayer\r\n  _ApplyFusionLotes() {\r\n    selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n    selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n    selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n    selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n    selfCm._removeLayerGraphic(idGraphicLoteDeleteCm);\r\n\r\n    // Creamos grafico de lote fusionado\r\n    let graphicLayerLoteFusion = new GraphicsLayer({\r\n      id: idGraphicLoteCm\r\n    });\r\n\r\n    let query = new Query();\r\n    query.where = selfCm.lotes\r\n    query.outFields = [\"*\"];\r\n    query.returnGeometry = true\r\n    let qTask = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl());\r\n    qTask.execute(query, function (results) {\r\n      let arr = []\r\n      for (let i of results.features) {\r\n        arr.push(i.geometry)\r\n      }\r\n      let response = selfCm._unionFeatures(arr)\r\n      let graphic = new Graphic(response, symbolFusionLote);\r\n\r\n      graphicLayerLoteFusion.add(graphic);\r\n      selfCm.map.addLayer(graphicLayerLoteFusion);\r\n      selfCm.map.setExtent(graphic._extent, true);\r\n\r\n    }).then(function () {\r\n      let query = new Query();\r\n      // query.where = `${_UBIGEO_FIELD} = '${paramsApp.ubigeo}' and ${_COD_MZN_FIELD} = '040' and ${_COD_SECT_FIELD} = '04'`\r\n      console.log(selfCm.arancel)\r\n      query.where = selfCm.arancel\r\n      // especificar los campos devueltos\r\n      query.outFields = [_UBIGEO_FIELD, _F_MZN_FIELD];\r\n      query.returnGeometry = true\r\n      // query with order by fields\r\n      query.orderByFields = [_F_MZN_FIELD];\r\n      let qTask = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrCfArancel).getUrl());\r\n      qTask.execute(query, function (results) {\r\n        // Creamos grafico de punto lote\r\n        let graphicLayerPuntoLote = new GraphicsLayer({\r\n          id: idGraphicPuntoLote\r\n        });\r\n        // creamos grafico de frente de lote\r\n        let graphicLayerFrenteLote = new GraphicsLayer({\r\n          id: idGraphicFrenteLote\r\n        });\r\n        let graphicFusion = selfCm.map.getLayer(idGraphicLoteCm)\r\n        let frentes = {}\r\n        for (let row of results.features){\r\n          let isItc = geometryEngine.intersects(row.geometry, graphicFusion.graphics[0].geometry)\r\n          if (!isItc){\r\n            continue\r\n          }\r\n          // saber si un key esta dentro del objeot frentes\r\n          if (!frentes.hasOwnProperty(row.attributes[_F_MZN_FIELD])){\r\n            frentes[row.attributes[_F_MZN_FIELD]] = row.geometry;\r\n          }\r\n          else{\r\n            let unionFrentes = geometryEngine.union([frentes[row.attributes[_F_MZN_FIELD]], row.geometry])\r\n            frentes[row.attributes[_F_MZN_FIELD]] = unionFrentes;\r\n          }\r\n        }\r\n        for (let idx in frentes){\r\n          // interseccion entre frentes y lote\r\n          let itcFrentesByLotes = geometryEngine.intersect(frentes[idx], graphicFusion.graphics[0].geometry)\r\n          // Generate symbol by line with random colors\r\n\r\n          // polilinea de frentes resultantes\r\n          let polyline = new Polyline({\r\n            paths: itcFrentesByLotes.paths,\r\n            spatialReference: {wkid: 4326}\r\n          });\r\n          \r\n          let polylineOne = null;\r\n          if (polyline.paths.length > 1){\r\n            polylineOne = selfCm._getLongestPolyline(polyline)\r\n            \r\n          }else{\r\n            polylineOne = polyline\r\n          }\r\n\r\n          // calculamos el punto medio de la polilinea\r\n          let puntoLoteTurf = selfCm._findMidpoint(polylineOne)\r\n\r\n          // crear un punto en el mapa\r\n          let puntoLote = new Point({\r\n            x: puntoLoteTurf.geometry.coordinates[0],\r\n            y: puntoLoteTurf.geometry.coordinates[1],\r\n            spatialReference: {wkid: 4326}\r\n          })\r\n\r\n          // Agregar el punto p al mapa          \r\n          let puntoLoteGraphic = new Graphic(puntoLote, symbolPuntoLote)\r\n          graphicLayerPuntoLote.add(puntoLoteGraphic)\r\n\r\n          // console.log(point)\r\n          const symbolFrenteLote = new SimpleLineSymbol(\r\n            SimpleLineSymbol.STYLE_SOLID,\r\n            new Color(\r\n              [\r\n                Math.floor(Math.random() * 255), \r\n                Math.floor(Math.random() * 255), \r\n                Math.floor(Math.random() * 255)]),\r\n            5\r\n          )\r\n          let frente = new Graphic(polyline, symbolFrenteLote);\r\n          graphicLayerFrenteLote.add(frente);\r\n        }\r\n        \r\n        selfCm.map.addLayer(graphicLayerFrenteLote);\r\n        selfCm.map.addLayer(graphicLayerPuntoLote);\r\n        selfCm._activateSnappingByAcumulacion(graphicLayerPuntoLote)\r\n      })\r\n    });\r\n  },\r\n\r\n  _getMidpoint(polyline) {\r\n    let length = geometryEngine.geodesicLength(polyline, \"meters\");\r\n    let midpoint = geometryEngine.geodesicDensify(polyline, length/2, \"meters\").getPoint(0, 0);\r\n    return midpoint;\r\n  },\r\n\r\n  _findMidpoint(polyline) {\r\n    let lengthPolylineChunk = geometryEngine.geodesicLength(polyline, \"meters\")\r\n    let line = turf.lineString(polyline.paths[0]);\r\n    let options = {units: 'meters'};\r\n    let along = turf.along(line, lengthPolylineChunk/2, options);\r\n    return along\r\n  },\r\n\r\n  // funcion que recibe una polilinea con muchas partes y retorna la parte mas larga como una polilinea\r\n  _getLongestPolyline(polyline){\r\n    let paths = polyline.paths\r\n    let longestPath = 0\r\n    let response = null;\r\n    for (let path of paths){\r\n      let polylineChunk = new Polyline({\r\n        paths: [path],\r\n        spatialReference: {wkid: 4326}\r\n      });\r\n      let lengthPolylineChunk = geometryEngine.geodesicLength(polylineChunk, \"meters\")\r\n      if (lengthPolylineChunk > longestPath){ \r\n        longestPath = lengthPolylineChunk\r\n        response = polylineChunk\r\n      }\r\n    }\r\n    return response\r\n  },\r\n\r\n  // function that allows dividing a polygon from cutting lines, the parameters will be a polygon and several lines in json format\r\n  // the function must return a polygon json\r\n  _dividePolygon(poly, lines) {\r\n    let divide = geometryEngine.cut(poly, lines);\r\n    return divide;\r\n  },\r\n\r\n  // Funciones para casuistica de division de lotes\r\n  _ApplyDivideLotes() {\r\n    selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n    selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n    selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n    selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n    selfCm._removeLayerGraphic(idGraphicLoteDeleteCm);\r\n\r\n    // Creamos grafico de lote fusionado\r\n    let graphicLayerLoteDivision = new GraphicsLayer({\r\n      id: idGraphicLoteCm\r\n    });\r\n\r\n    // Union all graphics of grpahicslayer\r\n    // let graphicLayerLineaDivision = selfCm.map.getLayer(idGraphicLineaDivision);\r\n    let arr = []\r\n    for (let i of graphicLayerLineaDivision.graphics) {\r\n      arr.push(i.geometry)\r\n    }\r\n    let unionGraphicLayerLineaDivision = selfCm._unionFeatures(arr)\r\n\r\n    let lineGeometry = new Polyline({\r\n      paths: unionGraphicLayerLineaDivision.paths,\r\n      spatialReference: { wkid: 102100 }\r\n    });\r\n    lineGeometry = esri.geometry.webMercatorToGeographic(lineGeometry)\r\n\r\n    let query = new Query();\r\n    // query.where = `(${_UBIGEO_FIELD} = '${paramsApp.ubigeo}') and (${_ID_LOTE_P_FIELD} in (49))`\r\n    query.where = selfCm.lotes\r\n    query.outFields = [\"*\"];\r\n    query.returnGeometry = true\r\n    let qTask = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl());\r\n    qTask.execute(query, function (results) {\r\n      let geomLote = results.features[0].geometry\r\n      let geomLoteDivided = selfCm._dividePolygon(geomLote, lineGeometry)\r\n      // console.log(geomLoteDivided)\r\n      // iterar sobre los graficos de la capa de division y agregar cada uno a graphicLayerLoteDivision\r\n      for (let i of geomLoteDivided) {\r\n        let lote = new Graphic(i, symbolFusionLote)\r\n\r\n        // agregar el grafico directo al mapa\r\n        graphicLayerLoteDivision.add(lote);\r\n      }\r\n      selfCm.map.addLayer(graphicLayerLoteDivision);\r\n      // console.log(graphicLayerLoteDivision._extent)\r\n      selfCm.map.setExtent(results.features[0].geometry.getExtent().expand(1.5), true);\r\n      \r\n\r\n    }).then(function () {\r\n      let query = new Query();\r\n      // query.where = `${_UBIGEO_FIELD} = '${paramsApp.ubigeo}' and ${_COD_MZN_FIELD} = '040' and ${_COD_SECT_FIELD} = '04'`\r\n      query.where = selfCm.arancel\r\n      // especificar los campos devueltos\r\n      query.outFields = [_UBIGEO_FIELD, _F_MZN_FIELD];\r\n      query.returnGeometry = true\r\n      // query with order by fields\r\n      query.orderByFields = [_F_MZN_FIELD];\r\n      let qTask = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrCfArancel).getUrl());\r\n      qTask.execute(query, function (results) {\r\n        // Creamos grafico de punto lote\r\n        let graphicLayerPuntoLote = new GraphicsLayer({\r\n          id: idGraphicPuntoLote\r\n        });\r\n        // creamos grafico de frente de lote\r\n        let graphicLayerFrenteLote = new GraphicsLayer({\r\n          id: idGraphicFrenteLote\r\n        });\r\n        let graphicLayerPredio = new GraphicsLayer({\r\n          id: idGraphicPredioCm\r\n        });\r\n        let graphicLoteDivision = selfCm.map.getLayer(idGraphicLoteCm)\r\n        let frentes = {}\r\n        for (let row of results.features){\r\n          for (let graphic of graphicLoteDivision.graphics){\r\n            let isItc = geometryEngine.intersects(row.geometry, graphic.geometry)\r\n            if (!isItc){\r\n              continue\r\n            }\r\n            // saber si un key esta dentro del objeot frentes\r\n            if (!frentes.hasOwnProperty(row.attributes[_F_MZN_FIELD])){\r\n              frentes[row.attributes[_F_MZN_FIELD]] = row.geometry;\r\n            }\r\n            else{\r\n              let unionFrentes = geometryEngine.union([frentes[row.attributes[_F_MZN_FIELD]], row.geometry])\r\n              frentes[row.attributes[_F_MZN_FIELD]] = unionFrentes;\r\n            }\r\n          }\r\n        }\r\n        for (let lote of graphicLoteDivision.graphics){\r\n          for (let idx in frentes){\r\n            let idItcFrentesByLotes = geometryEngine.intersects(lote.geometry, frentes[idx])\r\n            if (!idItcFrentesByLotes){\r\n              continue\r\n            }\r\n            let itcFrentesByLotes = geometryEngine.intersect(frentes[idx], lote.geometry)\r\n            // add frentes to graphicLayerFrenteLote\r\n            const symbolFrenteLote = new SimpleLineSymbol(\r\n              SimpleLineSymbol.STYLE_SOLID,\r\n              new Color(\r\n                [\r\n                  Math.floor(Math.random() * 255), \r\n                  Math.floor(Math.random() * 255), \r\n                  Math.floor(Math.random() * 255)]),\r\n              5\r\n            )\r\n            let frente = new Graphic(itcFrentesByLotes, symbolFrenteLote)\r\n            graphicLayerFrenteLote.add(frente);\r\n\r\n            // polilinea de frentes resultantes\r\n            let polyline = new Polyline({\r\n              paths: itcFrentesByLotes.paths,\r\n              spatialReference: {wkid: 4326}\r\n            });\r\n\r\n            let puntoLoteTurf = selfCm._findMidpoint(polyline)\r\n\r\n            // crear un punto en el mapa\r\n            let puntoLote = new Point({\r\n              x: puntoLoteTurf.geometry.coordinates[0],\r\n              y: puntoLoteTurf.geometry.coordinates[1],\r\n              spatialReference: {wkid: 4326}\r\n            })\r\n\r\n            // Agregar el punto p al mapa          \r\n            let puntoLoteGraphic = new Graphic(puntoLote, symbolPuntoLote)\r\n            graphicLayerPuntoLote.add(puntoLoteGraphic)\r\n\r\n            let puntoPredio = new Graphic(puntoLote, symbolPredio)\r\n            graphicLayerPredio.add(puntoPredio)\r\n\r\n          }\r\n        }\r\n        selfCm.map.addLayer(graphicLayerFrenteLote);\r\n        selfCm.map.addLayer(graphicLayerPuntoLote);\r\n        selfCm.map.addLayer(graphicLayerPredio);\r\n\r\n      })\r\n    }, function (err) {\r\n      console.log(err)\r\n    })   \r\n  },\r\n\r\n  _applyDeleteLote(){\r\n    selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n    selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n    selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n    selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n    selfCm._removeLayerGraphic(idGraphicLoteDeleteCm);\r\n\r\n    // Creamos grafico de lote fusionado\r\n    let graphicLayerLoteDelete = new GraphicsLayer({\r\n      id: idGraphicLoteDeleteCm\r\n    });\r\n    \r\n    let query = new Query();\r\n    // query.where = `(${_UBIGEO_FIELD} = '${paramsApp.ubigeo}') and (${_ID_LOTE_P_FIELD} in (3229))`\r\n    query.where = selfCm.lotes\r\n    query.outFields = [\"*\"];\r\n    query.returnGeometry = true\r\n    let qTask = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl());\r\n    qTask.execute(query, function (results) {\r\n      let geomLote = results.features[0].geometry\r\n      let lote = new Graphic(geomLote, symbolEliminarLote)\r\n      graphicLayerLoteDelete.add(lote);\r\n      selfCm.map.addLayer(graphicLayerLoteDelete);\r\n      selfCm.map.setExtent(geomLote.getExtent().expand(1.5), true);\r\n    })\r\n  },\r\n\r\n  // ----------------------------------------------------------------------------------------------\r\n  // GeoprocessingServices\r\n  // ----------------------------------------------------------------------------------------------\r\n  _executeReasignacionGpService(evt){\r\n    // dojo.byId(\"sendDataRsCm\").disabled = disabled;\r\n    // dojo.byId(\"btnCancelProcessGhId\").disabled = !disabled;\r\n    selfCm._showMessageConfirm().then(function (result) {\r\n      if (result){\r\n        let params = {\r\n          \"cod_pred\": selfCm.codigosPredios,\r\n          \"ubigeo\": paramsApp['ubigeo'],\r\n          \"geometry\": selfCm.xy,\r\n          \"user\": paramsApp['username']\r\n        }\r\n        console.log(params)\r\n    \r\n        // revisar si alguna propiedad tiene valor nulo o indefinido\r\n        for (let key in params){\r\n          if (params[key] == null || params[key] == undefined){\r\n            selfCm._showMessage(`Debe especificar el valor de ${key}`, type=\"error\");\r\n            return\r\n          }\r\n        }\r\n        selfCm._executeGPService(selfCm.config.reasignacionUrl, params)\r\n      }\r\n      else {\r\n        return\r\n      }\r\n    })\r\n  },\r\n\r\n  _executeGPService(url, params){\r\n    selfCm.loading.show();\r\n\r\n    selfCm.gp = new Geoprocessor(url);\r\n    selfCm.gp.submitJob(params, selfCm._completeCallback, selfCm._statusCallback);\r\n  },\r\n  _statusCallback(JobInfo) {\r\n    // console.log(JobInfo)\r\n    selfCm.jobId = JobInfo.jobId\r\n    // get last item of JobInfo.messages\r\n    console.log(JobInfo.jobStatus)\r\n    let textMessage = JobInfo.messages.map((message) => message.description)\r\n    selfCm.loading.textNode.innerHTML = textMessage.slice(-1)[0] ? textMessage.slice(-1)[0] : ''\r\n  },\r\n  _completeCallback(JobInfo) {\r\n    switch (JobInfo.jobStatus) {\r\n      case \"esriJobSubmitted\":\r\n        // El trabajo se ha enviado al servidor y está esperando en la cola.\r\n        console.log(\"El trabajo se ha enviado y está esperando en la cola.\");\r\n        break;\r\n      case \"esriJobExecuting\":\r\n        // El trabajo se está ejecutando actualmente en el servidor.\r\n        console.log(\"El trabajo se está ejecutando en el servidor.\");\r\n        break;\r\n      case \"esriJobSucceeded\":\r\n        // El trabajo se ha completado satisfactoriamente y los resultados están disponibles.\r\n        selfCm.gp.getResultData(JobInfo.jobId, \"response\", function (result) {\r\n          if (!result.value.status){\r\n            selfCm.loading.hide();\r\n            selfCm._showMessage(result.value.message, type=\"error\");\r\n            return\r\n          }\r\n          switch (selfCm.case) {\r\n            case \"1\":\r\n              selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n              dojo.query(\"#titleCaseCm\")[0].click();\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        })\r\n        break;\r\n      case \"esriJobFailed\":\r\n        // El trabajo ha fallado y no se han podido generar los resultados.\r\n        selfCm._showMessage(\"El proceso ha fallado y no se han podido generar los resultados.\", type=\"error\");\r\n        break;\r\n      case \"esriJobCancelled\":\r\n        // El trabajo ha sido cancelado por el usuario.\r\n        selfCm._showMessage(\"El proceso ha sido cancelado por el usuario.\");\r\n        break;\r\n      case \"esriJobTimedOut\":\r\n        // El trabajo ha expirado debido a un tiempo de espera.\r\n        selfCm._showMessage(\"El proceso ha superado el tiempo de espera necesario para su ejecución.\", type=\"error\");\r\n        break;\r\n      default:\r\n        // El estado del trabajo no se reconoce.\r\n        selfCm._showMessage(\"El estado del proceso no se reconoce.\");\r\n        break;\r\n    }\r\n    selfCm.loading.hide();\r\n  },\r\n  _cancelProcess(evt){\r\n    selfCm.gp.cancelJob(selfCm.jobId, function (info) {\r\n      console.log(info.jobStatus)\r\n    });\r\n  },\r\n   \r\n  onOpen() {\r\n    console.log('CartoMaintenanceWgt::onOpen');\r\n    let panel = this.getPanel();    \r\n    // panel.position.width = 400;\r\n    panel.position.height = 750;\r\n    panel.setPosition(panel.position);        \r\n    panel.panelManager.normalizePanel(panel);  \r\n\r\n    this._createToolbar();\r\n    // selfCm.map.addLayer(graphicLayerLineaDivision);\r\n    // this._activateSnapping();\r\n\r\n    dojo.query(\".backTrayClsCm\").on('click', this._openFormCase);\r\n    dojo.query(\".tablinksCm\").on('click', this._loadRequestsCm);\r\n    dojo.query(\"#btnObsCaseCm\").on('click', this._openFormObs);\r\n    dojo.query(\".backRequestsClsCm\").on('click', this._openFormObs);\r\n    dojo.query(\"#showInfoDocCm\").on('click', this._openSupportingDocument)\r\n    \r\n    dojo.query('#btnDrawMarkerFsCm').on('click', this._activateToolAcumulacion)\r\n\r\n    // Reasignacion\r\n    dojo.query(\"#btnAddMarkerCm\").on('click', this._locateMarker)\r\n    dojo.query(\"#btnDrawMarkerCm\").on('click', this._activateTool);\r\n\r\n    dojo.query(\"#btnFsCm\").on('click', this._ApplyFusionLotes)\r\n    dojo.query(\"#btnDrawLinesDvCm\").on('click', this._activateToolLinesDivision)\r\n    dojo.query(\"#btnApplyDvCm\").on('click', this._ApplyDivideLotes)\r\n    dojo.query(\"#btnEliminarLoteCm\").on('click', this._applyDeleteLote)\r\n    dojo.query(\"#titleCaseCm\").on('click', this._zoomHomeRequests)\r\n    dojo.query(\"#sendDataRsCm\").on('click', this._executeReasignacionGpService)\r\n    this._loadIniRequestsCm()\r\n  },\r\n  // onClose(){\r\n  //   console.log('CartoMaintenanceWgt::onClose');\r\n  // },\r\n  // onMinimize(){\r\n  //   console.log('CartoMaintenanceWgt::onMinimize');\r\n  // },\r\n  // onMaximize(){\r\n  //   console.log('CartoMaintenanceWgt::onMaximize');\r\n  // },\r\n  // onSignIn(credential){\r\n  //   console.log('CartoMaintenanceWgt::onSignIn', credential);\r\n  // },\r\n  // onSignOut(){\r\n  //   console.log('CartoMaintenanceWgt::onSignOut');\r\n  // }\r\n  // onPositionChange(){\r\n  //   console.log('CartoMaintenanceWgt::onPositionChange');\r\n  // },\r\n  // resize(){\r\n  //   console.log('CartoMaintenanceWgt::resize');\r\n  // }\r\n});\r\n"]}