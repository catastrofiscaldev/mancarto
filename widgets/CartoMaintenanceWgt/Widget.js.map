{"version":3,"sources":["../../../widgets/CartoMaintenanceWgt/Widget.js"],"names":["declare","BaseWidget","_WidgetsInTemplateMixin","Draw","Edit","Graphic","SimpleFillSymbol","SimpleMarkerSymbol","SimpleLineSymbol","Color","GraphicsLayer","Point","LayerInfos","lang","FeatureLayer","QueryTask","Query","WidgetManager","geometryEngine","Polyline","Polygon","webMercatorUtils","Geoprocessor","BusyIndicator","Message","turf","XLSX","Deferred","TextSymbol","Font","CaseInfo","StatisticDefinition","esriRequest","SubDivision","Acumulation","Independence","Deactivate","LandAssignment","LandProcess","UtilityCase","GeometryService","CustomException","requestToAttendState","requestsObservedState","requestsAttendState","idLyrCatastroFiscal","idLyrCfPredios","idLyrCfLotesPun","idLyrCfEje_vial","idLyrCfNumeracion","idLyrCfArancel","idLyrCfLotes","idLyrCfUnidadesurbanas","idLyrCfParques","idLyrCfManzana","idLyrCfManzanaUrb","idLyrCfSector","idLyrDistricts","iconByState","_UBIGEO_FIELD","_ID_LOTE_P_FIELD","_COD_MZN_FIELD","_F_MZN_FIELD","_COD_SECT_FIELD","_COD_PRE_FIELD","_COD_LOTE_FIELD","toolbarCm","params","URLSearchParams","window","location","search","paramsApp","keys","key","get","symbolPuntoLote","STYLE_SQUARE","STYLE_SOLID","symbolFusionLote","symbolEliminarLote","STYLE_DIAGONAL_CROSS","symbolLoteSelected","symbolDivisionLote","STYLE_DASH","symbolPredio","symbolPredioSelected","symbolPredioSelected2","symbolSnapPointCm","STYLE_CROSS","idGraphicPredioCm","idGraphicPredioByDivison","idGraphicPredioSelectedCm","idGraphicLoteCm","idGraphicLoteSelectedCm","idGraphicPuntoLote","idGraphicFrenteLote","idGraphicLineaDivision","idGraphicLoteDeleteCm","idGraphicLabelLineaDivision","idGraphicLabelCodLote","symbolByCase","graphicLayerLineaDivision","id","graphicLayerLabelLineaDivision","graphicLayerPredioByDivison","fontAwesome","document","createElement","src","head","appendChild","baseClass","codRequestsCm","currentTabActive","layersMap","queryUbigeo","case","caseDescription","lotesQuery","idlotes","arancel","codigosPredios","xy","idxLines","cpmPredioDivision","idPredioDivision","cpmAcumulacion","idAcumulacion","editToolbar","idButtonDrawActive","queryRequests","ubigeo","limit","offset","ordering","defaultOffset","currentCount","responseRequests","currentLotsRows","currentLandRows","currentPoinLotsRows","resolutionType","resolutionDocument","floor","urbanLotNumber","postCreate","inherited","arguments","_getAllLayers","geometryService","config","geometryServiceUrl","selfCm","_filterByDistrictCm","_startExtentByDistrictCm","esri","bundle","toolbars","draw","addPoint","addShape","resume","start","getInstance","map","itemInfo","then","hitch","layerInfosObj","_showMessage","message","type","title","nls","widgetTitle","titleLabel","_showMessagePromise","messagetext","deferred","buttons","label","onClick","resolve","hide","promise","_showMessageConfirm","mensaje","quesstionContinue","queryPredios","getLayerInfoById","getFilter","setFilter","query","where","qTask","getUrl","executeForExtent","results","setExtent","extent","homeWidget","getWidgetsByName","homeDijit","error","console","log","startup","busyIndicator","create","target","domNode","parentNode","backgroundOpacity","_callApiRestServices","baseUrl","url","URL","Object","forEach","searchParams","append","fetch","response","ok","Error","status","json","catch","err","_getRequestsTrayDataCm","responseData","state","data","filter","i","_loadIniRequestsCm","dojo","click","_parseDateStringtoFormat","dateString","date","Date","day","getDate","month","getMonth","year","getFullYear","_loadRequestTabActiveCm","evt","currentElementActive","idStatus","_loadRequestsCm","show","applicationListUrl","dataHtml","lands","lnd","join","idType","icon","tbody","innerHTML","tb","getElementsByTagName","length","tableRequestApCm","removeChild","on","_openFormCase","_openFormResult","removeClass","classList","add","_controlLabelPagination","_changeLimitPagination","parseInt","value","_nextPagePagination","_prevPagePagination","ini","disabled","end","_zoomToPredSelectedEvt","cup","currentTarget","dataset","_zoomToPredSelected","_handleFeatureSelected","feature","featureSelected","setSymbol","addLayer","centerAt","geometry","setTimeout","_removeLayerGraphic","LandCls","Land","prediosLayer","propertyLayer","mode","MODE_ONDEMAND","outFields","codCpu","estado","selectFeatures","SELECTION_NEW","emptyLandSelected","reject","_openSupportingDocument","emptyDocSupport","open","focus","executeQueryTask","Promise","execute","_getLandsOriginals","self","LotCls","Lot","queryLands","cpuOriginal","currentLandTabRows","ubigeoFieldName","returnGeometry","urlLands","features","errorGetLand","idLots","attributes","idLotP","_getLotsOriginals","queryLots","urlLots","emptyLotRequests","codMznValues","codSectValues","_getPointLotsOriginals","queryPointLots","urlPointLots","emptyPointLotRequests","_getLandsOriginalsTab","idSolicitud","urlOriginal","landsByApplicationUrl","count","_getOriginalData","_zoomExtentToLote","errorAcumulationLandsNumber","unionPredios","_unionFeatures","getExtent","expand","_zoomHomeRequests","_toggleBodyCaseInfo","closest","querySelector","toggle","_requestCaseInfo","urlResults","resultsByApplication","urlDocSupport","urlAffectedLands","affectedLands","all","_","responseResults","responseDocSupport","responseAffectedLands","rows","idx","contentCard","active","empyLandResultsRequests","support","rowsAffected","addClass","rowsResults","uniqueCodeLands","reasignarApCm","fusionApCm","divisionApCm","eliminacionApCm","independenceApCm","pointLots","landsSymbol","landsSymbolSelected","removeAllGraphics","renderTableLandAssignment","renderButtonProcess","_executeIndependenceLands","selectedPointLots","bind","highlightLand","reestartSymbolLand","resultCtnApCm","remove","obsCtnApCm","requestTrayApCm","casesCtnApCm","row","rowList","td","deactivate","disableSnapping","bodyTbLinesDvApCm","bodyTbPrediosDvApCm","bodyTbDatosLoteDvApCm","clear","_removeClassActiveButton","_openFormObs","textAreaObsApCm","imageDiv","imgUploadApCm","style","backgroundImage","_FormResult","id_solicitud","caseCm","urlPredioResults","nameCase","resultDeactivate","bodyTbResultsApCm","predio","index","_centerAtPredioResult","replace","_createToolbar","_addToMap","screenPoint","toScreen","snappingManager","getSnappingPoint","undefined","point_g","webMercatorToGeographic","graphic","symbol","graphicLayer","x","y","cpm","setInfoWindowOnClick","errorSnapingLocate","nameIdLine","_populateTableDrawLine","_addNameToLine","layerId","graphicsLayerIds","includes","removeLayer","getLayer","_activateTool","_activateSnappingByReasignar","activate","_activateToolAcumulacion","resolutiontype","resolutiondocument","urbanlotnumber","parentElement","split","_activateSnappingByAcumulacion","_activateToolLinesDivision","_activateSnappingByDivision","cflayer","snapManager","enableSnapping","snapPointSymbol","tolerance","layerInfos","layer","setLayerInfos","graphicLayerPuntoLote","graphicsLayerInfo","layers","LayerInfo","name","arr","union","_unionFeaturesAcumulation","topology","graphicLayerLoteFusion","rings","_extent","_ApplyAcumulationLotsRefactor","_getOriginalLots","geomLoteAcumulation","_getMaxCodLot","_ordenarPoligonosNorteSur","proprsLot","polygons","maxCodLote","bodyTbDatosLoteFsApCm","_addGraphicsPointLotsAndArancel","_populateTablePredio","bodyTbPrediosFsApCm","_getMidpoint","polyline","geodesicLength","midpoint","geodesicDensify","getPoint","_findMidpoint","lengthPolylineChunk","line","lineString","paths","options","units","along","_getLongestPolyline","longestPath","path","polylineChunk","spatialReference","wkid","_dividePolygon","poly","lines","divide","cut","item","simplePolygon","push","idLine","tr","cursor","_deleteRowLine","_zoonToLineDivision","_editaNameLineDivision","elem","graphics","graphicLabel","polylineGeom","polylineGeomUtm","midPoint","pointLabel","coordinates","font","STYLE_NORMAL","VARIANT_NORMAL","WEIGHT_BOLD","txtSym","setOffset","setAlign","ALIGN_END","setHaloColor","setHaloSize","text","innerText","refresh","bodyTable","drawFunction","_activateSnappingPrediosByDivision","graphiclayer","_activateToolPrediosByDivision","_changeValueCodLote","selectedValue","currentSelectId","lyr","graphicSelected","selects","select","graphicNotSelected","_changeLotUrb","lot_urb","_centerAtLabelCodLoteDivision","centerAndZoom","_editLoteUrbanoDivision","selectedOptions","_buildDataLoteTable","tableBody","predios","indexCell","className","textContent","num","codigoCell","optionDisabled","option","p","cod_lote","selected","loteUrbCell","loteUrbSelect","optionDisabledLotUrb","cloneNode","request","locationMarker","poligonos","coordenadasNorte","poligono","ymax","poligonosOrdenados","slice","sort","a","b","coordenadaNorteA","indexOf","coordenadaNorteB","graphicLayerLabelCodLoteDivision","dataLoteTable","labelPoints","point","_zfill","setColor","setSize","idGraphic","clase","len","Array","fill","polygonos","estadisticaDef","statisticType","onStatisticField","outStatisticFieldName","outStatistics","queryTask","result","resultado","outSR","f","requestOptions","content","handleAs","callbackParamName","usePost","_getPolylinesDrawn","unionGraphicLayerLineaDivision","lineGeometry","_divideLotsByLines","errorLotQuery","polygonGeometry","geomLoteDivided","errorDivideLot","graphicLayerLoteDivision","lote","orderByFields","graphicLayerFrenteLote","graphicLoteDivision","frentes","isItc","intersects","hasOwnProperty","unionFrentes","idItcFrentesByLotes","itcFrentesByLotes","intersect","symbolFrenteLote","Math","random","frente","puntoLoteTurf","puntoLote","puntoLoteGraphic","_ApplyDivideLotesRefactor","emptyLineSubdivision","reorderLayer","_executeAcumulacionGpService","emptyPreviewAccumulation","emptyNewLand","labelCodLotesLayer","_addWarningMessageExecute","labelCodLotesLayerGraphic","codRequests","codLot","lotUrb","coords","newPointLotsGraphics","newLandsGraphics","landUrl","pointLotUrl","lotUrl","arancelUrl","blockUrl","cadastralBlockUrl","lotGraphic","user","caseRequest","queryBlock","executeAcumulation","setVisibility","_removeWarningMessageExecute","successProcess","ErrorEqualUrbanLotWithinBlock","_executeSubdivisionGpService","layerLote","emptyPreviewSubdivision","pred","emptyLotCodeSubdivision","emptyUrbanLotSubdivision","emptyGraphicLandSubdivision","checkLotsWithinLands","emptyLandResultSubdivision","lotUrbArray","duplicateLotUrban","checkDuplicateLotUrbanResults","duplicateLotUrbanResult","executeSubdivision","_executeInactivarGpService","codRequest","cpu","executeDeactivate","finally","buzyElm","imgElm","loadingText","position","topMessage","parseFloat","top","leftImg","left","width","transform","background","zIndex","warningExecute","checkPointLotsSelected","emptyWaySelectedIndependence","newLands","matrixLand","executeIndependence","_executeGPService","urlStatusRequest","gp","submitJob","_completeCallback","_statusCallback","JobInfo","jobId","textMessage","messages","description","jobStatus","getResultData","_sendDataToPlatform","_exportTableToExcel","table","headerRow","querySelectorAll","headers","headerCols","h","cols","j","wb","utils","book_new","ws","json_to_sheet","sheetName","book_append_sheet","writeFile","_dataURItoBlob","dataURI","byteString","atob","mimeString","buffer","ArrayBuffer","dataView","Uint8Array","charCodeAt","Blob","_sendObservation","file","files","messageObservation","trim","emptyObservation","emptyImageSupport","reader","FileReader","FormData","onloadend","observationUrl","method","body","successRequestObservation","errorProcessRequestObservation","readAsDataURL","_uploadImagenObs","backgroundSize","backgroundRepeat","backgroundPosition","_searchRequestByCodPred","keyCode","_sortedByDate","columnOrder","val","onOpen","info","isModified"],"mappings":"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","file":"Widget.js","sourcesContent":["import declare from 'dojo/_base/declare';\r\nimport BaseWidget from 'jimu/BaseWidget';\r\nimport _WidgetsInTemplateMixin from 'dijit/_WidgetsInTemplateMixin';\r\nimport Draw from \"esri/toolbars/draw\";\r\nimport Edit from \"esri/toolbars/edit\";\r\nimport Graphic from \"esri/graphic\";\r\nimport SimpleFillSymbol from \"esri/symbols/SimpleFillSymbol\";\r\nimport SimpleMarkerSymbol from \"esri/symbols/SimpleMarkerSymbol\";\r\nimport SimpleLineSymbol from \"esri/symbols/SimpleLineSymbol\";\r\nimport Color from 'dojo/_base/Color';\r\nimport GraphicsLayer from \"esri/layers/GraphicsLayer\"\r\nimport Point from \"esri/geometry/Point\"\r\nimport LayerInfos from \"jimu/LayerInfos/LayerInfos\";\r\nimport lang from \"dojo/_base/lang\";\r\nimport FeatureLayer from \"esri/layers/FeatureLayer\";\r\nimport QueryTask from \"esri/tasks/QueryTask\";\r\nimport Query from \"esri/tasks/query\";\r\nimport WidgetManager from \"jimu/WidgetManager\"\r\nimport geometryEngine from \"esri/geometry/geometryEngine\";\r\nimport Polyline from \"esri/geometry/Polyline\";\r\nimport Polygon from \"esri/geometry/Polygon\";\r\nimport webMercatorUtils from \"esri/geometry/webMercatorUtils\";\r\nimport Geoprocessor from \"esri/tasks/Geoprocessor\";\r\nimport BusyIndicator from 'esri/dijit/util/busyIndicator';\r\nimport Message from \"jimu/dijit/Message\";\r\nimport turf from \"https://unpkg.com/@turf/turf@6/turf.min.js\"\r\nimport XLSX from \"https://unpkg.com/xlsx@0.17.2/dist/xlsx.full.min.js\"\r\nimport Deferred from \"dojo/Deferred\";\r\nimport TextSymbol from \"esri/symbols/TextSymbol\";\r\nimport Font from \"esri/symbols/Font\";\r\nimport CaseInfo from './CaseInfo';\r\nimport StatisticDefinition from \"esri/tasks/StatisticDefinition\"\r\nimport esriRequest from \"esri/request\"\r\nimport SubDivision from './case/Subdivision';\r\nimport Acumulation from './case/Acumulation';\r\nimport Independence from './case/Independence';\r\nimport Deactivate from './case/Deactivate';\r\nimport LandAssignment from './components/LandAssignment';\r\nimport LandProcess from './components/LandProcess';\r\n// import LandMatrix from './components/LandMatrix';\r\nimport UtilityCase from './case/UtilityCase';\r\nimport GeometryService from \"esri/tasks/GeometryService\";\r\nimport CustomException from './case/CustomException';\r\n\r\n\r\n\r\nconst requestToAttendState = \"por_atender\"\r\nconst requestsObservedState = \"observado\"\r\nconst requestsAttendState = \"atendido\"\r\n\r\n\r\n// Layers ids\r\nconst idLyrCatastroFiscal = \"CARTO_FISCAL_6806\"\r\nconst idLyrCfPredios = \"CARTO_FISCAL_6806_0\"\r\nconst idLyrCfLotesPun = \"CARTO_FISCAL_6806_1\"\r\nconst idLyrCfEje_vial = \"CARTO_FISCAL_6806_2\"\r\nconst idLyrCfNumeracion = \"CARTO_FISCAL_6806_3\"\r\nconst idLyrCfArancel = \"CARTO_FISCAL_6806_4\"\r\nconst idLyrCfLotes = \"CARTO_FISCAL_6806_5\"\r\nconst idLyrCfUnidadesurbanas = \"CARTO_FISCAL_6806_6\"\r\nconst idLyrCfParques = \"CARTO_FISCAL_6806_7\"\r\nconst idLyrCfManzana = \"CARTO_FISCAL_6806_8\"\r\nconst idLyrCfManzanaUrb = \"CARTO_FISCAL_6806_9\"\r\nconst idLyrCfSector = \"CARTO_FISCAL_6806_9\"\r\n// const idLyrActpuntoimg = \"ACTUALIZACION_DE_PUNTO_IMG_1890\"\r\nconst idLyrDistricts = \"limites_nacional_1821_2\"\r\n\r\nconst iconByState = {\r\n  \"por_atender\": { 'icon': 'fas fa-pencil-alt', 'id': 'editRequestsCm', 'desc': \"Por atender\", 'idStatus': 1 },\r\n  \"observado\": { 'icon': 'fas fa-pause', 'id': 'obsRequestsCm', 'desc': \"Observado\", 'idStatus': 3 },\r\n  \"atendido\": { 'icon': 'fas fa-check', 'id': 'goodRequestsCm', 'desc': \"Atendido\", 'idStatus': 2 },\r\n}\r\n\r\n// Fields \r\nconst _UBIGEO_FIELD = \"UBIGEO\"\r\nconst _ID_LOTE_P_FIELD = \"ID_LOTE_P\"\r\nconst _COD_MZN_FIELD = \"COD_MZN\"\r\nconst _F_MZN_FIELD = \"F_MZN\"\r\nconst _COD_SECT_FIELD = \"COD_SECT\"\r\nconst _COD_PRE_FIELD = \"COD_PRE\"\r\nconst _COD_LOTE_FIELD = \"COD_LOTE\"\r\n\r\n\r\nlet toolbarCm\r\n\r\nconst params = new URLSearchParams(window.location.search)\r\nconst paramsApp = {}\r\n\r\nfor (let key of params.keys()) {\r\n  paramsApp[key] = params.get(key)\r\n}\r\n\r\n// Styles\r\nconst symbolPuntoLote = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_SQUARE,\r\n  20,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0]), 2),\r\n  new Color([0, 92, 230, 1]\r\n  )\r\n)\r\n\r\nconst symbolFusionLote = new SimpleFillSymbol(\r\n  SimpleFillSymbol.STYLE_SOLID,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0]),\r\n    2\r\n  ),\r\n  new Color([255, 255, 0, 0.25])\r\n)\r\n\r\nconst symbolEliminarLote = new SimpleFillSymbol(\r\n  SimpleFillSymbol.STYLE_DIAGONAL_CROSS,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([100, 100, 100]),\r\n    2\r\n  ),\r\n  new Color([229, 229, 229, 0.9])\r\n)\r\n\r\nconst symbolLoteSelected = new SimpleFillSymbol(\r\n  SimpleFillSymbol.STYLE_SOLID,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0, 0.75]),\r\n    4\r\n  ),\r\n  new Color([0, 255, 0, 0])\r\n)\r\n\r\nconst symbolDivisionLote = new SimpleLineSymbol(\r\n  SimpleLineSymbol.STYLE_DASH,\r\n  new Color([255, 0, 0]),\r\n  2\r\n)\r\n\r\nconst symbolPredio = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_SQUARE,\r\n  20,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0]), 2),\r\n  new Color([235, 69, 95, 1]\r\n  )\r\n)\r\n\r\nconst symbolPredioSelected = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_SQUARE, 20,\r\n  new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0]), 4),\r\n  new Color([0, 255, 0, 0])\r\n);\r\n\r\nconst symbolPredioSelected2 = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_SQUARE,\r\n  30,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([0, 183, 205]), 2),\r\n  new Color([0, 255, 255]\r\n  )\r\n);\r\n\r\nconst symbolSnapPointCm = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_CROSS,\r\n  20,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0]),\r\n    2\r\n  ),\r\n  new Color([0, 255, 0, 0.25])\r\n)\r\n\r\n\r\n// Identificadores de graficos\r\nconst idGraphicPredioCm = \"graphicPredioCm2\"\r\nconst idGraphicPredioByDivison = \"graphicPredioByDivison\"\r\n// const idGraphicLandsByIndependence = \"graphicLandsByIndependence\"\r\nconst idGraphicPredioSelectedCm = \"graphicPredioSelected\"\r\nconst idGraphicLoteCm = \"graphicLoteCm\"\r\nconst idGraphicLoteSelectedCm = \"graphicLoteSelectedCm\"\r\nconst idGraphicPuntoLote = \"graphicPuntoLote\"\r\nconst idGraphicFrenteLote = \"graphicFrenteLote\"\r\nconst idGraphicLineaDivision = \"graphicLineaDivision\"\r\nconst idGraphicLoteDeleteCm = \"graphicLoteDeleteCm\"\r\nconst idGraphicLabelLineaDivision = \"graphicLabelLineaDivision\"\r\nconst idGraphicLabelCodLote = \"graphicLabelCodLoteDivision\"\r\n\r\n// symbol by case\r\nconst symbolByCase = {\r\n  \"1\": { \"symbol\": symbolPredio },\r\n  \"2\": { \"symbol\": symbolPredio },\r\n  \"3\": { \"symbol\": symbolPredio },\r\n}\r\n\r\n// graphicsLayer main\r\nconst graphicLayerLineaDivision = new GraphicsLayer({\r\n  id: idGraphicLineaDivision,\r\n});\r\n\r\nconst graphicLayerLabelLineaDivision = new GraphicsLayer({\r\n  id: idGraphicLabelLineaDivision,\r\n});\r\n\r\n// let graphicLayerLabelCodLoteDivision = new GraphicsLayer({\r\n//   id: idGraphicLabelCodLote,\r\n// });\r\n\r\nconst graphicLayerPredioByDivison = new GraphicsLayer({\r\n  id: idGraphicPredioByDivison,\r\n});\r\n\r\n// const graphicLayerLandsByIndependence = new GraphicsLayer({\r\n//   id: idGraphicLandsByIndependence,\r\n// });\r\n\r\nconst fontAwesome = document.createElement('script');\r\nfontAwesome.src = 'https://use.fontawesome.com/releases/v5.3.1/js/all.js';\r\ndocument.head.appendChild(fontAwesome);\r\n\r\n// To create a widget, you need to derive from BaseWidget.\r\nexport default declare([BaseWidget], {\r\n\r\n  // Custom widget code goes here\r\n\r\n  baseClass: 'carto-maintenance-wgt',\r\n  codRequestsCm: null,\r\n  currentTabActive: requestToAttendState,\r\n  layersMap: [],\r\n  queryUbigeo: paramsApp['ubigeo'] ? `${_UBIGEO_FIELD} = '${paramsApp['ubigeo']}'` : \"1=1\",\r\n  case: 0,\r\n  caseDescription: '',\r\n  lotesQuery: null,\r\n  idlotes: null,\r\n  arancel: null,\r\n  codigosPredios: null,\r\n  xy: [],\r\n  idxLines: 0,\r\n  cpmPredioDivision: '',\r\n  idPredioDivision: '',\r\n  cpmAcumulacion: '',\r\n  idAcumulacion: '',\r\n  editToolbar: null,\r\n  idButtonDrawActive: '',\r\n  queryRequests: {\r\n    ubigeo: paramsApp['ubigeo'],\r\n    limit: 25,\r\n    offset: 0,\r\n    ordering: \"date\"\r\n  },\r\n  // defaultLimit: 25,\r\n  defaultOffset: 0,\r\n  currentCount: 0,\r\n  responseRequests: null,\r\n  currentLotsRows: null,\r\n  currentLandRows: null,\r\n  currentPoinLotsRows: null,\r\n\r\n  resolutionType: null,\r\n  resolutionDocument: null,\r\n  floor: null,\r\n  urbanLotNumber: null,\r\n\r\n  // ErrorEqualUrbanLotWithinBlock: new CustomException.ErrorEqualUrbanLotWithinBlock(),\r\n  // currentLotsRowsAsPolygons: null,\r\n\r\n  // add additional properties here\r\n\r\n  // methods to communication with app container:\r\n  postCreate() {\r\n    this.inherited(arguments);\r\n    this._getAllLayers();\r\n    this.geometryService = new GeometryService(this.config.geometryServiceUrl);\r\n    selfCm = this;\r\n    this._filterByDistrictCm();\r\n    this._startExtentByDistrictCm();\r\n    esri.bundle.toolbars.draw.addPoint = esri.bundle.toolbars.draw.addPoint + \"<br/>Pulsar <strong>CTRL</strong> para activar la alineación\";\r\n    esri.bundle.toolbars.draw.addShape = esri.bundle.toolbars.draw.addShape + \"<br/>Pulsar <strong>CTRL</strong> para activar la alineación\";\r\n    esri.bundle.toolbars.draw.resume = esri.bundle.toolbars.draw.resume + \"<br/>Pulsar <strong>CTRL</strong> para activar la alineación\";\r\n    esri.bundle.toolbars.draw.start = esri.bundle.toolbars.draw.start + \"<br/>Pulsar <strong>CTRL</strong> para activar la alineación\";\r\n  },\r\n  _getAllLayers() {\r\n    LayerInfos.getInstance(this.map, this.map.itemInfo).then(lang.hitch(this, function (layerInfosObj) {\r\n      this.layersMap = layerInfosObj;\r\n    }));\r\n  },\r\n\r\n  _showMessage(message, type = 'message') {\r\n    const title = `${this.nls.widgetTitle}: ${type}`\r\n    switch (type) {\r\n      case 'error':\r\n        new Message({\r\n          type: type,\r\n          titleLabel: title,\r\n          message: message,\r\n        });\r\n        break;\r\n      default:\r\n        new Message({\r\n          type: type,\r\n          titleLabel: title,\r\n          message: message,\r\n        });\r\n        break;\r\n    }\r\n\r\n  },\r\n\r\n  _showMessagePromise(messagetext) {\r\n    const deferred = new Deferred();\r\n    const message = new Message({\r\n      titleLabel: `${this.nls.widgetTitle}`,\r\n      message: messagetext,\r\n      buttons: [{\r\n        label: \"Ok\",\r\n        onClick: function () {\r\n          deferred.resolve(true);\r\n          message.hide();\r\n        }\r\n      }]\r\n    });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _showMessageConfirm() {\r\n    const deferred = new Deferred();\r\n    const mensaje = new Message({\r\n      titleLabel: `${this.nls.widgetTitle}: question`,\r\n      message: selfCm.nls.quesstionContinue,\r\n      type: \"question\",\r\n      buttons: [{\r\n        label: \"Sí\",\r\n        onClick: function () {\r\n          deferred.resolve(true);\r\n          mensaje.hide();\r\n        }\r\n      }, {\r\n        label: \"No\",\r\n        onClick: function () {\r\n          deferred.resolve(false);\r\n          mensaje.hide();\r\n        }\r\n      }]\r\n    });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _filterByDistrictCm() {\r\n    let queryPredios = selfCm.layersMap.getLayerInfoById(idLyrCfPredios).getFilter()\r\n    queryPredios = queryPredios ? queryPredios + \" AND \" + selfCm.queryUbigeo : selfCm.queryUbigeo\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfPredios).setFilter(queryPredios)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfLotesPun).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfEje_vial).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfNumeracion).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfArancel).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfLotes).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfUnidadesurbanas).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfParques).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfManzana).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfSector).setFilter(selfCm.queryUbigeo)\r\n    // selfCm.layersMap.getLayerInfoById(idLyrActpuntoimg).setFilter(selfCm.queryUbigeo)\r\n  },\r\n\r\n  _startExtentByDistrictCm() {\r\n    const query = new Query()\r\n    query.where = selfCm.queryUbigeo\r\n\r\n    const qTask = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrDistricts).getUrl())\r\n\r\n    qTask.executeForExtent(query, function (results) {\r\n      selfCm.map.setExtent(results.extent).then(function () {\r\n        // get the next scale value from the current scale\r\n        const homeWidget = WidgetManager.getInstance().getWidgetsByName(\"HomeButton\");\r\n        homeWidget[0].homeDijit.extent = selfCm.map.extent;\r\n      })\r\n    }, function (error) {\r\n      console.log(error)\r\n    })\r\n  },\r\n\r\n  startup() {\r\n    this.inherited(arguments);\r\n\r\n    this.busyIndicator = BusyIndicator.create({\r\n      target: this.domNode.parentNode.parentNode,\r\n      backgroundOpacity: 0\r\n    });\r\n  },\r\n\r\n  _callApiRestServices(baseUrl, params) {\r\n    const url = new URL(baseUrl);\r\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\r\n\r\n    return fetch(url)\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          selfCm.busyIndicator.hide();\r\n          throw new Error(\"HTTP error \" + response.status);\r\n        }\r\n        return response.json();\r\n      })\r\n      .catch(function (err) {\r\n        selfCm.busyIndicator.hide();\r\n        console.log(\"An error occurred while fetching the data.\");\r\n      });\r\n  },\r\n\r\n  _getRequestsTrayDataCm(responseData, state) {\r\n    // Reemplazar todo el metodo para capturar datos de servicio\r\n    const data = responseData.filter((i) => i.status == state);\r\n    return data\r\n  },\r\n\r\n  _loadIniRequestsCm() {\r\n    dojo.query(`#${selfCm.currentTabActive}`)[0].click()\r\n  },\r\n\r\n  _parseDateStringtoFormat(dateString) {\r\n    const date = new Date(dateString)\r\n    const day = date.getDate()\r\n    const month = date.getMonth() + 1\r\n    const year = date.getFullYear()\r\n    return `${day}/${month}/${year}`\r\n  },\r\n\r\n  _loadRequestTabActiveCm(evt) {\r\n    // selfCm.busyIndicator.show();\r\n    selfCm.currentTabActive = evt.target.id;\r\n    selfCm.currentElementActive = evt.target;\r\n    selfCm.queryRequests['id_status'] = iconByState[evt.target.id].idStatus;\r\n    selfCm.queryRequests['offset'] = selfCm.defaultOffset;\r\n    selfCm._loadRequestsCm()\r\n    // .then(selfCm._controlLabelPagination());\r\n  },\r\n\r\n  _loadRequestsCm() {\r\n    selfCm.busyIndicator.show();\r\n    selfCm._callApiRestServices(selfCm.config.applicationListUrl, selfCm.queryRequests).then(response => {\r\n      selfCm.currentCount = response['count'];\r\n\r\n      response = response['results']\r\n      const dataHtml = response.map((i) => `<tr>\r\n                                        <td>${i.id}</td>\r\n                                        <td>${i.type}</td>\r\n                                        <td>${i.lands.map(lnd => lnd['cup']).join(', ')}</td>\r\n                                        <td>${selfCm._parseDateStringtoFormat(i.date)}</td>\r\n                                        <td>\r\n                                          <button id=\"${iconByState[selfCm.currentTabActive].id}\" value=\"${i.idType}\" class=\"stateRequestClsCm\">\r\n                                            <i class=\"${iconByState[selfCm.currentTabActive].icon}\"></i>\r\n                                          </button>\r\n                                        </td>\r\n                                      </tr>`\r\n      )\r\n      const tbody = dojo.create('tbody', { innerHTML: dataHtml.join('') });\r\n      const tb = dojo.query(\".tableRequestClsCm\")[0]\r\n      if (tb.getElementsByTagName(\"tbody\").length > 0) {\r\n        selfCm.tableRequestApCm.removeChild(tb.getElementsByTagName(\"tbody\")[0])\r\n      }\r\n      selfCm.tableRequestApCm.appendChild(tbody);\r\n      if (selfCm.currentTabActive == requestToAttendState) {\r\n        dojo.query(\".stateRequestClsCm\").on('click', selfCm._openFormCase);\r\n      }\r\n      if (selfCm.currentTabActive == requestsAttendState) {\r\n        dojo.query(\".stateRequestClsCm\").on('click', selfCm._openFormResult);\r\n      }\r\n\r\n      dojo.query(\".tablinksCm\").removeClass(\"active\");\r\n      selfCm.currentElementActive.classList.add(\"active\");\r\n      selfCm._controlLabelPagination();\r\n      selfCm.busyIndicator.hide();\r\n    })\r\n  },\r\n\r\n  _changeLimitPagination(evt) {\r\n    selfCm.queryRequests['limit'] = parseInt(evt.target.value);\r\n    selfCm.queryRequests['offset'] = selfCm.defaultOffset;\r\n    selfCm._loadRequestsCm();\r\n  },\r\n\r\n  _nextPagePagination(evt) {\r\n    selfCm.queryRequests['offset'] = selfCm.queryRequests['offset'] + selfCm.queryRequests['limit'];\r\n    selfCm._loadRequestsCm();\r\n  },\r\n\r\n  _prevPagePagination(evt) {\r\n    selfCm.queryRequests['offset'] = selfCm.queryRequests['offset'] - selfCm.queryRequests['limit'];\r\n    // if (selfCm.queryRequests['offset'] < 0) {\r\n    //   selfCm.queryRequests['offset'] = 0; // Ensure offset does not go negative\r\n    // }\r\n    selfCm._loadRequestsCm();\r\n  },\r\n\r\n  _controlLabelPagination() {\r\n    const ini = selfCm.queryRequests['offset'] + 1\r\n    dojo.query(\".buttonPaginationPrevClsCm\")[0].disabled = ini == 1 ? true : false\r\n    const end = selfCm.queryRequests['offset'] + selfCm.queryRequests['limit']\r\n    dojo.query(\".buttonPaginationNextClsCm\")[0].disabled = end >= selfCm.currentCount ? true : false\r\n    dojo.query(\".labelPaginationCtnCm\")[0].innerHTML = `${ini} - ${end} de ${selfCm.currentCount}`\r\n  },\r\n\r\n  _zoomToPredSelectedEvt(evt) {\r\n    // @cpu\r\n    const cup = evt.currentTarget.dataset.cup\r\n    return selfCm._zoomToPredSelected(cup)\r\n  },\r\n\r\n  _handleFeatureSelected(feature) {\r\n    const featureSelected = new GraphicsLayer({\r\n      id: idGraphicPredioSelectedCm\r\n    });\r\n    feature[0].setSymbol(symbolPredioSelected);\r\n    featureSelected.add(feature[0]);\r\n    selfCm.map.addLayer(featureSelected);\r\n    selfCm.map.centerAt(feature[0].geometry);\r\n\r\n    setTimeout(function () {\r\n      // clearInterval(interval);\r\n      selfCm._removeLayerGraphic(idGraphicPredioSelectedCm);\r\n    }, 1000);\r\n  },\r\n\r\n  _zoomToPredSelected(cup) {\r\n    selfCm.busyIndicator.show();\r\n    const deferred = new Deferred();\r\n    const LandCls = new UtilityCase.Land();\r\n    selfCm._removeLayerGraphic(idGraphicPredioSelectedCm);\r\n    const prediosLayer = selfCm.layersMap.getLayerInfoById(idLyrCfPredios);\r\n    const propertyLayer = new FeatureLayer(prediosLayer.getUrl(), {\r\n      mode: FeatureLayer.MODE_ONDEMAND,\r\n      outFields: [\"*\"]\r\n    });\r\n    // crear una consulta para seleccionar la fila deseada\r\n    const query = new Query();\r\n    // @cpu\r\n    query.where = `${_UBIGEO_FIELD} = '${paramsApp['ubigeo']}' and ${LandCls.codCpu} = '${cup}' and ${LandCls.estado} = 1`;\r\n\r\n    // seleccionar la fila\r\n    propertyLayer.selectFeatures(query, FeatureLayer.SELECTION_NEW)\r\n      .then(\r\n        results => {\r\n          if (results.length == 0) {\r\n            throw new Error(selfCm.nls.emptyLandSelected)\r\n          }\r\n          // if (selfCm.case == 2) {\r\n          //   if (results.length < 2) {\r\n          //     throw new Error(selfCm.nls.errorAcumulationLandsNumber);\r\n          //   }\r\n          // }\r\n          selfCm._handleFeatureSelected(results)\r\n          selfCm.busyIndicator.hide();\r\n          return deferred.resolve(results)\r\n        }\r\n      )\r\n      .catch(error => {\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(error.message, type = \"error\")\r\n        deferred.reject(error)\r\n      })\r\n    return deferred.promise;\r\n  },\r\n\r\n  _openSupportingDocument(evt) {\r\n    // check if value is empty\r\n    if (!evt.currentTarget.value) {\r\n      selfCm._showMessage(selfCm.nls.emptyDocSupport, type = \"error\")\r\n      return\r\n    }\r\n    window.open(evt.currentTarget.value, '_blank').focus();\r\n  },\r\n\r\n  executeQueryTask(url, query, type = 'query') {\r\n    return new Promise((resolve, reject) => {\r\n      const qTask = new QueryTask(url);\r\n      switch (type) {\r\n        case 'query':\r\n          qTask.execute(query, resolve, reject);\r\n          break;\r\n        case 'queryForExtent':\r\n          qTask.executeForExtent(query, resolve, reject);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  },\r\n\r\n  _getLandsOriginals() {\r\n    const self = this;\r\n    const deferred = new Deferred();\r\n    const LandCls = new UtilityCase.Land();\r\n    const LotCls = new UtilityCase.Lot();\r\n    const queryLands = new Query();\r\n    // @cpu\r\n    const cpuOriginal = self.currentLandTabRows.map(i => i.cup);\r\n    queryLands.where = `${UtilityCase.ubigeoFieldName} = '${paramsApp['ubigeo']}' and ${LandCls.codCpu} in ('${cpuOriginal.join(\"', '\")}') and ${LandCls.estado} = 1`;\r\n    queryLands.returnGeometry = true;\r\n    queryLands.outFields = [\"*\"];\r\n    const urlLands = self.layersMap.getLayerInfoById(idLyrCfPredios).getUrl();\r\n    self.executeQueryTask(urlLands, queryLands)\r\n      .then(results => {\r\n        if (results.features.length == 0) {\r\n          throw new Error(self.nls.errorGetLand);\r\n        }\r\n        self.currentLandRows = results.features;\r\n        const idLots = self.currentLandRows.map((i) => i.attributes[LotCls.idLotP]);\r\n        deferred.resolve(idLots);\r\n      })\r\n      .catch(error => {\r\n        deferred.reject(error);\r\n      });\r\n    return deferred.promise;\r\n  },\r\n  _getLotsOriginals(idLots) {\r\n    const self = this;\r\n    const LotCls = new UtilityCase.Lot()\r\n    const deferred = new Deferred();\r\n    const queryLots = new Query();\r\n    queryLots.where = `${LotCls.idLotP} in (${idLots.join(\",\")}) and (${UtilityCase.ubigeoFieldName} = ${paramsApp['ubigeo']})`;\r\n    self.lotesQuery = queryLots.where;\r\n    queryLots.returnGeometry = true;\r\n    queryLots.outFields = [\"*\"];\r\n    const urlLots = self.layersMap.getLayerInfoById(idLyrCfLotes).getUrl();\r\n    self.executeQueryTask(urlLots, queryLots)\r\n      .then(results => {\r\n        if (results.features.length == 0) {\r\n          throw new Error(self.nls.emptyLotRequests);\r\n        }\r\n        self.currentLotsRows = results.features;\r\n        const codMznValues = self.currentLotsRows.map((i) => i.attributes[_COD_MZN_FIELD]).join(\",\")\r\n        const codSectValues = self.currentLotsRows.map((i) => i.attributes[_COD_SECT_FIELD]).join(\",\")\r\n        self.arancel = `(${UtilityCase.ubigeoFieldName} = ${paramsApp['ubigeo']}) and ${_COD_MZN_FIELD} in (${codMznValues}) and ${_COD_SECT_FIELD} in (${codSectValues})`;\r\n        deferred.resolve(idLots);\r\n      })\r\n      .catch(error => {\r\n        deferred.reject(error);\r\n      });\r\n    return deferred.promise;\r\n  },\r\n  _getPointLotsOriginals(idLots) {\r\n    const self = this;\r\n    const LotCls = new UtilityCase.Lot()\r\n    const deferred = new Deferred();\r\n    const queryPointLots = new Query();\r\n    queryPointLots.where = `${LotCls.idLotP} in (${idLots.join(\",\")}) and (${UtilityCase.ubigeoFieldName} = ${paramsApp['ubigeo']})`;\r\n    queryPointLots.returnGeometry = true;\r\n    queryPointLots.outFields = [\"*\"];\r\n    const urlPointLots = self.layersMap.getLayerInfoById(idLyrCfLotesPun).getUrl();\r\n    self.executeQueryTask(urlPointLots, queryPointLots)\r\n      .then(results => {\r\n        if (results.features.length == 0) {\r\n          throw new Error(self.nls.emptyPointLotRequests);\r\n        }\r\n        self.currentPoinLotsRows = results.features;\r\n        deferred.resolve(idLots);\r\n      })\r\n      .catch(error => {\r\n        deferred.reject(error);\r\n      });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _getLandsOriginalsTab(idSolicitud) {\r\n    const self = this;\r\n    const deferred = new Deferred();\r\n    const urlOriginal = `${self.config.landsByApplicationUrl}/${idSolicitud}`;\r\n    fetch(urlOriginal)\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error(\"HTTP error \" + response.status);\r\n        }\r\n        return response.json()\r\n      })\r\n      .then(response => {\r\n        if (response.count == 0) {\r\n          throw new Error(self.nls.errorGetLand);\r\n        }\r\n        self.currentLandTabRows = response.results;\r\n        deferred.resolve(self.currentLandTabRows);\r\n      })\r\n      .catch(error => {\r\n        deferred.reject(error);\r\n      });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _getOriginalData(idSolicitud) {\r\n    return this._getLandsOriginalsTab(idSolicitud)\r\n      .then(landsTab => this._getLandsOriginals())\r\n      .then(idLots => this._getPointLotsOriginals(idLots))\r\n      .then(idLots => this._getLotsOriginals(idLots))\r\n      .then((idLots) => {\r\n        return idLots;\r\n      })\r\n      .catch(error => {\r\n        return error;\r\n        // \r\n        // throw error;\r\n        // selfCm._showMessage(error.message, type = \"error\");\r\n        // throw error;\r\n      });\r\n  },\r\n\r\n  _zoomExtentToLote() {\r\n    if (!this.currentLotsRows) {\r\n      return\r\n    }\r\n    if (this.case == 2) {\r\n      if (this.currentLotsRows.length < 2) {\r\n        throw new Error(this.nls.errorAcumulationLandsNumber);\r\n      }\r\n    }\r\n    const unionPredios = this._unionFeatures(this.currentLotsRows.map((i) => i.geometry))\r\n    this.map.setExtent(unionPredios.getExtent().expand(2))\r\n  },\r\n\r\n  _zoomHomeRequests() {\r\n    return selfCm._zoomExtentToLote()\r\n  },\r\n\r\n  _toggleBodyCaseInfo(evt) {\r\n    this.closest('.caseInfoClsCm').querySelector('.bodyPredInfoClsCm').classList.toggle('active')\r\n  },\r\n\r\n  _requestCaseInfo() {\r\n    selfCm.busyIndicator.show();\r\n    const urlResults = `${selfCm.config.resultsByApplication}/${selfCm.codRequestsCm}`\r\n    const urlDocSupport = `${selfCm.config.applicationListUrl}/${selfCm.codRequestsCm}`\r\n    const urlAffectedLands = `${selfCm.config.affectedLands}/${selfCm.codRequestsCm}`\r\n\r\n    Promise.all([\r\n      selfCm._getOriginalData(selfCm.codRequestsCm),\r\n      fetch(urlResults).then(response => {\r\n        if (!response.ok) {\r\n          selfCm.busyIndicator.hide();\r\n          throw new Error(\"HTTP error \" + response.status);\r\n        }\r\n        return response.json()\r\n      }),\r\n      fetch(urlDocSupport).then(response => response.json()),\r\n      fetch(urlAffectedLands).then(response => {\r\n        if (!response.ok) {\r\n          selfCm.busyIndicator.hide();\r\n          throw new Error(\"HTTP error \" + response.status);\r\n        }\r\n        return response.json()\r\n      })\r\n    ]).then(function ([_, responseResults, responseDocSupport, responseAffectedLands]) {\r\n\r\n      if (_.message) {\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(_.message, type = \"error\");\r\n        // return\r\n      }\r\n\r\n      selfCm.currentLandTabRows = selfCm.currentLandTabRows || [];\r\n      const rows = selfCm.currentLandTabRows.map((i, idx) => {\r\n        return CaseInfo.contentCard(i, 'original', i.cup, active = selfCm.case != 2 ? true : false);\r\n      });\r\n\r\n      if (selfCm.case != 4) {\r\n        if (responseResults.count == 0) {\r\n          selfCm._showMessage(`${selfCm.nls.empyLandResultsRequests} ${selfCm.codRequestsCm}`, type = \"error\");\r\n          selfCm.busyIndicator.hide();\r\n          // return\r\n        }\r\n      }\r\n\r\n\r\n\r\n      dojo.query(\"#showInfoDocCm\")[0].value = responseDocSupport.support\r\n      dojo.query('.CtnOriginalClsCm')[0].innerHTML = rows.join('');\r\n\r\n      if (selfCm.case == 2 || selfCm.case == 3) {\r\n        if (responseAffectedLands.results.length > 0) {\r\n          const rowsAffected = responseAffectedLands.results.map((i, idx) => {\r\n            return CaseInfo.contentCard(i, 'original', i.cup, active = false);\r\n          });\r\n          dojo.query('.CtnAffectedClsCm')[0].innerHTML = rowsAffected.join('');\r\n          dojo.query('.lblAffectedClsCm').addClass('active');\r\n        }\r\n      } else {\r\n        dojo.query('.CtnAffectedClsCm')[0].innerHTML = '';\r\n        dojo.query('.lblAffectedClsCm').removeClass('active');\r\n      }\r\n\r\n      dojo.query(\".zoomPredInfoClsCm\").on('click', selfCm._zoomToPredSelectedEvt);\r\n\r\n      if (selfCm.case != 4) {\r\n        const rowsResults = responseResults.results.map((i, idx) => {\r\n          return CaseInfo.contentCard(i, 'result', idx + 1, false, true);\r\n        });\r\n        dojo.query('.CtnResultClsCm')[0].innerHTML = rowsResults.join('');\r\n        dojo.query('.lblResultsClsCm').addClass('active');\r\n      } else {\r\n        dojo.query('.CtnResultClsCm')[0].innerHTML = '';\r\n        dojo.query('.lblResultsClsCm').removeClass('active');\r\n      }\r\n\r\n      dojo.query(\".colapsePredInfoClsCm\").on('click', selfCm._toggleBodyCaseInfo);\r\n\r\n      // @cpu\r\n      selfCm.uniqueCodeLands = selfCm.currentLandTabRows.map((i) => i.cup).join(',');\r\n      selfCm.responseRequests = responseResults['results']\r\n\r\n    })\r\n      .then(function () {\r\n        switch (selfCm.case) {\r\n          case \"1\":\r\n            selfCm.reasignarApCm.classList.toggle('active')\r\n            break;\r\n          case \"2\":\r\n            selfCm.fusionApCm.classList.toggle('active')\r\n            break\r\n          case \"3\":\r\n            selfCm.divisionApCm.classList.toggle('active')\r\n            break\r\n          case \"4\":\r\n            selfCm.eliminacionApCm.classList.toggle('active')\r\n            break\r\n          case \"5\":\r\n            selfCm.independenceApCm.classList.toggle('active')\r\n            selfCm.independenceApCm.innerHTML = ''\r\n            LandAssignment.title = \"Independización\";\r\n            LandAssignment.lands = selfCm.responseRequests;\r\n            LandAssignment.pointLots = selfCm.currentPoinLotsRows;\r\n            LandAssignment.map = selfCm.map;\r\n            LandAssignment.landsSymbol = symbolPredio;\r\n            LandAssignment.landsSymbolSelected = symbolPredioSelected2;\r\n            LandAssignment.removeAllGraphics();\r\n            selfCm.independenceApCm.appendChild(LandAssignment.renderTableLandAssignment());\r\n\r\n            LandProcess.title = \"Enviar datos\";\r\n            LandProcess.type = \"independence\";\r\n            selfCm.independenceApCm.appendChild(LandProcess.renderButtonProcess());\r\n            dojo.query(`#${LandProcess.id}`).on('click', selfCm._executeIndependenceLands);\r\n            dojo.query(\".pointLotSelectionCm\").on('change', LandAssignment.selectedPointLots.bind(LandAssignment));\r\n            dojo.query('.tableClsCm tr').on('mouseover', LandAssignment.highlightLand.bind(LandAssignment));\r\n            dojo.query('.tableClsCm tr').on('mouseout', LandAssignment.reestartSymbolLand.bind(LandAssignment));\r\n            break\r\n          default:\r\n            break;\r\n        }\r\n\r\n        selfCm.resultCtnApCm.classList.remove('active')\r\n        selfCm.obsCtnApCm.classList.remove('active')\r\n        selfCm.requestTrayApCm.classList.remove('active')\r\n        selfCm.casesCtnApCm.classList.toggle('active')\r\n        selfCm._zoomExtentToLote()\r\n        selfCm.busyIndicator.hide();\r\n      })\r\n      .catch(function (error) {\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(error.message, type = \"error\");\r\n      })\r\n\r\n  },\r\n\r\n  _openFormCase(evt) {\r\n    if (evt.currentTarget.id == \"editRequestsCm\") {\r\n      const row = dojo.query(evt.currentTarget).closest(\"tr\")[0];\r\n      const rowList = dojo.query(\"td\", row).map(td => td.innerHTML);\r\n      selfCm.codRequestsCm = rowList[0]\r\n      selfCm.caseDescription = rowList[1]\r\n      dojo.query('#titleCaseCm')[0].innerHTML = `<span>${selfCm.caseDescription} <span class=\"fa fa-search\" style=\"font-size: 15px\"></span></span>`\r\n\r\n      selfCm.case = evt.currentTarget.value\r\n      selfCm._requestCaseInfo();\r\n\r\n    } else if (evt.currentTarget.id == 'backTrayCm' || evt.currentTarget.id == 'backTrayResultCm') {\r\n      // desactivar el toolbarCm de edicion si esta activado\r\n      toolbarCm.deactivate();\r\n\r\n      // deshabilitar snapping\r\n      selfCm.map.disableSnapping()\r\n      selfCm.bodyTbLinesDvApCm.innerHTML = ''\r\n      selfCm.bodyTbPrediosDvApCm.innerHTML = ''\r\n\r\n      dojo.query(\".caseClsCm\").removeClass(\"active\")\r\n      // remove all graphics layer if exist\r\n      selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n      selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n      selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n      selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n      selfCm._removeLayerGraphic(idGraphicPredioSelectedCm);\r\n      selfCm._removeLayerGraphic(idGraphicLabelCodLote)\r\n      selfCm.bodyTbDatosLoteDvApCm.innerHTML = ''\r\n\r\n      graphicLayerLineaDivision.clear();\r\n      graphicLayerLabelLineaDivision.clear();\r\n      graphicLayerPredioByDivison.clear();\r\n\r\n      selfCm.lotesQuery = null\r\n      selfCm.arancel = null\r\n      selfCm.xy = []\r\n      selfCm.currentLandTabRows = null;\r\n\r\n      selfCm.casesCtnApCm.classList.remove('active')\r\n      selfCm.resultCtnApCm.classList.remove('active')\r\n      selfCm.obsCtnApCm.classList.remove('active')\r\n      selfCm.requestTrayApCm.classList.toggle('active')\r\n      selfCm._removeClassActiveButton()\r\n      dojo.query('.CtnAffectedClsCm')[0].innerHTML = '';\r\n      dojo.query('.lblAffectedClsCm').removeClass('active');\r\n\r\n      if (selfCm.currentTabActive == requestToAttendState) {\r\n        dojo.query(\".tablinksCm.active\")[0].click();\r\n        // selfCm._loadRequestTabActiveCm()\r\n        // selfCm.queryRequests['offset'] = selfCm.defaultOffset;\r\n      }\r\n      selfCm._loadRequestsCm();\r\n      // selfCm._loadIniRequestsCm();\r\n    }\r\n\r\n  },\r\n  _openFormObs() {\r\n    selfCm.textAreaObsApCm.value = ''\r\n    const imageDiv = dojo.query(\".thumbnailClsCm\")[0];\r\n    selfCm.imgUploadApCm.value = ''\r\n    imageDiv.style.backgroundImage = \"none\";\r\n    imageDiv.innerHTML = \"<span class=alignVCenter><i class='far fa-image'></i></span>\";\r\n    dojo.query('#headeRequestsCtnCm')[0].innerHTML = `<span class=\"alignVCenter\">Solicitud: ${selfCm.codRequestsCm}</span>`\r\n    selfCm.casesCtnApCm.classList.toggle(\"active\");\r\n    selfCm.obsCtnApCm.classList.toggle('active')\r\n  },\r\n\r\n  _FormResult(id_solicitud, caseCm) {\r\n    selfCm.busyIndicator.show();\r\n    const urlPredioResults = `${selfCm.config.resultsByApplication}/${id_solicitud}`\r\n    if (caseCm == Deactivate.nameCase) {\r\n      selfCm.busyIndicator.hide();\r\n      selfCm._showMessage(selfCm.nls.resultDeactivate)\r\n      return\r\n    }\r\n    selfCm._callApiRestServices(urlPredioResults, {}).then(function (response) {\r\n      try {\r\n        selfCm.bodyTbResultsApCm.innerHTML = ''\r\n        dojo.query(\"#titleCaseResult\")[0].innerHTML = `<span>Solicitud ${id_solicitud}: ${caseCm}</span>`\r\n\r\n        const rows = response.results.map((predio, index) => {\r\n          return `<tr><td class=\"center-aligned\">${index + 1}</td>\r\n                  <td>${predio['cup']}</td>\r\n                  <td>${predio['address']}</td>\r\n                  <td class=\"center-aligned\">\r\n                    <span id=\"${predio['cup']}_search\" class=\"zoomPredioResultClsCm\"><i class=\"fas fa-search\"></i></span>\r\n                  </td></tr>`\r\n        })\r\n        selfCm.bodyTbResultsApCm.innerHTML = rows.join('')\r\n        dojo.query('.zoomPredioResultClsCm').on('click', selfCm._centerAtPredioResult)\r\n        selfCm.casesCtnApCm.classList.remove(\"active\");\r\n        selfCm.obsCtnApCm.classList.remove('active')\r\n        selfCm.requestTrayApCm.classList.remove('active')\r\n        selfCm.resultCtnApCm.classList.toggle('active')\r\n        selfCm.busyIndicator.hide()\r\n      }\r\n      catch (error) {\r\n        console.log(error)\r\n        selfCm.busyIndicator.hide()\r\n      }\r\n    })\r\n  },\r\n\r\n  _centerAtPredioResult(evt) {\r\n    const cup = evt.currentTarget.id.replace('_search', '')\r\n    selfCm._zoomToPredSelected(cup)\r\n  },\r\n\r\n  _openFormResult(evt) {\r\n    const row = dojo.query(evt.currentTarget).closest(\"tr\")[0];\r\n    const rowList = dojo.query(\"td\", row).map(td => td.innerHTML);\r\n    selfCm.codRequestsCm = rowList[0]\r\n    selfCm.caseDescription = rowList[1]\r\n    selfCm._FormResult(selfCm.codRequestsCm, selfCm.caseDescription)\r\n  },\r\n\r\n  // Toolbar function\r\n  _createToolbar() {\r\n    toolbarCm = new Draw(selfCm.map);\r\n    toolbarCm.on(\"draw-end\", selfCm._addToMap);\r\n  },\r\n\r\n  _addToMap(evt) {\r\n    if (evt.geometry.type === \"point\") {\r\n      const screenPoint = selfCm.map.toScreen(evt.geometry)\r\n      const deferred = selfCm.map.snappingManager.getSnappingPoint(screenPoint);\r\n      deferred.then(function (value) {\r\n        if (value !== undefined) {\r\n          const point_g = webMercatorUtils.webMercatorToGeographic(new Point(value));\r\n          const graphic = new Graphic(point_g, symbolByCase[selfCm.case].symbol);\r\n          // si es el caso reasignacion de predio\r\n          if (selfCm.case == 1 || selfCm.case == 2) {\r\n\r\n            const graphicLayer = new GraphicsLayer({\r\n              id: idGraphicPredioCm,\r\n            });\r\n            graphicLayer.add(graphic);\r\n            selfCm.map.addLayer(graphicLayer);\r\n            selfCm.xy = [point_g.x, point_g.y]\r\n          }\r\n          else if (selfCm.case == 3) {\r\n            graphic['attributes'] = {\r\n              cpm: selfCm.cpmPredioDivision,\r\n              id: selfCm.idPredioDivision,\r\n              resolutionType: selfCm.resolutionType,\r\n              resolutionDocument: selfCm.resolutionDocument,\r\n              floor: selfCm.floor,\r\n              urbanLotNumber: selfCm.urbanLotNumber,\r\n            }\r\n            graphicLayerPredioByDivison.add(graphic);\r\n          }\r\n          selfCm.map.setInfoWindowOnClick(true);\r\n          toolbarCm.deactivate();\r\n          selfCm._removeClassActiveButton()\r\n        } else {\r\n          selfCm._showMessage(selfCm.nls.errorSnapingLocate, type = \"error\")\r\n          // alert(selfCm.nls.errorSnapingLocate);\r\n        }\r\n      }, function (error) {\r\n        console.log(error);\r\n      });\r\n    } else if (evt.geometry.type === \"polyline\") {\r\n      selfCm.idxLines = selfCm.idxLines + 1\r\n      const nameIdLine = `Polyline_${selfCm.idxLines}`\r\n      const graphic = new Graphic(evt.geometry, symbolDivisionLote, { id: nameIdLine });\r\n      graphicLayerLineaDivision.add(graphic);\r\n      selfCm._populateTableDrawLine(nameIdLine)\r\n      selfCm._addNameToLine(nameIdLine, evt.geometry)\r\n      selfCm.map.addLayer(graphicLayerLineaDivision);\r\n      selfCm.map.setInfoWindowOnClick(true);\r\n      toolbarCm.deactivate();\r\n      selfCm._removeClassActiveButton()\r\n      // desactiva el boton luego de dibujar\r\n    }\r\n    // check exist activeButton class in button\r\n\r\n  },\r\n\r\n  _removeClassActiveButton() {\r\n    if (dojo.query(`#${selfCm.idButtonDrawActive}`).length > 0) {\r\n      dojo.query(`#${selfCm.idButtonDrawActive}`)[0].classList.remove('activeButton')\r\n    }\r\n  },\r\n\r\n  _removeLayerGraphic(layerId) {\r\n    if (selfCm.map.graphicsLayerIds.includes(layerId)) {\r\n      selfCm.map.removeLayer(selfCm.map.getLayer(layerId));\r\n    }\r\n  },\r\n\r\n  _activateTool(evt) {\r\n    selfCm._removeClassActiveButton()\r\n    selfCm.idButtonDrawActive = evt.currentTarget.id\r\n    dojo.query(`#${selfCm.idButtonDrawActive}`)[0].classList.add('activeButton')\r\n    selfCm._activateSnappingByReasignar();\r\n    selfCm.map.setInfoWindowOnClick(false);\r\n    selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n    toolbarCm.activate(Draw[\"POINT\"]);\r\n  },\r\n\r\n  _activateToolAcumulacion(evt) {\r\n    selfCm._removeClassActiveButton()\r\n    selfCm.idButtonDrawActive = evt.currentTarget.id;\r\n    selfCm.cpmAcumulacion = evt.currentTarget.dataset.cpm === 'null' ? null : evt.currentTarget.dataset.cpm;\r\n    selfCm.resolutionType = evt.currentTarget.dataset.resolutiontype === 'null' ? null : evt.currentTarget.dataset.resolutiontype;\r\n    selfCm.resolutionDocument = evt.currentTarget.dataset.resolutiondocument === 'null' ? null : evt.currentTarget.dataset.resolutiondocument;\r\n    selfCm.floor = evt.currentTarget.dataset.floor === 'null' ? null : evt.currentTarget.dataset.floor;\r\n    selfCm.urbanLotNumber = evt.currentTarget.dataset.urbanlotnumber === 'null' ? null : evt.currentTarget.dataset.urbanlotnumber;\r\n    selfCm.idAcumulacion = evt.currentTarget.parentElement.parentElement.id.split('_')[1];\r\n    dojo.query(`#${selfCm.idButtonDrawActive}`)[0].classList.add('activeButton')\r\n    selfCm.map.setInfoWindowOnClick(false);\r\n    selfCm._activateSnappingByAcumulacion();\r\n    selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n    toolbarCm.activate(Draw[\"POINT\"]);\r\n  },\r\n\r\n  _activateToolLinesDivision(evt) {\r\n    selfCm._removeClassActiveButton()\r\n    selfCm.idButtonDrawActive = evt.currentTarget.id\r\n    dojo.query(`#${selfCm.idButtonDrawActive}`)[0].classList.add('activeButton')\r\n    selfCm.map.setInfoWindowOnClick(false);\r\n    selfCm._activateSnappingByDivision();\r\n    selfCm._removeLayerGraphic(idGraphicLoteCm)\r\n    selfCm._removeLayerGraphic(idGraphicPuntoLote)\r\n    selfCm._removeLayerGraphic(idGraphicFrenteLote)\r\n    selfCm._removeLayerGraphic(idGraphicLabelCodLote)\r\n    selfCm.bodyTbDatosLoteDvApCm.innerHTML = ''\r\n    // selfCm.bodyTbPrediosDvApCm.innerHTML = ''\r\n    graphicLayerPredioByDivison.clear()\r\n    toolbarCm.activate(Draw[\"POLYLINE\"]);\r\n  },\r\n\r\n  _activateSnappingByReasignar() {\r\n    const cflayer = selfCm.layersMap.getLayerInfoById(idLyrCfLotesPun)\r\n    const propertyLayer = new FeatureLayer(cflayer.getUrl(), {\r\n      mode: FeatureLayer.MODE_ONDEMAND,\r\n      outFields: [\"*\"]\r\n    });\r\n    const snapManager = selfCm.map.enableSnapping({\r\n      // alwaysSnap: true,\r\n      // snapKey: keys.CTRL,\r\n      snapPointSymbol: symbolSnapPointCm,\r\n      tolerance: 5,\r\n    });\r\n    // get layerinfo by id of layer to snap\r\n    const layerInfos = [{\r\n      layer: propertyLayer\r\n    }];\r\n\r\n    snapManager.setLayerInfos(layerInfos);\r\n  },\r\n\r\n  _activateSnappingByAcumulacion() {\r\n    const graphicLayerPuntoLote = selfCm.map.getLayer(idGraphicPuntoLote)\r\n    const graphicsLayerInfo = new esri.layers.LayerInfo({\r\n      id: graphicLayerPuntoLote.id, // El id del `GraphicsLayer`\r\n      name: graphicLayerPuntoLote.name, // El nombre del `GraphicsLayer`\r\n      layer: graphicLayerPuntoLote // El `GraphicsLayer` a utilizar\r\n    });\r\n\r\n    // Agregar el `LayerInfo` al mapa y habilitar el snapping\r\n    selfCm.map.enableSnapping({\r\n      layerInfos: [graphicsLayerInfo], // Agregar el `LayerInfo` al mapa\r\n      // alwaysSnap: true,\r\n      snapPointSymbol: symbolSnapPointCm,\r\n      tolerance: 5,\r\n    });\r\n  },\r\n\r\n  _activateSnappingByDivision() {\r\n    const graphicsLayerInfo = new esri.layers.LayerInfo({\r\n      id: graphicLayerLineaDivision.id, // El id del `GraphicsLayer`\r\n      name: graphicLayerLineaDivision.name, // El nombre del `GraphicsLayer`\r\n      layer: graphicLayerLineaDivision // El `GraphicsLayer` a utilizar\r\n    });\r\n\r\n    const cflayer = selfCm.layersMap.getLayerInfoById(idLyrCfLotes)\r\n    const propertyLayer = new FeatureLayer(cflayer.getUrl(), {\r\n      mode: FeatureLayer.MODE_ONDEMAND,\r\n      outFields: [\"*\"]\r\n    });\r\n\r\n    const layerInfos = [{\r\n      layer: propertyLayer\r\n    }, graphicsLayerInfo];\r\n\r\n    // Agregar el `LayerInfo` al mapa y habilitar el snapping\r\n    selfCm.map.enableSnapping({\r\n      layerInfos: layerInfos, // Agregar el `LayerInfo` al mapa\r\n      // alwaysSnap: true,\r\n      snapPointSymbol: symbolSnapPointCm,\r\n      tolerance: 5,\r\n    });\r\n  },\r\n\r\n  // crear una funcion que permita dos poligonos aceptando dos poligonos json como parametros\r\n  // la funcion debe retornar un poligono json\r\n  _unionFeatures(arr) {\r\n    const union = geometryEngine.union(arr);\r\n    return union;\r\n  },\r\n\r\n  _unionFeaturesAcumulation(topology = false) {\r\n    // Creamos grafico de lote fusionado\r\n    const graphicLayerLoteFusion = new GraphicsLayer({\r\n      id: idGraphicLoteCm\r\n    });\r\n\r\n    const arr = selfCm.currentLotsRows.map((i) => i.geometry);\r\n\r\n    const response = selfCm._unionFeatures(arr);\r\n    if (topology) {\r\n      if (response.rings.length > 1) {\r\n        throw new Error(\"La acumulación no es posible (los predios no son contiguos)\")\r\n      }\r\n    }\r\n    const graphic = new Graphic(response, symbolFusionLote);\r\n\r\n    graphicLayerLoteFusion.add(graphic);\r\n    selfCm.map.addLayer(graphicLayerLoteFusion);\r\n    selfCm.map.setExtent(graphic._extent.expand(1.5), true);\r\n    return [response];\r\n  },\r\n\r\n  _ApplyAcumulationLotsRefactor() {\r\n    selfCm.busyIndicator.show();\r\n    selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n    selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n    selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n    selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n    selfCm._removeLayerGraphic(idGraphicLoteDeleteCm);\r\n    selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n\r\n    if (!selfCm.lotesQuery) {\r\n      selfCm._showMessage(selfCm.nls.errorGetLand, 'warning');\r\n      selfCm.busyIndicator.hide();\r\n      return\r\n    }\r\n\r\n    return selfCm._getOriginalLots(selfCm.lotesQuery)\r\n      .then(originLots => {\r\n        const geomLoteAcumulation = selfCm._unionFeaturesAcumulation(topology = true);\r\n        return selfCm._getMaxCodLot(geomLoteAcumulation);\r\n      })\r\n      .then(proprsLot => {\r\n        selfCm._ordenarPoligonosNorteSur(\r\n          proprsLot.polygons,\r\n          parseInt(proprsLot.maxCodLote),\r\n          selfCm.bodyTbDatosLoteFsApCm\r\n        );\r\n        selfCm.map.setExtent(proprsLot.polygons[0].getExtent().expand(1.5), true);\r\n        return selfCm._addGraphicsPointLotsAndArancel();\r\n      })\r\n      .then(() => {\r\n        selfCm._populateTablePredio(selfCm.bodyTbPrediosFsApCm, selfCm._activateToolAcumulacion)\r\n        selfCm.busyIndicator.hide();\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(error.message, type = \"error\")\r\n      })\r\n  },\r\n\r\n  _getMidpoint(polyline) {\r\n    const length = geometryEngine.geodesicLength(polyline, \"meters\");\r\n    const midpoint = geometryEngine.geodesicDensify(polyline, length / 2, \"meters\").getPoint(0, 0);\r\n    return midpoint;\r\n  },\r\n\r\n  _findMidpoint(polyline) {\r\n    const lengthPolylineChunk = geometryEngine.geodesicLength(polyline, \"meters\")\r\n    const line = turf.lineString(polyline.paths[0]);\r\n    const options = { units: 'meters' };\r\n    const along = turf.along(line, lengthPolylineChunk / 2, options);\r\n    return along\r\n  },\r\n\r\n  // funcion que recibe una polilinea con muchas partes y retorna la parte mas larga como una polilinea\r\n  _getLongestPolyline(polyline) {\r\n    const paths = polyline.paths\r\n    let longestPath = 0\r\n    let response = null;\r\n    for (let path of paths) {\r\n      let polylineChunk = new Polyline({\r\n        paths: [path],\r\n        spatialReference: { wkid: 4326 }\r\n      });\r\n      let lengthPolylineChunk = geometryEngine.geodesicLength(polylineChunk, \"meters\")\r\n      if (lengthPolylineChunk > longestPath) {\r\n        longestPath = lengthPolylineChunk\r\n        response = polylineChunk\r\n      }\r\n    }\r\n    return response\r\n  },\r\n\r\n  // --------------------------------------------------------------\r\n  // SUBDIVISION DE LOTES\r\n  // function that allows dividing a polygon from cutting lines, the parameters will be a polygon and several lines in json format\r\n  // the function must return a polygon json\r\n  // --------------------------------------------------------------\r\n  _dividePolygon(poly, lines) {\r\n    const divide = geometryEngine.cut(poly, lines);\r\n    const response = [];\r\n    for (let item of divide) {\r\n      item.rings.map((i) => {\r\n        const simplePolygon = new Polygon({\r\n          rings: [i],\r\n          spatialReference: item.spatialReference\r\n        });\r\n        response.push(simplePolygon);\r\n      });\r\n    };\r\n    return response;\r\n  },\r\n\r\n  _populateTableDrawLine(idLine) {\r\n    let row = `<td class=\"center-aligned\">${selfCm.idxLines}</td>\r\n              <td contenteditable=\"true\" id=\"${idLine}_name\">${idLine}</td>\r\n              <td class=\"center-aligned\">\r\n                <span id=\"${idLine}_ext\"><i class=\"fas fa-search\"></i></span>\r\n              </td>\r\n              <td class=\"center-aligned\">\r\n                <span id=\"${idLine}_del\" style=\"color: #FF5722;\"><i class=\"far fa-trash-alt\"></i></span>\r\n              </td>`\r\n    let tr = dojo.create('tr');\r\n    tr.id = idLine;\r\n    tr.innerHTML = row;\r\n    tr.style.cursor = \"pointer\";\r\n    selfCm.bodyTbLinesDvApCm.appendChild(tr)\r\n    dojo.query(`#${idLine}_del`).on('click', selfCm._deleteRowLine);\r\n    dojo.query(`#${idLine}_ext`).on('click', selfCm._zoonToLineDivision);\r\n    dojo.query(`#${idLine}_name`).on('input', selfCm._editaNameLineDivision);\r\n  },\r\n\r\n  _deleteRowLine(evt) {\r\n    let id = evt.currentTarget.id.replace('_del', '');\r\n    let elem = dojo.query(`#${id}`);\r\n    let graphic = graphicLayerLineaDivision.graphics.filter(item => item.attributes.id == id);\r\n    graphicLayerLineaDivision.remove(graphic[0])\r\n    let graphicLabel = graphicLayerLabelLineaDivision.graphics.filter(item => item.attributes.id == id);\r\n    graphicLayerLabelLineaDivision.remove(graphicLabel[0])\r\n    selfCm._removeLayerGraphic(idGraphicLoteCm)\r\n    selfCm._removeLayerGraphic(idGraphicPuntoLote)\r\n    selfCm._removeLayerGraphic(idGraphicFrenteLote)\r\n    selfCm._removeLayerGraphic(idGraphicLabelCodLote)\r\n    graphicLayerPredioByDivison.clear()\r\n    elem[0].parentNode.removeChild(elem[0]);\r\n  },\r\n\r\n  _addNameToLine(name, polylineGeom) {\r\n    let polylineGeomUtm = webMercatorUtils.webMercatorToGeographic(polylineGeom)\r\n    let midPoint = selfCm._findMidpoint(polylineGeomUtm)\r\n\r\n    let pointLabel = new Point({\r\n      x: midPoint.geometry.coordinates[0],\r\n      y: midPoint.geometry.coordinates[1],\r\n      spatialReference: { wkid: 4326 }\r\n    })\r\n\r\n    let font = new Font(\"15px\", Font.STYLE_NORMAL, Font.VARIANT_NORMAL, Font.WEIGHT_BOLD, \"Arial\");\r\n    let txtSym = new TextSymbol(name, font, new Color([250, 0, 0, 0.9]));\r\n    txtSym.setOffset(15, 15).setAlign(TextSymbol.ALIGN_END)\r\n    txtSym.setHaloColor(new Color([255, 255, 255]));\r\n    txtSym.setHaloSize(1.5);\r\n    let graphicLabel = new Graphic(pointLabel, txtSym, { id: name });\r\n\r\n    // graphicLayer.add(graphic);\r\n    graphicLayerLabelLineaDivision.add(graphicLabel);\r\n  },\r\n\r\n  _zoonToLineDivision(evt) {\r\n    let id = evt.currentTarget.id.replace('_ext', '');\r\n    let graphic = graphicLayerLabelLineaDivision.graphics.filter(item => item.attributes.id == id);\r\n    selfCm.map.setExtent(graphic[0]._extent, true);\r\n  },\r\n\r\n  _editaNameLineDivision(evt) {\r\n    let id = evt.currentTarget.id.replace('_name', '');\r\n    let graphic = graphicLayerLabelLineaDivision.graphics.filter(item => item.attributes.id == id)\r\n    graphic[0].symbol.text = evt.currentTarget.innerText;\r\n    graphicLayerLabelLineaDivision.refresh()\r\n  },\r\n\r\n  _populateTablePredio(bodyTable, drawFunction) {\r\n    bodyTable.innerHTML = ''\r\n    selfCm.responseRequests.forEach((predio, idx) => {\r\n      const tr = dojo.create('tr');\r\n      tr.id = `predio_${predio['id']}`;\r\n      const row = `<td class=\"center-aligned\">${idx + 1}</td>\r\n                  <td>${predio['address']}</td>\r\n                  <td class=\"center-aligned\">\r\n                   <span \r\n                    id=\"${tr.id}_draw\"\r\n                    data-cpm=${predio['cpm']} \r\n                    data-resolutionType=${predio['resolutionType']} \r\n                    data-resolutionDocument=${predio['resolutionDocument']}\r\n                    data-floor=${predio['floor']}\r\n                    data-urbanLotNumber=${predio['urbanLotNumber']}\r\n                   >\r\n                      <i class=\"fas fa-map-marker-alt\"></i>\r\n                   </span>\r\n                  </td>`\r\n      tr.innerHTML = row;\r\n      tr.style.cursor = \"pointer\";\r\n      bodyTable.appendChild(tr)\r\n      dojo.query(`#${tr.id}_draw`).on('click', drawFunction)\r\n    });\r\n  },\r\n\r\n  _activateSnappingPrediosByDivision(graphiclayer) {\r\n    let graphicsLayerInfo = new esri.layers.LayerInfo({\r\n      id: graphiclayer.id, // El id del `GraphicsLayer`\r\n      name: graphiclayer.name, // El nombre del `GraphicsLayer`\r\n      layer: graphiclayer // El `GraphicsLayer` a utilizar\r\n    });\r\n\r\n    // Agregar el `LayerInfo` al mapa y habilitar el snapping\r\n    selfCm.map.enableSnapping({\r\n      layerInfos: [graphicsLayerInfo], // Agregar el `LayerInfo` al mapa\r\n      // alwaysSnap: true,\r\n      snapPointSymbol: symbolSnapPointCm,\r\n      tolerance: 5,\r\n    });\r\n  },\r\n\r\n  _activateToolPrediosByDivision(evt) {\r\n    selfCm._removeClassActiveButton()\r\n    selfCm.idButtonDrawActive = evt.currentTarget.id\r\n    dojo.query(`#${selfCm.idButtonDrawActive}`)[0].classList.add('activeButton')\r\n    selfCm.cpmPredioDivision = evt.currentTarget.dataset.cpm === 'null' ? null : evt.currentTarget.dataset.cpm;\r\n    selfCm.idPredioDivision = evt.currentTarget.parentElement.parentElement.id;\r\n    selfCm.resolutionType = evt.currentTarget.dataset.resolutiontype === 'null' ? null : evt.currentTarget.dataset.resolutiontype;\r\n    selfCm.resolutionDocument = evt.currentTarget.dataset.resolutiondocument === 'null' ? null : evt.currentTarget.dataset.resolutiondocument;\r\n    selfCm.floor = evt.currentTarget.dataset.floor === 'null' ? null : evt.currentTarget.dataset.floor;\r\n    selfCm.urbanLotNumber = evt.currentTarget.dataset.urbanlotnumber === 'null' ? null : evt.currentTarget.dataset.urbanlotnumber;\r\n    const graphic = graphicLayerPredioByDivison.graphics.filter(item => item.attributes.id === selfCm.idPredioDivision);\r\n    graphicLayerPredioByDivison.remove(graphic[0])\r\n    selfCm.map.setInfoWindowOnClick(false);\r\n    const graphicLayerPuntoLote = selfCm.map.getLayer(idGraphicPuntoLote)\r\n    selfCm._activateSnappingPrediosByDivision(graphicLayerPuntoLote);\r\n    toolbarCm.activate(Draw[\"POINT\"]);\r\n  },\r\n\r\n  _changeValueCodLote(evt) {\r\n    const selectedValue = evt.target.value;\r\n    const currentSelectId = evt.target.id;\r\n    const id = evt.target.id.split('_')[1]\r\n    // const idx = evt.target.selectedIndex\r\n    // const cod_lote = evt.target.value\r\n    const lyr = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n    const graphicSelected = lyr.graphics.filter(item => item.attributes.id == `label_${id}`)\r\n    graphicSelected[0].symbol.text = selectedValue\r\n    const selects = dojo.query('.codLoteSelectDvCls');\r\n    selects.forEach(select => {\r\n      if (select.id !== currentSelectId && select.value === selectedValue) {\r\n        select.value = '';\r\n        const graphicNotSelected = lyr.graphics.filter(item => item.attributes.id == `label_${select.id.split('_')[1]}`)\r\n        graphicNotSelected[0].symbol.text = ''\r\n      }\r\n      lyr.refresh()\r\n    });\r\n  },\r\n\r\n  _changeLotUrb(evt) {\r\n    const selectedValue = evt.target.value;\r\n    const currentSelectId = evt.target.id;\r\n    const selects = dojo.query('.loteUrbSelectDvCls');\r\n    const lyr = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n    // const graphicSelected = lyr.graphics.filter(item => item.attributes.id == `label_${id}`)\r\n    selects.forEach(select => {\r\n      if (select.id !== currentSelectId && select.value === selectedValue) {\r\n        select.value = '';\r\n        const graphicNotSelected = lyr.graphics.filter(item => item.attributes.id == `label_${select.id.split('_')[1]}`)\r\n        graphicNotSelected[0].attributes.lot_urb = ''\r\n      }\r\n    });\r\n  },\r\n\r\n  _centerAtLabelCodLoteDivision(evt) {\r\n    let id = evt.currentTarget.id\r\n    let lyr = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n    let graphicSelected = lyr.graphics.filter(item => item.attributes.id == id)\r\n    selfCm.map.centerAndZoom(graphicSelected[0].geometry)\r\n  },\r\n\r\n  _editLoteUrbanoDivision(evt) {\r\n    const id = evt.target.id.replace('loteUrbanoDv_', '');\r\n    const lyr = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n    const graphic = lyr.graphics.filter(item => item.attributes.id == `label_${id}`)\r\n    graphic[0].attributes.lot_urb = evt.target.selectedOptions[0].value\r\n    lyr.refresh()\r\n  },\r\n\r\n  _buildDataLoteTable(tableBody, predios) {\r\n    tableBody.innerHTML = ''\r\n    predios.forEach((predio, index) => {\r\n      const row = document.createElement('tr');\r\n\r\n      // celda de índice\r\n      const indexCell = document.createElement('td');\r\n      indexCell.className = \"center-aligned\"\r\n      indexCell.textContent = predio.num;\r\n      row.appendChild(indexCell);\r\n\r\n      // celda de codigo de predio\r\n      const codigoCell = document.createElement('td');\r\n      const select = document.createElement('select');\r\n      select.className = \"codLoteSelectDvCls\"\r\n      select.id = `codLoteSelectDv_${predio.num}`\r\n\r\n      const optionDisabled = document.createElement('option');\r\n      optionDisabled.value = '';\r\n      optionDisabled.textContent = '---';\r\n      optionDisabled.disabled = true;\r\n      select.appendChild(optionDisabled);\r\n      predios.forEach(p => {\r\n        const option = document.createElement('option');\r\n        option.value = p.cod_lote;\r\n        option.textContent = p.cod_lote;\r\n        if (p.cod_lote === predio.cod_lote) {\r\n          option.selected = true;\r\n        }\r\n        select.appendChild(option);\r\n      });\r\n\r\n      codigoCell.appendChild(select);\r\n      row.appendChild(codigoCell);\r\n\r\n\r\n      const loteUrbCell = document.createElement('td');\r\n      const loteUrbSelect = document.createElement('select');\r\n      loteUrbSelect.className = \"loteUrbSelectDvCls\"\r\n      loteUrbSelect.id = `loteUrbanoDv_${predio.num}`\r\n\r\n      const optionDisabledLotUrb = optionDisabled.cloneNode(true)\r\n      loteUrbSelect.appendChild(optionDisabledLotUrb);\r\n\r\n      selfCm.responseRequests.forEach((request, idx) => {\r\n        const option = document.createElement('option');\r\n        option.value = request.urbanLotNumber;\r\n        option.textContent = request.urbanLotNumber;\r\n        loteUrbSelect.appendChild(option);\r\n        if (predio.num == idx + 1) {\r\n          option.selected = true;\r\n        }\r\n        // selected option by index predio.num\r\n      })\r\n      loteUrbCell.appendChild(loteUrbSelect);\r\n      loteUrbCell.className = \"loteUrbanoDvCls\"\r\n      row.appendChild(loteUrbCell);\r\n\r\n      const locationMarker = document.createElement('td');\r\n      locationMarker.id = predio.id\r\n      locationMarker.className = \"center-aligned\"\r\n      locationMarker.innerHTML = `<span class=\"locationLabelLoteDvCls\" id=\"${predio.id}\"><i class=\"fas fa-search\"></i></span>`\r\n      row.appendChild(locationMarker);\r\n      tableBody.appendChild(row);\r\n      // dojo.query(`#${predio.id}`).on('click', selfCm._centerAtLabelCodLoteDivision)\r\n\r\n    });\r\n    dojo.query('.codLoteSelectDvCls').on('change', selfCm._changeValueCodLote)\r\n    dojo.query('.loteUrbSelectDvCls').on('change', selfCm._changeLotUrb)\r\n    dojo.query('.locationLabelLoteDvCls').on('click', selfCm._centerAtLabelCodLoteDivision)\r\n    dojo.query('.loteUrbanoDvCls').on('change', selfCm._editLoteUrbanoDivision);\r\n\r\n  },\r\n\r\n  _ordenarPoligonosNorteSur(poligonos, idx, bodyTable) {\r\n    const deferred = new Deferred();\r\n    // Obtener la coordenada más al norte de cada polígono\r\n    const coordenadasNorte = poligonos.map(poligono => {\r\n      const extent = poligono.getExtent();\r\n      return extent.ymax;\r\n    });\r\n\r\n    // Ordenar los polígonos en base a la coordenada más al norte\r\n    const poligonosOrdenados = poligonos.slice().sort((a, b) => {\r\n      const coordenadaNorteA = coordenadasNorte[poligonos.indexOf(a)];\r\n      const coordenadaNorteB = coordenadasNorte[poligonos.indexOf(b)];\r\n      return coordenadaNorteB - coordenadaNorteA; // Ordenar de norte a sur\r\n    });\r\n\r\n    // console.log(poligonos)\r\n\r\n    const graphicLayerLabelCodLoteDivision = new GraphicsLayer({\r\n      id: idGraphicLabelCodLote,\r\n    });\r\n\r\n    const font = new Font(\"20px\", Font.STYLE_NORMAL, Font.VARIANT_NORMAL, Font.WEIGHT_BOLD, \"Arial\");\r\n\r\n    const dataLoteTable = []\r\n\r\n    selfCm.geometryService.labelPoints(poligonosOrdenados)\r\n      .then((labelPoints) => {\r\n        labelPoints.forEach((point, index) => {\r\n          const cod_lote = selfCm._zfill(idx + 1, 3)\r\n          const txtSym = new TextSymbol(cod_lote, font, new Color([250, 0, 0, 1]));\r\n          txtSym.setColor(new esri.Color([0, 0, 0, 1])); // color blanco\r\n          txtSym.setSize(\"12pt\");\r\n          txtSym.setHaloColor(new esri.Color([255, 255, 255, 1]));\r\n          txtSym.setHaloSize(2);\r\n          const idGraphic = `label_${index + 1}`\r\n          const graphicLabel = new Graphic(\r\n            point,\r\n            txtSym,\r\n            {\r\n              id: idGraphic,\r\n              lot_urb: selfCm.responseRequests[index].urbanLotNumber,\r\n              clase: 'labelCodLoteDivision'\r\n            });\r\n          graphicLayerLabelCodLoteDivision.add(graphicLabel);\r\n          dataLoteTable.push({ num: index + 1, id: idGraphic, cod_lote: cod_lote })\r\n          idx = idx + 1\r\n        });\r\n        return dataLoteTable\r\n      })\r\n      .then((dataLoteTable) => {\r\n        selfCm._buildDataLoteTable(bodyTable, dataLoteTable)\r\n        selfCm.map.addLayer(graphicLayerLabelCodLoteDivision)\r\n        return deferred.resolve(dataLoteTable);\r\n      })\r\n      .catch((error) => {\r\n        return deferred.reject(error);\r\n      });\r\n\r\n    return deferred.promise;\r\n  },\r\n\r\n  // _enableEditingLabelsLotesDivision(evt) {\r\n  //   if (evt && evt.graphic && evt.graphic.attributes && evt.graphic.attributes.clase == 'labelCodLoteDivision') {\r\n  //     selfCm.map.setInfoWindowOnClick(false)\r\n  //     selfCm.editToolbar.activate(Edit.MOVE, evt.graphic);\r\n  //   } else {\r\n  //     selfCm.editToolbar.deactivate()\r\n  //   }\r\n  // },\r\n\r\n  _zfill(num, len) {\r\n    return (Array(len).fill('0').join('') + num).slice(-len);\r\n  },\r\n\r\n  _getMaxCodLot(polygonos) {\r\n    const deferred = new Deferred();\r\n    const estadisticaDef = new StatisticDefinition();\r\n    estadisticaDef.statisticType = 'max';\r\n    estadisticaDef.onStatisticField = _COD_LOTE_FIELD;\r\n    estadisticaDef.outStatisticFieldName = \"resultado\";\r\n\r\n    const query = new Query();\r\n    query.where = selfCm.arancel;\r\n    query.outFields = [_COD_LOTE_FIELD];\r\n    query.returnGeometry = false;\r\n    query.outStatistics = [estadisticaDef];\r\n\r\n    const queryTask = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl());\r\n    queryTask.execute(query)\r\n      .then(result => {\r\n        if (result.features.length > 0) {\r\n          const maxCodLote = result.features[0].attributes.resultado;\r\n          return deferred.resolve({\r\n            maxCodLote: maxCodLote,\r\n            polygons: polygonos\r\n          });\r\n        } else {\r\n          return deferred.reject('No se encontraron lotes');\r\n        }\r\n      });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _getOriginalLots(query) {\r\n    const selfCm = this;\r\n    const deferred = new Deferred();\r\n    const params = {\r\n      where: query,\r\n      returnGeometry: true,\r\n      outFields: \"*\",\r\n      outSR: 4326,\r\n      f: \"json\"\r\n    };\r\n\r\n    const requestOptions = {\r\n      url: `${selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl()}/query`,\r\n      content: params,\r\n      handleAs: \"json\",\r\n      callbackParamName: \"callback\"\r\n    };\r\n\r\n    esriRequest(requestOptions, { usePost: true })\r\n      .then((response) => {\r\n        selfCm.currentLotsRows = response.features;\r\n\r\n        if (selfCm.case == 2) {\r\n          if (selfCm.currentLotsRows.length < 2) {\r\n            throw new Error(selfCm.nls.errorAcumulationLandsNumber);\r\n          }\r\n        }\r\n\r\n        selfCm.currentLotsRows.forEach(row => {\r\n          row.geometry = new Polygon({\r\n            rings: row.geometry.rings,\r\n            spatialReference: { wkid: 4326 }\r\n          });\r\n        });\r\n        return deferred.resolve(selfCm.currentLotsRows);\r\n      })\r\n      .catch(err => deferred.reject(err));\r\n\r\n    return deferred.promise;\r\n  },\r\n\r\n  _getPolylinesDrawn() {\r\n    const arr = []\r\n    for (let i of graphicLayerLineaDivision.graphics) {\r\n      arr.push(i.geometry);\r\n    }\r\n    const unionGraphicLayerLineaDivision = selfCm._unionFeatures(arr);\r\n\r\n    let lineGeometry = new Polyline({\r\n      paths: unionGraphicLayerLineaDivision.paths,\r\n      spatialReference: { wkid: 102100 }\r\n    });\r\n    lineGeometry = esri.geometry.webMercatorToGeographic(lineGeometry);\r\n    return lineGeometry;\r\n  },\r\n\r\n  _divideLotsByLines() {\r\n    // const geomLote = results.features[0].geometry\r\n    if (selfCm.currentLotsRows.length == 0) {\r\n      selfCm._showMessage(selfCm.nls.errorLotQuery, 'warning');\r\n      return;\r\n    }\r\n    const lineGeometry = selfCm._getPolylinesDrawn();\r\n\r\n    const polygonGeometry = selfCm.currentLotsRows[0].geometry;\r\n\r\n    const geomLoteDivided = selfCm._dividePolygon(polygonGeometry, lineGeometry)\r\n\r\n    if (geomLoteDivided.length == 0) {\r\n      //  genera un mensage show indicando que no se encontro el lote\r\n      throw new Error(selfCm.nls.errorDivideLot);\r\n      // selfCm._showMessage(selfCm.nls.errorDivideLot, type = 'error');\r\n      // return;\r\n    }\r\n\r\n    if (geomLoteDivided.length != selfCm.responseRequests.length) {\r\n      throw new Error(`No se puede proceder con la operación\\nLa cantidad de lotes generados (${geomLoteDivided.length}) es diferente a lo solicitado (${selfCm.responseRequests.length})`);\r\n      // selfCm._showMessage(`No se puede proceder con la operación\\nSe han generado más lotes (${geomLoteDivided.length}) de los solicitados (${selfCm.responseRequests.length})`, type = 'error');\r\n      // return;\r\n    }\r\n\r\n    // Creamos grafico de lote fusionado\r\n    const graphicLayerLoteDivision = new GraphicsLayer({\r\n      id: idGraphicLoteCm\r\n    });\r\n\r\n    // // Configurar el LabelClass con un símbolo transparente\r\n    // const labelClass = new LabelClass({\r\n    //   labelExpressionInfo: { value: \"-\" },\r\n    //   useCodedValues: false,\r\n    //   labelPlacement: \"always-horizontal\",\r\n    //   symbol: new TextSymbol().setColor(new Color([0, 0, 0])) // Color transparente\r\n    // });\r\n\r\n    // console.log(graphicLayerLoteDivision);\r\n    // graphicLayerLoteDivision.setLabelingInfo([labelClass]);\r\n\r\n    // iterar sobre los graficos de la capa de division y agregar cada uno a graphicLayerLoteDivision\r\n    for (let i of geomLoteDivided) {\r\n      const lote = new Graphic(i, symbolFusionLote)\r\n\r\n      // agregar el grafico directo al mapa\r\n      graphicLayerLoteDivision.add(lote);\r\n    }\r\n    selfCm.map.addLayer(graphicLayerLoteDivision);\r\n    return geomLoteDivided;\r\n  },\r\n\r\n  _addGraphicsPointLotsAndArancel() {\r\n    const deferred = new Deferred();\r\n    const query = new Query();\r\n    query.where = `${selfCm.arancel} and ID_SVIA IS NOT NULL`\r\n    // especificar los campos devueltos\r\n    query.outFields = [_UBIGEO_FIELD, _F_MZN_FIELD];\r\n    query.returnGeometry = true\r\n    // query with order by fields\r\n    query.orderByFields = [_F_MZN_FIELD];\r\n    const qTask = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrCfArancel).getUrl());\r\n    qTask.execute(query, function (results) {\r\n      // Creamos grafico de punto lote\r\n      const graphicLayerPuntoLote = new GraphicsLayer({\r\n        id: idGraphicPuntoLote\r\n      });\r\n      // creamos grafico de frente de lote\r\n      const graphicLayerFrenteLote = new GraphicsLayer({\r\n        id: idGraphicFrenteLote\r\n      });\r\n      // let graphicLayerPredio = new GraphicsLayer({\r\n      //   id: idGraphicPredioCm\r\n      // });\r\n      const graphicLoteDivision = selfCm.map.getLayer(idGraphicLoteCm)\r\n      if (!graphicLoteDivision) {\r\n        return;\r\n      }\r\n      const frentes = {}\r\n      for (let row of results.features) {\r\n        for (let graphic of graphicLoteDivision.graphics) {\r\n          const isItc = geometryEngine.intersects(row.geometry, graphic.geometry)\r\n          if (!isItc) {\r\n            continue\r\n          }\r\n          // saber si un key esta dentro del objeto frentes\r\n          if (!frentes.hasOwnProperty(row.attributes[_F_MZN_FIELD])) {\r\n            frentes[row.attributes[_F_MZN_FIELD]] = row.geometry;\r\n          }\r\n          else {\r\n            // check if row.geometry share a commin coordinate with frentes\r\n            const unionFrentes = geometryEngine.union([frentes[row.attributes[_F_MZN_FIELD]], row.geometry])\r\n            frentes[row.attributes[_F_MZN_FIELD]] = unionFrentes;\r\n          }\r\n        }\r\n      }\r\n\r\n      for (let lote of graphicLoteDivision.graphics) {\r\n        for (let idx in frentes) {\r\n          const idItcFrentesByLotes = geometryEngine.intersects(lote.geometry, frentes[idx])\r\n          if (!idItcFrentesByLotes) {\r\n            continue\r\n          }\r\n          const itcFrentesByLotes = geometryEngine.intersect(frentes[idx], lote.geometry)\r\n          for (let row of itcFrentesByLotes.paths) {\r\n            const polylineChunk = new Polyline({\r\n              paths: [row],\r\n              spatialReference: itcFrentesByLotes.spatialReference\r\n            });\r\n            // add frentes to graphicLayerFrenteLote\r\n            const symbolFrenteLote = new SimpleLineSymbol(\r\n              SimpleLineSymbol.STYLE_SOLID,\r\n              new Color(\r\n                [\r\n                  Math.floor(Math.random() * 255),\r\n                  Math.floor(Math.random() * 255),\r\n                  Math.floor(Math.random() * 255)]),\r\n              5\r\n            )\r\n            const frente = new Graphic(polylineChunk, symbolFrenteLote)\r\n            graphicLayerFrenteLote.add(frente);\r\n\r\n            const puntoLoteTurf = selfCm._findMidpoint(polylineChunk)\r\n\r\n            // crear un punto en el mapa\r\n            const puntoLote = new Point({\r\n              x: puntoLoteTurf.geometry.coordinates[0],\r\n              y: puntoLoteTurf.geometry.coordinates[1],\r\n              spatialReference: { wkid: 4326 }\r\n            })\r\n\r\n            // Agregar el punto p al mapa          \r\n            const puntoLoteGraphic = new Graphic(puntoLote, symbolPuntoLote)\r\n            graphicLayerPuntoLote.add(puntoLoteGraphic)\r\n          };\r\n        }\r\n      }\r\n      selfCm.map.addLayer(graphicLayerFrenteLote);\r\n      selfCm.map.addLayer(graphicLayerPuntoLote);\r\n      selfCm._removeLayerGraphic(idGraphicPredioByDivison);\r\n      selfCm.map.addLayer(graphicLayerPredioByDivison)\r\n      return deferred.resolve();\r\n    });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _ApplyDivideLotesRefactor() {\r\n    selfCm.busyIndicator.show();\r\n    selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n    selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n    selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n    selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n    selfCm._removeLayerGraphic(idGraphicLoteDeleteCm);\r\n    selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n\r\n    // Union all graphics of graphicslayer\r\n    if (graphicLayerLineaDivision.graphics.length == 0) {\r\n      selfCm._showMessage(selfCm.nls.emptyLineSubdivision, 'warning');\r\n      selfCm.busyIndicator.hide();\r\n      return\r\n    }\r\n    if (!selfCm.lotesQuery) {\r\n      selfCm._showMessage(selfCm.nls.errorGetLand, 'warning');\r\n      selfCm.busyIndicator.hide();\r\n      return\r\n    }\r\n    return selfCm._getOriginalLots(selfCm.lotesQuery)\r\n      .then(originLots => {\r\n        const geomLoteDivided = selfCm._divideLotsByLines();\r\n        return selfCm._getMaxCodLot(geomLoteDivided);\r\n      })\r\n      .then(proprsLot => {\r\n        return selfCm._ordenarPoligonosNorteSur(\r\n          proprsLot.polygons,\r\n          parseInt(proprsLot.maxCodLote),\r\n          selfCm.bodyTbDatosLoteDvApCm\r\n        )\r\n      })\r\n      .then(() => {\r\n        selfCm.map.reorderLayer(selfCm.map.getLayer(idGraphicLoteCm), selfCm.map.graphicsLayerIds.indexOf(graphicLayerLabelLineaDivision.id));\r\n        selfCm.map.setExtent(selfCm.currentLotsRows[0].geometry.getExtent().expand(1.5), true);\r\n        return selfCm._addGraphicsPointLotsAndArancel();\r\n      })\r\n      .then(() => {\r\n        selfCm._populateTablePredio(selfCm.bodyTbPrediosDvApCm, selfCm._activateToolPrediosByDivision)\r\n        selfCm.busyIndicator.hide();\r\n      })\r\n      .catch(error => {\r\n        // console.log(error)\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(error.message, type = \"error\")\r\n      })\r\n  },\r\n\r\n  // // ----------------------------------------------------------------------------------------------\r\n  // // GeoprocessingServices\r\n  // // ----------------------------------------------------------------------------------------------\r\n  // _executeReasignacionGpService(evt) {\r\n  //   if (!selfCm.xy.length) {\r\n  //     selfCm._showMessage(selfCm.nls.emptyNewLocation, type = \"error\")\r\n  //     return\r\n  //   }\r\n  //   selfCm._showMessageConfirm().then(function (result) {\r\n  //     if (result) {\r\n  //       let params = {\r\n  //         \"cod_pred\": selfCm.uniqueCodeLands,\r\n  //         \"ubigeo\": paramsApp['ubigeo'],\r\n  //         \"geometry\": selfCm.xy,\r\n  //         \"user\": paramsApp['username'],\r\n  //         \"id_solicitud\": selfCm.codRequestsCm\r\n  //       }\r\n\r\n  //       // revisar si alguna propiedad tiene valor nulo o indefinido\r\n  //       for (let key in params) {\r\n  //         if (params[key] == null || params[key] == undefined) {\r\n  //           selfCm._showMessage(`Debe especificar el valor de ${key}`, type = \"error\");\r\n  //           return\r\n  //         }\r\n  //       }\r\n  //       selfCm._executeGPService(selfCm.config.reasignacionUrl, params)\r\n  //     }\r\n  //     else {\r\n  //       return\r\n  //     }\r\n  //   })\r\n  // },\r\n\r\n  _executeAcumulacionGpService(evt) {\r\n    if (!selfCm.lotesQuery) {\r\n      selfCm._showMessage(selfCm.nls.errorGetLand, 'warning');\r\n      selfCm.busyIndicator.hide();\r\n      return\r\n    }\r\n    if (!selfCm.map.getLayer(idGraphicLoteCm)) {\r\n      selfCm._showMessage(selfCm.nls.emptyPreviewAccumulation, type = \"error\")\r\n      return\r\n    }\r\n\r\n    if (!selfCm.xy.length) {\r\n      selfCm._showMessage(selfCm.nls.emptyNewLand, type = \"error\")\r\n      return\r\n    }\r\n    const labelCodLotesLayer = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n\r\n    selfCm._showMessageConfirm().then(function (result) {\r\n      if (result) {\r\n        selfCm.busyIndicator.show();\r\n        selfCm._addWarningMessageExecute()\r\n        const labelCodLotesLayerGraphic = labelCodLotesLayer.graphics;\r\n\r\n        Acumulation.codRequests = selfCm.codRequestsCm;\r\n        Acumulation.currentLotsRows = selfCm.currentLotsRows;\r\n\r\n        Acumulation.attributes = labelCodLotesLayerGraphic.map((i) => {\r\n          return {\r\n            codLot: i.symbol.text,\r\n            lotUrb: i.attributes.lot_urb,\r\n            coords: [\r\n              i.geometry.x,\r\n              i.geometry.y\r\n            ]\r\n          }\r\n        });\r\n\r\n        Acumulation.newPointLotsGraphics = selfCm.map.getLayer(idGraphicPuntoLote).graphics;\r\n        Acumulation.newLandsGraphics = selfCm.map.getLayer(idGraphicPredioCm).graphics;\r\n        Acumulation.newLandsGraphics[0]['codPre'] = selfCm.cpmAcumulacion;\r\n        Acumulation.newLandsGraphics[0]['id'] = selfCm.idAcumulacion;\r\n        Acumulation.newLandsGraphics[0]['resolutionType'] = selfCm.resolutionType;\r\n        Acumulation.newLandsGraphics[0]['resolutionDocument'] = selfCm.resolutionDocument;\r\n        Acumulation.newLandsGraphics[0]['floor'] = selfCm.floor;\r\n        Acumulation.newLandsGraphics[0]['urbanLotNumber'] = selfCm.urbanLotNumber;\r\n        Acumulation.landUrl = selfCm.layersMap.getLayerInfoById(idLyrCfPredios).getUrl();\r\n        Acumulation.pointLotUrl = selfCm.layersMap.getLayerInfoById(idLyrCfLotesPun).getUrl();\r\n        Acumulation.lotUrl = selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl();\r\n        Acumulation.arancelUrl = selfCm.layersMap.getLayerInfoById(idLyrCfArancel).getUrl();\r\n        Acumulation.blockUrl = selfCm.layersMap.getLayerInfoById(idLyrCfManzanaUrb).getUrl();\r\n        Acumulation.cadastralBlockUrl = selfCm.layersMap.getLayerInfoById(idLyrCfManzana).getUrl();\r\n        Acumulation.config = selfCm.config;\r\n        Acumulation.lotGraphic = selfCm.map.getLayer(idGraphicLoteCm).graphics;\r\n        Acumulation.ubigeo = paramsApp['ubigeo'];\r\n        Acumulation.user = paramsApp['username'];\r\n        Acumulation.caseRequest = selfCm.case;\r\n        Acumulation.queryBlock = selfCm.arancel;\r\n\r\n\r\n        Acumulation.executeAcumulation()\r\n          .then(response => {\r\n            selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n            selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n            selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n            selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n            selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n            selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(false)\r\n            selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(true)\r\n            selfCm._FormResult(selfCm.codRequestsCm, selfCm.caseDescription);\r\n            selfCm.busyIndicator.hide();\r\n            selfCm._removeWarningMessageExecute()\r\n            selfCm._showMessage(selfCm.nls.successProcess, type = \"success\");\r\n          })\r\n          .catch(error => {\r\n            // console.log(error)\r\n            // selfCm._removeWarningMessageExecute()\r\n            // selfCm._showMessage(error.message, type = \"error\");\r\n            // selfCm.busyIndicator.hide();\r\n\r\n            selfCm._removeWarningMessageExecute()\r\n            selfCm.busyIndicator.hide();\r\n            if (error.name === CustomException.ErrorEqualUrbanLotWithinBlock.name) {\r\n              return\r\n            } else {\r\n              selfCm._showMessage(error.message, type = \"error\");\r\n            }\r\n          })\r\n        // .finally(() => {\r\n        //   selfCm.lotesQuery = null;\r\n        // })\r\n      }\r\n      else {\r\n        selfCm.busyIndicator.hide();\r\n        return\r\n      }\r\n    })\r\n  },\r\n\r\n  _executeSubdivisionGpService(evt) {\r\n\r\n    const layerLote = selfCm.map.getLayer(idGraphicLoteCm);\r\n\r\n    if (!selfCm.lotesQuery) {\r\n      selfCm._showMessage(selfCm.nls.errorGetLand, 'warning');\r\n      selfCm.busyIndicator.hide();\r\n      return;\r\n    };\r\n\r\n    if (!layerLote) {\r\n      selfCm._showMessage(selfCm.nls.emptyPreviewSubdivision, type = \"error\");\r\n      return;\r\n    };\r\n\r\n    // Check if all labels have a value\r\n    const labelCodLotesLayer = selfCm.map.getLayer(idGraphicLabelCodLote);\r\n    for (let pred of labelCodLotesLayer.graphics) {\r\n      if (!pred.symbol.text) {\r\n        selfCm._showMessage(selfCm.nls.emptyLotCodeSubdivision, type = \"error\");\r\n        return;\r\n      };\r\n      if (!pred.attributes.lot_urb || pred.attributes.lot_urb === \"...\") {\r\n        selfCm._showMessage(selfCm.nls.emptyUrbanLotSubdivision, type = \"error\");\r\n        return;\r\n      };\r\n    };\r\n\r\n    if (graphicLayerPredioByDivison.graphics.length != layerLote.graphics.length) {\r\n      selfCm._showMessage(selfCm.nls.emptyGraphicLandSubdivision, type = \"error\");\r\n      return;\r\n    };\r\n    // Check if all lots have a land\r\n    const checkLotsWithinLands = UtilityCase.checkLotsWithinLands(layerLote.graphics, graphicLayerPredioByDivison.graphics);\r\n    if (!checkLotsWithinLands) {\r\n      selfCm._showMessage(selfCm.nls.emptyLandResultSubdivision, type = \"error\");\r\n      return\r\n    };\r\n\r\n    // Check lotUrb\r\n    const lotUrbArray = labelCodLotesLayer.graphics.map(i => i.attributes.lot_urb);\r\n    const duplicateLotUrban = UtilityCase.checkDuplicateLotUrbanResults(lotUrbArray);\r\n    if (duplicateLotUrban.length > 0) {\r\n      selfCm._showMessage(`${selfCm.nls.duplicateLotUrbanResult}: ${duplicateLotUrban}`, type = 'error');\r\n      return;\r\n    };\r\n\r\n    selfCm._showMessageConfirm().then(function (result) {\r\n      if (result) {\r\n        selfCm.busyIndicator.show();\r\n        selfCm._addWarningMessageExecute();\r\n        const labelCodLotesLayerGraphic = labelCodLotesLayer.graphics;\r\n\r\n        SubDivision.blockUrl = selfCm.layersMap.getLayerInfoById(idLyrCfManzanaUrb).getUrl();\r\n        SubDivision.lotUrl = selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl();\r\n        SubDivision.pointLotUrl = selfCm.layersMap.getLayerInfoById(idLyrCfLotesPun).getUrl();\r\n        SubDivision.arancelUrl = selfCm.layersMap.getLayerInfoById(idLyrCfArancel).getUrl();\r\n        SubDivision.landUrl = selfCm.layersMap.getLayerInfoById(idLyrCfPredios).getUrl();\r\n        SubDivision.cadastralBlockUrl = selfCm.layersMap.getLayerInfoById(idLyrCfManzana).getUrl();\r\n        SubDivision.currentLotsRows = selfCm.currentLotsRows;\r\n        SubDivision.newPointLotsGraphics = selfCm.map.getLayer(idGraphicPuntoLote).graphics;\r\n        SubDivision.newLandsGraphics = graphicLayerPredioByDivison.graphics;\r\n        SubDivision.queryBlock = selfCm.arancel;\r\n        SubDivision.newLandsGraphics.forEach((i) => {\r\n          i['id'] = i.attributes.id.split('_')[1],\r\n            i['codPre'] = i.attributes.cpm,\r\n            i['resolutionType'] = i.attributes.resolutionType,\r\n            i['resolutionDocument'] = i.attributes.resolutionDocument,\r\n            i['floor'] = i.attributes.floor,\r\n            i['urbanLotNumber'] = i.attributes.urbanLotNumber\r\n        });\r\n        SubDivision.lotGraphic = layerLote.graphics;\r\n\r\n        SubDivision.attributes = labelCodLotesLayerGraphic.map((i) => {\r\n          return {\r\n            codLot: i.symbol.text,\r\n            lotUrb: i.attributes.lot_urb,\r\n            coords: [\r\n              i.geometry.x,\r\n              i.geometry.y\r\n            ]\r\n          }\r\n        });\r\n\r\n        SubDivision.config = selfCm.config;\r\n        SubDivision.ubigeo = paramsApp['ubigeo'];\r\n        SubDivision.user = paramsApp['username'];\r\n        SubDivision.caseRequest = selfCm.case;\r\n        SubDivision.codRequests = selfCm.codRequestsCm;\r\n\r\n        SubDivision.executeSubdivision()\r\n          .then(response => {\r\n            graphicLayerPredioByDivison.clear();\r\n            graphicLayerLineaDivision.clear();\r\n            graphicLayerLabelLineaDivision.clear();\r\n            selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n            selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n            selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n            selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n            selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(false)\r\n            selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(true)\r\n            selfCm._FormResult(selfCm.codRequestsCm, selfCm.caseDescription);\r\n            selfCm.busyIndicator.hide();\r\n            selfCm._removeWarningMessageExecute()\r\n            selfCm._showMessage(selfCm.nls.successProcess, type = \"success\");\r\n          })\r\n          .catch(error => {\r\n            selfCm._removeWarningMessageExecute()\r\n            selfCm.busyIndicator.hide();\r\n            if (error.name === CustomException.ErrorEqualUrbanLotWithinBlock.name) {\r\n              return\r\n            } else {\r\n              selfCm._showMessage(error.message, type = \"error\");\r\n            }\r\n          })\r\n        // .finally(() => {\r\n        //   selfCm.lotesQuery = null;\r\n        // })\r\n      }\r\n      else {\r\n        return\r\n      }\r\n    })\r\n  },\r\n\r\n  _executeInactivarGpService(evt) {\r\n    if (!selfCm.currentLotsRows) {\r\n      selfCm._showMessage(selfCm.nls.emptyLotRequests, type = \"error\")\r\n      return\r\n    }\r\n\r\n    selfCm._showMessageConfirm().then(function (result) {\r\n      if (result) {\r\n        selfCm.busyIndicator.show();\r\n        selfCm._addWarningMessageExecute();\r\n        Deactivate.caseRequest = selfCm.case;\r\n        Deactivate.codRequest = selfCm.codRequestsCm;\r\n        Deactivate.user = paramsApp['username'];\r\n        Deactivate.ubigeo = paramsApp['ubigeo'];\r\n        Deactivate.config = selfCm.config;\r\n        Deactivate.landUrl = selfCm.layersMap.getLayerInfoById(idLyrCfPredios).getUrl();\r\n        Deactivate.cpu = selfCm.uniqueCodeLands;\r\n        Deactivate.currentLotsRows = selfCm.currentLotsRows;\r\n\r\n        Deactivate.executeDeactivate()\r\n          .then(response => {\r\n            selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(false)\r\n            selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(true)\r\n            selfCm._removeWarningMessageExecute()\r\n            selfCm._loadIniRequestsCm()\r\n            dojo.query(\".backTrayClsCm\")[0].click()\r\n            selfCm.busyIndicator.hide();\r\n            selfCm._showMessage(selfCm.nls.successProcess, type = \"success\");\r\n          })\r\n          .catch(error => {\r\n            selfCm._removeWarningMessageExecute()\r\n            selfCm._showMessage(error.message, type = \"error\");\r\n            selfCm.busyIndicator.hide();\r\n          })\r\n          .finally(() => {\r\n            selfCm.currentLotsRows = null;\r\n          })\r\n      }\r\n      else {\r\n        return\r\n      }\r\n    })\r\n  },\r\n\r\n  _addWarningMessageExecute() {\r\n    const self = this;\r\n    const buzyElm = dojo.query(\"#dojox_widget_Standby_0\")[0]\r\n    const imgElm = buzyElm.querySelector(\"img\")\r\n    const loadingText = document.createElement('div');\r\n    loadingText.id = 'loadingTextCustom';\r\n    loadingText.style.position = 'absolute';\r\n    const topMessage = parseFloat(imgElm.style.top) + 80;\r\n    loadingText.style.top = `${topMessage}px`;\r\n    const leftImg = parseFloat(imgElm.style.left) + imgElm.width / 2;\r\n    loadingText.style.left = `${leftImg}px`;\r\n    loadingText.style.transform = 'translate(-50%, -50%)';\r\n    loadingText.style.background = 'white';\r\n    loadingText.style.zIndex = '1000';\r\n    loadingText.innerHTML = self.nls.warningExecute;\r\n\r\n    dojo.query(\"#dojox_widget_Standby_0\")[0].appendChild(loadingText);\r\n  },\r\n\r\n  _removeWarningMessageExecute() {\r\n    dojo.query(\"#loadingTextCustom\")[0].remove();\r\n  },\r\n\r\n  _executeIndependenceLands(evt) {\r\n    if (!selfCm.currentLotsRows) {\r\n      selfCm._showMessage(selfCm.nls.emptyLotRequests, type = \"error\")\r\n      return\r\n    }\r\n    if (!LandAssignment.checkPointLotsSelected()) {\r\n      selfCm._showMessage(selfCm.nls.emptyWaySelectedIndependence, type = \"error\")\r\n      return\r\n    }\r\n    selfCm._showMessageConfirm().then(function (result) {\r\n      if (result) {\r\n        selfCm.busyIndicator.show();\r\n        selfCm._addWarningMessageExecute();\r\n        Independence.codRequest = selfCm.codRequestsCm;\r\n        Independence.cadastralBlockUrl = selfCm.layersMap.getLayerInfoById(idLyrCfManzana).getUrl();\r\n        Independence.ubigeo = paramsApp['ubigeo'];\r\n        Independence.user = paramsApp['username'];\r\n        Independence.newLands = LandAssignment.lands;\r\n        Independence.urlLands = selfCm.layersMap.getLayerInfoById(idLyrCfPredios).getUrl();\r\n        Independence.matrixLand = selfCm.currentLandTabRows;\r\n        Independence.config = selfCm.config;\r\n        Independence.currentLotsRows = selfCm.currentLotsRows;\r\n        Independence.caseRequest = selfCm.case;\r\n\r\n        Independence.executeIndependence()\r\n          .then(response => {\r\n            LandAssignment.removeAllGraphics();\r\n            selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(false)\r\n            selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(true)\r\n            selfCm._FormResult(selfCm.codRequestsCm, selfCm.caseDescription);\r\n            selfCm.busyIndicator.hide();\r\n            selfCm._removeWarningMessageExecute();\r\n            selfCm._showMessage(selfCm.nls.successProcess, type = \"success\");\r\n          })\r\n          .catch(error => {\r\n            selfCm._removeWarningMessageExecute();\r\n            selfCm._showMessage(error.message, type = \"error\");\r\n            selfCm.busyIndicator.hide();\r\n          })\r\n          .finally(() => {\r\n            selfCm.currentLotsRows = null;\r\n          })\r\n      }\r\n      else {\r\n        return\r\n      }\r\n    })\r\n  },\r\n\r\n  _executeGPService(url, params) {\r\n    let urlStatusRequest = `${selfCm.config.applicationListUrl}/${selfCm.codRequestsCm}`\r\n    selfCm._callApiRestServices(urlStatusRequest, {}).then(function (result) {\r\n      try {\r\n        if (result.idStatus != 1) {\r\n          throw new Error(`Esta solicitud (${selfCm.codRequestsCm}) ya fue procesada con anterioridad: ${result.date}`)\r\n        }\r\n        selfCm.busyIndicator.show();\r\n        // Agregar un elemento de texto debajo del BusyIndicator\r\n        let buzyElm = dojo.query(\"#dojox_widget_Standby_0\")[0]\r\n        let imgElm = buzyElm.querySelector(\"img\")\r\n        let loadingText = document.createElement('div');\r\n        loadingText.id = 'loadingTextCustom';\r\n        loadingText.style.position = 'absolute';\r\n        let topMessage = parseFloat(imgElm.style.top) + 80;\r\n        loadingText.style.top = `${topMessage}px`;\r\n        let leftImg = parseFloat(imgElm.style.left) + imgElm.width / 2;\r\n        loadingText.style.left = `${leftImg}px`;\r\n        loadingText.style.transform = 'translate(-50%, -50%)';\r\n        loadingText.style.background = 'white';\r\n        loadingText.style.zIndex = '1000';\r\n\r\n        dojo.query(\"#dojox_widget_Standby_0\")[0].appendChild(loadingText);\r\n        // selfCm._FormResult(selfCm.codRequestsCm, selfCm.caseDescription);\r\n        selfCm.gp = new Geoprocessor(url);\r\n        selfCm.gp.submitJob(params, selfCm._completeCallback, selfCm._statusCallback);\r\n      } catch (error) {\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(error.message, type = \"error\")\r\n      }\r\n\r\n    })\r\n  },\r\n\r\n  _statusCallback(JobInfo) {\r\n    selfCm.jobId = JobInfo.jobId\r\n    let textMessage = JobInfo.messages.map((message) => { return message.description })\r\n    try {\r\n      dojo.query(\"#loadingTextCustom\")[0].textContent = textMessage.slice(-1)[0] ? textMessage.slice(-1)[0] : ''\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  },\r\n  _completeCallback(JobInfo) {\r\n    switch (JobInfo.jobStatus) {\r\n      case \"esriJobSubmitted\":\r\n        // El trabajo se ha enviado al servidor y está esperando en la cola.\r\n        console.log(\"El trabajo se ha enviado y está esperando en la cola.\");\r\n        break;\r\n      case \"esriJobExecuting\":\r\n        // El trabajo se está ejecutando actualmente en el servidor.\r\n        console.log(\"El trabajo se está ejecutando en el servidor.\");\r\n        break;\r\n      case \"esriJobSucceeded\":\r\n        // El trabajo se ha completado satisfactoriamente y los resultados están disponibles.\r\n        selfCm.gp.getResultData(JobInfo.jobId, \"response\", function (result) {\r\n          if (!result.value.status) {\r\n            selfCm.busyIndicator.hide();\r\n            selfCm._showMessage(result.value.message, type = \"error\");\r\n            return\r\n          }\r\n\r\n          selfCm._sendDataToPlatform(result.value.response)\r\n\r\n\r\n          switch (selfCm.case) {\r\n            case \"1\":\r\n              selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n              break;\r\n            case \"2\":\r\n              selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n              selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n              selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n              selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n              selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n              break\r\n            case \"3\":\r\n              graphicLayerPredioByDivison.clear();\r\n              graphicLayerLineaDivision.clear();\r\n              graphicLayerLabelLineaDivision.clear();\r\n              // selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n              selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n              selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n              selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n              selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n              break\r\n            case \"4\":\r\n              // dojo.query(\".tablinksCm.active\")[0].click();\r\n              selfCm._loadIniRequestsCm()\r\n              break\r\n            default:\r\n              break;\r\n          }\r\n          selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(false)\r\n          selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(true)\r\n          if (selfCm.case == \"4\") {\r\n            dojo.query(\".backTrayClsCm\")[0].click()\r\n          } else {\r\n            selfCm._FormResult(selfCm.codRequestsCm, selfCm.caseDescription);\r\n          }\r\n          // Codigo para mostrar la ventana de resultados\r\n\r\n\r\n        })\r\n        break;\r\n      case \"esriJobFailed\":\r\n        // El trabajo ha fallado y no se han podido generar los resultados.\r\n        selfCm._showMessage(\"El proceso ha fallado y no se han podido generar los resultados.\", type = \"error\");\r\n        break;\r\n      case \"esriJobCancelled\":\r\n        // El trabajo ha sido cancelado por el usuario.\r\n        selfCm._showMessage(\"El proceso ha sido cancelado por el usuario.\");\r\n        break;\r\n      case \"esriJobTimedOut\":\r\n        // El trabajo ha expirado debido a un tiempo de espera.\r\n        selfCm._showMessage(\"El proceso ha superado el tiempo de espera necesario para su ejecución.\", type = \"error\");\r\n        break;\r\n      default:\r\n        // El estado del trabajo no se reconoce.\r\n        selfCm._showMessage(\"El estado del proceso no se reconoce.\");\r\n        break;\r\n    }\r\n    selfCm.busyIndicator.hide();\r\n    // remove 'loadingTextCustom'\r\n    dojo.query(\"#loadingTextCustom\")[0].remove();\r\n  },\r\n  // _cancelProcess(evt) {\r\n  //   selfCm.gp.cancelJob(selfCm.jobId, function (info) {\r\n  //     console.log(info.jobStatus)\r\n  //   });\r\n  // },\r\n\r\n  // _sendDataToPlatform(data) {\r\n  //   for (let predio of data.results) {\r\n  //     predio['ubigeo'] = paramsApp.ubigeo;\r\n  //   }\r\n\r\n  //   data['idType'] = parseInt(selfCm.case)\r\n  //   fetch(selfCm.config.updateStatusApplication, {\r\n  //     method: 'POST', // o 'PUT'\r\n  //     body: JSON.stringify(data), // los datos pueden ser de tipo 'string' o {object}\r\n  //     headers: {\r\n  //       'Content-Type': 'application/json'\r\n  //     }\r\n  //   }).then(res => res.json())\r\n  //     .then(response => selfCm._showMessage('El proceso se completó satisfactoriamente.'))\r\n  //     // .catch(error => console.error('Error:', error));\r\n  //     .catch(error => selfCm._showMessage(error, type = \"error\"));\r\n  // },\r\n\r\n  _exportTableToExcel(evt) {\r\n    // Obtén la tabla HTML\r\n    const table = dojo.query(\"#tableRequestCm\")[0]\r\n    let headerRow = table.querySelector(\"tr\");\r\n    let rows = table.querySelectorAll(\"tr\")\r\n\r\n    let headers = [];\r\n    let headerCols = headerRow.querySelectorAll(\"th\");\r\n    for (let h = 0; h < headerCols.length - 1; h++) {\r\n      headers.push(headerCols[h].innerText);\r\n    }\r\n\r\n    let data = [];\r\n\r\n    // Recorre las filas (ignora la primera fila que contiene los encabezados)\r\n    for (let i = 0; i < rows.length; i++) {\r\n      if (i == 0) continue;\r\n      let row = {}, cols = rows[i].querySelectorAll(\"td\");\r\n\r\n      // Recorre las columnas\r\n      for (let j = 0; j < cols.length - 1; j++) {\r\n        // Usa el texto del encabezado como clave y el texto de la celda como valor\r\n        row[headers[j]] = cols[j].innerText;\r\n      }\r\n\r\n      data.push(row);\r\n    }\r\n\r\n\r\n\r\n    // Convierte el array de objetos en una cadena JSON\r\n    let wb = XLSX.utils.book_new();\r\n\r\n    // Crear una hoja de cálculo a partir de los datos JSON\r\n    let ws = XLSX.utils.json_to_sheet(data);\r\n    let sheetName = selfCm.currentTabActive.replace(\"_\", \" \");\r\n    XLSX.utils.book_append_sheet(wb, ws, sheetName);\r\n\r\n    // Escribir el libro de trabajo y forzar una descarga\r\n    XLSX.writeFile(wb, `reporte_solicitudes_${selfCm.currentTabActive}.xlsx`);\r\n  },\r\n\r\n  _dataURItoBlob(dataURI) {\r\n    var byteString = atob(dataURI.split(',')[1]);\r\n    var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n    var buffer = new ArrayBuffer(byteString.length);\r\n    var dataView = new Uint8Array(buffer);\r\n    for (var i = 0; i < byteString.length; i++) {\r\n      dataView[i] = byteString.charCodeAt(i);\r\n    }\r\n    return new Blob([buffer], { type: mimeString });\r\n  },\r\n\r\n  _sendObservation(evt) {\r\n    selfCm.busyIndicator.show();\r\n    const file = selfCm.imgUploadApCm.files[0];\r\n    const messageObservation = selfCm.textAreaObsApCm.value.trim();\r\n    if (messageObservation == '') {\r\n      selfCm.busyIndicator.hide();\r\n      selfCm._showMessage(selfCm.nls.emptyObservation, type = \"error\");\r\n      return\r\n    }\r\n    if (file == undefined) {\r\n      selfCm.busyIndicator.hide();\r\n      selfCm._showMessage(selfCm.nls.emptyImageSupport, type = \"error\");\r\n      return\r\n    }\r\n    const reader = new FileReader();\r\n    const data = new FormData();\r\n    reader.onloadend = function () {\r\n      data.append('application_id', selfCm.codRequestsCm);\r\n      data.append('description', selfCm.textAreaObsApCm.value);\r\n      data.append('img', selfCm.imgUploadApCm.files[0]);\r\n\r\n      return fetch(selfCm.config.observationUrl, {\r\n        method: 'POST',\r\n        body: data\r\n      })\r\n        .then(response => {\r\n          if (!response.ok) {\r\n            selfCm.busyIndicator.hide();\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n          }\r\n          selfCm.busyIndicator.hide();\r\n          selfCm._showMessagePromise(selfCm.nls.successRequestObservation).then((result) => {\r\n            dojo.query(\".backRequestsClsCm\")[0].click();\r\n            dojo.query(\".backTrayClsCm\")[0].click();\r\n            selfCm._loadIniRequestsCm();\r\n          })\r\n\r\n        }).catch(error => {\r\n          selfCm.busyIndicator.hide();\r\n          selfCm._showMessage(`${selfCm.nls.errorProcessRequestObservation} ${error}`, type = \"error\")\r\n        });\r\n    }\r\n    reader.readAsDataURL(file);\r\n  },\r\n\r\n  _uploadImagenObs(evt) {\r\n    let imageDiv = dojo.query(\".thumbnailClsCm\")[0];\r\n    let file = evt.target.files[0];\r\n    let reader = new FileReader();\r\n\r\n    reader.onloadend = function () {\r\n      imageDiv.innerHTML = \"\";\r\n      imageDiv.style.backgroundImage = 'url(' + reader.result + ')';\r\n      imageDiv.style.backgroundSize = 'contain';\r\n      imageDiv.style.backgroundRepeat = 'no-repeat';\r\n      imageDiv.style.backgroundPosition = 'center';\r\n    }\r\n\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n      imageDiv.innerHTML = \"<span><i class='far fa-image'></i></span>\";\r\n    }\r\n  },\r\n  _searchRequestByCodPred(evt) {\r\n    if (evt.keyCode === 13) {\r\n      if (evt.target.value == '') {\r\n        if ('cup' in selfCm.queryRequests) {\r\n          delete selfCm.queryRequests['cup'];\r\n        }\r\n      } else {\r\n        selfCm.queryRequests['cup'] = evt.target.value;\r\n        // selfCm.queryRequests.limit = selfCm.defaultLimit;\r\n      }\r\n      dojo.query(\".tablinksCm.active\")[0].click();\r\n    }\r\n  },\r\n\r\n  _sortedByDate(evt) {\r\n    const columnOrder = evt.currentTarget.dataset.val\r\n    evt.currentTarget.dataset.val = columnOrder.includes('-') ? columnOrder.replace('-', '') : `-${columnOrder}`\r\n    selfCm.queryRequests['ordering'] = evt.currentTarget.dataset.val;\r\n    selfCm._loadRequestsCm();\r\n    // dojo.query(\".tablinksCm.active\")[0].click();\r\n  },\r\n\r\n  onOpen() {\r\n    console.log('CartoMaintenanceWgt::onOpen');\r\n    // let panel = this.getPanel();\r\n    // panel.position.height = 700;\r\n    // panel.setPosition(panel.position);\r\n    // panel.panelManager.normalizePanel(panel);\r\n\r\n    this._createToolbar();\r\n\r\n    dojo.query(\".backTrayClsCm\").on('click', this._openFormCase);\r\n    dojo.query(\".tablinksCm\").on('click', this._loadRequestTabActiveCm);\r\n    dojo.query(\"#btnObsCaseCm\").on('click', this._openFormObs);\r\n    dojo.query(\".backRequestsClsCm\").on('click', this._openFormObs);\r\n    // dojo.query(\"#goodRequestsCm\").on('click', this._openFormResult);\r\n    dojo.query(\"#showInfoDocCm\").on('click', this._openSupportingDocument)\r\n\r\n    // Reasignacion\r\n    dojo.query(\"#btnDrawMarkerCm\").on('click', this._activateTool);\r\n\r\n    dojo.query(\"#btnFsCm\").on('click', this._ApplyAcumulationLotsRefactor)\r\n    dojo.query(\"#btnDrawLinesDvCm\").on('click', this._activateToolLinesDivision)\r\n    dojo.query(\"#btnApplyDvCm\").on('click', this._ApplyDivideLotesRefactor)\r\n    dojo.query(\"#titleCaseCm\").on('click', this._zoomHomeRequests)\r\n    // dojo.query(\"#sendDataRsCm\").on('click', this._executeReasignacionGpService)\r\n    dojo.query('#sendDataFsCm').on('click', this._executeAcumulacionGpService)\r\n    dojo.query('#sendDataDvCm').on('click', this._executeSubdivisionGpService)\r\n    dojo.query('#sendDataDtCm').on('click', this._executeInactivarGpService)\r\n    dojo.query('#btnReportCm').on('click', this._exportTableToExcel)\r\n    dojo.query('#imgUploadCm').on('change', this._uploadImagenObs)\r\n    dojo.query('#sendDataObsGrCm').on('click', this._sendObservation)\r\n    dojo.query('#searchTbxCm').on(\"keyup\", this._searchRequestByCodPred)\r\n    dojo.query('.columnDateClsCm').on(\"click\", this._sortedByDate)\r\n    dojo.query('.selectLimitClsCm').on(\"change\", this._changeLimitPagination)\r\n    dojo.query('.buttonPaginationPrevClsCm').on(\"click\", this._prevPagePagination)\r\n    dojo.query('.buttonPaginationNextClsCm').on(\"click\", this._nextPagePagination)\r\n    // dojo.query('.columnCaseClsCm').on(\"click\", this._sortedByDate)\r\n    this._loadIniRequestsCm()\r\n\r\n    selfCm.map.addLayer(graphicLayerLabelLineaDivision)\r\n    // selfCm.map.addLayer(graphicLayerLandsByIndependence)\r\n    selfCm.editToolbar = new Edit(selfCm.map);\r\n    // selfCm.map.on(\"click\", selfCm._enableEditingLabelsLotesDivision);\r\n    selfCm.editToolbar.on(\"deactivate\", function (evt) {\r\n      if (evt.info.isModified) {\r\n        selfCm.map.setInfoWindowOnClick(true)\r\n        // firePerimeterFL.applyEdits(null, [evt.graphic], null);\r\n      }\r\n    });\r\n  },\r\n\r\n\r\n  // onClose(){\r\n  //   console.log('CartoMaintenanceWgt::onClose');\r\n  // },\r\n  // onMinimize(){\r\n  //   console.log('CartoMaintenanceWgt::onMinimize');\r\n  // },\r\n  // onMaximize(){\r\n  //   console.log('CartoMaintenanceWgt::onMaximize');\r\n  // },\r\n  // onSignIn(credential){\r\n  //   console.log('CartoMaintenanceWgt::onSignIn', credential);\r\n  // },\r\n  // onSignOut(){\r\n  //   console.log('CartoMaintenanceWgt::onSignOut');\r\n  // }\r\n  // onPositionChange(){\r\n  //   console.log('CartoMaintenanceWgt::onPositionChange');\r\n  // },\r\n  // resize(){\r\n  //   console.log('CartoMaintenanceWgt::resize');\r\n  // }\r\n});\r\n"]}