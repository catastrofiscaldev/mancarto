{"version":3,"sources":["../../../widgets/CartoMaintenanceWgt/Widget.js"],"names":["declare","BaseWidget","_WidgetsInTemplateMixin","Draw","Edit","Graphic","SimpleFillSymbol","SimpleMarkerSymbol","SimpleLineSymbol","Color","GraphicsLayer","Point","LayerInfos","lang","FeatureLayer","QueryTask","Query","WidgetManager","geometryEngine","Polyline","Polygon","webMercatorUtils","Geoprocessor","BusyIndicator","Message","turf","XLSX","Deferred","TextSymbol","Font","CaseInfo","StatisticDefinition","esriRequest","SubDivision","Acumulation","Independence","Deactivate","LandAssignment","LandProcess","UtilityCase","GeometryService","requestToAttendState","requestsObservedState","requestsAttendState","idLyrCatastroFiscal","idLyrCfPredios","idLyrCfLotesPun","idLyrCfEje_vial","idLyrCfNumeracion","idLyrCfArancel","idLyrCfLotes","idLyrCfUnidadesurbanas","idLyrCfParques","idLyrCfManzana","idLyrCfManzanaUrb","idLyrCfSector","idLyrDistricts","iconByState","_UBIGEO_FIELD","_ID_LOTE_P_FIELD","_COD_MZN_FIELD","_F_MZN_FIELD","_COD_SECT_FIELD","_COD_PRE_FIELD","_COD_LOTE_FIELD","toolbarCm","params","URLSearchParams","window","location","search","paramsApp","keys","key","get","symbolPuntoLote","STYLE_SQUARE","STYLE_SOLID","symbolFusionLote","symbolEliminarLote","STYLE_DIAGONAL_CROSS","symbolLoteSelected","symbolDivisionLote","STYLE_DASH","symbolPredio","symbolPredioSelected","symbolPredioSelected2","symbolSnapPointCm","STYLE_CROSS","idGraphicPredioCm","idGraphicPredioByDivison","idGraphicPredioSelectedCm","idGraphicLoteCm","idGraphicLoteSelectedCm","idGraphicPuntoLote","idGraphicFrenteLote","idGraphicLineaDivision","idGraphicLoteDeleteCm","idGraphicLabelLineaDivision","idGraphicLabelCodLote","symbolByCase","graphicLayerLineaDivision","id","graphicLayerLabelLineaDivision","graphicLayerPredioByDivison","fontAwesome","document","createElement","src","head","appendChild","baseClass","codRequestsCm","currentTabActive","layersMap","queryUbigeo","case","caseDescription","lotesQuery","idlotes","arancel","codigosPredios","xy","idxLines","cpmPredioDivision","idPredioDivision","cpmAcumulacion","idAcumulacion","editToolbar","idButtonDrawActive","queryRequests","ubigeo","limit","offset","ordering","defaultOffset","currentCount","responseRequests","currentLotsRows","currentLandRows","currentPoinLotsRows","postCreate","inherited","arguments","console","log","_getAllLayers","geometryService","config","geometryServiceUrl","selfCm","_filterByDistrictCm","_startExtentByDistrictCm","esri","bundle","toolbars","draw","addPoint","addShape","resume","start","getInstance","map","itemInfo","then","hitch","layerInfosObj","_showMessage","message","type","title","nls","_widgetLabel","titleLabel","_showMessagePromise","messagetext","deferred","buttons","label","onClick","resolve","hide","promise","_showMessageConfirm","mensaje","quesstionContinue","queryPredios","getLayerInfoById","getFilter","setFilter","query","where","qTask","getUrl","executeForExtent","results","setExtent","extent","homeWidget","getWidgetsByName","homeDijit","error","startup","busyIndicator","create","target","domNode","parentNode","backgroundOpacity","_callApiRestServices","baseUrl","url","URL","Object","forEach","searchParams","append","fetch","response","ok","Error","status","json","catch","err","_getRequestsTrayDataCm","responseData","state","data","filter","i","_loadIniRequestsCm","dojo","click","_parseDateStringtoFormat","dateString","date","Date","day","getDate","month","getMonth","year","getFullYear","_loadRequestTabActiveCm","evt","currentElementActive","idStatus","_loadRequestsCm","show","applicationListUrl","dataHtml","lands","lnd","join","idType","icon","tbody","innerHTML","tb","getElementsByTagName","length","tableRequestApCm","removeChild","on","_openFormCase","_openFormResult","removeClass","classList","add","_controlLabelPagination","_changeLimitPagination","parseInt","value","_nextPagePagination","_prevPagePagination","ini","disabled","end","_zoomToPredSelectedEvt","cup","currentTarget","dataset","_zoomToPredSelected","_handleFeatureSelected","feature","featureSelected","setSymbol","addLayer","centerAt","geometry","setTimeout","_removeLayerGraphic","LandCls","Land","prediosLayer","propertyLayer","mode","MODE_ONDEMAND","outFields","codCpu","estado","selectFeatures","SELECTION_NEW","emptyLandSelected","reject","_openSupportingDocument","emptyDocSupport","open","focus","executeQueryTask","Promise","execute","_getLandsOriginals","self","LotCls","Lot","queryLands","cpuOriginal","currentLandTabRows","ubigeoFieldName","returnGeometry","urlLands","features","errorGetLand","idLots","attributes","idLotP","_getLotsOriginals","queryLots","urlLots","emptyLotRequests","codMznValues","codSectValues","_getPointLotsOriginals","queryPointLots","urlPointLots","emptyPointLotRequests","_getLandsOriginalsTab","idSolicitud","urlOriginal","landsByApplicationUrl","count","_getOriginalData","_zoomExtentToLote","errorAcumulationLandsNumber","unionPredios","_unionFeatures","getExtent","expand","_zoomHomeRequests","_toggleBodyCaseInfo","closest","querySelector","toggle","_requestCaseInfo","urlResults","resultsByApplication","urlDocSupport","all","_","responseResults","responseDocSupport","empyLandResultsRequests","rows","idx","contentCard","active","support","rowsResults","addClass","uniqueCodeLands","reasignarApCm","fusionApCm","divisionApCm","eliminacionApCm","independenceApCm","pointLots","landsSymbol","landsSymbolSelected","removeAllGraphics","renderTableLandAssignment","renderButtonProcess","_executeIndependenceLands","selectedPointLots","bind","highlightLand","reestartSymbolLand","resultCtnApCm","remove","obsCtnApCm","requestTrayApCm","casesCtnApCm","row","rowList","td","deactivate","disableSnapping","bodyTbLinesDvApCm","bodyTbPrediosDvApCm","bodyTbDatosLoteDvApCm","clear","_removeClassActiveButton","_openFormObs","textAreaObsApCm","imageDiv","imgUploadApCm","style","backgroundImage","_FormResult","id_solicitud","caseCm","urlPredioResults","nameCase","resultDeactivate","bodyTbResultsApCm","predio","index","_centerAtPredioResult","replace","_createToolbar","_addToMap","screenPoint","toScreen","snappingManager","getSnappingPoint","undefined","point_g","webMercatorToGeographic","graphic","symbol","graphicLayer","x","y","cpm","setInfoWindowOnClick","alert","errorSnapingLocate","nameIdLine","_populateTableDrawLine","_addNameToLine","layerId","graphicsLayerIds","includes","removeLayer","getLayer","_activateTool","_activateSnappingByReasignar","activate","_activateToolAcumulacion","parentElement","split","_activateSnappingByAcumulacion","_activateToolLinesDivision","_activateSnappingByDivision","cflayer","snapManager","enableSnapping","snapPointSymbol","tolerance","layerInfos","layer","setLayerInfos","graphicLayerPuntoLote","graphicsLayerInfo","layers","LayerInfo","name","arr","union","_unionFeaturesAcumulation","topology","graphicLayerLoteFusion","rings","_extent","_ApplyAcumulationLotsRefactor","_getOriginalLots","geomLoteAcumulation","_getMaxCodLot","_ordenarPoligonosNorteSur","proprsLot","polygons","maxCodLote","bodyTbDatosLoteFsApCm","_addGraphicsPointLotsAndArancel","_populateTablePredio","bodyTbPrediosFsApCm","_getMidpoint","polyline","geodesicLength","midpoint","geodesicDensify","getPoint","_findMidpoint","lengthPolylineChunk","line","lineString","paths","options","units","along","_getLongestPolyline","longestPath","path","polylineChunk","spatialReference","wkid","_dividePolygon","poly","lines","divide","cut","item","simplePolygon","push","idLine","tr","cursor","_deleteRowLine","_zoonToLineDivision","_editaNameLineDivision","elem","graphics","graphicLabel","polylineGeom","polylineGeomUtm","midPoint","pointLabel","coordinates","font","STYLE_NORMAL","VARIANT_NORMAL","WEIGHT_BOLD","txtSym","setOffset","setAlign","ALIGN_END","setHaloColor","setHaloSize","text","innerText","refresh","bodyTable","drawFunction","_activateSnappingPrediosByDivision","graphiclayer","_activateToolPrediosByDivision","_changeValueCodLote","selectedValue","currentSelectId","lyr","graphicSelected","selects","select","graphicNotSelected","_changeLotUrb","lot_urb","_centerAtLabelCodLoteDivision","centerAndZoom","_editLoteUrbanoDivision","selectedOptions","_buildDataLoteTable","tableBody","predios","indexCell","className","textContent","num","codigoCell","optionDisabled","option","p","cod_lote","selected","loteUrbCell","loteUrbSelect","optionDisabledLotUrb","cloneNode","request","urbanLotNumber","locationMarker","poligonos","coordenadasNorte","poligono","ymax","poligonosOrdenados","slice","sort","a","b","coordenadaNorteA","indexOf","coordenadaNorteB","graphicLayerLabelCodLoteDivision","dataLoteTable","labelPoints","point","_zfill","setColor","setSize","idGraphic","clase","len","Array","fill","polygonos","estadisticaDef","statisticType","onStatisticField","outStatisticFieldName","outStatistics","queryTask","result","resultado","outSR","f","requestOptions","content","handleAs","callbackParamName","usePost","_getPolylinesDrawn","unionGraphicLayerLineaDivision","lineGeometry","_divideLotsByLines","errorLotQuery","polygonGeometry","geomLoteDivided","errorDivideLot","graphicLayerLoteDivision","lote","orderByFields","graphicLayerFrenteLote","graphicLoteDivision","frentes","isItc","intersects","hasOwnProperty","unionFrentes","idItcFrentesByLotes","itcFrentesByLotes","intersect","symbolFrenteLote","Math","floor","random","frente","puntoLoteTurf","puntoLote","puntoLoteGraphic","_ApplyDivideLotesRefactor","emptyLineSubdivision","reorderLayer","_executeReasignacionGpService","emptyNewLocation","_executeGPService","reasignacionUrl","_executeAcumulacionGpService","emptyPreviewAccumulation","emptyNewLand","labelCodLotesLayer","_addWarningMessageExecute","labelCodLotesLayerGraphic","codRequests","codLot","lotUrb","coords","newPointLotsGraphics","newLandsGraphics","landUrl","pointLotUrl","lotUrl","arancelUrl","blockUrl","cadastralBlockUrl","lotGraphic","user","caseRequest","queryBlock","executeAcumulation","setVisibility","_removeWarningMessageExecute","successProcess","_executeSubdivisionGpService","layerLote","emptyPreviewSubdivision","pred","emptyLotCodeSubdivision","emptyUrbanLotSubdivision","emptyGraphicLandSubdivision","checkLotsWithinLands","emptyLandResultSubdivision","executeSubdivision","finally","_executeInactivarGpService","codRequest","cpu","executeDeactivate","buzyElm","imgElm","loadingText","position","topMessage","parseFloat","top","leftImg","left","width","transform","background","zIndex","warningExecute","checkPointLotsSelected","emptyWaySelectedIndependence","newLands","matrixLand","executeIndependence","urlStatusRequest","gp","submitJob","_completeCallback","_statusCallback","JobInfo","jobId","textMessage","messages","description","jobStatus","getResultData","_sendDataToPlatform","_exportTableToExcel","table","headerRow","querySelectorAll","headers","headerCols","h","cols","j","wb","utils","book_new","ws","json_to_sheet","sheetName","book_append_sheet","writeFile","_dataURItoBlob","dataURI","byteString","atob","mimeString","buffer","ArrayBuffer","dataView","Uint8Array","charCodeAt","Blob","_sendObservation","file","files","emptyImageSupport","reader","FileReader","FormData","onloadend","observationUrl","method","body","successRequestObservation","errorProcessRequestObservation","readAsDataURL","_uploadImagenObs","backgroundSize","backgroundRepeat","backgroundPosition","_searchRequestByCodPred","keyCode","_sortedByDate","columnOrder","val","onOpen","info","isModified"],"mappings":"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","file":"Widget.js","sourcesContent":["import declare from 'dojo/_base/declare';\r\nimport BaseWidget from 'jimu/BaseWidget';\r\nimport _WidgetsInTemplateMixin from 'dijit/_WidgetsInTemplateMixin';\r\nimport Draw from \"esri/toolbars/draw\";\r\nimport Edit from \"esri/toolbars/edit\";\r\nimport Graphic from \"esri/graphic\";\r\nimport SimpleFillSymbol from \"esri/symbols/SimpleFillSymbol\";\r\nimport SimpleMarkerSymbol from \"esri/symbols/SimpleMarkerSymbol\";\r\nimport SimpleLineSymbol from \"esri/symbols/SimpleLineSymbol\";\r\nimport Color from 'dojo/_base/Color';\r\nimport GraphicsLayer from \"esri/layers/GraphicsLayer\"\r\nimport Point from \"esri/geometry/Point\"\r\nimport LayerInfos from \"jimu/LayerInfos/LayerInfos\";\r\nimport lang from \"dojo/_base/lang\";\r\nimport FeatureLayer from \"esri/layers/FeatureLayer\";\r\nimport QueryTask from \"esri/tasks/QueryTask\";\r\nimport Query from \"esri/tasks/query\";\r\nimport WidgetManager from \"jimu/WidgetManager\"\r\nimport geometryEngine from \"esri/geometry/geometryEngine\";\r\nimport Polyline from \"esri/geometry/Polyline\";\r\nimport Polygon from \"esri/geometry/Polygon\";\r\nimport webMercatorUtils from \"esri/geometry/webMercatorUtils\";\r\nimport Geoprocessor from \"esri/tasks/Geoprocessor\";\r\nimport BusyIndicator from 'esri/dijit/util/busyIndicator';\r\nimport Message from \"jimu/dijit/Message\";\r\nimport turf from \"https://unpkg.com/@turf/turf@6/turf.min.js\"\r\nimport XLSX from \"https://unpkg.com/xlsx@0.17.2/dist/xlsx.full.min.js\"\r\nimport Deferred from \"dojo/Deferred\";\r\nimport TextSymbol from \"esri/symbols/TextSymbol\";\r\nimport Font from \"esri/symbols/Font\";\r\nimport CaseInfo from './CaseInfo';\r\nimport StatisticDefinition from \"esri/tasks/StatisticDefinition\"\r\nimport esriRequest from \"esri/request\"\r\nimport SubDivision from './case/Subdivision';\r\nimport Acumulation from './case/Acumulation';\r\nimport Independence from './case/Independence';\r\nimport Deactivate from './case/Deactivate';\r\nimport LandAssignment from './components/LandAssignment';\r\nimport LandProcess from './components/LandProcess';\r\n// import LandMatrix from './components/LandMatrix';\r\nimport UtilityCase from './case/UtilityCase';\r\nimport GeometryService from \"esri/tasks/GeometryService\";\r\n\r\n\r\n\r\nconst requestToAttendState = \"por_atender\"\r\nconst requestsObservedState = \"observado\"\r\nconst requestsAttendState = \"atendido\"\r\n\r\n\r\n// Layers ids\r\nconst idLyrCatastroFiscal = \"CARTO_FISCAL_6806\"\r\nconst idLyrCfPredios = \"CARTO_FISCAL_6806_0\"\r\nconst idLyrCfLotesPun = \"CARTO_FISCAL_6806_1\"\r\nconst idLyrCfEje_vial = \"CARTO_FISCAL_6806_2\"\r\nconst idLyrCfNumeracion = \"CARTO_FISCAL_6806_3\"\r\nconst idLyrCfArancel = \"CARTO_FISCAL_6806_4\"\r\nconst idLyrCfLotes = \"CARTO_FISCAL_6806_5\"\r\nconst idLyrCfUnidadesurbanas = \"CARTO_FISCAL_6806_6\"\r\nconst idLyrCfParques = \"CARTO_FISCAL_6806_7\"\r\nconst idLyrCfManzana = \"CARTO_FISCAL_6806_8\"\r\nconst idLyrCfManzanaUrb = \"CARTO_FISCAL_6806_9\"\r\nconst idLyrCfSector = \"CARTO_FISCAL_6806_9\"\r\n// const idLyrActpuntoimg = \"ACTUALIZACION_DE_PUNTO_IMG_1890\"\r\nconst idLyrDistricts = \"limites_nacional_1821_2\"\r\n\r\nconst iconByState = {\r\n  \"por_atender\": { 'icon': 'fas fa-pencil-alt', 'id': 'editRequestsCm', 'desc': \"Por atender\", 'idStatus': 1 },\r\n  \"observado\": { 'icon': 'fas fa-pause', 'id': 'obsRequestsCm', 'desc': \"Observado\", 'idStatus': 3 },\r\n  \"atendido\": { 'icon': 'fas fa-check', 'id': 'goodRequestsCm', 'desc': \"Atendido\", 'idStatus': 2 },\r\n}\r\n\r\n// Fields \r\nconst _UBIGEO_FIELD = \"UBIGEO\"\r\nconst _ID_LOTE_P_FIELD = \"ID_LOTE_P\"\r\nconst _COD_MZN_FIELD = \"COD_MZN\"\r\nconst _F_MZN_FIELD = \"F_MZN\"\r\nconst _COD_SECT_FIELD = \"COD_SECT\"\r\nconst _COD_PRE_FIELD = \"COD_PRE\"\r\nconst _COD_LOTE_FIELD = \"COD_LOTE\"\r\n\r\n\r\nlet toolbarCm\r\n\r\nconst params = new URLSearchParams(window.location.search)\r\nconst paramsApp = {}\r\n\r\nfor (let key of params.keys()) {\r\n  paramsApp[key] = params.get(key)\r\n}\r\n\r\n// Styles\r\nconst symbolPuntoLote = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_SQUARE,\r\n  20,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0]), 2),\r\n  new Color([0, 92, 230, 1]\r\n  )\r\n)\r\n\r\nconst symbolFusionLote = new SimpleFillSymbol(\r\n  SimpleFillSymbol.STYLE_SOLID,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0]),\r\n    2\r\n  ),\r\n  new Color([255, 255, 0, 0.25])\r\n)\r\n\r\nconst symbolEliminarLote = new SimpleFillSymbol(\r\n  SimpleFillSymbol.STYLE_DIAGONAL_CROSS,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([100, 100, 100]),\r\n    2\r\n  ),\r\n  new Color([229, 229, 229, 0.9])\r\n)\r\n\r\nconst symbolLoteSelected = new SimpleFillSymbol(\r\n  SimpleFillSymbol.STYLE_SOLID,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0, 0.75]),\r\n    4\r\n  ),\r\n  new Color([0, 255, 0, 0])\r\n)\r\n\r\nconst symbolDivisionLote = new SimpleLineSymbol(\r\n  SimpleLineSymbol.STYLE_DASH,\r\n  new Color([255, 0, 0]),\r\n  2\r\n)\r\n\r\nconst symbolPredio = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_SQUARE,\r\n  20,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0]), 2),\r\n  new Color([235, 69, 95, 1]\r\n  )\r\n)\r\n\r\nconst symbolPredioSelected = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_SQUARE, 20,\r\n  new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0]), 4),\r\n  new Color([0, 255, 0, 0])\r\n);\r\n\r\nconst symbolPredioSelected2 = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_SQUARE,\r\n  30,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([0, 183, 205]), 2),\r\n  new Color([0, 255, 255]\r\n  )\r\n);\r\n\r\nconst symbolSnapPointCm = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_CROSS,\r\n  20,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0]),\r\n    2\r\n  ),\r\n  new Color([0, 255, 0, 0.25])\r\n)\r\n\r\n\r\n// Identificadores de graficos\r\nconst idGraphicPredioCm = \"graphicPredioCm2\"\r\nconst idGraphicPredioByDivison = \"graphicPredioByDivison\"\r\n// const idGraphicLandsByIndependence = \"graphicLandsByIndependence\"\r\nconst idGraphicPredioSelectedCm = \"graphicPredioSelected\"\r\nconst idGraphicLoteCm = \"graphicLoteCm\"\r\nconst idGraphicLoteSelectedCm = \"graphicLoteSelectedCm\"\r\nconst idGraphicPuntoLote = \"graphicPuntoLote\"\r\nconst idGraphicFrenteLote = \"graphicFrenteLote\"\r\nconst idGraphicLineaDivision = \"graphicLineaDivision\"\r\nconst idGraphicLoteDeleteCm = \"graphicLoteDeleteCm\"\r\nconst idGraphicLabelLineaDivision = \"graphicLabelLineaDivision\"\r\nconst idGraphicLabelCodLote = \"graphicLabelCodLoteDivision\"\r\n\r\n// symbol by case\r\nconst symbolByCase = {\r\n  \"1\": { \"symbol\": symbolPredio },\r\n  \"2\": { \"symbol\": symbolPredio },\r\n  \"3\": { \"symbol\": symbolPredio },\r\n}\r\n\r\n// graphicsLayer main\r\nconst graphicLayerLineaDivision = new GraphicsLayer({\r\n  id: idGraphicLineaDivision,\r\n});\r\n\r\nconst graphicLayerLabelLineaDivision = new GraphicsLayer({\r\n  id: idGraphicLabelLineaDivision,\r\n});\r\n\r\n// let graphicLayerLabelCodLoteDivision = new GraphicsLayer({\r\n//   id: idGraphicLabelCodLote,\r\n// });\r\n\r\nconst graphicLayerPredioByDivison = new GraphicsLayer({\r\n  id: idGraphicPredioByDivison,\r\n});\r\n\r\n// const graphicLayerLandsByIndependence = new GraphicsLayer({\r\n//   id: idGraphicLandsByIndependence,\r\n// });\r\n\r\nconst fontAwesome = document.createElement('script');\r\nfontAwesome.src = 'https://use.fontawesome.com/releases/v5.3.1/js/all.js';\r\ndocument.head.appendChild(fontAwesome);\r\n\r\n// To create a widget, you need to derive from BaseWidget.\r\nexport default declare([BaseWidget], {\r\n\r\n  // Custom widget code goes here\r\n\r\n  baseClass: 'carto-maintenance-wgt',\r\n  codRequestsCm: null,\r\n  currentTabActive: requestToAttendState,\r\n  layersMap: [],\r\n  queryUbigeo: paramsApp['ubigeo'] ? `${_UBIGEO_FIELD} = '${paramsApp['ubigeo']}'` : \"1=1\",\r\n  case: 0,\r\n  caseDescription: '',\r\n  lotesQuery: null,\r\n  idlotes: null,\r\n  arancel: null,\r\n  codigosPredios: null,\r\n  xy: [],\r\n  idxLines: 0,\r\n  cpmPredioDivision: '',\r\n  idPredioDivision: '',\r\n  cpmAcumulacion: '',\r\n  idAcumulacion: '',\r\n  editToolbar: null,\r\n  idButtonDrawActive: '',\r\n  queryRequests: {\r\n    ubigeo: paramsApp['ubigeo'],\r\n    limit: 25,\r\n    offset: 0,\r\n    ordering: \"date\"\r\n  },\r\n  // defaultLimit: 25,\r\n  defaultOffset: 0,\r\n  currentCount: 0,\r\n  responseRequests: null,\r\n  currentLotsRows: null,\r\n  currentLandRows: null,\r\n  currentPoinLotsRows: null,\r\n  // currentLotsRowsAsPolygons: null,\r\n\r\n  // add additional properties here\r\n\r\n  // methods to communication with app container:\r\n  postCreate() {\r\n    this.inherited(arguments);\r\n    console.log('CartoMaintenanceWgt::postCreate');\r\n    this._getAllLayers();\r\n    this.geometryService = new GeometryService(this.config.geometryServiceUrl);\r\n    selfCm = this;\r\n    this._filterByDistrictCm();\r\n    this._startExtentByDistrictCm();\r\n    esri.bundle.toolbars.draw.addPoint = esri.bundle.toolbars.draw.addPoint + \"<br/>Pulsar <strong>CTRL</strong> para activar la alineación\";\r\n    esri.bundle.toolbars.draw.addShape = esri.bundle.toolbars.draw.addShape + \"<br/>Pulsar <strong>CTRL</strong> para activar la alineación\";\r\n    esri.bundle.toolbars.draw.resume = esri.bundle.toolbars.draw.resume + \"<br/>Pulsar <strong>CTRL</strong> para activar la alineación\";\r\n    esri.bundle.toolbars.draw.start = esri.bundle.toolbars.draw.start + \"<br/>Pulsar <strong>CTRL</strong> para activar la alineación\";\r\n  },\r\n  _getAllLayers() {\r\n    LayerInfos.getInstance(this.map, this.map.itemInfo).then(lang.hitch(this, function (layerInfosObj) {\r\n      this.layersMap = layerInfosObj;\r\n    }));\r\n  },\r\n\r\n  _showMessage(message, type = 'message') {\r\n    let title = `${this.nls._widgetLabel}: ${type}`\r\n    switch (type) {\r\n      case 'error':\r\n        new Message({\r\n          type: type,\r\n          titleLabel: title,\r\n          message: message,\r\n        });\r\n        break;\r\n      default:\r\n        new Message({\r\n          type: type,\r\n          titleLabel: title,\r\n          message: message,\r\n        });\r\n        break;\r\n    }\r\n\r\n  },\r\n\r\n  _showMessagePromise(messagetext) {\r\n    let deferred = new Deferred();\r\n    let message = new Message({\r\n      message: messagetext,\r\n      buttons: [{\r\n        label: \"Ok\",\r\n        onClick: function () {\r\n          deferred.resolve(true);\r\n          message.hide();\r\n        }\r\n      }]\r\n    });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _showMessageConfirm() {\r\n    let deferred = new Deferred();\r\n    let mensaje = new Message({\r\n      message: selfCm.nls.quesstionContinue,\r\n      type: \"question\",\r\n      buttons: [{\r\n        label: \"Sí\",\r\n        onClick: function () {\r\n          deferred.resolve(true);\r\n          mensaje.hide();\r\n        }\r\n      }, {\r\n        label: \"No\",\r\n        onClick: function () {\r\n          deferred.resolve(false);\r\n          mensaje.hide();\r\n        }\r\n      }]\r\n    });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _filterByDistrictCm() {\r\n    let queryPredios = selfCm.layersMap.getLayerInfoById(idLyrCfPredios).getFilter()\r\n    queryPredios = queryPredios ? queryPredios + \" AND \" + selfCm.queryUbigeo : selfCm.queryUbigeo\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfPredios).setFilter(queryPredios)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfLotesPun).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfEje_vial).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfNumeracion).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfArancel).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfLotes).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfUnidadesurbanas).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfParques).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfManzana).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfSector).setFilter(selfCm.queryUbigeo)\r\n    // selfCm.layersMap.getLayerInfoById(idLyrActpuntoimg).setFilter(selfCm.queryUbigeo)\r\n  },\r\n\r\n  _startExtentByDistrictCm() {\r\n    const query = new Query()\r\n    query.where = selfCm.queryUbigeo\r\n\r\n    const qTask = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrDistricts).getUrl())\r\n\r\n    qTask.executeForExtent(query, function (results) {\r\n      selfCm.map.setExtent(results.extent).then(function () {\r\n        // get the next scale value from the current scale\r\n        const homeWidget = WidgetManager.getInstance().getWidgetsByName(\"HomeButton\");\r\n        homeWidget[0].homeDijit.extent = selfCm.map.extent;\r\n      })\r\n    }, function (error) {\r\n      console.log(error)\r\n    })\r\n  },\r\n\r\n  startup() {\r\n    this.inherited(arguments);\r\n    console.log('CartoMaintenanceWgt::startup');\r\n\r\n    this.busyIndicator = BusyIndicator.create({\r\n      target: this.domNode.parentNode.parentNode,\r\n      backgroundOpacity: 0\r\n    });\r\n  },\r\n\r\n  _callApiRestServices(baseUrl, params) {\r\n    const url = new URL(baseUrl);\r\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\r\n\r\n    return fetch(url)\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          selfCm.busyIndicator.hide();\r\n          throw new Error(\"HTTP error \" + response.status);\r\n        }\r\n        return response.json();\r\n      })\r\n      .catch(function (err) {\r\n        selfCm.busyIndicator.hide();\r\n        console.log(\"An error occurred while fetching the data.\");\r\n      });\r\n  },\r\n\r\n  _getRequestsTrayDataCm(responseData, state) {\r\n    // Reemplazar todo el metodo para capturar datos de servicio\r\n    const data = responseData.filter((i) => i.status == state);\r\n    return data\r\n  },\r\n\r\n  _loadIniRequestsCm() {\r\n    dojo.query(`#${selfCm.currentTabActive}`)[0].click()\r\n  },\r\n\r\n  _parseDateStringtoFormat(dateString) {\r\n    const date = new Date(dateString)\r\n    const day = date.getDate()\r\n    const month = date.getMonth() + 1\r\n    const year = date.getFullYear()\r\n    return `${day}/${month}/${year}`\r\n  },\r\n\r\n  _loadRequestTabActiveCm(evt) {\r\n    // selfCm.busyIndicator.show();\r\n    selfCm.currentTabActive = evt.target.id;\r\n    selfCm.currentElementActive = evt.target;\r\n    selfCm.queryRequests['id_status'] = iconByState[evt.target.id].idStatus;\r\n    selfCm.queryRequests['offset'] = selfCm.defaultOffset;\r\n    selfCm._loadRequestsCm()\r\n    // .then(selfCm._controlLabelPagination());\r\n  },\r\n\r\n  _loadRequestsCm() {\r\n    selfCm.busyIndicator.show();\r\n    selfCm._callApiRestServices(selfCm.config.applicationListUrl, selfCm.queryRequests).then(response => {\r\n      selfCm.currentCount = response['count'];\r\n\r\n      response = response['results']\r\n      const dataHtml = response.map((i) => `<tr>\r\n                                        <td>${i.id}</td>\r\n                                        <td>${i.type}</td>\r\n                                        <td>${i.lands.map(lnd => lnd['cup']).join(', ')}</td>\r\n                                        <td>${selfCm._parseDateStringtoFormat(i.date)}</td>\r\n                                        <td>\r\n                                          <button id=\"${iconByState[selfCm.currentTabActive].id}\" value=\"${i.idType}\" class=\"stateRequestClsCm\">\r\n                                            <i class=\"${iconByState[selfCm.currentTabActive].icon}\"></i>\r\n                                          </button>\r\n                                        </td>\r\n                                      </tr>`\r\n      )\r\n      const tbody = dojo.create('tbody', { innerHTML: dataHtml.join('') });\r\n      const tb = dojo.query(\".tableRequestClsCm\")[0]\r\n      if (tb.getElementsByTagName(\"tbody\").length > 0) {\r\n        selfCm.tableRequestApCm.removeChild(tb.getElementsByTagName(\"tbody\")[0])\r\n      }\r\n      selfCm.tableRequestApCm.appendChild(tbody);\r\n      if (selfCm.currentTabActive == requestToAttendState) {\r\n        dojo.query(\".stateRequestClsCm\").on('click', selfCm._openFormCase);\r\n      }\r\n      if (selfCm.currentTabActive == requestsAttendState) {\r\n        dojo.query(\".stateRequestClsCm\").on('click', selfCm._openFormResult);\r\n      }\r\n\r\n      dojo.query(\".tablinksCm\").removeClass(\"active\");\r\n      selfCm.currentElementActive.classList.add(\"active\");\r\n      selfCm._controlLabelPagination();\r\n      selfCm.busyIndicator.hide();\r\n    })\r\n  },\r\n\r\n  _changeLimitPagination(evt) {\r\n    selfCm.queryRequests['limit'] = parseInt(evt.target.value);\r\n    selfCm.queryRequests['offset'] = selfCm.defaultOffset;\r\n    selfCm._loadRequestsCm();\r\n  },\r\n\r\n  _nextPagePagination(evt) {\r\n    selfCm.queryRequests['offset'] = selfCm.queryRequests['offset'] + selfCm.queryRequests['limit'];\r\n    selfCm._loadRequestsCm();\r\n  },\r\n\r\n  _prevPagePagination(evt) {\r\n    selfCm.queryRequests['offset'] = selfCm.queryRequests['offset'] - selfCm.queryRequests['limit'];\r\n    // if (selfCm.queryRequests['offset'] < 0) {\r\n    //   selfCm.queryRequests['offset'] = 0; // Ensure offset does not go negative\r\n    // }\r\n    selfCm._loadRequestsCm();\r\n  },\r\n\r\n  _controlLabelPagination() {\r\n    const ini = selfCm.queryRequests['offset'] + 1\r\n    dojo.query(\".buttonPaginationPrevClsCm\")[0].disabled = ini == 1 ? true : false\r\n    const end = selfCm.queryRequests['offset'] + selfCm.queryRequests['limit']\r\n    dojo.query(\".buttonPaginationNextClsCm\")[0].disabled = end >= selfCm.currentCount ? true : false\r\n    dojo.query(\".labelPaginationCtnCm\")[0].innerHTML = `${ini} - ${end} de ${selfCm.currentCount}`\r\n  },\r\n\r\n  _zoomToPredSelectedEvt(evt) {\r\n    // @cpu\r\n    const cup = evt.currentTarget.dataset.cup\r\n    return selfCm._zoomToPredSelected(cup)\r\n  },\r\n\r\n  _handleFeatureSelected(feature) {\r\n    const featureSelected = new GraphicsLayer({\r\n      id: idGraphicPredioSelectedCm\r\n    });\r\n    feature[0].setSymbol(symbolPredioSelected);\r\n    featureSelected.add(feature[0]);\r\n    selfCm.map.addLayer(featureSelected);\r\n    selfCm.map.centerAt(feature[0].geometry);\r\n\r\n    setTimeout(function () {\r\n      // clearInterval(interval);\r\n      selfCm._removeLayerGraphic(idGraphicPredioSelectedCm);\r\n    }, 1000);\r\n  },\r\n\r\n  _zoomToPredSelected(cup) {\r\n    selfCm.busyIndicator.show();\r\n    const deferred = new Deferred();\r\n    const LandCls = new UtilityCase.Land();\r\n    selfCm._removeLayerGraphic(idGraphicPredioSelectedCm);\r\n    const prediosLayer = selfCm.layersMap.getLayerInfoById(idLyrCfPredios);\r\n    const propertyLayer = new FeatureLayer(prediosLayer.getUrl(), {\r\n      mode: FeatureLayer.MODE_ONDEMAND,\r\n      outFields: [\"*\"]\r\n    });\r\n    // crear una consulta para seleccionar la fila deseada\r\n    const query = new Query();\r\n    // @cpu\r\n    query.where = `${_UBIGEO_FIELD} = '${paramsApp['ubigeo']}' and ${LandCls.codCpu} = '${cup}' and ${LandCls.estado} = 1`;\r\n\r\n    // seleccionar la fila\r\n    propertyLayer.selectFeatures(query, FeatureLayer.SELECTION_NEW)\r\n      .then(\r\n        results => {\r\n          if (results.length == 0) {\r\n            throw new Error(selfCm.nls.emptyLandSelected)\r\n          }\r\n          // if (selfCm.case == 2) {\r\n          //   if (results.length < 2) {\r\n          //     throw new Error(selfCm.nls.errorAcumulationLandsNumber);\r\n          //   }\r\n          // }\r\n          selfCm._handleFeatureSelected(results)\r\n          selfCm.busyIndicator.hide();\r\n          return deferred.resolve(results)\r\n        }\r\n      )\r\n      .catch(error => {\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(error.message, type = \"error\")\r\n        deferred.reject(error)\r\n      })\r\n    return deferred.promise;\r\n  },\r\n\r\n  _openSupportingDocument(evt) {\r\n    // check if value is empty\r\n    if (!evt.currentTarget.value) {\r\n      selfCm._showMessage(selfCm.nls.emptyDocSupport, type = \"error\")\r\n      return\r\n    }\r\n    window.open(evt.currentTarget.value, '_blank').focus();\r\n  },\r\n\r\n  executeQueryTask(url, query, type = 'query') {\r\n    return new Promise((resolve, reject) => {\r\n      const qTask = new QueryTask(url);\r\n      switch (type) {\r\n        case 'query':\r\n          qTask.execute(query, resolve, reject);\r\n          break;\r\n        case 'queryForExtent':\r\n          qTask.executeForExtent(query, resolve, reject);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  },\r\n\r\n  _getLandsOriginals() {\r\n    const self = this;\r\n    const deferred = new Deferred();\r\n    const LandCls = new UtilityCase.Land();\r\n    const LotCls = new UtilityCase.Lot();\r\n    const queryLands = new Query();\r\n    // @cpu\r\n    const cpuOriginal = self.currentLandTabRows.map(i => i.cup);\r\n    queryLands.where = `${UtilityCase.ubigeoFieldName} = '${paramsApp['ubigeo']}' and ${LandCls.codCpu} in ('${cpuOriginal.join(\"', '\")}') and ${LandCls.estado} = 1`;\r\n    queryLands.returnGeometry = true;\r\n    queryLands.outFields = [\"*\"];\r\n    const urlLands = self.layersMap.getLayerInfoById(idLyrCfPredios).getUrl();\r\n    self.executeQueryTask(urlLands, queryLands)\r\n      .then(results => {\r\n        if (results.features.length == 0) {\r\n          throw new Error(self.nls.errorGetLand);\r\n        }\r\n        self.currentLandRows = results.features;\r\n        const idLots = self.currentLandRows.map((i) => i.attributes[LotCls.idLotP]);\r\n        deferred.resolve(idLots);\r\n      })\r\n      .catch(error => {\r\n        deferred.reject(error);\r\n      });\r\n    return deferred.promise;\r\n  },\r\n  _getLotsOriginals(idLots) {\r\n    const self = this;\r\n    const LotCls = new UtilityCase.Lot()\r\n    const deferred = new Deferred();\r\n    const queryLots = new Query();\r\n    queryLots.where = `${LotCls.idLotP} in (${idLots.join(\",\")}) and (${UtilityCase.ubigeoFieldName} = ${paramsApp['ubigeo']})`;\r\n    self.lotesQuery = queryLots.where;\r\n    queryLots.returnGeometry = true;\r\n    queryLots.outFields = [\"*\"];\r\n    const urlLots = self.layersMap.getLayerInfoById(idLyrCfLotes).getUrl();\r\n    self.executeQueryTask(urlLots, queryLots)\r\n      .then(results => {\r\n        if (results.features.length == 0) {\r\n          throw new Error(self.nls.emptyLotRequests);\r\n        }\r\n        self.currentLotsRows = results.features;\r\n        const codMznValues = self.currentLotsRows.map((i) => i.attributes[_COD_MZN_FIELD]).join(\",\")\r\n        const codSectValues = self.currentLotsRows.map((i) => i.attributes[_COD_SECT_FIELD]).join(\",\")\r\n        self.arancel = `(${UtilityCase.ubigeoFieldName} = ${paramsApp['ubigeo']}) and ${_COD_MZN_FIELD} in (${codMznValues}) and ${_COD_SECT_FIELD} in (${codSectValues})`;\r\n        deferred.resolve(idLots);\r\n      })\r\n      .catch(error => {\r\n        deferred.reject(error);\r\n      });\r\n    return deferred.promise;\r\n  },\r\n  _getPointLotsOriginals(idLots) {\r\n    const self = this;\r\n    const LotCls = new UtilityCase.Lot()\r\n    const deferred = new Deferred();\r\n    const queryPointLots = new Query();\r\n    queryPointLots.where = `${LotCls.idLotP} in (${idLots.join(\",\")}) and (${UtilityCase.ubigeoFieldName} = ${paramsApp['ubigeo']})`;\r\n    queryPointLots.returnGeometry = true;\r\n    queryPointLots.outFields = [\"*\"];\r\n    const urlPointLots = self.layersMap.getLayerInfoById(idLyrCfLotesPun).getUrl();\r\n    self.executeQueryTask(urlPointLots, queryPointLots)\r\n      .then(results => {\r\n        if (results.features.length == 0) {\r\n          throw new Error(self.nls.emptyPointLotRequests);\r\n        }\r\n        self.currentPoinLotsRows = results.features;\r\n        deferred.resolve(idLots);\r\n      })\r\n      .catch(error => {\r\n        deferred.reject(error);\r\n      });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _getLandsOriginalsTab(idSolicitud) {\r\n    const self = this;\r\n    const deferred = new Deferred();\r\n    const urlOriginal = `${self.config.landsByApplicationUrl}/${idSolicitud}`;\r\n    fetch(urlOriginal)\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error(\"HTTP error \" + response.status);\r\n        }\r\n        return response.json()\r\n      })\r\n      .then(response => {\r\n        if (response.count == 0) {\r\n          throw new Error(self.nls.errorGetLand);\r\n        }\r\n        self.currentLandTabRows = response.results;\r\n        deferred.resolve(self.currentLandTabRows);\r\n      })\r\n      .catch(error => {\r\n        deferred.reject(error);\r\n      });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _getOriginalData(idSolicitud) {\r\n    return this._getLandsOriginalsTab(idSolicitud)\r\n      .then(landsTab => this._getLandsOriginals())\r\n      .then(idLots => this._getPointLotsOriginals(idLots))\r\n      .then(idLots => this._getLotsOriginals(idLots))\r\n      .then((idLots) => {\r\n        return idLots;\r\n      })\r\n      .catch(error => {\r\n        selfCm._showMessage(error.message, type = \"error\");\r\n        // throw error;\r\n      });\r\n  },\r\n\r\n  _zoomExtentToLote() {\r\n    if (!this.currentLotsRows) {\r\n      return\r\n    }\r\n    if (this.case == 2) {\r\n      if (this.currentLotsRows.length < 2) {\r\n        throw new Error(this.nls.errorAcumulationLandsNumber);\r\n      }\r\n    }\r\n    const unionPredios = this._unionFeatures(this.currentLotsRows.map((i) => i.geometry))\r\n    this.map.setExtent(unionPredios.getExtent().expand(2))\r\n  },\r\n\r\n  _zoomHomeRequests() {\r\n    return selfCm._zoomExtentToLote()\r\n  },\r\n\r\n  _toggleBodyCaseInfo(evt) {\r\n    this.closest('.caseInfoClsCm').querySelector('.bodyPredInfoClsCm').classList.toggle('active')\r\n  },\r\n\r\n  _requestCaseInfo() {\r\n    selfCm.busyIndicator.show();\r\n    // const urlOriginal = `${selfCm.config.landsByApplicationUrl}/${idSolicitud}`\r\n    const urlResults = `${selfCm.config.resultsByApplication}/${selfCm.codRequestsCm}`\r\n    const urlDocSupport = `${selfCm.config.applicationListUrl}/${selfCm.codRequestsCm}`\r\n\r\n    Promise.all([\r\n      // fetch(urlOriginal).then(response => response.json()),\r\n      selfCm._getOriginalData(selfCm.codRequestsCm),\r\n      fetch(urlResults).then(response => {\r\n        if (!response.ok) {\r\n          selfCm.busyIndicator.hide();\r\n          throw new Error(\"HTTP error \" + response.status);\r\n        }\r\n        return response.json()\r\n      }),\r\n      fetch(urlDocSupport).then(response => response.json()),\r\n    ]).then(function ([_, responseResults, responseDocSupport]) {\r\n\r\n      if (!_) {\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(selfCm.nls.empyLandResultsRequests, type = \"error\");\r\n        // return\r\n      }\r\n\r\n      const rows = selfCm.currentLandTabRows.map((i, idx) => {\r\n        return CaseInfo.contentCard(i, 'original', i.cup, active = selfCm.case != 2 ? true : false);\r\n      });\r\n\r\n      if (selfCm.case != 4) {\r\n\r\n        if (responseResults.count == 0) {\r\n          selfCm._showMessage(`${selfCm.nls.empyLandResultsRequests} ${selfCm.codRequestsCm}`, type = \"error\");\r\n          selfCm.busyIndicator.hide();\r\n          // return\r\n        }\r\n      }\r\n\r\n      dojo.query(\"#showInfoDocCm\")[0].value = responseDocSupport.support\r\n      dojo.query('.CtnOriginalClsCm')[0].innerHTML = rows.join('');\r\n      dojo.query(\".zoomPredInfoClsCm\").on('click', selfCm._zoomToPredSelectedEvt);\r\n\r\n      if (selfCm.case != 4) {\r\n        const rowsResults = responseResults.results.map((i, idx) => {\r\n          return CaseInfo.contentCard(i, 'result', idx + 1, false, true);\r\n        });\r\n        dojo.query('.CtnResultClsCm')[0].innerHTML = rowsResults.join('');\r\n        dojo.query('.lblResultsClsCm').addClass('active');\r\n      } else {\r\n        dojo.query('.CtnResultClsCm')[0].innerHTML = '';\r\n        dojo.query('.lblResultsClsCm').removeClass('active');\r\n      }\r\n\r\n      dojo.query(\".colapsePredInfoClsCm\").on('click', selfCm._toggleBodyCaseInfo);\r\n\r\n      // @cpu\r\n      selfCm.uniqueCodeLands = selfCm.currentLandTabRows.map((i) => i.cup).join(',');\r\n      selfCm.responseRequests = responseResults['results']\r\n\r\n    })\r\n      .then(function () {\r\n        switch (selfCm.case) {\r\n          case \"1\":\r\n            selfCm.reasignarApCm.classList.toggle('active')\r\n            break;\r\n          case \"2\":\r\n            selfCm.fusionApCm.classList.toggle('active')\r\n            break\r\n          case \"3\":\r\n            selfCm.divisionApCm.classList.toggle('active')\r\n            break\r\n          case \"4\":\r\n            selfCm.eliminacionApCm.classList.toggle('active')\r\n            break\r\n          case \"5\":\r\n            selfCm.independenceApCm.classList.toggle('active')\r\n            selfCm.independenceApCm.innerHTML = ''\r\n            LandAssignment.title = \"Independización\";\r\n            LandAssignment.lands = selfCm.responseRequests;\r\n            LandAssignment.pointLots = selfCm.currentPoinLotsRows;\r\n            LandAssignment.map = selfCm.map;\r\n            LandAssignment.landsSymbol = symbolPredio;\r\n            LandAssignment.landsSymbolSelected = symbolPredioSelected2;\r\n            LandAssignment.removeAllGraphics();\r\n            selfCm.independenceApCm.appendChild(LandAssignment.renderTableLandAssignment());\r\n\r\n            LandProcess.title = \"Enviar datos\";\r\n            LandProcess.type = \"independence\";\r\n            selfCm.independenceApCm.appendChild(LandProcess.renderButtonProcess());\r\n            dojo.query(`#${LandProcess.id}`).on('click', selfCm._executeIndependenceLands);\r\n            dojo.query(\".pointLotSelectionCm\").on('change', LandAssignment.selectedPointLots.bind(LandAssignment));\r\n            dojo.query('.tableClsCm tr').on('mouseover', LandAssignment.highlightLand.bind(LandAssignment));\r\n            dojo.query('.tableClsCm tr').on('mouseout', LandAssignment.reestartSymbolLand.bind(LandAssignment));\r\n            break\r\n          default:\r\n            break;\r\n        }\r\n\r\n        selfCm.resultCtnApCm.classList.remove('active')\r\n        selfCm.obsCtnApCm.classList.remove('active')\r\n        selfCm.requestTrayApCm.classList.remove('active')\r\n        selfCm.casesCtnApCm.classList.toggle('active')\r\n        selfCm._zoomExtentToLote()\r\n        selfCm.busyIndicator.hide();\r\n      })\r\n      .catch(function (error) {\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(error.message, type = \"error\");\r\n      })\r\n\r\n  },\r\n\r\n  _openFormCase(evt) {\r\n    if (evt.currentTarget.id == \"editRequestsCm\") {\r\n      const row = dojo.query(evt.currentTarget).closest(\"tr\")[0];\r\n      const rowList = dojo.query(\"td\", row).map(td => td.innerHTML);\r\n      selfCm.codRequestsCm = rowList[0]\r\n      selfCm.caseDescription = rowList[1]\r\n      dojo.query('#titleCaseCm')[0].innerHTML = `<span>${selfCm.caseDescription} <span class=\"fa fa-search\" style=\"font-size: 15px\"></span></span>`\r\n\r\n      selfCm.case = evt.currentTarget.value\r\n      selfCm._requestCaseInfo();\r\n\r\n    } else if (evt.currentTarget.id == 'backTrayCm' || evt.currentTarget.id == 'backTrayResultCm') {\r\n      // desactivar el toolbarCm de edicion si esta activado\r\n      toolbarCm.deactivate();\r\n\r\n      // deshabilitar snapping\r\n      selfCm.map.disableSnapping()\r\n      selfCm.bodyTbLinesDvApCm.innerHTML = ''\r\n      selfCm.bodyTbPrediosDvApCm.innerHTML = ''\r\n\r\n      dojo.query(\".caseClsCm\").removeClass(\"active\")\r\n      // remove all graphics layer if exist\r\n      selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n      selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n      selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n      selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n      selfCm._removeLayerGraphic(idGraphicPredioSelectedCm);\r\n      selfCm._removeLayerGraphic(idGraphicLabelCodLote)\r\n      selfCm.bodyTbDatosLoteDvApCm.innerHTML = ''\r\n\r\n      graphicLayerLineaDivision.clear();\r\n      graphicLayerLabelLineaDivision.clear();\r\n      graphicLayerPredioByDivison.clear();\r\n\r\n      selfCm.lotesQuery = null\r\n      selfCm.arancel = null\r\n      selfCm.xy = []\r\n\r\n      selfCm.casesCtnApCm.classList.remove('active')\r\n      selfCm.resultCtnApCm.classList.remove('active')\r\n      selfCm.obsCtnApCm.classList.remove('active')\r\n      selfCm.requestTrayApCm.classList.toggle('active')\r\n      selfCm._removeClassActiveButton()\r\n      if (selfCm.currentTabActive == requestToAttendState) {\r\n        dojo.query(\".tablinksCm.active\")[0].click();\r\n        // selfCm._loadRequestTabActiveCm()\r\n        // selfCm.queryRequests['offset'] = selfCm.defaultOffset;\r\n      }\r\n      selfCm._loadRequestsCm();\r\n      // selfCm._loadIniRequestsCm();\r\n    }\r\n\r\n  },\r\n  _openFormObs() {\r\n    selfCm.textAreaObsApCm.value = ''\r\n    const imageDiv = dojo.query(\".thumbnailClsCm\")[0];\r\n    selfCm.imgUploadApCm.value = ''\r\n    imageDiv.style.backgroundImage = \"none\";\r\n    imageDiv.innerHTML = \"<span class=alignVCenter><i class='far fa-image'></i></span>\";\r\n    dojo.query('#headeRequestsCtnCm')[0].innerHTML = `<span class=\"alignVCenter\">Solicitud: ${selfCm.codRequestsCm}</span>`\r\n    selfCm.casesCtnApCm.classList.toggle(\"active\");\r\n    selfCm.obsCtnApCm.classList.toggle('active')\r\n  },\r\n\r\n  _FormResult(id_solicitud, caseCm) {\r\n    selfCm.busyIndicator.show();\r\n    const urlPredioResults = `${selfCm.config.resultsByApplication}/${id_solicitud}`\r\n    if (caseCm == Deactivate.nameCase) {\r\n      selfCm.busyIndicator.hide();\r\n      selfCm._showMessage(selfCm.nls.resultDeactivate)\r\n      return\r\n    }\r\n    selfCm._callApiRestServices(urlPredioResults, {}).then(function (response) {\r\n      try {\r\n        selfCm.bodyTbResultsApCm.innerHTML = ''\r\n        dojo.query(\"#titleCaseResult\")[0].innerHTML = `<span>Solicitud ${id_solicitud}: ${caseCm}</span>`\r\n\r\n        const rows = response.results.map((predio, index) => {\r\n          return `<tr><td class=\"center-aligned\">${index + 1}</td>\r\n                  <td>${predio['cup']}</td>\r\n                  <td>${predio['address']}</td>\r\n                  <td class=\"center-aligned\">\r\n                    <span id=\"${predio['cup']}_search\" class=\"zoomPredioResultClsCm\"><i class=\"fas fa-search\"></i></span>\r\n                  </td></tr>`\r\n        })\r\n        selfCm.bodyTbResultsApCm.innerHTML = rows.join('')\r\n        dojo.query('.zoomPredioResultClsCm').on('click', selfCm._centerAtPredioResult)\r\n        selfCm.casesCtnApCm.classList.remove(\"active\");\r\n        selfCm.obsCtnApCm.classList.remove('active')\r\n        selfCm.requestTrayApCm.classList.remove('active')\r\n        selfCm.resultCtnApCm.classList.toggle('active')\r\n        selfCm.busyIndicator.hide()\r\n      }\r\n      catch (error) {\r\n        console.log(error)\r\n        selfCm.busyIndicator.hide()\r\n      }\r\n    })\r\n  },\r\n\r\n  _centerAtPredioResult(evt) {\r\n    const cup = evt.currentTarget.id.replace('_search', '')\r\n    selfCm._zoomToPredSelected(cup)\r\n  },\r\n\r\n  _openFormResult(evt) {\r\n    const row = dojo.query(evt.currentTarget).closest(\"tr\")[0];\r\n    const rowList = dojo.query(\"td\", row).map(td => td.innerHTML);\r\n    selfCm.codRequestsCm = rowList[0]\r\n    selfCm.caseDescription = rowList[1]\r\n    selfCm._FormResult(selfCm.codRequestsCm, selfCm.caseDescription)\r\n  },\r\n\r\n  // Toolbar function\r\n  _createToolbar() {\r\n    toolbarCm = new Draw(selfCm.map);\r\n    toolbarCm.on(\"draw-end\", selfCm._addToMap);\r\n  },\r\n\r\n  _addToMap(evt) {\r\n    if (evt.geometry.type === \"point\") {\r\n      const screenPoint = selfCm.map.toScreen(evt.geometry)\r\n      const deferred = selfCm.map.snappingManager.getSnappingPoint(screenPoint);\r\n      deferred.then(function (value) {\r\n        if (value !== undefined) {\r\n          const point_g = webMercatorUtils.webMercatorToGeographic(new Point(value));\r\n          const graphic = new Graphic(point_g, symbolByCase[selfCm.case].symbol);\r\n          // si es el caso reasignacion de predio\r\n          if (selfCm.case == 1 || selfCm.case == 2) {\r\n\r\n            const graphicLayer = new GraphicsLayer({\r\n              id: idGraphicPredioCm,\r\n            });\r\n            graphicLayer.add(graphic);\r\n            selfCm.map.addLayer(graphicLayer);\r\n            selfCm.xy = [point_g.x, point_g.y]\r\n          }\r\n          else if (selfCm.case == 3) {\r\n            graphic['attributes'] = {\r\n              cpm: selfCm.cpmPredioDivision,\r\n              id: selfCm.idPredioDivision\r\n            }\r\n            graphicLayerPredioByDivison.add(graphic);\r\n          }\r\n          selfCm.map.setInfoWindowOnClick(true);\r\n          toolbarCm.deactivate();\r\n          selfCm._removeClassActiveButton()\r\n        } else {\r\n          alert(selfCm.nls.errorSnapingLocate);\r\n        }\r\n      }, function (error) {\r\n        console.log(error);\r\n      });\r\n    } else if (evt.geometry.type === \"polyline\") {\r\n      selfCm.idxLines = selfCm.idxLines + 1\r\n      const nameIdLine = `Polyline_${selfCm.idxLines}`\r\n      const graphic = new Graphic(evt.geometry, symbolDivisionLote, { id: nameIdLine });\r\n      graphicLayerLineaDivision.add(graphic);\r\n      selfCm._populateTableDrawLine(nameIdLine)\r\n      selfCm._addNameToLine(nameIdLine, evt.geometry)\r\n      selfCm.map.addLayer(graphicLayerLineaDivision);\r\n      selfCm.map.setInfoWindowOnClick(true);\r\n      toolbarCm.deactivate();\r\n      selfCm._removeClassActiveButton()\r\n      // desactiva el boton luego de dibujar\r\n    }\r\n    // check exist activeButton class in button\r\n\r\n  },\r\n\r\n  _removeClassActiveButton() {\r\n    if (dojo.query(`#${selfCm.idButtonDrawActive}`).length > 0) {\r\n      dojo.query(`#${selfCm.idButtonDrawActive}`)[0].classList.remove('activeButton')\r\n    }\r\n  },\r\n\r\n  _removeLayerGraphic(layerId) {\r\n    if (selfCm.map.graphicsLayerIds.includes(layerId)) {\r\n      selfCm.map.removeLayer(selfCm.map.getLayer(layerId));\r\n    }\r\n  },\r\n\r\n  _activateTool(evt) {\r\n    selfCm._removeClassActiveButton()\r\n    selfCm.idButtonDrawActive = evt.currentTarget.id\r\n    dojo.query(`#${selfCm.idButtonDrawActive}`)[0].classList.add('activeButton')\r\n    selfCm._activateSnappingByReasignar();\r\n    selfCm.map.setInfoWindowOnClick(false);\r\n    selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n    toolbarCm.activate(Draw[\"POINT\"]);\r\n  },\r\n\r\n  _activateToolAcumulacion(evt) {\r\n    selfCm._removeClassActiveButton()\r\n    selfCm.idButtonDrawActive = evt.currentTarget.id;\r\n    selfCm.cpmAcumulacion = evt.currentTarget.dataset.cpm === 'null' ? null : evt.currentTarget.dataset.cpm;\r\n    selfCm.idAcumulacion = evt.currentTarget.parentElement.parentElement.id.split('_')[1];\r\n    dojo.query(`#${selfCm.idButtonDrawActive}`)[0].classList.add('activeButton')\r\n    selfCm.map.setInfoWindowOnClick(false);\r\n    selfCm._activateSnappingByAcumulacion();\r\n    selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n    toolbarCm.activate(Draw[\"POINT\"]);\r\n  },\r\n\r\n  _activateToolLinesDivision(evt) {\r\n    selfCm._removeClassActiveButton()\r\n    selfCm.idButtonDrawActive = evt.currentTarget.id\r\n    dojo.query(`#${selfCm.idButtonDrawActive}`)[0].classList.add('activeButton')\r\n    selfCm.map.setInfoWindowOnClick(false);\r\n    selfCm._activateSnappingByDivision();\r\n    selfCm._removeLayerGraphic(idGraphicLoteCm)\r\n    selfCm._removeLayerGraphic(idGraphicPuntoLote)\r\n    selfCm._removeLayerGraphic(idGraphicFrenteLote)\r\n    selfCm._removeLayerGraphic(idGraphicLabelCodLote)\r\n    selfCm.bodyTbDatosLoteDvApCm.innerHTML = ''\r\n    // selfCm.bodyTbPrediosDvApCm.innerHTML = ''\r\n    graphicLayerPredioByDivison.clear()\r\n    toolbarCm.activate(Draw[\"POLYLINE\"]);\r\n  },\r\n\r\n  _activateSnappingByReasignar() {\r\n    const cflayer = selfCm.layersMap.getLayerInfoById(idLyrCfLotesPun)\r\n    const propertyLayer = new FeatureLayer(cflayer.getUrl(), {\r\n      mode: FeatureLayer.MODE_ONDEMAND,\r\n      outFields: [\"*\"]\r\n    });\r\n    const snapManager = selfCm.map.enableSnapping({\r\n      // alwaysSnap: true,\r\n      // snapKey: keys.CTRL,\r\n      snapPointSymbol: symbolSnapPointCm,\r\n      tolerance: 5,\r\n    });\r\n    // get layerinfo by id of layer to snap\r\n    const layerInfos = [{\r\n      layer: propertyLayer\r\n    }];\r\n\r\n    snapManager.setLayerInfos(layerInfos);\r\n  },\r\n\r\n  _activateSnappingByAcumulacion() {\r\n    let graphicLayerPuntoLote = selfCm.map.getLayer(idGraphicPuntoLote)\r\n    let graphicsLayerInfo = new esri.layers.LayerInfo({\r\n      id: graphicLayerPuntoLote.id, // El id del `GraphicsLayer`\r\n      name: graphicLayerPuntoLote.name, // El nombre del `GraphicsLayer`\r\n      layer: graphicLayerPuntoLote // El `GraphicsLayer` a utilizar\r\n    });\r\n\r\n    // Agregar el `LayerInfo` al mapa y habilitar el snapping\r\n    selfCm.map.enableSnapping({\r\n      layerInfos: [graphicsLayerInfo], // Agregar el `LayerInfo` al mapa\r\n      // alwaysSnap: true,\r\n      snapPointSymbol: symbolSnapPointCm,\r\n      tolerance: 5,\r\n    });\r\n  },\r\n\r\n  _activateSnappingByDivision() {\r\n    let graphicsLayerInfo = new esri.layers.LayerInfo({\r\n      id: graphicLayerLineaDivision.id, // El id del `GraphicsLayer`\r\n      name: graphicLayerLineaDivision.name, // El nombre del `GraphicsLayer`\r\n      layer: graphicLayerLineaDivision // El `GraphicsLayer` a utilizar\r\n    });\r\n\r\n    let cflayer = selfCm.layersMap.getLayerInfoById(idLyrCfLotes)\r\n    let propertyLayer = new FeatureLayer(cflayer.getUrl(), {\r\n      mode: FeatureLayer.MODE_ONDEMAND,\r\n      outFields: [\"*\"]\r\n    });\r\n\r\n    let layerInfos = [{\r\n      layer: propertyLayer\r\n    }, graphicsLayerInfo];\r\n\r\n    // Agregar el `LayerInfo` al mapa y habilitar el snapping\r\n    selfCm.map.enableSnapping({\r\n      layerInfos: layerInfos, // Agregar el `LayerInfo` al mapa\r\n      // alwaysSnap: true,\r\n      snapPointSymbol: symbolSnapPointCm,\r\n      tolerance: 5,\r\n    });\r\n  },\r\n\r\n  // crear una funcion que permita dos poligonos aceptando dos poligonos json como parametros\r\n  // la funcion debe retornar un poligono json\r\n  _unionFeatures(arr) {\r\n    let union = geometryEngine.union(arr);\r\n    return union;\r\n  },\r\n\r\n  _unionFeaturesAcumulation(topology = false) {\r\n    // Creamos grafico de lote fusionado\r\n    const graphicLayerLoteFusion = new GraphicsLayer({\r\n      id: idGraphicLoteCm\r\n    });\r\n    // let arr = []\r\n    // const polygonGeometry = selfCm.currentLotsRows[0].geometry;\r\n    const arr = selfCm.currentLotsRows.map((i) => i.geometry);\r\n    // for (let i of selfCm.currentLotsRows) {\r\n    //   arr.push(i.geometry)\r\n    // }\r\n    const response = selfCm._unionFeatures(arr);\r\n    if (topology) {\r\n      if (response.rings.length > 1) {\r\n        throw new Error(\"La acumulación no es posible (los predios no son contiguos)\")\r\n      }\r\n    }\r\n    const graphic = new Graphic(response, symbolFusionLote);\r\n\r\n    graphicLayerLoteFusion.add(graphic);\r\n    selfCm.map.addLayer(graphicLayerLoteFusion);\r\n    selfCm.map.setExtent(graphic._extent.expand(1.5), true);\r\n    return [response];\r\n  },\r\n\r\n  _ApplyAcumulationLotsRefactor() {\r\n    selfCm.busyIndicator.show();\r\n    selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n    selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n    selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n    selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n    selfCm._removeLayerGraphic(idGraphicLoteDeleteCm);\r\n    selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n\r\n    if (!selfCm.lotesQuery) {\r\n      selfCm._showMessage(selfCm.nls.errorGetLand, 'warning');\r\n      selfCm.busyIndicator.hide();\r\n      return\r\n    }\r\n\r\n    return selfCm._getOriginalLots(selfCm.lotesQuery)\r\n      .then(originLots => {\r\n        const geomLoteAcumulation = selfCm._unionFeaturesAcumulation(topology = true);\r\n        return selfCm._getMaxCodLot(geomLoteAcumulation);\r\n      })\r\n      .then(proprsLot => {\r\n        selfCm._ordenarPoligonosNorteSur(\r\n          proprsLot.polygons,\r\n          parseInt(proprsLot.maxCodLote),\r\n          selfCm.bodyTbDatosLoteFsApCm\r\n        );\r\n        selfCm.map.setExtent(proprsLot.polygons[0].getExtent().expand(1.5), true);\r\n        return selfCm._addGraphicsPointLotsAndArancel();\r\n      })\r\n      .then(() => {\r\n        selfCm._populateTablePredio(selfCm.bodyTbPrediosFsApCm, selfCm._activateToolAcumulacion)\r\n        selfCm.busyIndicator.hide();\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(error.message, type = \"error\")\r\n      })\r\n  },\r\n\r\n  _getMidpoint(polyline) {\r\n    let length = geometryEngine.geodesicLength(polyline, \"meters\");\r\n    let midpoint = geometryEngine.geodesicDensify(polyline, length / 2, \"meters\").getPoint(0, 0);\r\n    return midpoint;\r\n  },\r\n\r\n  _findMidpoint(polyline) {\r\n    let lengthPolylineChunk = geometryEngine.geodesicLength(polyline, \"meters\")\r\n    let line = turf.lineString(polyline.paths[0]);\r\n    let options = { units: 'meters' };\r\n    let along = turf.along(line, lengthPolylineChunk / 2, options);\r\n    return along\r\n  },\r\n\r\n  // funcion que recibe una polilinea con muchas partes y retorna la parte mas larga como una polilinea\r\n  _getLongestPolyline(polyline) {\r\n    let paths = polyline.paths\r\n    let longestPath = 0\r\n    let response = null;\r\n    for (let path of paths) {\r\n      let polylineChunk = new Polyline({\r\n        paths: [path],\r\n        spatialReference: { wkid: 4326 }\r\n      });\r\n      let lengthPolylineChunk = geometryEngine.geodesicLength(polylineChunk, \"meters\")\r\n      if (lengthPolylineChunk > longestPath) {\r\n        longestPath = lengthPolylineChunk\r\n        response = polylineChunk\r\n      }\r\n    }\r\n    return response\r\n  },\r\n\r\n  // --------------------------------------------------------------\r\n  // SUBDIVISION DE LOTES\r\n  // function that allows dividing a polygon from cutting lines, the parameters will be a polygon and several lines in json format\r\n  // the function must return a polygon json\r\n  // --------------------------------------------------------------\r\n  _dividePolygon(poly, lines) {\r\n    const divide = geometryEngine.cut(poly, lines);\r\n    const response = [];\r\n    for (let item of divide) {\r\n      item.rings.map((i) => {\r\n        const simplePolygon = new Polygon({\r\n          rings: [i],\r\n          spatialReference: item.spatialReference\r\n        });\r\n        response.push(simplePolygon);\r\n      });\r\n    };\r\n    return response;\r\n  },\r\n\r\n  _populateTableDrawLine(idLine) {\r\n    let row = `<td class=\"center-aligned\">${selfCm.idxLines}</td>\r\n              <td contenteditable=\"true\" id=\"${idLine}_name\">${idLine}</td>\r\n              <td class=\"center-aligned\">\r\n                <span id=\"${idLine}_ext\"><i class=\"fas fa-search\"></i></span>\r\n              </td>\r\n              <td class=\"center-aligned\">\r\n                <span id=\"${idLine}_del\" style=\"color: #FF5722;\"><i class=\"far fa-trash-alt\"></i></span>\r\n              </td>`\r\n    let tr = dojo.create('tr');\r\n    tr.id = idLine;\r\n    tr.innerHTML = row;\r\n    tr.style.cursor = \"pointer\";\r\n    selfCm.bodyTbLinesDvApCm.appendChild(tr)\r\n    dojo.query(`#${idLine}_del`).on('click', selfCm._deleteRowLine);\r\n    dojo.query(`#${idLine}_ext`).on('click', selfCm._zoonToLineDivision);\r\n    dojo.query(`#${idLine}_name`).on('input', selfCm._editaNameLineDivision);\r\n  },\r\n\r\n  _deleteRowLine(evt) {\r\n    let id = evt.currentTarget.id.replace('_del', '');\r\n    let elem = dojo.query(`#${id}`);\r\n    let graphic = graphicLayerLineaDivision.graphics.filter(item => item.attributes.id == id);\r\n    graphicLayerLineaDivision.remove(graphic[0])\r\n    let graphicLabel = graphicLayerLabelLineaDivision.graphics.filter(item => item.attributes.id == id);\r\n    graphicLayerLabelLineaDivision.remove(graphicLabel[0])\r\n    selfCm._removeLayerGraphic(idGraphicLoteCm)\r\n    selfCm._removeLayerGraphic(idGraphicPuntoLote)\r\n    selfCm._removeLayerGraphic(idGraphicFrenteLote)\r\n    selfCm._removeLayerGraphic(idGraphicLabelCodLote)\r\n    graphicLayerPredioByDivison.clear()\r\n    elem[0].parentNode.removeChild(elem[0]);\r\n  },\r\n\r\n  _addNameToLine(name, polylineGeom) {\r\n    let polylineGeomUtm = webMercatorUtils.webMercatorToGeographic(polylineGeom)\r\n    let midPoint = selfCm._findMidpoint(polylineGeomUtm)\r\n\r\n    let pointLabel = new Point({\r\n      x: midPoint.geometry.coordinates[0],\r\n      y: midPoint.geometry.coordinates[1],\r\n      spatialReference: { wkid: 4326 }\r\n    })\r\n\r\n    let font = new Font(\"15px\", Font.STYLE_NORMAL, Font.VARIANT_NORMAL, Font.WEIGHT_BOLD, \"Arial\");\r\n    let txtSym = new TextSymbol(name, font, new Color([250, 0, 0, 0.9]));\r\n    txtSym.setOffset(15, 15).setAlign(TextSymbol.ALIGN_END)\r\n    txtSym.setHaloColor(new Color([255, 255, 255]));\r\n    txtSym.setHaloSize(1.5);\r\n    let graphicLabel = new Graphic(pointLabel, txtSym, { id: name });\r\n\r\n    // graphicLayer.add(graphic);\r\n    graphicLayerLabelLineaDivision.add(graphicLabel);\r\n  },\r\n\r\n  _zoonToLineDivision(evt) {\r\n    let id = evt.currentTarget.id.replace('_ext', '');\r\n    let graphic = graphicLayerLabelLineaDivision.graphics.filter(item => item.attributes.id == id);\r\n    selfCm.map.setExtent(graphic[0]._extent, true);\r\n  },\r\n\r\n  _editaNameLineDivision(evt) {\r\n    let id = evt.currentTarget.id.replace('_name', '');\r\n    let graphic = graphicLayerLabelLineaDivision.graphics.filter(item => item.attributes.id == id)\r\n    graphic[0].symbol.text = evt.currentTarget.innerText;\r\n    graphicLayerLabelLineaDivision.refresh()\r\n  },\r\n\r\n  _populateTablePredio(bodyTable, drawFunction) {\r\n    bodyTable.innerHTML = ''\r\n    selfCm.responseRequests.forEach((predio, idx) => {\r\n      const tr = dojo.create('tr');\r\n      tr.id = `predio_${predio['id']}`;\r\n      const row = `<td class=\"center-aligned\">${idx + 1}</td>\r\n                  <td>${predio['address']}</td>\r\n                  <td class=\"center-aligned\">\r\n                   <span id=\"${tr.id}_draw\" data-cpm=${predio['cpm']}><i class=\"fas fa-map-marker-alt\"></i></span>\r\n                  </td>`\r\n      tr.innerHTML = row;\r\n      tr.style.cursor = \"pointer\";\r\n      bodyTable.appendChild(tr)\r\n      dojo.query(`#${tr.id}_draw`).on('click', drawFunction)\r\n    });\r\n  },\r\n\r\n  _activateSnappingPrediosByDivision(graphiclayer) {\r\n    let graphicsLayerInfo = new esri.layers.LayerInfo({\r\n      id: graphiclayer.id, // El id del `GraphicsLayer`\r\n      name: graphiclayer.name, // El nombre del `GraphicsLayer`\r\n      layer: graphiclayer // El `GraphicsLayer` a utilizar\r\n    });\r\n\r\n    // Agregar el `LayerInfo` al mapa y habilitar el snapping\r\n    selfCm.map.enableSnapping({\r\n      layerInfos: [graphicsLayerInfo], // Agregar el `LayerInfo` al mapa\r\n      // alwaysSnap: true,\r\n      snapPointSymbol: symbolSnapPointCm,\r\n      tolerance: 5,\r\n    });\r\n  },\r\n\r\n  _activateToolPrediosByDivision(evt) {\r\n    selfCm._removeClassActiveButton()\r\n    selfCm.idButtonDrawActive = evt.currentTarget.id\r\n    dojo.query(`#${selfCm.idButtonDrawActive}`)[0].classList.add('activeButton')\r\n    selfCm.cpmPredioDivision = evt.currentTarget.dataset.cpm === 'null' ? null : evt.currentTarget.dataset.cpm;\r\n    selfCm.idPredioDivision = evt.currentTarget.parentElement.parentElement.id;\r\n    const graphic = graphicLayerPredioByDivison.graphics.filter(item => item.attributes.id === selfCm.idPredioDivision);\r\n    graphicLayerPredioByDivison.remove(graphic[0])\r\n    selfCm.map.setInfoWindowOnClick(false);\r\n    const graphicLayerPuntoLote = selfCm.map.getLayer(idGraphicPuntoLote)\r\n    selfCm._activateSnappingPrediosByDivision(graphicLayerPuntoLote);\r\n    toolbarCm.activate(Draw[\"POINT\"]);\r\n  },\r\n\r\n  _changeValueCodLote(evt) {\r\n    const selectedValue = evt.target.value;\r\n    const currentSelectId = evt.target.id;\r\n    const id = evt.target.id.split('_')[1]\r\n    // const idx = evt.target.selectedIndex\r\n    // const cod_lote = evt.target.value\r\n    const lyr = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n    const graphicSelected = lyr.graphics.filter(item => item.attributes.id == `label_${id}`)\r\n    graphicSelected[0].symbol.text = selectedValue\r\n    const selects = dojo.query('.codLoteSelectDvCls');\r\n    selects.forEach(select => {\r\n      if (select.id !== currentSelectId && select.value === selectedValue) {\r\n        select.value = '';\r\n        const graphicNotSelected = lyr.graphics.filter(item => item.attributes.id == `label_${select.id.split('_')[1]}`)\r\n        graphicNotSelected[0].symbol.text = ''\r\n      }\r\n      lyr.refresh()\r\n    });\r\n  },\r\n\r\n  _changeLotUrb(evt) {\r\n    const selectedValue = evt.target.value;\r\n    const currentSelectId = evt.target.id;\r\n    const selects = dojo.query('.loteUrbSelectDvCls');\r\n    const lyr = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n    // const graphicSelected = lyr.graphics.filter(item => item.attributes.id == `label_${id}`)\r\n    selects.forEach(select => {\r\n      if (select.id !== currentSelectId && select.value === selectedValue) {\r\n        select.value = '';\r\n        const graphicNotSelected = lyr.graphics.filter(item => item.attributes.id == `label_${select.id.split('_')[1]}`)\r\n        graphicNotSelected[0].attributes.lot_urb = ''\r\n      }\r\n    });\r\n  },\r\n\r\n  _centerAtLabelCodLoteDivision(evt) {\r\n    let id = evt.currentTarget.id\r\n    let lyr = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n    let graphicSelected = lyr.graphics.filter(item => item.attributes.id == id)\r\n    selfCm.map.centerAndZoom(graphicSelected[0].geometry)\r\n  },\r\n\r\n  _editLoteUrbanoDivision(evt) {\r\n    const id = evt.target.id.replace('loteUrbanoDv_', '');\r\n    const lyr = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n    const graphic = lyr.graphics.filter(item => item.attributes.id == `label_${id}`)\r\n    graphic[0].attributes.lot_urb = evt.target.selectedOptions[0].value\r\n    lyr.refresh()\r\n  },\r\n\r\n  _buildDataLoteTable(tableBody, predios) {\r\n    tableBody.innerHTML = ''\r\n    predios.forEach((predio, index) => {\r\n      const row = document.createElement('tr');\r\n\r\n      // celda de índice\r\n      const indexCell = document.createElement('td');\r\n      indexCell.className = \"center-aligned\"\r\n      indexCell.textContent = predio.num;\r\n      row.appendChild(indexCell);\r\n\r\n      // celda de codigo de predio\r\n      const codigoCell = document.createElement('td');\r\n      const select = document.createElement('select');\r\n      select.className = \"codLoteSelectDvCls\"\r\n      select.id = `codLoteSelectDv_${predio.num}`\r\n\r\n      const optionDisabled = document.createElement('option');\r\n      optionDisabled.value = '';\r\n      optionDisabled.textContent = '---';\r\n      optionDisabled.disabled = true;\r\n      select.appendChild(optionDisabled);\r\n      predios.forEach(p => {\r\n        const option = document.createElement('option');\r\n        option.value = p.cod_lote;\r\n        option.textContent = p.cod_lote;\r\n        if (p.cod_lote === predio.cod_lote) {\r\n          option.selected = true;\r\n        }\r\n        select.appendChild(option);\r\n      });\r\n\r\n      codigoCell.appendChild(select);\r\n      row.appendChild(codigoCell);\r\n\r\n\r\n      const loteUrbCell = document.createElement('td');\r\n      const loteUrbSelect = document.createElement('select');\r\n      loteUrbSelect.className = \"loteUrbSelectDvCls\"\r\n      loteUrbSelect.id = `loteUrbanoDv_${predio.num}`\r\n\r\n      const optionDisabledLotUrb = optionDisabled.cloneNode(true)\r\n      loteUrbSelect.appendChild(optionDisabledLotUrb);\r\n\r\n      selfCm.responseRequests.forEach((request, idx) => {\r\n        const option = document.createElement('option');\r\n        option.value = request.urbanLotNumber;\r\n        option.textContent = request.urbanLotNumber;\r\n        loteUrbSelect.appendChild(option);\r\n        if (predio.num == idx + 1) {\r\n          option.selected = true;\r\n        }\r\n        // selected option by index predio.num\r\n      })\r\n      loteUrbCell.appendChild(loteUrbSelect);\r\n      loteUrbCell.className = \"loteUrbanoDvCls\"\r\n      row.appendChild(loteUrbCell);\r\n\r\n      const locationMarker = document.createElement('td');\r\n      locationMarker.id = predio.id\r\n      locationMarker.className = \"center-aligned\"\r\n      locationMarker.innerHTML = `<span class=\"locationLabelLoteDvCls\" id=\"${predio.id}\"><i class=\"fas fa-search\"></i></span>`\r\n      row.appendChild(locationMarker);\r\n      tableBody.appendChild(row);\r\n      // dojo.query(`#${predio.id}`).on('click', selfCm._centerAtLabelCodLoteDivision)\r\n\r\n    });\r\n    dojo.query('.codLoteSelectDvCls').on('change', selfCm._changeValueCodLote)\r\n    dojo.query('.loteUrbSelectDvCls').on('change', selfCm._changeLotUrb)\r\n    dojo.query('.locationLabelLoteDvCls').on('click', selfCm._centerAtLabelCodLoteDivision)\r\n    dojo.query('.loteUrbanoDvCls').on('change', selfCm._editLoteUrbanoDivision);\r\n\r\n  },\r\n\r\n  _ordenarPoligonosNorteSur(poligonos, idx, bodyTable) {\r\n    const deferred = new Deferred();\r\n    // Obtener la coordenada más al norte de cada polígono\r\n    const coordenadasNorte = poligonos.map(poligono => {\r\n      const extent = poligono.getExtent();\r\n      return extent.ymax;\r\n    });\r\n\r\n    // Ordenar los polígonos en base a la coordenada más al norte\r\n    const poligonosOrdenados = poligonos.slice().sort((a, b) => {\r\n      const coordenadaNorteA = coordenadasNorte[poligonos.indexOf(a)];\r\n      const coordenadaNorteB = coordenadasNorte[poligonos.indexOf(b)];\r\n      return coordenadaNorteB - coordenadaNorteA; // Ordenar de norte a sur\r\n    });\r\n\r\n    // console.log(poligonos)\r\n\r\n    const graphicLayerLabelCodLoteDivision = new GraphicsLayer({\r\n      id: idGraphicLabelCodLote,\r\n    });\r\n\r\n    const font = new Font(\"20px\", Font.STYLE_NORMAL, Font.VARIANT_NORMAL, Font.WEIGHT_BOLD, \"Arial\");\r\n\r\n    const dataLoteTable = []\r\n\r\n    selfCm.geometryService.labelPoints(poligonosOrdenados)\r\n      .then((labelPoints) => {\r\n        labelPoints.forEach((point, index) => {\r\n          const cod_lote = selfCm._zfill(idx + 1, 3)\r\n          const txtSym = new TextSymbol(cod_lote, font, new Color([250, 0, 0, 1]));\r\n          txtSym.setColor(new esri.Color([0, 0, 0, 1])); // color blanco\r\n          txtSym.setSize(\"12pt\");\r\n          txtSym.setHaloColor(new esri.Color([255, 255, 255, 1]));\r\n          txtSym.setHaloSize(2);\r\n          const idGraphic = `label_${index + 1}`\r\n          const graphicLabel = new Graphic(\r\n            point,\r\n            txtSym,\r\n            {\r\n              id: idGraphic,\r\n              lot_urb: selfCm.responseRequests[index].urbanLotNumber,\r\n              clase: 'labelCodLoteDivision'\r\n            });\r\n          graphicLayerLabelCodLoteDivision.add(graphicLabel);\r\n          dataLoteTable.push({ num: index + 1, id: idGraphic, cod_lote: cod_lote })\r\n          idx = idx + 1\r\n        });\r\n        return dataLoteTable\r\n      })\r\n      .then((dataLoteTable) => {\r\n        selfCm._buildDataLoteTable(bodyTable, dataLoteTable)\r\n        selfCm.map.addLayer(graphicLayerLabelCodLoteDivision)\r\n        return deferred.resolve(dataLoteTable);\r\n      })\r\n      .catch((error) => {\r\n        return deferred.reject(error);\r\n      });\r\n\r\n    return deferred.promise;\r\n  },\r\n\r\n  // _enableEditingLabelsLotesDivision(evt) {\r\n  //   if (evt && evt.graphic && evt.graphic.attributes && evt.graphic.attributes.clase == 'labelCodLoteDivision') {\r\n  //     selfCm.map.setInfoWindowOnClick(false)\r\n  //     selfCm.editToolbar.activate(Edit.MOVE, evt.graphic);\r\n  //   } else {\r\n  //     selfCm.editToolbar.deactivate()\r\n  //   }\r\n  // },\r\n\r\n  _zfill(num, len) {\r\n    return (Array(len).fill('0').join('') + num).slice(-len);\r\n  },\r\n\r\n  _getMaxCodLot(polygonos) {\r\n    const deferred = new Deferred();\r\n    const estadisticaDef = new StatisticDefinition();\r\n    estadisticaDef.statisticType = 'max';\r\n    estadisticaDef.onStatisticField = _COD_LOTE_FIELD;\r\n    estadisticaDef.outStatisticFieldName = \"resultado\";\r\n\r\n    const query = new Query();\r\n    query.where = selfCm.arancel;\r\n    query.outFields = [_COD_LOTE_FIELD];\r\n    query.returnGeometry = false;\r\n    query.outStatistics = [estadisticaDef];\r\n\r\n    const queryTask = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl());\r\n    queryTask.execute(query)\r\n      .then(result => {\r\n        if (result.features.length > 0) {\r\n          const maxCodLote = result.features[0].attributes.resultado;\r\n          return deferred.resolve({\r\n            maxCodLote: maxCodLote,\r\n            polygons: polygonos\r\n          });\r\n        } else {\r\n          return deferred.reject('No se encontraron lotes');\r\n        }\r\n      });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _getOriginalLots(query) {\r\n    const selfCm = this;\r\n    const deferred = new Deferred();\r\n    const params = {\r\n      where: query,\r\n      returnGeometry: true,\r\n      outFields: \"*\",\r\n      outSR: 4326,\r\n      f: \"json\"\r\n    };\r\n\r\n    const requestOptions = {\r\n      url: `${selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl()}/query`,\r\n      content: params,\r\n      handleAs: \"json\",\r\n      callbackParamName: \"callback\"\r\n    };\r\n\r\n    esriRequest(requestOptions, { usePost: true })\r\n      .then((response) => {\r\n        selfCm.currentLotsRows = response.features;\r\n\r\n        if (selfCm.case == 2) {\r\n          if (selfCm.currentLotsRows.length < 2) {\r\n            throw new Error(selfCm.nls.errorAcumulationLandsNumber);\r\n          }\r\n        }\r\n\r\n        selfCm.currentLotsRows.forEach(row => {\r\n          row.geometry = new Polygon({\r\n            rings: row.geometry.rings,\r\n            spatialReference: { wkid: 4326 }\r\n          });\r\n        });\r\n        return deferred.resolve(selfCm.currentLotsRows);\r\n      })\r\n      .catch(err => deferred.reject(err));\r\n\r\n    return deferred.promise;\r\n  },\r\n\r\n  _getPolylinesDrawn() {\r\n    const arr = []\r\n    for (let i of graphicLayerLineaDivision.graphics) {\r\n      arr.push(i.geometry);\r\n    }\r\n    const unionGraphicLayerLineaDivision = selfCm._unionFeatures(arr);\r\n\r\n    let lineGeometry = new Polyline({\r\n      paths: unionGraphicLayerLineaDivision.paths,\r\n      spatialReference: { wkid: 102100 }\r\n    });\r\n    lineGeometry = esri.geometry.webMercatorToGeographic(lineGeometry);\r\n    return lineGeometry;\r\n  },\r\n\r\n  _divideLotsByLines() {\r\n    // const geomLote = results.features[0].geometry\r\n    if (selfCm.currentLotsRows.length == 0) {\r\n      selfCm._showMessage(selfCm.nls.errorLotQuery, 'warning');\r\n      return;\r\n    }\r\n    const lineGeometry = selfCm._getPolylinesDrawn();\r\n\r\n    const polygonGeometry = selfCm.currentLotsRows[0].geometry;\r\n\r\n    const geomLoteDivided = selfCm._dividePolygon(polygonGeometry, lineGeometry)\r\n\r\n    if (geomLoteDivided.length == 0) {\r\n      //  genera un mensage show indicando que no se encontro el lote\r\n      throw new Error(selfCm.nls.errorDivideLot);\r\n      // selfCm._showMessage(selfCm.nls.errorDivideLot, type = 'error');\r\n      // return;\r\n    }\r\n\r\n    if (geomLoteDivided.length != selfCm.responseRequests.length) {\r\n      throw new Error(`No se puede proceder con la operación\\nLa cantidad de lotes generados (${geomLoteDivided.length}) es diferente a lo solicitado (${selfCm.responseRequests.length})`);\r\n      // selfCm._showMessage(`No se puede proceder con la operación\\nSe han generado más lotes (${geomLoteDivided.length}) de los solicitados (${selfCm.responseRequests.length})`, type = 'error');\r\n      // return;\r\n    }\r\n\r\n    // Creamos grafico de lote fusionado\r\n    const graphicLayerLoteDivision = new GraphicsLayer({\r\n      id: idGraphicLoteCm\r\n    });\r\n\r\n    // // Configurar el LabelClass con un símbolo transparente\r\n    // const labelClass = new LabelClass({\r\n    //   labelExpressionInfo: { value: \"-\" },\r\n    //   useCodedValues: false,\r\n    //   labelPlacement: \"always-horizontal\",\r\n    //   symbol: new TextSymbol().setColor(new Color([0, 0, 0])) // Color transparente\r\n    // });\r\n\r\n    // console.log(graphicLayerLoteDivision);\r\n    // graphicLayerLoteDivision.setLabelingInfo([labelClass]);\r\n\r\n    // iterar sobre los graficos de la capa de division y agregar cada uno a graphicLayerLoteDivision\r\n    for (let i of geomLoteDivided) {\r\n      const lote = new Graphic(i, symbolFusionLote)\r\n\r\n      // agregar el grafico directo al mapa\r\n      graphicLayerLoteDivision.add(lote);\r\n    }\r\n    selfCm.map.addLayer(graphicLayerLoteDivision);\r\n    return geomLoteDivided;\r\n  },\r\n\r\n  _addGraphicsPointLotsAndArancel() {\r\n    const deferred = new Deferred();\r\n    const query = new Query();\r\n    query.where = `${selfCm.arancel} and ID_SVIA IS NOT NULL`\r\n    // especificar los campos devueltos\r\n    query.outFields = [_UBIGEO_FIELD, _F_MZN_FIELD];\r\n    query.returnGeometry = true\r\n    // query with order by fields\r\n    query.orderByFields = [_F_MZN_FIELD];\r\n    const qTask = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrCfArancel).getUrl());\r\n    qTask.execute(query, function (results) {\r\n      // Creamos grafico de punto lote\r\n      const graphicLayerPuntoLote = new GraphicsLayer({\r\n        id: idGraphicPuntoLote\r\n      });\r\n      // creamos grafico de frente de lote\r\n      const graphicLayerFrenteLote = new GraphicsLayer({\r\n        id: idGraphicFrenteLote\r\n      });\r\n      // let graphicLayerPredio = new GraphicsLayer({\r\n      //   id: idGraphicPredioCm\r\n      // });\r\n      const graphicLoteDivision = selfCm.map.getLayer(idGraphicLoteCm)\r\n      if (!graphicLoteDivision) {\r\n        return;\r\n      }\r\n      const frentes = {}\r\n      for (let row of results.features) {\r\n        for (let graphic of graphicLoteDivision.graphics) {\r\n          const isItc = geometryEngine.intersects(row.geometry, graphic.geometry)\r\n          if (!isItc) {\r\n            continue\r\n          }\r\n          // saber si un key esta dentro del objeto frentes\r\n          if (!frentes.hasOwnProperty(row.attributes[_F_MZN_FIELD])) {\r\n            frentes[row.attributes[_F_MZN_FIELD]] = row.geometry;\r\n          }\r\n          else {\r\n            // check if row.geometry share a commin coordinate with frentes\r\n            const unionFrentes = geometryEngine.union([frentes[row.attributes[_F_MZN_FIELD]], row.geometry])\r\n            frentes[row.attributes[_F_MZN_FIELD]] = unionFrentes;\r\n          }\r\n        }\r\n      }\r\n\r\n      for (let lote of graphicLoteDivision.graphics) {\r\n        for (let idx in frentes) {\r\n          const idItcFrentesByLotes = geometryEngine.intersects(lote.geometry, frentes[idx])\r\n          if (!idItcFrentesByLotes) {\r\n            continue\r\n          }\r\n          const itcFrentesByLotes = geometryEngine.intersect(frentes[idx], lote.geometry)\r\n          for (let row of itcFrentesByLotes.paths) {\r\n            const polylineChunk = new Polyline({\r\n              paths: [row],\r\n              spatialReference: itcFrentesByLotes.spatialReference\r\n            });\r\n            // add frentes to graphicLayerFrenteLote\r\n            const symbolFrenteLote = new SimpleLineSymbol(\r\n              SimpleLineSymbol.STYLE_SOLID,\r\n              new Color(\r\n                [\r\n                  Math.floor(Math.random() * 255),\r\n                  Math.floor(Math.random() * 255),\r\n                  Math.floor(Math.random() * 255)]),\r\n              5\r\n            )\r\n            const frente = new Graphic(polylineChunk, symbolFrenteLote)\r\n            graphicLayerFrenteLote.add(frente);\r\n\r\n            const puntoLoteTurf = selfCm._findMidpoint(polylineChunk)\r\n\r\n            // crear un punto en el mapa\r\n            const puntoLote = new Point({\r\n              x: puntoLoteTurf.geometry.coordinates[0],\r\n              y: puntoLoteTurf.geometry.coordinates[1],\r\n              spatialReference: { wkid: 4326 }\r\n            })\r\n\r\n            // Agregar el punto p al mapa          \r\n            const puntoLoteGraphic = new Graphic(puntoLote, symbolPuntoLote)\r\n            graphicLayerPuntoLote.add(puntoLoteGraphic)\r\n          };\r\n        }\r\n      }\r\n      selfCm.map.addLayer(graphicLayerFrenteLote);\r\n      selfCm.map.addLayer(graphicLayerPuntoLote);\r\n      selfCm._removeLayerGraphic(idGraphicPredioByDivison);\r\n      selfCm.map.addLayer(graphicLayerPredioByDivison)\r\n      return deferred.resolve();\r\n    });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _ApplyDivideLotesRefactor() {\r\n    selfCm.busyIndicator.show();\r\n    selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n    selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n    selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n    selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n    selfCm._removeLayerGraphic(idGraphicLoteDeleteCm);\r\n    selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n\r\n    // Union all graphics of graphicslayer\r\n    if (graphicLayerLineaDivision.graphics.length == 0) {\r\n      selfCm._showMessage(selfCm.nls.emptyLineSubdivision, 'warning');\r\n      selfCm.busyIndicator.hide();\r\n      return\r\n    }\r\n    if (!selfCm.lotesQuery) {\r\n      selfCm._showMessage(selfCm.nls.errorGetLand, 'warning');\r\n      selfCm.busyIndicator.hide();\r\n      return\r\n    }\r\n    return selfCm._getOriginalLots(selfCm.lotesQuery)\r\n      .then(originLots => {\r\n        const geomLoteDivided = selfCm._divideLotsByLines();\r\n        return selfCm._getMaxCodLot(geomLoteDivided);\r\n      })\r\n      .then(proprsLot => {\r\n        return selfCm._ordenarPoligonosNorteSur(\r\n          proprsLot.polygons,\r\n          parseInt(proprsLot.maxCodLote),\r\n          selfCm.bodyTbDatosLoteDvApCm\r\n        )\r\n      })\r\n      .then(() => {\r\n        selfCm.map.reorderLayer(selfCm.map.getLayer(idGraphicLoteCm), selfCm.map.graphicsLayerIds.indexOf(graphicLayerLabelLineaDivision.id));\r\n        selfCm.map.setExtent(selfCm.currentLotsRows[0].geometry.getExtent().expand(1.5), true);\r\n        return selfCm._addGraphicsPointLotsAndArancel();\r\n      })\r\n      .then(() => {\r\n        selfCm._populateTablePredio(selfCm.bodyTbPrediosDvApCm, selfCm._activateToolPrediosByDivision)\r\n        selfCm.busyIndicator.hide();\r\n      })\r\n      .catch(error => {\r\n        // console.log(error)\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(error.message, type = \"error\")\r\n      })\r\n  },\r\n\r\n  // ----------------------------------------------------------------------------------------------\r\n  // GeoprocessingServices\r\n  // ----------------------------------------------------------------------------------------------\r\n  _executeReasignacionGpService(evt) {\r\n    if (!selfCm.xy.length) {\r\n      selfCm._showMessage(selfCm.nls.emptyNewLocation, type = \"error\")\r\n      return\r\n    }\r\n    selfCm._showMessageConfirm().then(function (result) {\r\n      if (result) {\r\n        let params = {\r\n          \"cod_pred\": selfCm.uniqueCodeLands,\r\n          \"ubigeo\": paramsApp['ubigeo'],\r\n          \"geometry\": selfCm.xy,\r\n          \"user\": paramsApp['username'],\r\n          \"id_solicitud\": selfCm.codRequestsCm\r\n        }\r\n\r\n        // revisar si alguna propiedad tiene valor nulo o indefinido\r\n        for (let key in params) {\r\n          if (params[key] == null || params[key] == undefined) {\r\n            selfCm._showMessage(`Debe especificar el valor de ${key}`, type = \"error\");\r\n            return\r\n          }\r\n        }\r\n        selfCm._executeGPService(selfCm.config.reasignacionUrl, params)\r\n      }\r\n      else {\r\n        return\r\n      }\r\n    })\r\n  },\r\n\r\n  _executeAcumulacionGpService(evt) {\r\n    if (!selfCm.lotesQuery) {\r\n      selfCm._showMessage(selfCm.nls.errorGetLand, 'warning');\r\n      selfCm.busyIndicator.hide();\r\n      return\r\n    }\r\n    if (!selfCm.map.getLayer(idGraphicLoteCm)) {\r\n      selfCm._showMessage(selfCm.nls.emptyPreviewAccumulation, type = \"error\")\r\n      return\r\n    }\r\n\r\n    if (!selfCm.xy.length) {\r\n      selfCm._showMessage(selfCm.nls.emptyNewLand, type = \"error\")\r\n      return\r\n    }\r\n    const labelCodLotesLayer = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n\r\n    selfCm._showMessageConfirm().then(function (result) {\r\n      selfCm.busyIndicator.show();\r\n      selfCm._addWarningMessageExecute()\r\n      if (result) {\r\n        const labelCodLotesLayerGraphic = labelCodLotesLayer.graphics;\r\n\r\n        Acumulation.codRequests = selfCm.codRequestsCm;\r\n        Acumulation.currentLotsRows = selfCm.currentLotsRows;\r\n\r\n        Acumulation.attributes = labelCodLotesLayerGraphic.map((i) => {\r\n          return {\r\n            codLot: i.symbol.text,\r\n            lotUrb: i.attributes.lot_urb,\r\n            coords: [\r\n              i.geometry.x,\r\n              i.geometry.y\r\n            ]\r\n          }\r\n        });\r\n\r\n        Acumulation.newPointLotsGraphics = selfCm.map.getLayer(idGraphicPuntoLote).graphics;\r\n        Acumulation.newLandsGraphics = selfCm.map.getLayer(idGraphicPredioCm).graphics;\r\n        Acumulation.newLandsGraphics[0]['codPre'] = selfCm.cpmAcumulacion;\r\n        Acumulation.newLandsGraphics[0]['id'] = selfCm.idAcumulacion;\r\n        Acumulation.landUrl = selfCm.layersMap.getLayerInfoById(idLyrCfPredios).getUrl();\r\n        Acumulation.pointLotUrl = selfCm.layersMap.getLayerInfoById(idLyrCfLotesPun).getUrl();\r\n        Acumulation.lotUrl = selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl();\r\n        Acumulation.arancelUrl = selfCm.layersMap.getLayerInfoById(idLyrCfArancel).getUrl();\r\n        Acumulation.blockUrl = selfCm.layersMap.getLayerInfoById(idLyrCfManzanaUrb).getUrl();\r\n        Acumulation.cadastralBlockUrl = selfCm.layersMap.getLayerInfoById(idLyrCfManzana).getUrl();\r\n        Acumulation.config = selfCm.config;\r\n        Acumulation.lotGraphic = selfCm.map.getLayer(idGraphicLoteCm).graphics;\r\n        Acumulation.ubigeo = paramsApp['ubigeo'];\r\n        Acumulation.user = paramsApp['username'];\r\n        Acumulation.caseRequest = selfCm.case;\r\n        Acumulation.queryBlock = selfCm.arancel;\r\n\r\n\r\n        Acumulation.executeAcumulation()\r\n          .then(response => {\r\n            selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n            selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n            selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n            selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n            selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n            selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(false)\r\n            selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(true)\r\n            selfCm._FormResult(selfCm.codRequestsCm, selfCm.caseDescription);\r\n            selfCm.busyIndicator.hide();\r\n            selfCm._removeWarningMessageExecute()\r\n            selfCm._showMessage(selfCm.nls.successProcess, type = \"success\");\r\n          })\r\n          .catch(error => {\r\n            console.log(error)\r\n            selfCm._removeWarningMessageExecute()\r\n            selfCm._showMessage(error.message, type = \"error\");\r\n            selfCm.busyIndicator.hide();\r\n          })\r\n        // .finally(() => {\r\n        //   selfCm.lotesQuery = null;\r\n        // })\r\n      }\r\n      else {\r\n        selfCm.busyIndicator.hide();\r\n        return\r\n      }\r\n    })\r\n  },\r\n\r\n  _executeSubdivisionGpService(evt) {\r\n\r\n    const layerLote = selfCm.map.getLayer(idGraphicLoteCm)\r\n\r\n    if (!selfCm.lotesQuery) {\r\n      selfCm._showMessage(selfCm.nls.errorGetLand, 'warning');\r\n      selfCm.busyIndicator.hide();\r\n      return\r\n    }\r\n\r\n    if (!layerLote) {\r\n      selfCm._showMessage(selfCm.nls.emptyPreviewSubdivision, type = \"error\")\r\n      return\r\n    }\r\n\r\n    // Check if all labels have a value\r\n    const labelCodLotesLayer = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n    for (let pred of labelCodLotesLayer.graphics) {\r\n      if (!pred.symbol.text) {\r\n        selfCm._showMessage(selfCm.nls.emptyLotCodeSubdivision, type = \"error\")\r\n        return\r\n      }\r\n      if (!pred.attributes.lot_urb || pred.attributes.lot_urb === \"...\") {\r\n        selfCm._showMessage(selfCm.nls.emptyUrbanLotSubdivision, type = \"error\")\r\n        return\r\n      }\r\n    }\r\n\r\n    if (graphicLayerPredioByDivison.graphics.length != layerLote.graphics.length) {\r\n      selfCm._showMessage(selfCm.nls.emptyGraphicLandSubdivision, type = \"error\")\r\n      return\r\n    }\r\n    // Check if all lots have a land\r\n    const checkLotsWithinLands = UtilityCase.checkLotsWithinLands(layerLote.graphics, graphicLayerPredioByDivison.graphics)\r\n    if (!checkLotsWithinLands) {\r\n      selfCm._showMessage(selfCm.nls.emptyLandResultSubdivision, type = \"error\")\r\n      return\r\n    }\r\n\r\n    selfCm._showMessageConfirm().then(function (result) {\r\n      if (result) {\r\n        selfCm.busyIndicator.show();\r\n        selfCm._addWarningMessageExecute();\r\n        const labelCodLotesLayerGraphic = labelCodLotesLayer.graphics;\r\n\r\n        SubDivision.blockUrl = selfCm.layersMap.getLayerInfoById(idLyrCfManzanaUrb).getUrl();\r\n        SubDivision.lotUrl = selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl();\r\n        SubDivision.pointLotUrl = selfCm.layersMap.getLayerInfoById(idLyrCfLotesPun).getUrl();\r\n        SubDivision.arancelUrl = selfCm.layersMap.getLayerInfoById(idLyrCfArancel).getUrl();\r\n        SubDivision.landUrl = selfCm.layersMap.getLayerInfoById(idLyrCfPredios).getUrl();\r\n        SubDivision.cadastralBlockUrl = selfCm.layersMap.getLayerInfoById(idLyrCfManzana).getUrl();\r\n        SubDivision.currentLotsRows = selfCm.currentLotsRows;\r\n        SubDivision.newPointLotsGraphics = selfCm.map.getLayer(idGraphicPuntoLote).graphics;\r\n        SubDivision.newLandsGraphics = graphicLayerPredioByDivison.graphics;\r\n        SubDivision.queryBlock = selfCm.arancel;\r\n        SubDivision.newLandsGraphics.forEach((i) => {\r\n          i['id'] = i.attributes.id.split('_')[1],\r\n            i['codPre'] = i.attributes.cpm\r\n        });\r\n        SubDivision.lotGraphic = layerLote.graphics;\r\n\r\n        SubDivision.attributes = labelCodLotesLayerGraphic.map((i) => {\r\n          return {\r\n            codLot: i.symbol.text,\r\n            lotUrb: i.attributes.lot_urb,\r\n            coords: [\r\n              i.geometry.x,\r\n              i.geometry.y\r\n            ]\r\n          }\r\n        });\r\n\r\n        SubDivision.config = selfCm.config;\r\n        SubDivision.ubigeo = paramsApp['ubigeo'];\r\n        SubDivision.user = paramsApp['username'];\r\n        SubDivision.caseRequest = selfCm.case;\r\n        SubDivision.codRequests = selfCm.codRequestsCm;\r\n\r\n        SubDivision.executeSubdivision()\r\n          .then(response => {\r\n            graphicLayerPredioByDivison.clear();\r\n            graphicLayerLineaDivision.clear();\r\n            graphicLayerLabelLineaDivision.clear();\r\n            selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n            selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n            selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n            selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n            selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(false)\r\n            selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(true)\r\n            selfCm._FormResult(selfCm.codRequestsCm, selfCm.caseDescription);\r\n            selfCm.busyIndicator.hide();\r\n            selfCm._removeWarningMessageExecute()\r\n            selfCm._showMessage(selfCm.nls.successProcess, type = \"success\");\r\n          })\r\n          .catch(error => {\r\n            // console.log(error)\r\n            selfCm._removeWarningMessageExecute()\r\n            selfCm._showMessage(error.message, type = \"error\");\r\n            selfCm.busyIndicator.hide();\r\n          })\r\n          .finally(() => {\r\n            selfCm.lotesQuery = null;\r\n          })\r\n      }\r\n      else {\r\n        return\r\n      }\r\n    })\r\n  },\r\n\r\n  _executeInactivarGpService(evt) {\r\n    if (!selfCm.currentLotsRows) {\r\n      selfCm._showMessage(selfCm.nls.emptyLotRequests, type = \"error\")\r\n      return\r\n    }\r\n\r\n    selfCm._showMessageConfirm().then(function (result) {\r\n      if (result) {\r\n        selfCm.busyIndicator.show();\r\n        selfCm._addWarningMessageExecute();\r\n        Deactivate.caseRequest = selfCm.case;\r\n        Deactivate.codRequest = selfCm.codRequestsCm;\r\n        Deactivate.user = paramsApp['username'];\r\n        Deactivate.ubigeo = paramsApp['ubigeo'];\r\n        Deactivate.config = selfCm.config;\r\n        Deactivate.landUrl = selfCm.layersMap.getLayerInfoById(idLyrCfPredios).getUrl();\r\n        Deactivate.cpu = selfCm.uniqueCodeLands;\r\n        Deactivate.currentLotsRows = selfCm.currentLotsRows;\r\n\r\n        Deactivate.executeDeactivate()\r\n          .then(response => {\r\n            selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(false)\r\n            selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(true)\r\n            selfCm._removeWarningMessageExecute()\r\n            selfCm._loadIniRequestsCm()\r\n            dojo.query(\".backTrayClsCm\")[0].click()\r\n            selfCm.busyIndicator.hide();\r\n            selfCm._showMessage(selfCm.nls.successProcess, type = \"success\");\r\n          })\r\n          .catch(error => {\r\n            selfCm._removeWarningMessageExecute()\r\n            selfCm._showMessage(error.message, type = \"error\");\r\n            selfCm.busyIndicator.hide();\r\n          })\r\n          .finally(() => {\r\n            selfCm.currentLotsRows = null;\r\n          })\r\n      }\r\n      else {\r\n        return\r\n      }\r\n    })\r\n  },\r\n\r\n  _addWarningMessageExecute() {\r\n    const self = this;\r\n    const buzyElm = dojo.query(\"#dojox_widget_Standby_0\")[0]\r\n    const imgElm = buzyElm.querySelector(\"img\")\r\n    const loadingText = document.createElement('div');\r\n    loadingText.id = 'loadingTextCustom';\r\n    loadingText.style.position = 'absolute';\r\n    const topMessage = parseFloat(imgElm.style.top) + 80;\r\n    loadingText.style.top = `${topMessage}px`;\r\n    const leftImg = parseFloat(imgElm.style.left) + imgElm.width / 2;\r\n    loadingText.style.left = `${leftImg}px`;\r\n    loadingText.style.transform = 'translate(-50%, -50%)';\r\n    loadingText.style.background = 'white';\r\n    loadingText.style.zIndex = '1000';\r\n    loadingText.innerHTML = self.nls.warningExecute;\r\n\r\n    dojo.query(\"#dojox_widget_Standby_0\")[0].appendChild(loadingText);\r\n  },\r\n\r\n  _removeWarningMessageExecute() {\r\n    dojo.query(\"#loadingTextCustom\")[0].remove();\r\n  },\r\n\r\n  _executeIndependenceLands(evt) {\r\n    if (!selfCm.currentLotsRows) {\r\n      selfCm._showMessage(selfCm.nls.emptyLotRequests, type = \"error\")\r\n      return\r\n    }\r\n    if (!LandAssignment.checkPointLotsSelected()) {\r\n      selfCm._showMessage(selfCm.nls.emptyWaySelectedIndependence, type = \"error\")\r\n      return\r\n    }\r\n    selfCm._showMessageConfirm().then(function (result) {\r\n      if (result) {\r\n        selfCm.busyIndicator.show();\r\n        selfCm._addWarningMessageExecute();\r\n        Independence.codRequest = selfCm.codRequestsCm;\r\n        Independence.cadastralBlockUrl = selfCm.layersMap.getLayerInfoById(idLyrCfManzana).getUrl();\r\n        Independence.ubigeo = paramsApp['ubigeo'];\r\n        Independence.user = paramsApp['username'];\r\n        Independence.newLands = LandAssignment.lands;\r\n        Independence.urlLands = selfCm.layersMap.getLayerInfoById(idLyrCfPredios).getUrl();\r\n        Independence.matrixLand = selfCm.currentLandTabRows;\r\n        Independence.config = selfCm.config;\r\n        Independence.currentLotsRows = selfCm.currentLotsRows;\r\n        Independence.caseRequest = selfCm.case;\r\n\r\n        Independence.executeIndependence()\r\n          .then(response => {\r\n            LandAssignment.removeAllGraphics();\r\n            selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(false)\r\n            selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(true)\r\n            selfCm._FormResult(selfCm.codRequestsCm, selfCm.caseDescription);\r\n            selfCm.busyIndicator.hide();\r\n            selfCm._removeWarningMessageExecute();\r\n            selfCm._showMessage(selfCm.nls.successProcess, type = \"success\");\r\n          })\r\n          .catch(error => {\r\n            selfCm._removeWarningMessageExecute();\r\n            selfCm._showMessage(error.message, type = \"error\");\r\n            selfCm.busyIndicator.hide();\r\n          })\r\n          .finally(() => {\r\n            selfCm.currentLotsRows = null;\r\n          })\r\n      }\r\n      else {\r\n        return\r\n      }\r\n    })\r\n  },\r\n\r\n  _executeGPService(url, params) {\r\n    let urlStatusRequest = `${selfCm.config.applicationListUrl}/${selfCm.codRequestsCm}`\r\n    selfCm._callApiRestServices(urlStatusRequest, {}).then(function (result) {\r\n      try {\r\n        if (result.idStatus != 1) {\r\n          throw new Error(`Esta solicitud (${selfCm.codRequestsCm}) ya fue procesada con anterioridad: ${result.date}`)\r\n        }\r\n        selfCm.busyIndicator.show();\r\n        // Agregar un elemento de texto debajo del BusyIndicator\r\n        let buzyElm = dojo.query(\"#dojox_widget_Standby_0\")[0]\r\n        let imgElm = buzyElm.querySelector(\"img\")\r\n        let loadingText = document.createElement('div');\r\n        loadingText.id = 'loadingTextCustom';\r\n        loadingText.style.position = 'absolute';\r\n        let topMessage = parseFloat(imgElm.style.top) + 80;\r\n        loadingText.style.top = `${topMessage}px`;\r\n        let leftImg = parseFloat(imgElm.style.left) + imgElm.width / 2;\r\n        loadingText.style.left = `${leftImg}px`;\r\n        loadingText.style.transform = 'translate(-50%, -50%)';\r\n        loadingText.style.background = 'white';\r\n        loadingText.style.zIndex = '1000';\r\n\r\n        dojo.query(\"#dojox_widget_Standby_0\")[0].appendChild(loadingText);\r\n        // selfCm._FormResult(selfCm.codRequestsCm, selfCm.caseDescription);\r\n        selfCm.gp = new Geoprocessor(url);\r\n        selfCm.gp.submitJob(params, selfCm._completeCallback, selfCm._statusCallback);\r\n      } catch (error) {\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(error.message, type = \"error\")\r\n      }\r\n\r\n    })\r\n  },\r\n\r\n  _statusCallback(JobInfo) {\r\n    selfCm.jobId = JobInfo.jobId\r\n    let textMessage = JobInfo.messages.map((message) => { return message.description })\r\n    try {\r\n      dojo.query(\"#loadingTextCustom\")[0].textContent = textMessage.slice(-1)[0] ? textMessage.slice(-1)[0] : ''\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  },\r\n  _completeCallback(JobInfo) {\r\n    switch (JobInfo.jobStatus) {\r\n      case \"esriJobSubmitted\":\r\n        // El trabajo se ha enviado al servidor y está esperando en la cola.\r\n        console.log(\"El trabajo se ha enviado y está esperando en la cola.\");\r\n        break;\r\n      case \"esriJobExecuting\":\r\n        // El trabajo se está ejecutando actualmente en el servidor.\r\n        console.log(\"El trabajo se está ejecutando en el servidor.\");\r\n        break;\r\n      case \"esriJobSucceeded\":\r\n        // El trabajo se ha completado satisfactoriamente y los resultados están disponibles.\r\n        selfCm.gp.getResultData(JobInfo.jobId, \"response\", function (result) {\r\n          if (!result.value.status) {\r\n            selfCm.busyIndicator.hide();\r\n            selfCm._showMessage(result.value.message, type = \"error\");\r\n            return\r\n          }\r\n\r\n          selfCm._sendDataToPlatform(result.value.response)\r\n\r\n\r\n          switch (selfCm.case) {\r\n            case \"1\":\r\n              selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n              break;\r\n            case \"2\":\r\n              selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n              selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n              selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n              selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n              selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n              break\r\n            case \"3\":\r\n              graphicLayerPredioByDivison.clear();\r\n              graphicLayerLineaDivision.clear();\r\n              graphicLayerLabelLineaDivision.clear();\r\n              // selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n              selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n              selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n              selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n              selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n              break\r\n            case \"4\":\r\n              // dojo.query(\".tablinksCm.active\")[0].click();\r\n              selfCm._loadIniRequestsCm()\r\n              break\r\n            default:\r\n              break;\r\n          }\r\n          selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(false)\r\n          selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(true)\r\n          if (selfCm.case == \"4\") {\r\n            dojo.query(\".backTrayClsCm\")[0].click()\r\n          } else {\r\n            selfCm._FormResult(selfCm.codRequestsCm, selfCm.caseDescription);\r\n          }\r\n          // Codigo para mostrar la ventana de resultados\r\n\r\n\r\n        })\r\n        break;\r\n      case \"esriJobFailed\":\r\n        // El trabajo ha fallado y no se han podido generar los resultados.\r\n        selfCm._showMessage(\"El proceso ha fallado y no se han podido generar los resultados.\", type = \"error\");\r\n        break;\r\n      case \"esriJobCancelled\":\r\n        // El trabajo ha sido cancelado por el usuario.\r\n        selfCm._showMessage(\"El proceso ha sido cancelado por el usuario.\");\r\n        break;\r\n      case \"esriJobTimedOut\":\r\n        // El trabajo ha expirado debido a un tiempo de espera.\r\n        selfCm._showMessage(\"El proceso ha superado el tiempo de espera necesario para su ejecución.\", type = \"error\");\r\n        break;\r\n      default:\r\n        // El estado del trabajo no se reconoce.\r\n        selfCm._showMessage(\"El estado del proceso no se reconoce.\");\r\n        break;\r\n    }\r\n    selfCm.busyIndicator.hide();\r\n    // remove 'loadingTextCustom'\r\n    dojo.query(\"#loadingTextCustom\")[0].remove();\r\n  },\r\n  // _cancelProcess(evt) {\r\n  //   selfCm.gp.cancelJob(selfCm.jobId, function (info) {\r\n  //     console.log(info.jobStatus)\r\n  //   });\r\n  // },\r\n\r\n  // _sendDataToPlatform(data) {\r\n  //   for (let predio of data.results) {\r\n  //     predio['ubigeo'] = paramsApp.ubigeo;\r\n  //   }\r\n\r\n  //   data['idType'] = parseInt(selfCm.case)\r\n  //   fetch(selfCm.config.updateStatusApplication, {\r\n  //     method: 'POST', // o 'PUT'\r\n  //     body: JSON.stringify(data), // los datos pueden ser de tipo 'string' o {object}\r\n  //     headers: {\r\n  //       'Content-Type': 'application/json'\r\n  //     }\r\n  //   }).then(res => res.json())\r\n  //     .then(response => selfCm._showMessage('El proceso se completó satisfactoriamente.'))\r\n  //     // .catch(error => console.error('Error:', error));\r\n  //     .catch(error => selfCm._showMessage(error, type = \"error\"));\r\n  // },\r\n\r\n  _exportTableToExcel(evt) {\r\n    // Obtén la tabla HTML\r\n    const table = dojo.query(\"#tableRequestCm\")[0]\r\n    let headerRow = table.querySelector(\"tr\");\r\n    let rows = table.querySelectorAll(\"tr\")\r\n\r\n    let headers = [];\r\n    let headerCols = headerRow.querySelectorAll(\"th\");\r\n    for (let h = 0; h < headerCols.length - 1; h++) {\r\n      headers.push(headerCols[h].innerText);\r\n    }\r\n\r\n    let data = [];\r\n\r\n    // Recorre las filas (ignora la primera fila que contiene los encabezados)\r\n    for (let i = 0; i < rows.length; i++) {\r\n      if (i == 0) continue;\r\n      let row = {}, cols = rows[i].querySelectorAll(\"td\");\r\n\r\n      // Recorre las columnas\r\n      for (let j = 0; j < cols.length - 1; j++) {\r\n        // Usa el texto del encabezado como clave y el texto de la celda como valor\r\n        row[headers[j]] = cols[j].innerText;\r\n      }\r\n\r\n      data.push(row);\r\n    }\r\n\r\n\r\n\r\n    // Convierte el array de objetos en una cadena JSON\r\n    let wb = XLSX.utils.book_new();\r\n\r\n    // Crear una hoja de cálculo a partir de los datos JSON\r\n    let ws = XLSX.utils.json_to_sheet(data);\r\n    let sheetName = selfCm.currentTabActive.replace(\"_\", \" \");\r\n    XLSX.utils.book_append_sheet(wb, ws, sheetName);\r\n\r\n    // Escribir el libro de trabajo y forzar una descarga\r\n    XLSX.writeFile(wb, `reporte_solicitudes_${selfCm.currentTabActive}.xlsx`);\r\n  },\r\n\r\n  _dataURItoBlob(dataURI) {\r\n    var byteString = atob(dataURI.split(',')[1]);\r\n    var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n    var buffer = new ArrayBuffer(byteString.length);\r\n    var dataView = new Uint8Array(buffer);\r\n    for (var i = 0; i < byteString.length; i++) {\r\n      dataView[i] = byteString.charCodeAt(i);\r\n    }\r\n    return new Blob([buffer], { type: mimeString });\r\n  },\r\n\r\n  _sendObservation(evt) {\r\n    selfCm.busyIndicator.show();\r\n    let file = selfCm.imgUploadApCm.files[0];\r\n    if (file == undefined) {\r\n      selfCm.busyIndicator.hide();\r\n      selfCm._showMessage(selfCm.nls.emptyImageSupport, type = \"error\");\r\n      return\r\n    }\r\n    let reader = new FileReader();\r\n    let data = new FormData();\r\n    reader.onloadend = function () {\r\n      data.append('application_id', selfCm.codRequestsCm);\r\n      data.append('description', selfCm.textAreaObsApCm.value);\r\n      data.append('img', selfCm.imgUploadApCm.files[0]);\r\n\r\n      return fetch(selfCm.config.observationUrl, {\r\n        method: 'POST',\r\n        body: data\r\n      })\r\n        .then(response => {\r\n          if (!response.ok) {\r\n            selfCm.busyIndicator.hide();\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n          }\r\n          selfCm.busyIndicator.hide();\r\n          selfCm._showMessagePromise(selfCm.nls.successRequestObservation).then((result) => {\r\n            dojo.query(\".backRequestsClsCm\")[0].click();\r\n            dojo.query(\".backTrayClsCm\")[0].click();\r\n            selfCm._loadIniRequestsCm();\r\n          })\r\n\r\n        }).catch(error => {\r\n          selfCm.busyIndicator.hide();\r\n          selfCm._showMessage(`${selfCm.nls.errorProcessRequestObservation} ${error}`, type = \"error\")\r\n        });\r\n    }\r\n    reader.readAsDataURL(file);\r\n  },\r\n\r\n  _uploadImagenObs(evt) {\r\n    let imageDiv = dojo.query(\".thumbnailClsCm\")[0];\r\n    let file = evt.target.files[0];\r\n    let reader = new FileReader();\r\n\r\n    reader.onloadend = function () {\r\n      imageDiv.innerHTML = \"\";\r\n      imageDiv.style.backgroundImage = 'url(' + reader.result + ')';\r\n      imageDiv.style.backgroundSize = 'contain';\r\n      imageDiv.style.backgroundRepeat = 'no-repeat';\r\n      imageDiv.style.backgroundPosition = 'center';\r\n    }\r\n\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n      imageDiv.innerHTML = \"<span><i class='far fa-image'></i></span>\";\r\n    }\r\n  },\r\n  _searchRequestByCodPred(evt) {\r\n    if (evt.keyCode === 13) {\r\n      if (evt.target.value == '') {\r\n        if ('cup' in selfCm.queryRequests) {\r\n          delete selfCm.queryRequests['cup'];\r\n        }\r\n      } else {\r\n        selfCm.queryRequests['cup'] = evt.target.value;\r\n        // selfCm.queryRequests.limit = selfCm.defaultLimit;\r\n      }\r\n      dojo.query(\".tablinksCm.active\")[0].click();\r\n    }\r\n  },\r\n\r\n  _sortedByDate(evt) {\r\n    const columnOrder = evt.currentTarget.dataset.val\r\n    evt.currentTarget.dataset.val = columnOrder.includes('-') ? columnOrder.replace('-', '') : `-${columnOrder}`\r\n    selfCm.queryRequests['ordering'] = evt.currentTarget.dataset.val;\r\n    selfCm._loadRequestsCm();\r\n    // dojo.query(\".tablinksCm.active\")[0].click();\r\n  },\r\n\r\n  onOpen() {\r\n    console.log('CartoMaintenanceWgt::onOpen');\r\n    // let panel = this.getPanel();\r\n    // panel.position.height = 700;\r\n    // panel.setPosition(panel.position);\r\n    // panel.panelManager.normalizePanel(panel);\r\n\r\n    this._createToolbar();\r\n\r\n    dojo.query(\".backTrayClsCm\").on('click', this._openFormCase);\r\n    dojo.query(\".tablinksCm\").on('click', this._loadRequestTabActiveCm);\r\n    dojo.query(\"#btnObsCaseCm\").on('click', this._openFormObs);\r\n    dojo.query(\".backRequestsClsCm\").on('click', this._openFormObs);\r\n    // dojo.query(\"#goodRequestsCm\").on('click', this._openFormResult);\r\n    dojo.query(\"#showInfoDocCm\").on('click', this._openSupportingDocument)\r\n\r\n    // Reasignacion\r\n    dojo.query(\"#btnDrawMarkerCm\").on('click', this._activateTool);\r\n\r\n    dojo.query(\"#btnFsCm\").on('click', this._ApplyAcumulationLotsRefactor)\r\n    dojo.query(\"#btnDrawLinesDvCm\").on('click', this._activateToolLinesDivision)\r\n    dojo.query(\"#btnApplyDvCm\").on('click', this._ApplyDivideLotesRefactor)\r\n    dojo.query(\"#titleCaseCm\").on('click', this._zoomHomeRequests)\r\n    dojo.query(\"#sendDataRsCm\").on('click', this._executeReasignacionGpService)\r\n    dojo.query('#sendDataFsCm').on('click', this._executeAcumulacionGpService)\r\n    dojo.query('#sendDataDvCm').on('click', this._executeSubdivisionGpService)\r\n    dojo.query('#sendDataDtCm').on('click', this._executeInactivarGpService)\r\n    dojo.query('#btnReportCm').on('click', this._exportTableToExcel)\r\n    dojo.query('#imgUploadCm').on('change', this._uploadImagenObs)\r\n    dojo.query('#sendDataObsGrCm').on('click', this._sendObservation)\r\n    dojo.query('#searchTbxCm').on(\"keyup\", this._searchRequestByCodPred)\r\n    dojo.query('.columnDateClsCm').on(\"click\", this._sortedByDate)\r\n    dojo.query('.selectLimitClsCm').on(\"change\", this._changeLimitPagination)\r\n    dojo.query('.buttonPaginationPrevClsCm').on(\"click\", this._prevPagePagination)\r\n    dojo.query('.buttonPaginationNextClsCm').on(\"click\", this._nextPagePagination)\r\n    // dojo.query('.columnCaseClsCm').on(\"click\", this._sortedByDate)\r\n    this._loadIniRequestsCm()\r\n\r\n    selfCm.map.addLayer(graphicLayerLabelLineaDivision)\r\n    // selfCm.map.addLayer(graphicLayerLandsByIndependence)\r\n    selfCm.editToolbar = new Edit(selfCm.map);\r\n    // selfCm.map.on(\"click\", selfCm._enableEditingLabelsLotesDivision);\r\n    selfCm.editToolbar.on(\"deactivate\", function (evt) {\r\n      if (evt.info.isModified) {\r\n        selfCm.map.setInfoWindowOnClick(true)\r\n        // firePerimeterFL.applyEdits(null, [evt.graphic], null);\r\n      }\r\n    });\r\n  },\r\n\r\n\r\n  // onClose(){\r\n  //   console.log('CartoMaintenanceWgt::onClose');\r\n  // },\r\n  // onMinimize(){\r\n  //   console.log('CartoMaintenanceWgt::onMinimize');\r\n  // },\r\n  // onMaximize(){\r\n  //   console.log('CartoMaintenanceWgt::onMaximize');\r\n  // },\r\n  // onSignIn(credential){\r\n  //   console.log('CartoMaintenanceWgt::onSignIn', credential);\r\n  // },\r\n  // onSignOut(){\r\n  //   console.log('CartoMaintenanceWgt::onSignOut');\r\n  // }\r\n  // onPositionChange(){\r\n  //   console.log('CartoMaintenanceWgt::onPositionChange');\r\n  // },\r\n  // resize(){\r\n  //   console.log('CartoMaintenanceWgt::resize');\r\n  // }\r\n});\r\n"]}