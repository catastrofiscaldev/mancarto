{"version":3,"sources":["../../../widgets/CartoMaintenanceWgt/Widget.js"],"names":["declare","BaseWidget","_WidgetsInTemplateMixin","Draw","Edit","Graphic","SimpleFillSymbol","SimpleMarkerSymbol","SimpleLineSymbol","Color","GraphicsLayer","Point","LayerInfos","lang","FeatureLayer","QueryTask","Query","WidgetManager","geometryEngine","Polyline","Polygon","webMercatorUtils","Geoprocessor","BusyIndicator","Message","turf","XLSX","Deferred","TextSymbol","Font","CaseInfo","StatisticDefinition","esriRequest","SubDivision","Acumulation","Independence","Deactivate","LandAssignment","LandProcess","ToolDraw","UtilityCase","GeometryService","CustomException","requestToAttendState","requestsObservedState","requestsAttendState","idLyrCatastroFiscal","idLyrCfPredios","idLyrCfLotesPun","idLyrCfEje_vial","idLyrCfNumeracion","idLyrCfArancel","idLyrCfLotes","idLyrCfUnidadesurbanas","idLyrCfParques","idLyrCfManzana","idLyrCfManzanaUrb","idLyrCfSector","idLyrDistricts","iconByState","_UBIGEO_FIELD","_ID_LOTE_P_FIELD","_COD_MZN_FIELD","_F_MZN_FIELD","_COD_SECT_FIELD","_COD_PRE_FIELD","_COD_LOTE_FIELD","toolbarCm","params","URLSearchParams","window","location","search","paramsApp","keys","key","get","symbolPuntoLote","STYLE_SQUARE","STYLE_SOLID","symbolFusionLote","symbolEliminarLote","STYLE_DIAGONAL_CROSS","symbolLoteSelected","symbolDivisionLote","STYLE_DASH","symbolPredio","symbolPredioSelected","symbolPredioSelected2","symbolSnapPointCm","STYLE_CROSS","idGraphicPredioCm","idGraphicPredioByDivison","idGraphicPredioSelectedCm","idGraphicLoteCm","idGraphicLoteSelectedCm","idGraphicPuntoLote","idGraphicFrenteLote","idGraphicLineaDivision","idGraphicLoteDeleteCm","idGraphicLabelLineaDivision","idGraphicLabelCodLote","symbolByCase","graphicLayerLineaDivision","id","graphicLayerLabelLineaDivision","graphicLayerPredioByDivison","fontAwesome","document","createElement","src","head","appendChild","baseClass","codRequestsCm","currentTabActive","layersMap","queryUbigeo","case","caseDescription","lotesQuery","idlotes","arancel","codigosPredios","xy","idxLines","cpmPredioDivision","idPredioDivision","cpmAcumulacion","idAcumulacion","editToolbar","idButtonDrawActive","queryRequests","ubigeo","limit","offset","ordering","defaultOffset","currentCount","responseRequests","currentLotsRows","currentLandRows","currentPoinLotsRows","resolutionType","resolutionDocument","floor","urbanLotNumber","postCreate","inherited","arguments","_setInitAppCm","geometryService","config","geometryServiceUrl","selfCm","esri","bundle","toolbars","draw","addPoint","addShape","resume","start","_getAllLayers","deferred","getInstance","map","itemInfo","then","hitch","layerInfosObj","resolve","catch","reject","err","promise","response","_filterByDistrictCm","_startExtentByDistrictCm","_setToolbarDraw","_showMessage","message","type","lotFeatureLayer","getLayer","initToolDraw","controlMeasurementRealTime","measurementLabelApCm","dojo","query","on","activateToolDraw","bind","title","nls","widgetTitle","titleLabel","_showMessagePromise","messagetext","buttons","label","onClick","hide","_showMessageConfirm","mensaje","quesstionContinue","queryPredios","getLayerInfoById","getFilter","setFilter","where","qTask","getUrl","executeForExtent","setExtent","results","extent","homeWidget","getWidgetsByName","homeDijit","startup","busyIndicator","create","target","domNode","parentNode","backgroundOpacity","_callApiRestServices","baseUrl","url","URL","Object","forEach","searchParams","append","fetch","ok","Error","status","json","console","log","_getRequestsTrayDataCm","responseData","state","data","filter","i","_loadIniRequestsCm","click","_parseDateStringtoFormat","dateString","date","Date","day","getDate","month","getMonth","year","getFullYear","_loadRequestTabActiveCm","evt","currentElementActive","idStatus","_loadRequestsCm","show","applicationListUrl","dataHtml","lands","lnd","join","idType","icon","tbody","innerHTML","tb","getElementsByTagName","length","tableRequestApCm","removeChild","_openFormCase","_openFormResult","removeClass","classList","add","_controlLabelPagination","_changeLimitPagination","parseInt","value","_nextPagePagination","_prevPagePagination","ini","disabled","end","_zoomToPredSelectedEvt","cup","currentTarget","dataset","_zoomToPredSelected","_handleFeatureSelected","feature","featureSelected","setSymbol","addLayer","centerAt","geometry","setTimeout","_removeLayerGraphic","LandCls","Land","prediosLayer","propertyLayer","mode","MODE_ONDEMAND","outFields","codCpu","estado","selectFeatures","SELECTION_NEW","emptyLandSelected","error","_openSupportingDocument","emptyDocSupport","open","focus","executeQueryTask","Promise","execute","_getLandsOriginals","self","LotCls","Lot","queryLands","cpuOriginal","currentLandTabRows","ubigeoFieldName","returnGeometry","urlLands","features","errorGetLand","idLots","attributes","idLotP","_getLotsOriginals","queryLots","urlLots","emptyLotRequests","codMznValues","codSectValues","_getPointLotsOriginals","queryPointLots","urlPointLots","emptyPointLotRequests","_getLandsOriginalsTab","idSolicitud","urlOriginal","landsByApplicationUrl","count","_getOriginalData","_zoomExtentToLote","errorAcumulationLandsNumber","unionPredios","_unionFeatures","getExtent","expand","_zoomHomeRequests","_toggleBodyCaseInfo","closest","querySelector","toggle","_requestCaseInfo","urlResults","resultsByApplication","urlDocSupport","urlAffectedLands","affectedLands","all","_","responseResults","responseDocSupport","responseAffectedLands","rows","idx","contentCard","active","empyLandResultsRequests","support","rowsAffected","addClass","rowsResults","uniqueCodeLands","reasignarApCm","fusionApCm","divisionApCm","containerToolDrawApCm","eliminacionApCm","independenceApCm","pointLots","landsSymbol","landsSymbolSelected","removeAllGraphics","renderTableLandAssignment","renderButtonProcess","_executeIndependenceLands","selectedPointLots","highlightLand","reestartSymbolLand","resultCtnApCm","remove","obsCtnApCm","requestTrayApCm","casesCtnApCm","row","rowList","td","deactivate","disableSnapping","bodyTbLinesDvApCm","bodyTbPrediosDvApCm","bodyTbDatosLoteDvApCm","clear","_removeClassActiveButton","_openFormObs","textAreaObsApCm","imageDiv","imgUploadApCm","style","backgroundImage","_FormResult","id_solicitud","caseCm","urlPredioResults","nameCase","resultDeactivate","bodyTbResultsApCm","predio","index","_centerAtPredioResult","replace","_createToolbar","_addToMap","screenPoint","toScreen","snappingManager","getSnappingPoint","undefined","point_g","webMercatorToGeographic","graphic","symbol","graphicLayer","x","y","cpm","setInfoWindowOnClick","errorSnapingLocate","nameIdLine","_populateTableDrawLine","_addNameToLine","layerId","graphicsLayerIds","includes","removeLayer","_activateTool","_activateSnappingByReasignar","activate","_activateToolAcumulacion","resolutiontype","resolutiondocument","urbanlotnumber","parentElement","split","_activateSnappingByAcumulacion","_activateToolLinesDivision","toolbarDraw","_activateSnappingByDivision","cflayer","snapManager","enableSnapping","snapPointSymbol","tolerance","layerInfos","layer","setLayerInfos","graphicLayerPuntoLote","graphicsLayerInfo","layers","LayerInfo","name","arr","union","_unionFeaturesAcumulation","topology","graphicLayerLoteFusion","rings","_extent","_ApplyAcumulationLotsRefactor","_getOriginalLots","geomLoteAcumulation","_getMaxCodLot","_ordenarPoligonosNorteSur","proprsLot","polygons","maxCodLote","bodyTbDatosLoteFsApCm","_addGraphicsPointLotsAndArancel","_populateTablePredio","bodyTbPrediosFsApCm","_getMidpoint","polyline","geodesicLength","midpoint","geodesicDensify","getPoint","_findMidpoint","lengthPolylineChunk","line","lineString","paths","options","units","along","_getLongestPolyline","longestPath","path","polylineChunk","spatialReference","wkid","_dividePolygon","poly","lines","divide","cut","item","simplePolygon","push","idLine","tr","cursor","_deleteRowLine","_zoonToLineDivision","_editaNameLineDivision","elem","graphics","graphicLabel","polylineGeom","polylineGeomUtm","midPoint","pointLabel","coordinates","font","STYLE_NORMAL","VARIANT_NORMAL","WEIGHT_BOLD","txtSym","setOffset","setAlign","ALIGN_END","setHaloColor","setHaloSize","text","innerText","refresh","bodyTable","drawFunction","_activateSnappingPrediosByDivision","graphiclayer","_activateToolPrediosByDivision","_changeValueCodLote","selectedValue","currentSelectId","lyr","graphicSelected","selects","select","graphicNotSelected","_changeLotUrb","lot_urb","_centerAtLabelCodLoteDivision","centerAndZoom","_editLoteUrbanoDivision","selectedOptions","_buildDataLoteTable","tableBody","predios","indexCell","className","textContent","num","codigoCell","optionDisabled","option","p","cod_lote","selected","loteUrbCell","loteUrbSelect","optionDisabledLotUrb","cloneNode","request","locationMarker","poligonos","coordenadasNorte","poligono","ymax","poligonosOrdenados","slice","sort","a","b","coordenadaNorteA","indexOf","coordenadaNorteB","graphicLayerLabelCodLoteDivision","dataLoteTable","labelPoints","point","_zfill","setColor","setSize","idGraphic","clase","len","Array","fill","polygonos","estadisticaDef","statisticType","onStatisticField","outStatisticFieldName","outStatistics","queryTask","result","resultado","outSR","f","requestOptions","content","handleAs","callbackParamName","usePost","_getPolylinesDrawn","unionGraphicLayerLineaDivision","lineGeometry","_divideLotsByLines","errorLotQuery","polygonGeometry","geomLoteDivided","errorDivideLot","graphicLayerLoteDivision","lote","orderByFields","graphicLayerFrenteLote","graphicLoteDivision","frentes","isItc","intersects","hasOwnProperty","unionFrentes","idItcFrentesByLotes","itcFrentesByLotes","intersect","symbolFrenteLote","Math","random","frente","puntoLoteTurf","puntoLote","puntoLoteGraphic","_ApplyDivideLotesRefactor","emptyLineSubdivision","reorderLayer","_executeAcumulacionGpService","emptyPreviewAccumulation","emptyNewLand","labelCodLotesLayer","_addWarningMessageExecute","labelCodLotesLayerGraphic","codRequests","codLot","lotUrb","coords","newPointLotsGraphics","newLandsGraphics","landUrl","pointLotUrl","lotUrl","arancelUrl","blockUrl","cadastralBlockUrl","lotGraphic","user","caseRequest","queryBlock","executeAcumulation","setVisibility","_removeWarningMessageExecute","successProcess","ErrorEqualUrbanLotWithinBlock","_executeSubdivisionGpService","layerLote","emptyPreviewSubdivision","pred","emptyLotCodeSubdivision","emptyUrbanLotSubdivision","emptyGraphicLandSubdivision","checkLotsWithinLands","emptyLandResultSubdivision","lotUrbArray","duplicateLotUrban","checkDuplicateLotUrbanResults","duplicateLotUrbanResult","executeSubdivision","_executeInactivarGpService","codRequest","cpu","executeDeactivate","finally","buzyElm","imgElm","loadingText","position","topMessage","parseFloat","top","leftImg","left","width","transform","background","zIndex","warningExecute","checkPointLotsSelected","emptyWaySelectedIndependence","newLands","matrixLand","executeIndependence","_executeGPService","urlStatusRequest","gp","submitJob","_completeCallback","_statusCallback","JobInfo","jobId","textMessage","messages","description","jobStatus","getResultData","_sendDataToPlatform","_exportTableToExcel","table","headerRow","querySelectorAll","headers","headerCols","h","cols","j","wb","utils","book_new","ws","json_to_sheet","sheetName","book_append_sheet","writeFile","_dataURItoBlob","dataURI","byteString","atob","mimeString","buffer","ArrayBuffer","dataView","Uint8Array","charCodeAt","Blob","_sendObservation","file","files","messageObservation","trim","emptyObservation","emptyImageSupport","reader","FileReader","FormData","onloadend","observationUrl","method","body","successRequestObservation","errorProcessRequestObservation","readAsDataURL","_uploadImagenObs","backgroundSize","backgroundRepeat","backgroundPosition","_searchRequestByCodPred","keyCode","_sortedByDate","columnOrder","val","onOpen","info","isModified"],"mappings":"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","file":"Widget.js","sourcesContent":["import declare from 'dojo/_base/declare';\r\nimport BaseWidget from 'jimu/BaseWidget';\r\nimport _WidgetsInTemplateMixin from 'dijit/_WidgetsInTemplateMixin';\r\nimport Draw from \"esri/toolbars/draw\";\r\nimport Edit from \"esri/toolbars/edit\";\r\nimport Graphic from \"esri/graphic\";\r\nimport SimpleFillSymbol from \"esri/symbols/SimpleFillSymbol\";\r\nimport SimpleMarkerSymbol from \"esri/symbols/SimpleMarkerSymbol\";\r\nimport SimpleLineSymbol from \"esri/symbols/SimpleLineSymbol\";\r\nimport Color from 'dojo/_base/Color';\r\nimport GraphicsLayer from \"esri/layers/GraphicsLayer\"\r\nimport Point from \"esri/geometry/Point\"\r\nimport LayerInfos from \"jimu/LayerInfos/LayerInfos\";\r\nimport lang from \"dojo/_base/lang\";\r\nimport FeatureLayer from \"esri/layers/FeatureLayer\";\r\nimport QueryTask from \"esri/tasks/QueryTask\";\r\nimport Query from \"esri/tasks/query\";\r\nimport WidgetManager from \"jimu/WidgetManager\"\r\nimport geometryEngine from \"esri/geometry/geometryEngine\";\r\nimport Polyline from \"esri/geometry/Polyline\";\r\nimport Polygon from \"esri/geometry/Polygon\";\r\nimport webMercatorUtils from \"esri/geometry/webMercatorUtils\";\r\nimport Geoprocessor from \"esri/tasks/Geoprocessor\";\r\nimport BusyIndicator from 'esri/dijit/util/busyIndicator';\r\nimport Message from \"jimu/dijit/Message\";\r\nimport turf from \"https://unpkg.com/@turf/turf@6/turf.min.js\"\r\nimport XLSX from \"https://unpkg.com/xlsx@0.17.2/dist/xlsx.full.min.js\"\r\nimport Deferred from \"dojo/Deferred\";\r\nimport TextSymbol from \"esri/symbols/TextSymbol\";\r\nimport Font from \"esri/symbols/Font\";\r\nimport CaseInfo from './CaseInfo';\r\nimport StatisticDefinition from \"esri/tasks/StatisticDefinition\"\r\nimport esriRequest from \"esri/request\"\r\nimport SubDivision from './case/Subdivision';\r\nimport Acumulation from './case/Acumulation';\r\nimport Independence from './case/Independence';\r\nimport Deactivate from './case/Deactivate';\r\nimport LandAssignment from './components/LandAssignment';\r\nimport LandProcess from './components/LandProcess';\r\nimport ToolDraw from './components/ToolDraw';\r\n// import LandMatrix from './components/LandMatrix';\r\nimport UtilityCase from './case/UtilityCase';\r\nimport GeometryService from \"esri/tasks/GeometryService\";\r\nimport CustomException from './case/CustomException';\r\n\r\n\r\n\r\nconst requestToAttendState = \"por_atender\"\r\nconst requestsObservedState = \"observado\"\r\nconst requestsAttendState = \"atendido\"\r\n\r\n\r\n// Layers ids\r\nconst idLyrCatastroFiscal = \"CARTO_FISCAL_6806\"\r\nconst idLyrCfPredios = \"CARTO_FISCAL_8991\"\r\nconst idLyrCfLotesPun = \"CARTO_FISCAL_981\"\r\nconst idLyrCfEje_vial = \"CARTO_FISCAL_6806_2\"\r\nconst idLyrCfNumeracion = \"CARTO_FISCAL_6806_3\"\r\nconst idLyrCfArancel = \"CARTO_FISCAL_4232\"\r\nconst idLyrCfLotes = \"CARTO_FISCAL_2802\"\r\nconst idLyrCfUnidadesurbanas = \"CARTO_FISCAL_6806_6\"\r\nconst idLyrCfParques = \"CARTO_FISCAL_6806_7\"\r\nconst idLyrCfManzana = \"CARTO_FISCAL_6806_8\"\r\nconst idLyrCfManzanaUrb = \"CARTO_FISCAL_6806_9\"\r\nconst idLyrCfSector = \"CARTO_FISCAL_6806_10\"\r\n// const idLyrActpuntoimg = \"ACTUALIZACION_DE_PUNTO_IMG_1890\"\r\nconst idLyrDistricts = \"limites_nacional_1821_2\"\r\n\r\nconst iconByState = {\r\n  \"por_atender\": { 'icon': 'fas fa-pencil-alt', 'id': 'editRequestsCm', 'desc': \"Por atender\", 'idStatus': 1 },\r\n  \"observado\": { 'icon': 'fas fa-pause', 'id': 'obsRequestsCm', 'desc': \"Observado\", 'idStatus': 3 },\r\n  \"atendido\": { 'icon': 'fas fa-check', 'id': 'goodRequestsCm', 'desc': \"Atendido\", 'idStatus': 2 },\r\n}\r\n\r\n// Fields \r\nconst _UBIGEO_FIELD = \"UBIGEO\"\r\nconst _ID_LOTE_P_FIELD = \"ID_LOTE_P\"\r\nconst _COD_MZN_FIELD = \"COD_MZN\"\r\nconst _F_MZN_FIELD = \"F_MZN\"\r\nconst _COD_SECT_FIELD = \"COD_SECT\"\r\nconst _COD_PRE_FIELD = \"COD_PRE\"\r\nconst _COD_LOTE_FIELD = \"COD_LOTE\"\r\n\r\n\r\nlet toolbarCm\r\n\r\nconst params = new URLSearchParams(window.location.search)\r\nconst paramsApp = {}\r\n\r\nfor (let key of params.keys()) {\r\n  paramsApp[key] = params.get(key)\r\n}\r\n\r\n// Styles\r\nconst symbolPuntoLote = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_SQUARE,\r\n  20,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0]), 2),\r\n  new Color([0, 92, 230, 1]\r\n  )\r\n)\r\n\r\nconst symbolFusionLote = new SimpleFillSymbol(\r\n  SimpleFillSymbol.STYLE_SOLID,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0]),\r\n    2\r\n  ),\r\n  new Color([255, 255, 0, 0.25])\r\n)\r\n\r\nconst symbolEliminarLote = new SimpleFillSymbol(\r\n  SimpleFillSymbol.STYLE_DIAGONAL_CROSS,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([100, 100, 100]),\r\n    2\r\n  ),\r\n  new Color([229, 229, 229, 0.9])\r\n)\r\n\r\nconst symbolLoteSelected = new SimpleFillSymbol(\r\n  SimpleFillSymbol.STYLE_SOLID,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0, 0.75]),\r\n    4\r\n  ),\r\n  new Color([0, 255, 0, 0])\r\n)\r\n\r\nconst symbolDivisionLote = new SimpleLineSymbol(\r\n  SimpleLineSymbol.STYLE_DASH,\r\n  new Color([255, 0, 0]),\r\n  2\r\n)\r\n\r\nconst symbolPredio = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_SQUARE,\r\n  20,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0]), 2),\r\n  new Color([235, 69, 95, 1]\r\n  )\r\n)\r\n\r\nconst symbolPredioSelected = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_SQUARE, 20,\r\n  new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0]), 4),\r\n  new Color([0, 255, 0, 0])\r\n);\r\n\r\nconst symbolPredioSelected2 = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_SQUARE,\r\n  30,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([0, 183, 205]), 2),\r\n  new Color([0, 255, 255]\r\n  )\r\n);\r\n\r\nconst symbolSnapPointCm = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_CROSS,\r\n  20,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0]),\r\n    2\r\n  ),\r\n  new Color([0, 255, 0, 0.25])\r\n)\r\n\r\n\r\n// Identificadores de graficos\r\nconst idGraphicPredioCm = \"graphicPredioCm2\"\r\nconst idGraphicPredioByDivison = \"graphicPredioByDivison\"\r\n// const idGraphicLandsByIndependence = \"graphicLandsByIndependence\"\r\nconst idGraphicPredioSelectedCm = \"graphicPredioSelected\"\r\nconst idGraphicLoteCm = \"graphicLoteCm\"\r\nconst idGraphicLoteSelectedCm = \"graphicLoteSelectedCm\"\r\nconst idGraphicPuntoLote = \"graphicPuntoLote\"\r\nconst idGraphicFrenteLote = \"graphicFrenteLote\"\r\nconst idGraphicLineaDivision = \"graphicLineaDivision\"\r\nconst idGraphicLoteDeleteCm = \"graphicLoteDeleteCm\"\r\nconst idGraphicLabelLineaDivision = \"graphicLabelLineaDivision\"\r\nconst idGraphicLabelCodLote = \"graphicLabelCodLoteDivision\"\r\n\r\n// symbol by case\r\nconst symbolByCase = {\r\n  \"1\": { \"symbol\": symbolPredio },\r\n  \"2\": { \"symbol\": symbolPredio },\r\n  \"3\": { \"symbol\": symbolPredio },\r\n}\r\n\r\n// graphicsLayer main\r\nconst graphicLayerLineaDivision = new GraphicsLayer({\r\n  id: idGraphicLineaDivision,\r\n});\r\n\r\nconst graphicLayerLabelLineaDivision = new GraphicsLayer({\r\n  id: idGraphicLabelLineaDivision,\r\n});\r\n\r\n// let graphicLayerLabelCodLoteDivision = new GraphicsLayer({\r\n//   id: idGraphicLabelCodLote,\r\n// });\r\n\r\nconst graphicLayerPredioByDivison = new GraphicsLayer({\r\n  id: idGraphicPredioByDivison,\r\n});\r\n\r\n// const graphicLayerLandsByIndependence = new GraphicsLayer({\r\n//   id: idGraphicLandsByIndependence,\r\n// });\r\n\r\nconst fontAwesome = document.createElement('script');\r\nfontAwesome.src = 'https://use.fontawesome.com/releases/v5.3.1/js/all.js';\r\ndocument.head.appendChild(fontAwesome);\r\n\r\n// To create a widget, you need to derive from BaseWidget.\r\nexport default declare([BaseWidget], {\r\n\r\n  // Custom widget code goes here\r\n\r\n  baseClass: 'carto-maintenance-wgt',\r\n  codRequestsCm: null,\r\n  currentTabActive: requestToAttendState,\r\n  layersMap: [],\r\n  queryUbigeo: paramsApp['ubigeo'] ? `${_UBIGEO_FIELD} = '${paramsApp['ubigeo']}'` : \"1=1\",\r\n  case: 0,\r\n  caseDescription: '',\r\n  lotesQuery: null,\r\n  idlotes: null,\r\n  arancel: null,\r\n  codigosPredios: null,\r\n  xy: [],\r\n  idxLines: 0,\r\n  cpmPredioDivision: '',\r\n  idPredioDivision: '',\r\n  cpmAcumulacion: '',\r\n  idAcumulacion: '',\r\n  editToolbar: null,\r\n  idButtonDrawActive: '',\r\n  queryRequests: {\r\n    ubigeo: paramsApp['ubigeo'],\r\n    limit: 25,\r\n    offset: 0,\r\n    ordering: \"date\"\r\n  },\r\n  // defaultLimit: 25,\r\n  defaultOffset: 0,\r\n  currentCount: 0,\r\n  responseRequests: null,\r\n  currentLotsRows: null,\r\n  currentLandRows: null,\r\n  currentPoinLotsRows: null,\r\n\r\n  resolutionType: null,\r\n  resolutionDocument: null,\r\n  floor: null,\r\n  urbanLotNumber: null,\r\n  // toolDraw: new ToolDraw(),\r\n\r\n  // ErrorEqualUrbanLotWithinBlock: new CustomException.ErrorEqualUrbanLotWithinBlock(),\r\n  // currentLotsRowsAsPolygons: null,\r\n\r\n  // add additional properties here\r\n\r\n  // methods to communication with app container:\r\n  postCreate() {\r\n    this.inherited(arguments);\r\n    // this._getAllLayers();\r\n    this._setInitAppCm();\r\n    this.geometryService = new GeometryService(this.config.geometryServiceUrl);\r\n    selfCm = this;\r\n    // this._filterByDistrictCm();\r\n    // this._startExtentByDistrictCm();\r\n    // this._setToolbarDraw();\r\n    esri.bundle.toolbars.draw.addPoint = esri.bundle.toolbars.draw.addPoint + \"<br/>Pulsar <strong>CTRL</strong> para activar la alineación\";\r\n    esri.bundle.toolbars.draw.addShape = esri.bundle.toolbars.draw.addShape + \"<br/>Pulsar <strong>CTRL</strong> para activar la alineación\";\r\n    esri.bundle.toolbars.draw.resume = esri.bundle.toolbars.draw.resume + \"<br/>Pulsar <strong>CTRL</strong> para activar la alineación\";\r\n    esri.bundle.toolbars.draw.start = esri.bundle.toolbars.draw.start + \"<br/>Pulsar <strong>CTRL</strong> para activar la alineación\";\r\n  },\r\n  _getAllLayers() {\r\n    const deferred = new Deferred();\r\n    LayerInfos.getInstance(this.map, this.map.itemInfo)\r\n      .then(lang.hitch(this, function (layerInfosObj) {\r\n        // this.layersMap = layerInfosObj;\r\n        return deferred.resolve(layerInfosObj);\r\n      }))\r\n      .catch(err => deferred.reject(err));\r\n    return deferred.promise;\r\n  },\r\n\r\n  _setInitAppCm() {\r\n    return this._getAllLayers()\r\n      .then(response => {\r\n        this.layersMap = response;\r\n        this._filterByDistrictCm();\r\n      })\r\n      .then(() => {\r\n        return this._startExtentByDistrictCm(this.map);\r\n      })\r\n      .then(() => {\r\n        this._setToolbarDraw();\r\n      })\r\n      .catch(err => {\r\n        this._showMessage(err.message, type = \"error\")\r\n      });\r\n  },\r\n\r\n  _setToolbarDraw() {\r\n    ToolDraw.map = this.map;\r\n    // ToolDraw.lotUrl = this.layersMap.getLayerInfoById(idLyrCfLotes).getUrl();\r\n    ToolDraw.lotFeatureLayer = this.map.getLayer(idLyrCfLotes);\r\n    ToolDraw.initToolDraw();\r\n    ToolDraw.controlMeasurementRealTime = this.measurementLabelApCm;\r\n    dojo.query('#measurementNewCm').on(\"click\", ToolDraw.activateToolDraw.bind(ToolDraw));\r\n\r\n  },\r\n\r\n  _showMessage(message, type = 'message') {\r\n    const title = `${this.nls.widgetTitle}: ${type}`\r\n    switch (type) {\r\n      case 'error':\r\n        new Message({\r\n          type: type,\r\n          titleLabel: title,\r\n          message: message,\r\n        });\r\n        break;\r\n      default:\r\n        new Message({\r\n          type: type,\r\n          titleLabel: title,\r\n          message: message,\r\n        });\r\n        break;\r\n    }\r\n\r\n  },\r\n\r\n  _showMessagePromise(messagetext) {\r\n    const deferred = new Deferred();\r\n    const message = new Message({\r\n      titleLabel: `${this.nls.widgetTitle}`,\r\n      message: messagetext,\r\n      buttons: [{\r\n        label: \"Ok\",\r\n        onClick: function () {\r\n          deferred.resolve(true);\r\n          message.hide();\r\n        }\r\n      }]\r\n    });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _showMessageConfirm() {\r\n    const deferred = new Deferred();\r\n    const mensaje = new Message({\r\n      titleLabel: `${this.nls.widgetTitle}: question`,\r\n      message: selfCm.nls.quesstionContinue,\r\n      type: \"question\",\r\n      buttons: [{\r\n        label: \"Sí\",\r\n        onClick: function () {\r\n          deferred.resolve(true);\r\n          mensaje.hide();\r\n        }\r\n      }, {\r\n        label: \"No\",\r\n        onClick: function () {\r\n          deferred.resolve(false);\r\n          mensaje.hide();\r\n        }\r\n      }]\r\n    });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _filterByDistrictCm() {\r\n    let queryPredios = this.layersMap.getLayerInfoById(idLyrCfPredios).getFilter()\r\n    queryPredios = queryPredios ? queryPredios + \" AND \" + this.queryUbigeo : this.queryUbigeo\r\n    this.layersMap.getLayerInfoById(idLyrCfPredios).setFilter(queryPredios)\r\n    this.layersMap.getLayerInfoById(idLyrCfLotesPun).setFilter(this.queryUbigeo)\r\n    this.layersMap.getLayerInfoById(idLyrCfEje_vial).setFilter(this.queryUbigeo)\r\n    this.layersMap.getLayerInfoById(idLyrCfNumeracion).setFilter(this.queryUbigeo)\r\n    this.layersMap.getLayerInfoById(idLyrCfArancel).setFilter(this.queryUbigeo)\r\n    this.layersMap.getLayerInfoById(idLyrCfLotes).setFilter(this.queryUbigeo)\r\n    this.layersMap.getLayerInfoById(idLyrCfUnidadesurbanas).setFilter(this.queryUbigeo)\r\n    this.layersMap.getLayerInfoById(idLyrCfParques).setFilter(this.queryUbigeo)\r\n    this.layersMap.getLayerInfoById(idLyrCfManzana).setFilter(this.queryUbigeo)\r\n    this.layersMap.getLayerInfoById(idLyrCfManzanaUrb).setFilter(this.queryUbigeo)\r\n    this.layersMap.getLayerInfoById(idLyrCfSector).setFilter(this.queryUbigeo)\r\n    // selfCm.layersMap.getLayerInfoById(idLyrActpuntoimg).setFilter(selfCm.queryUbigeo)\r\n  },\r\n\r\n  _startExtentByDistrictCm(map) {\r\n    const deferred = new Deferred();\r\n    const query = new Query()\r\n    query.where = this.queryUbigeo\r\n\r\n    const qTask = new QueryTask(this.layersMap.getLayerInfoById(idLyrDistricts).getUrl())\r\n\r\n    // qTask.executeForExtent(query, (results) => {\r\n    //   this.map.setExtent(results.extent).then(function () {\r\n    //     // get the next scale value from the current scale\r\n    //     const homeWidget = WidgetManager.getInstance().getWidgetsByName(\"HomeButton\");\r\n    //     homeWidget[0].homeDijit.extent = this.map.extent;\r\n    //     deferred.resolve(true);\r\n    //   })\r\n    // }, (error) => {\r\n    //   deferred.reject(error);\r\n    // })\r\n    // return deferred.promise;\r\n\r\n    qTask.executeForExtent(query)\r\n      .then(results => {\r\n        return map.setExtent(results.extent)\r\n      })\r\n      .then(() => {\r\n        const homeWidget = WidgetManager.getInstance().getWidgetsByName(\"HomeButton\");\r\n        homeWidget[0].homeDijit.extent = map.extent;\r\n        deferred.resolve(true);\r\n      })\r\n      .catch(err => deferred.reject(err));\r\n    return deferred.promise;\r\n  },\r\n\r\n  startup() {\r\n    this.inherited(arguments);\r\n\r\n    this.busyIndicator = BusyIndicator.create({\r\n      target: this.domNode.parentNode.parentNode,\r\n      backgroundOpacity: 0\r\n    });\r\n  },\r\n\r\n  _callApiRestServices(baseUrl, params) {\r\n    const url = new URL(baseUrl);\r\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\r\n\r\n    return fetch(url)\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          selfCm.busyIndicator.hide();\r\n          throw new Error(\"HTTP error \" + response.status);\r\n        }\r\n        return response.json();\r\n      })\r\n      .catch(function (err) {\r\n        selfCm.busyIndicator.hide();\r\n        console.log(\"An error occurred while fetching the data.\");\r\n      });\r\n  },\r\n\r\n  _getRequestsTrayDataCm(responseData, state) {\r\n    // Reemplazar todo el metodo para capturar datos de servicio\r\n    const data = responseData.filter((i) => i.status == state);\r\n    return data\r\n  },\r\n\r\n  _loadIniRequestsCm() {\r\n    dojo.query(`#${selfCm.currentTabActive}`)[0].click()\r\n  },\r\n\r\n  _parseDateStringtoFormat(dateString) {\r\n    const date = new Date(dateString)\r\n    const day = date.getDate()\r\n    const month = date.getMonth() + 1\r\n    const year = date.getFullYear()\r\n    return `${day}/${month}/${year}`\r\n  },\r\n\r\n  _loadRequestTabActiveCm(evt) {\r\n    // selfCm.busyIndicator.show();\r\n    selfCm.currentTabActive = evt.target.id;\r\n    selfCm.currentElementActive = evt.target;\r\n    selfCm.queryRequests['id_status'] = iconByState[evt.target.id].idStatus;\r\n    selfCm.queryRequests['offset'] = selfCm.defaultOffset;\r\n    selfCm._loadRequestsCm()\r\n    // .then(selfCm._controlLabelPagination());\r\n  },\r\n\r\n  _loadRequestsCm() {\r\n    selfCm.busyIndicator.show();\r\n    selfCm._callApiRestServices(selfCm.config.applicationListUrl, selfCm.queryRequests).then(response => {\r\n      selfCm.currentCount = response['count'];\r\n\r\n      response = response['results']\r\n      const dataHtml = response.map((i) => `<tr>\r\n                                        <td>${i.id}</td>\r\n                                        <td>${i.type}</td>\r\n                                        <td>${i.lands.map(lnd => lnd['cup']).join(', ')}</td>\r\n                                        <td>${selfCm._parseDateStringtoFormat(i.date)}</td>\r\n                                        <td>\r\n                                          <button id=\"${iconByState[selfCm.currentTabActive].id}\" value=\"${i.idType}\" class=\"stateRequestClsCm\">\r\n                                            <i class=\"${iconByState[selfCm.currentTabActive].icon}\"></i>\r\n                                          </button>\r\n                                        </td>\r\n                                      </tr>`\r\n      )\r\n      const tbody = dojo.create('tbody', { innerHTML: dataHtml.join('') });\r\n      const tb = dojo.query(\".tableRequestClsCm\")[0]\r\n      if (tb.getElementsByTagName(\"tbody\").length > 0) {\r\n        selfCm.tableRequestApCm.removeChild(tb.getElementsByTagName(\"tbody\")[0])\r\n      }\r\n      selfCm.tableRequestApCm.appendChild(tbody);\r\n      if (selfCm.currentTabActive == requestToAttendState) {\r\n        dojo.query(\".stateRequestClsCm\").on('click', selfCm._openFormCase);\r\n      }\r\n      if (selfCm.currentTabActive == requestsAttendState) {\r\n        dojo.query(\".stateRequestClsCm\").on('click', selfCm._openFormResult);\r\n      }\r\n\r\n      dojo.query(\".tablinksCm\").removeClass(\"active\");\r\n      selfCm.currentElementActive.classList.add(\"active\");\r\n      selfCm._controlLabelPagination();\r\n      selfCm.busyIndicator.hide();\r\n    })\r\n  },\r\n\r\n  _changeLimitPagination(evt) {\r\n    selfCm.queryRequests['limit'] = parseInt(evt.target.value);\r\n    selfCm.queryRequests['offset'] = selfCm.defaultOffset;\r\n    selfCm._loadRequestsCm();\r\n  },\r\n\r\n  _nextPagePagination(evt) {\r\n    selfCm.queryRequests['offset'] = selfCm.queryRequests['offset'] + selfCm.queryRequests['limit'];\r\n    selfCm._loadRequestsCm();\r\n  },\r\n\r\n  _prevPagePagination(evt) {\r\n    selfCm.queryRequests['offset'] = selfCm.queryRequests['offset'] - selfCm.queryRequests['limit'];\r\n    // if (selfCm.queryRequests['offset'] < 0) {\r\n    //   selfCm.queryRequests['offset'] = 0; // Ensure offset does not go negative\r\n    // }\r\n    selfCm._loadRequestsCm();\r\n  },\r\n\r\n  _controlLabelPagination() {\r\n    const ini = selfCm.queryRequests['offset'] + 1\r\n    dojo.query(\".buttonPaginationPrevClsCm\")[0].disabled = ini == 1 ? true : false\r\n    const end = selfCm.queryRequests['offset'] + selfCm.queryRequests['limit']\r\n    dojo.query(\".buttonPaginationNextClsCm\")[0].disabled = end >= selfCm.currentCount ? true : false\r\n    dojo.query(\".labelPaginationCtnCm\")[0].innerHTML = `${ini} - ${end} de ${selfCm.currentCount}`\r\n  },\r\n\r\n  _zoomToPredSelectedEvt(evt) {\r\n    // @cpu\r\n    const cup = evt.currentTarget.dataset.cup\r\n    return selfCm._zoomToPredSelected(cup)\r\n  },\r\n\r\n  _handleFeatureSelected(feature) {\r\n    const featureSelected = new GraphicsLayer({\r\n      id: idGraphicPredioSelectedCm\r\n    });\r\n    feature[0].setSymbol(symbolPredioSelected);\r\n    featureSelected.add(feature[0]);\r\n    selfCm.map.addLayer(featureSelected);\r\n    selfCm.map.centerAt(feature[0].geometry);\r\n\r\n    setTimeout(function () {\r\n      // clearInterval(interval);\r\n      selfCm._removeLayerGraphic(idGraphicPredioSelectedCm);\r\n    }, 1000);\r\n  },\r\n\r\n  _zoomToPredSelected(cup) {\r\n    selfCm.busyIndicator.show();\r\n    const deferred = new Deferred();\r\n    const LandCls = new UtilityCase.Land();\r\n    selfCm._removeLayerGraphic(idGraphicPredioSelectedCm);\r\n    const prediosLayer = selfCm.layersMap.getLayerInfoById(idLyrCfPredios);\r\n    const propertyLayer = new FeatureLayer(prediosLayer.getUrl(), {\r\n      mode: FeatureLayer.MODE_ONDEMAND,\r\n      outFields: [\"*\"]\r\n    });\r\n    // crear una consulta para seleccionar la fila deseada\r\n    const query = new Query();\r\n    // @cpu\r\n    query.where = `${_UBIGEO_FIELD} = '${paramsApp['ubigeo']}' and ${LandCls.codCpu} = '${cup}' and ${LandCls.estado} = 1`;\r\n\r\n    // seleccionar la fila\r\n    propertyLayer.selectFeatures(query, FeatureLayer.SELECTION_NEW)\r\n      .then(\r\n        results => {\r\n          if (results.length == 0) {\r\n            throw new Error(selfCm.nls.emptyLandSelected)\r\n          }\r\n          // if (selfCm.case == 2) {\r\n          //   if (results.length < 2) {\r\n          //     throw new Error(selfCm.nls.errorAcumulationLandsNumber);\r\n          //   }\r\n          // }\r\n          selfCm._handleFeatureSelected(results)\r\n          selfCm.busyIndicator.hide();\r\n          return deferred.resolve(results)\r\n        }\r\n      )\r\n      .catch(error => {\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(error.message, type = \"error\")\r\n        deferred.reject(error)\r\n      })\r\n    return deferred.promise;\r\n  },\r\n\r\n  _openSupportingDocument(evt) {\r\n    // check if value is empty\r\n    if (!evt.currentTarget.value) {\r\n      selfCm._showMessage(selfCm.nls.emptyDocSupport, type = \"error\")\r\n      return\r\n    }\r\n    window.open(evt.currentTarget.value, '_blank').focus();\r\n  },\r\n\r\n  executeQueryTask(url, query, type = 'query') {\r\n    return new Promise((resolve, reject) => {\r\n      const qTask = new QueryTask(url);\r\n      switch (type) {\r\n        case 'query':\r\n          qTask.execute(query, resolve, reject);\r\n          break;\r\n        case 'queryForExtent':\r\n          qTask.executeForExtent(query, resolve, reject);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  },\r\n\r\n  _getLandsOriginals() {\r\n    const self = this;\r\n    const deferred = new Deferred();\r\n    const LandCls = new UtilityCase.Land();\r\n    const LotCls = new UtilityCase.Lot();\r\n    const queryLands = new Query();\r\n    // @cpu\r\n    const cpuOriginal = self.currentLandTabRows.map(i => i.cup);\r\n    queryLands.where = `${UtilityCase.ubigeoFieldName} = '${paramsApp['ubigeo']}' and ${LandCls.codCpu} in ('${cpuOriginal.join(\"', '\")}') and ${LandCls.estado} = 1`;\r\n    queryLands.returnGeometry = true;\r\n    queryLands.outFields = [\"*\"];\r\n    const urlLands = self.layersMap.getLayerInfoById(idLyrCfPredios).getUrl();\r\n    self.executeQueryTask(urlLands, queryLands)\r\n      .then(results => {\r\n        if (results.features.length == 0) {\r\n          throw new Error(self.nls.errorGetLand);\r\n        }\r\n        self.currentLandRows = results.features;\r\n        const idLots = self.currentLandRows.map((i) => i.attributes[LotCls.idLotP]);\r\n        deferred.resolve(idLots);\r\n      })\r\n      .catch(error => {\r\n        deferred.reject(error);\r\n      });\r\n    return deferred.promise;\r\n  },\r\n  _getLotsOriginals(idLots) {\r\n    const self = this;\r\n    const LotCls = new UtilityCase.Lot()\r\n    const deferred = new Deferred();\r\n    const queryLots = new Query();\r\n    queryLots.where = `${LotCls.idLotP} in (${idLots.join(\",\")}) and (${UtilityCase.ubigeoFieldName} = ${paramsApp['ubigeo']})`;\r\n    self.lotesQuery = queryLots.where;\r\n    queryLots.returnGeometry = true;\r\n    queryLots.outFields = [\"*\"];\r\n    const urlLots = self.layersMap.getLayerInfoById(idLyrCfLotes).getUrl();\r\n    self.executeQueryTask(urlLots, queryLots)\r\n      .then(results => {\r\n        if (results.features.length == 0) {\r\n          throw new Error(self.nls.emptyLotRequests);\r\n        }\r\n        self.currentLotsRows = results.features;\r\n        const codMznValues = self.currentLotsRows.map((i) => i.attributes[_COD_MZN_FIELD]).join(\",\")\r\n        const codSectValues = self.currentLotsRows.map((i) => i.attributes[_COD_SECT_FIELD]).join(\",\")\r\n        self.arancel = `(${UtilityCase.ubigeoFieldName} = ${paramsApp['ubigeo']}) and ${_COD_MZN_FIELD} in (${codMznValues}) and ${_COD_SECT_FIELD} in (${codSectValues})`;\r\n        deferred.resolve(idLots);\r\n      })\r\n      .catch(error => {\r\n        deferred.reject(error);\r\n      });\r\n    return deferred.promise;\r\n  },\r\n  _getPointLotsOriginals(idLots) {\r\n    const self = this;\r\n    const LotCls = new UtilityCase.Lot()\r\n    const deferred = new Deferred();\r\n    const queryPointLots = new Query();\r\n    queryPointLots.where = `${LotCls.idLotP} in (${idLots.join(\",\")}) and (${UtilityCase.ubigeoFieldName} = ${paramsApp['ubigeo']})`;\r\n    queryPointLots.returnGeometry = true;\r\n    queryPointLots.outFields = [\"*\"];\r\n    const urlPointLots = self.layersMap.getLayerInfoById(idLyrCfLotesPun).getUrl();\r\n    self.executeQueryTask(urlPointLots, queryPointLots)\r\n      .then(results => {\r\n        if (results.features.length == 0) {\r\n          throw new Error(self.nls.emptyPointLotRequests);\r\n        }\r\n        self.currentPoinLotsRows = results.features;\r\n        deferred.resolve(idLots);\r\n      })\r\n      .catch(error => {\r\n        deferred.reject(error);\r\n      });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _getLandsOriginalsTab(idSolicitud) {\r\n    const self = this;\r\n    const deferred = new Deferred();\r\n    const urlOriginal = `${self.config.landsByApplicationUrl}/${idSolicitud}`;\r\n    fetch(urlOriginal)\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error(\"HTTP error \" + response.status);\r\n        }\r\n        return response.json()\r\n      })\r\n      .then(response => {\r\n        if (response.count == 0) {\r\n          throw new Error(self.nls.errorGetLand);\r\n        }\r\n        self.currentLandTabRows = response.results;\r\n        deferred.resolve(self.currentLandTabRows);\r\n      })\r\n      .catch(error => {\r\n        deferred.reject(error);\r\n      });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _getOriginalData(idSolicitud) {\r\n    return this._getLandsOriginalsTab(idSolicitud)\r\n      .then(landsTab => this._getLandsOriginals())\r\n      .then(idLots => this._getPointLotsOriginals(idLots))\r\n      .then(idLots => this._getLotsOriginals(idLots))\r\n      .then((idLots) => {\r\n        return idLots;\r\n      })\r\n      .catch(error => {\r\n        return error;\r\n      });\r\n  },\r\n\r\n  _zoomExtentToLote() {\r\n    if (!this.currentLotsRows) {\r\n      return\r\n    }\r\n    if (this.case == 2) {\r\n      if (this.currentLotsRows.length < 2) {\r\n        throw new Error(this.nls.errorAcumulationLandsNumber);\r\n      }\r\n    }\r\n    const unionPredios = this._unionFeatures(this.currentLotsRows.map((i) => i.geometry))\r\n    this.map.setExtent(unionPredios.getExtent().expand(2))\r\n  },\r\n\r\n  _zoomHomeRequests() {\r\n    return selfCm._zoomExtentToLote()\r\n  },\r\n\r\n  _toggleBodyCaseInfo(evt) {\r\n    this.closest('.caseInfoClsCm').querySelector('.bodyPredInfoClsCm').classList.toggle('active')\r\n  },\r\n\r\n  _requestCaseInfo() {\r\n    selfCm.busyIndicator.show();\r\n    const urlResults = `${selfCm.config.resultsByApplication}/${selfCm.codRequestsCm}`\r\n    const urlDocSupport = `${selfCm.config.applicationListUrl}/${selfCm.codRequestsCm}`\r\n    const urlAffectedLands = `${selfCm.config.affectedLands}/${selfCm.codRequestsCm}`\r\n\r\n    Promise.all([\r\n      selfCm._getOriginalData(selfCm.codRequestsCm),\r\n      fetch(urlResults).then(response => {\r\n        if (!response.ok) {\r\n          selfCm.busyIndicator.hide();\r\n          throw new Error(\"HTTP error \" + response.status);\r\n        }\r\n        return response.json()\r\n      }),\r\n      fetch(urlDocSupport).then(response => response.json()),\r\n      fetch(urlAffectedLands).then(response => {\r\n        if (!response.ok) {\r\n          selfCm.busyIndicator.hide();\r\n          throw new Error(\"HTTP error \" + response.status);\r\n        }\r\n        return response.json()\r\n      })\r\n    ]).then(function ([_, responseResults, responseDocSupport, responseAffectedLands]) {\r\n\r\n      if (_.message) {\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(_.message, type = \"error\");\r\n        // return\r\n      }\r\n\r\n      selfCm.currentLandTabRows = selfCm.currentLandTabRows || [];\r\n      const rows = selfCm.currentLandTabRows.map((i, idx) => {\r\n        return CaseInfo.contentCard(i, 'original', i.cup, active = selfCm.case != 2 ? true : false);\r\n      });\r\n\r\n      if (selfCm.case != 4) {\r\n        if (responseResults.count == 0) {\r\n          selfCm._showMessage(`${selfCm.nls.empyLandResultsRequests} ${selfCm.codRequestsCm}`, type = \"error\");\r\n          selfCm.busyIndicator.hide();\r\n          // return\r\n        }\r\n      }\r\n\r\n\r\n\r\n      dojo.query(\"#showInfoDocCm\")[0].value = responseDocSupport.support\r\n      dojo.query('.CtnOriginalClsCm')[0].innerHTML = rows.join('');\r\n\r\n      if (selfCm.case == 2 || selfCm.case == 3) {\r\n        if (responseAffectedLands.results.length > 0) {\r\n          const rowsAffected = responseAffectedLands.results.map((i, idx) => {\r\n            return CaseInfo.contentCard(i, 'original', i.cup, active = false);\r\n          });\r\n          dojo.query('.CtnAffectedClsCm')[0].innerHTML = rowsAffected.join('');\r\n          dojo.query('.lblAffectedClsCm').addClass('active');\r\n        }\r\n      } else {\r\n        dojo.query('.CtnAffectedClsCm')[0].innerHTML = '';\r\n        dojo.query('.lblAffectedClsCm').removeClass('active');\r\n      }\r\n\r\n      dojo.query(\".zoomPredInfoClsCm\").on('click', selfCm._zoomToPredSelectedEvt);\r\n\r\n      if (selfCm.case != 4) {\r\n        const rowsResults = responseResults.results.map((i, idx) => {\r\n          return CaseInfo.contentCard(i, 'result', idx + 1, false, true);\r\n        });\r\n        dojo.query('.CtnResultClsCm')[0].innerHTML = rowsResults.join('');\r\n        dojo.query('.lblResultsClsCm').addClass('active');\r\n      } else {\r\n        dojo.query('.CtnResultClsCm')[0].innerHTML = '';\r\n        dojo.query('.lblResultsClsCm').removeClass('active');\r\n      }\r\n\r\n      dojo.query(\".colapsePredInfoClsCm\").on('click', selfCm._toggleBodyCaseInfo);\r\n\r\n      // @cpu\r\n      selfCm.uniqueCodeLands = selfCm.currentLandTabRows.map((i) => i.cup).join(',');\r\n      selfCm.responseRequests = responseResults['results']\r\n\r\n    })\r\n      .then(function () {\r\n        switch (selfCm.case) {\r\n          case \"1\":\r\n            selfCm.reasignarApCm.classList.toggle('active')\r\n            break;\r\n          case \"2\":\r\n            selfCm.fusionApCm.classList.toggle('active')\r\n            break\r\n          case \"3\":\r\n            selfCm.divisionApCm.classList.toggle('active')\r\n            selfCm.containerToolDrawApCm.classList.toggle('active')\r\n            break\r\n          case \"4\":\r\n            selfCm.eliminacionApCm.classList.toggle('active')\r\n            break\r\n          case \"5\":\r\n            selfCm.independenceApCm.classList.toggle('active')\r\n            selfCm.independenceApCm.innerHTML = ''\r\n            LandAssignment.title = \"Independización\";\r\n            LandAssignment.lands = selfCm.responseRequests;\r\n            LandAssignment.pointLots = selfCm.currentPoinLotsRows;\r\n            LandAssignment.map = selfCm.map;\r\n            LandAssignment.landsSymbol = symbolPredio;\r\n            LandAssignment.landsSymbolSelected = symbolPredioSelected2;\r\n            LandAssignment.removeAllGraphics();\r\n            selfCm.independenceApCm.appendChild(LandAssignment.renderTableLandAssignment());\r\n\r\n            LandProcess.title = \"Enviar datos\";\r\n            LandProcess.type = \"independence\";\r\n            selfCm.independenceApCm.appendChild(LandProcess.renderButtonProcess());\r\n            dojo.query(`#${LandProcess.id}`).on('click', selfCm._executeIndependenceLands);\r\n            dojo.query(\".pointLotSelectionCm\").on('change', LandAssignment.selectedPointLots.bind(LandAssignment));\r\n            dojo.query('.tableClsCm tr').on('mouseover', LandAssignment.highlightLand.bind(LandAssignment));\r\n            dojo.query('.tableClsCm tr').on('mouseout', LandAssignment.reestartSymbolLand.bind(LandAssignment));\r\n            break\r\n          default:\r\n            break;\r\n        }\r\n\r\n        selfCm.resultCtnApCm.classList.remove('active')\r\n        selfCm.obsCtnApCm.classList.remove('active')\r\n        selfCm.requestTrayApCm.classList.remove('active')\r\n        selfCm.casesCtnApCm.classList.toggle('active')\r\n        selfCm._zoomExtentToLote()\r\n        selfCm.busyIndicator.hide();\r\n      })\r\n      .catch(function (error) {\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(error.message, type = \"error\");\r\n      })\r\n\r\n  },\r\n\r\n  _openFormCase(evt) {\r\n    if (evt.currentTarget.id == \"editRequestsCm\") {\r\n      const row = dojo.query(evt.currentTarget).closest(\"tr\")[0];\r\n      const rowList = dojo.query(\"td\", row).map(td => td.innerHTML);\r\n      selfCm.codRequestsCm = rowList[0]\r\n      selfCm.caseDescription = rowList[1]\r\n      dojo.query('#titleCaseCm')[0].innerHTML = `<span>${selfCm.caseDescription} <span class=\"fa fa-search\" style=\"font-size: 15px\"></span></span>`\r\n\r\n      selfCm.case = evt.currentTarget.value\r\n      selfCm._requestCaseInfo();\r\n\r\n    } else if (evt.currentTarget.id == 'backTrayCm' || evt.currentTarget.id == 'backTrayResultCm') {\r\n      // desactivar el toolbarCm de edicion si esta activado\r\n      toolbarCm.deactivate();\r\n\r\n      // deshabilitar snapping\r\n      selfCm.map.disableSnapping()\r\n      selfCm.bodyTbLinesDvApCm.innerHTML = ''\r\n      selfCm.bodyTbPrediosDvApCm.innerHTML = ''\r\n\r\n      dojo.query(\".caseClsCm\").removeClass(\"active\")\r\n      // remove all graphics layer if exist\r\n      selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n      selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n      selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n      selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n      selfCm._removeLayerGraphic(idGraphicPredioSelectedCm);\r\n      selfCm._removeLayerGraphic(idGraphicLabelCodLote)\r\n      selfCm.bodyTbDatosLoteDvApCm.innerHTML = ''\r\n\r\n      graphicLayerLineaDivision.clear();\r\n      graphicLayerLabelLineaDivision.clear();\r\n      graphicLayerPredioByDivison.clear();\r\n\r\n      selfCm.lotesQuery = null\r\n      selfCm.arancel = null\r\n      selfCm.xy = []\r\n      selfCm.currentLandTabRows = null;\r\n\r\n      selfCm.casesCtnApCm.classList.remove('active')\r\n      selfCm.resultCtnApCm.classList.remove('active')\r\n      selfCm.containerToolDrawApCm.classList.remove('active')\r\n      selfCm.obsCtnApCm.classList.remove('active')\r\n      selfCm.requestTrayApCm.classList.toggle('active')\r\n      selfCm._removeClassActiveButton()\r\n      dojo.query('.CtnAffectedClsCm')[0].innerHTML = '';\r\n      dojo.query('.lblAffectedClsCm').removeClass('active');\r\n\r\n      if (selfCm.currentTabActive == requestToAttendState) {\r\n        dojo.query(\".tablinksCm.active\")[0].click();\r\n        // selfCm._loadRequestTabActiveCm()\r\n        // selfCm.queryRequests['offset'] = selfCm.defaultOffset;\r\n      }\r\n      selfCm._loadRequestsCm();\r\n      // selfCm._loadIniRequestsCm();\r\n    }\r\n\r\n  },\r\n  _openFormObs() {\r\n    selfCm.textAreaObsApCm.value = ''\r\n    const imageDiv = dojo.query(\".thumbnailClsCm\")[0];\r\n    selfCm.imgUploadApCm.value = ''\r\n    imageDiv.style.backgroundImage = \"none\";\r\n    imageDiv.innerHTML = \"<span class=alignVCenter><i class='far fa-image'></i></span>\";\r\n    dojo.query('#headeRequestsCtnCm')[0].innerHTML = `<span class=\"alignVCenter\">Solicitud: ${selfCm.codRequestsCm}</span>`\r\n    selfCm.casesCtnApCm.classList.toggle(\"active\");\r\n    selfCm.obsCtnApCm.classList.toggle('active')\r\n  },\r\n\r\n  _FormResult(id_solicitud, caseCm) {\r\n    selfCm.busyIndicator.show();\r\n    const urlPredioResults = `${selfCm.config.resultsByApplication}/${id_solicitud}`\r\n    if (caseCm == Deactivate.nameCase) {\r\n      selfCm.busyIndicator.hide();\r\n      selfCm._showMessage(selfCm.nls.resultDeactivate)\r\n      return\r\n    }\r\n    selfCm._callApiRestServices(urlPredioResults, {}).then(function (response) {\r\n      try {\r\n        selfCm.bodyTbResultsApCm.innerHTML = ''\r\n        dojo.query(\"#titleCaseResult\")[0].innerHTML = `<span>Solicitud ${id_solicitud}: ${caseCm}</span>`\r\n\r\n        const rows = response.results.map((predio, index) => {\r\n          return `<tr><td class=\"center-aligned\">${index + 1}</td>\r\n                  <td>${predio['cup']}</td>\r\n                  <td>${predio['address']}</td>\r\n                  <td class=\"center-aligned\">\r\n                    <span id=\"${predio['cup']}_search\" class=\"zoomPredioResultClsCm\"><i class=\"fas fa-search\"></i></span>\r\n                  </td></tr>`\r\n        })\r\n        selfCm.bodyTbResultsApCm.innerHTML = rows.join('')\r\n        dojo.query('.zoomPredioResultClsCm').on('click', selfCm._centerAtPredioResult)\r\n        selfCm.casesCtnApCm.classList.remove(\"active\");\r\n        selfCm.obsCtnApCm.classList.remove('active')\r\n        selfCm.requestTrayApCm.classList.remove('active')\r\n        selfCm.resultCtnApCm.classList.toggle('active')\r\n        selfCm.busyIndicator.hide()\r\n      }\r\n      catch (error) {\r\n        console.log(error)\r\n        selfCm.busyIndicator.hide()\r\n      }\r\n    })\r\n  },\r\n\r\n  _centerAtPredioResult(evt) {\r\n    const cup = evt.currentTarget.id.replace('_search', '')\r\n    selfCm._zoomToPredSelected(cup)\r\n  },\r\n\r\n  _openFormResult(evt) {\r\n    const row = dojo.query(evt.currentTarget).closest(\"tr\")[0];\r\n    const rowList = dojo.query(\"td\", row).map(td => td.innerHTML);\r\n    selfCm.codRequestsCm = rowList[0]\r\n    selfCm.caseDescription = rowList[1]\r\n    selfCm._FormResult(selfCm.codRequestsCm, selfCm.caseDescription)\r\n  },\r\n\r\n  // Toolbar function\r\n  _createToolbar() {\r\n    toolbarCm = new Draw(selfCm.map);\r\n    toolbarCm.on(\"draw-end\", selfCm._addToMap);\r\n  },\r\n\r\n  _addToMap(evt) {\r\n    if (evt.geometry.type === \"point\") {\r\n      const screenPoint = selfCm.map.toScreen(evt.geometry)\r\n      const deferred = selfCm.map.snappingManager.getSnappingPoint(screenPoint);\r\n      deferred.then(function (value) {\r\n        if (value !== undefined) {\r\n          const point_g = webMercatorUtils.webMercatorToGeographic(new Point(value));\r\n          const graphic = new Graphic(point_g, symbolByCase[selfCm.case].symbol);\r\n          // si es el caso reasignacion de predio\r\n          if (selfCm.case == 1 || selfCm.case == 2) {\r\n\r\n            const graphicLayer = new GraphicsLayer({\r\n              id: idGraphicPredioCm,\r\n            });\r\n            graphicLayer.add(graphic);\r\n            selfCm.map.addLayer(graphicLayer);\r\n            selfCm.xy = [point_g.x, point_g.y]\r\n          }\r\n          else if (selfCm.case == 3) {\r\n            graphic['attributes'] = {\r\n              cpm: selfCm.cpmPredioDivision,\r\n              id: selfCm.idPredioDivision,\r\n              resolutionType: selfCm.resolutionType,\r\n              resolutionDocument: selfCm.resolutionDocument,\r\n              floor: selfCm.floor,\r\n              urbanLotNumber: selfCm.urbanLotNumber,\r\n            }\r\n            graphicLayerPredioByDivison.add(graphic);\r\n          }\r\n          selfCm.map.setInfoWindowOnClick(true);\r\n          toolbarCm.deactivate();\r\n          selfCm._removeClassActiveButton()\r\n        } else {\r\n          selfCm._showMessage(selfCm.nls.errorSnapingLocate, type = \"error\")\r\n          // alert(selfCm.nls.errorSnapingLocate);\r\n        }\r\n      }, function (error) {\r\n        console.log(error);\r\n      });\r\n    } else if (evt.geometry.type === \"polyline\") {\r\n      selfCm.idxLines = selfCm.idxLines + 1\r\n      const nameIdLine = `Polyline_${selfCm.idxLines}`\r\n      const graphic = new Graphic(evt.geometry, symbolDivisionLote, { id: nameIdLine });\r\n      graphicLayerLineaDivision.add(graphic);\r\n      selfCm._populateTableDrawLine(nameIdLine)\r\n      selfCm._addNameToLine(nameIdLine, evt.geometry)\r\n      selfCm.map.addLayer(graphicLayerLineaDivision);\r\n      selfCm.map.setInfoWindowOnClick(true);\r\n      toolbarCm.deactivate();\r\n      selfCm._removeClassActiveButton()\r\n      // desactiva el boton luego de dibujar\r\n    }\r\n    // selfCm.map.disableSnapping()\r\n    // check exist activeButton class in button\r\n\r\n  },\r\n\r\n  _removeClassActiveButton() {\r\n    if (dojo.query(`#${selfCm.idButtonDrawActive}`).length > 0) {\r\n      dojo.query(`#${selfCm.idButtonDrawActive}`)[0].classList.remove('activeButton')\r\n    }\r\n  },\r\n\r\n  _removeLayerGraphic(layerId) {\r\n    if (selfCm.map.graphicsLayerIds.includes(layerId)) {\r\n      selfCm.map.removeLayer(selfCm.map.getLayer(layerId));\r\n    }\r\n  },\r\n\r\n  _activateTool(evt) {\r\n    selfCm._removeClassActiveButton()\r\n    selfCm.idButtonDrawActive = evt.currentTarget.id\r\n    dojo.query(`#${selfCm.idButtonDrawActive}`)[0].classList.add('activeButton')\r\n    selfCm._activateSnappingByReasignar();\r\n    selfCm.map.setInfoWindowOnClick(false);\r\n    selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n    toolbarCm.activate(Draw[\"POINT\"]);\r\n  },\r\n\r\n  _activateToolAcumulacion(evt) {\r\n    selfCm._removeClassActiveButton()\r\n    selfCm.idButtonDrawActive = evt.currentTarget.id;\r\n    selfCm.cpmAcumulacion = evt.currentTarget.dataset.cpm === 'null' ? null : evt.currentTarget.dataset.cpm;\r\n    selfCm.resolutionType = evt.currentTarget.dataset.resolutiontype === 'null' ? null : evt.currentTarget.dataset.resolutiontype;\r\n    selfCm.resolutionDocument = evt.currentTarget.dataset.resolutiondocument === 'null' ? null : evt.currentTarget.dataset.resolutiondocument;\r\n    selfCm.floor = evt.currentTarget.dataset.floor === 'null' ? null : evt.currentTarget.dataset.floor;\r\n    selfCm.urbanLotNumber = evt.currentTarget.dataset.urbanlotnumber === 'null' ? null : evt.currentTarget.dataset.urbanlotnumber;\r\n    selfCm.idAcumulacion = evt.currentTarget.parentElement.parentElement.id.split('_')[1];\r\n    dojo.query(`#${selfCm.idButtonDrawActive}`)[0].classList.add('activeButton')\r\n    selfCm.map.setInfoWindowOnClick(false);\r\n    selfCm._activateSnappingByAcumulacion();\r\n    selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n    toolbarCm.activate(Draw[\"POINT\"]);\r\n  },\r\n\r\n  _activateToolLinesDivision(evt) {\r\n    selfCm._removeClassActiveButton();\r\n    ToolDraw.toolbarDraw.deactivate();\r\n    selfCm.idButtonDrawActive = evt.currentTarget.id;\r\n    dojo.query(`#${selfCm.idButtonDrawActive}`)[0].classList.add('activeButton');\r\n    selfCm.map.setInfoWindowOnClick(false);\r\n    selfCm._activateSnappingByDivision();\r\n    selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n    selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n    selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n    selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n    selfCm.bodyTbDatosLoteDvApCm.innerHTML = '';\r\n    // selfCm.bodyTbPrediosDvApCm.innerHTML = ''\r\n    graphicLayerPredioByDivison.clear();\r\n    toolbarCm.activate(Draw[\"POLYLINE\"]);\r\n  },\r\n\r\n  _activateSnappingByReasignar() {\r\n    const cflayer = selfCm.layersMap.getLayerInfoById(idLyrCfLotesPun)\r\n    const propertyLayer = new FeatureLayer(cflayer.getUrl(), {\r\n      mode: FeatureLayer.MODE_ONDEMAND,\r\n      outFields: [\"*\"]\r\n    });\r\n    const snapManager = selfCm.map.enableSnapping({\r\n      // alwaysSnap: true,\r\n      // snapKey: keys.CTRL,\r\n      snapPointSymbol: symbolSnapPointCm,\r\n      tolerance: 5,\r\n    });\r\n    // get layerinfo by id of layer to snap\r\n    const layerInfos = [{\r\n      layer: propertyLayer\r\n    }];\r\n\r\n    snapManager.setLayerInfos(layerInfos);\r\n  },\r\n\r\n  _activateSnappingByAcumulacion() {\r\n    const graphicLayerPuntoLote = selfCm.map.getLayer(idGraphicPuntoLote)\r\n    const graphicsLayerInfo = new esri.layers.LayerInfo({\r\n      id: graphicLayerPuntoLote.id, // El id del `GraphicsLayer`\r\n      name: graphicLayerPuntoLote.name, // El nombre del `GraphicsLayer`\r\n      layer: graphicLayerPuntoLote // El `GraphicsLayer` a utilizar\r\n    });\r\n\r\n    // Agregar el `LayerInfo` al mapa y habilitar el snapping\r\n    selfCm.map.enableSnapping({\r\n      layerInfos: [graphicsLayerInfo], // Agregar el `LayerInfo` al mapa\r\n      // alwaysSnap: true,\r\n      snapPointSymbol: symbolSnapPointCm,\r\n      tolerance: 5,\r\n    });\r\n  },\r\n\r\n  _activateSnappingByDivision() {\r\n    const graphicsLayerInfo = new esri.layers.LayerInfo({\r\n      id: graphicLayerLineaDivision.id, // El id del `GraphicsLayer`\r\n      name: graphicLayerLineaDivision.name, // El nombre del `GraphicsLayer`\r\n      layer: graphicLayerLineaDivision // El `GraphicsLayer` a utilizar\r\n    });\r\n\r\n    // const cflayer = selfCm.layersMap.getLayerInfoById(idLyrCfLotes)\r\n    // const propertyLayer = new FeatureLayer(cflayer.getUrl(), {\r\n    //   mode: FeatureLayer.MODE_ONDEMAND,\r\n    //   outFields: [\"*\"]\r\n    // });\r\n\r\n    const layerInfos = [{\r\n      layer: selfCm.map.getLayer(idLyrCfLotes)\r\n    },\r\n      graphicsLayerInfo\r\n    ];\r\n\r\n    // Agregar el `LayerInfo` al mapa y habilitar el snapping\r\n    selfCm.map.enableSnapping({\r\n      layerInfos: layerInfos, // Agregar el `LayerInfo` al mapa\r\n      // alwaysSnap: true,\r\n      snapPointSymbol: symbolSnapPointCm,\r\n      tolerance: 5,\r\n    });\r\n  },\r\n\r\n  // crear una funcion que permita dos poligonos aceptando dos poligonos json como parametros\r\n  // la funcion debe retornar un poligono json\r\n  _unionFeatures(arr) {\r\n    const union = geometryEngine.union(arr);\r\n    return union;\r\n  },\r\n\r\n  _unionFeaturesAcumulation(topology = false) {\r\n    // Creamos grafico de lote fusionado\r\n    const graphicLayerLoteFusion = new GraphicsLayer({\r\n      id: idGraphicLoteCm\r\n    });\r\n\r\n    const arr = selfCm.currentLotsRows.map((i) => i.geometry);\r\n\r\n    const response = selfCm._unionFeatures(arr);\r\n    if (topology) {\r\n      if (response.rings.length > 1) {\r\n        throw new Error(\"La acumulación no es posible (los predios no son contiguos)\")\r\n      }\r\n    }\r\n    const graphic = new Graphic(response, symbolFusionLote);\r\n\r\n    graphicLayerLoteFusion.add(graphic);\r\n    selfCm.map.addLayer(graphicLayerLoteFusion);\r\n    selfCm.map.setExtent(graphic._extent.expand(1.5), true);\r\n    return [response];\r\n  },\r\n\r\n  _ApplyAcumulationLotsRefactor() {\r\n    selfCm.busyIndicator.show();\r\n    selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n    selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n    selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n    selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n    selfCm._removeLayerGraphic(idGraphicLoteDeleteCm);\r\n    selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n\r\n    if (!selfCm.lotesQuery) {\r\n      selfCm._showMessage(selfCm.nls.errorGetLand, 'warning');\r\n      selfCm.busyIndicator.hide();\r\n      return\r\n    }\r\n\r\n    return selfCm._getOriginalLots(selfCm.lotesQuery)\r\n      .then(originLots => {\r\n        const geomLoteAcumulation = selfCm._unionFeaturesAcumulation(topology = true);\r\n        return selfCm._getMaxCodLot(geomLoteAcumulation);\r\n      })\r\n      .then(proprsLot => {\r\n        selfCm._ordenarPoligonosNorteSur(\r\n          proprsLot.polygons,\r\n          parseInt(proprsLot.maxCodLote),\r\n          selfCm.bodyTbDatosLoteFsApCm\r\n        );\r\n        selfCm.map.setExtent(proprsLot.polygons[0].getExtent().expand(1.5), true);\r\n        return selfCm._addGraphicsPointLotsAndArancel();\r\n      })\r\n      .then(() => {\r\n        selfCm._populateTablePredio(selfCm.bodyTbPrediosFsApCm, selfCm._activateToolAcumulacion)\r\n        selfCm.busyIndicator.hide();\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(error.message, type = \"error\")\r\n      })\r\n  },\r\n\r\n  _getMidpoint(polyline) {\r\n    const length = geometryEngine.geodesicLength(polyline, \"meters\");\r\n    const midpoint = geometryEngine.geodesicDensify(polyline, length / 2, \"meters\").getPoint(0, 0);\r\n    return midpoint;\r\n  },\r\n\r\n  _findMidpoint(polyline) {\r\n    const lengthPolylineChunk = geometryEngine.geodesicLength(polyline, \"meters\")\r\n    const line = turf.lineString(polyline.paths[0]);\r\n    const options = { units: 'meters' };\r\n    const along = turf.along(line, lengthPolylineChunk / 2, options);\r\n    return along\r\n  },\r\n\r\n  // funcion que recibe una polilinea con muchas partes y retorna la parte mas larga como una polilinea\r\n  _getLongestPolyline(polyline) {\r\n    const paths = polyline.paths\r\n    let longestPath = 0\r\n    let response = null;\r\n    for (let path of paths) {\r\n      let polylineChunk = new Polyline({\r\n        paths: [path],\r\n        spatialReference: { wkid: 4326 }\r\n      });\r\n      let lengthPolylineChunk = geometryEngine.geodesicLength(polylineChunk, \"meters\")\r\n      if (lengthPolylineChunk > longestPath) {\r\n        longestPath = lengthPolylineChunk\r\n        response = polylineChunk\r\n      }\r\n    }\r\n    return response\r\n  },\r\n\r\n  // --------------------------------------------------------------\r\n  // SUBDIVISION DE LOTES\r\n  // function that allows dividing a polygon from cutting lines, the parameters will be a polygon and several lines in json format\r\n  // the function must return a polygon json\r\n  // --------------------------------------------------------------\r\n  _dividePolygon(poly, lines) {\r\n    const divide = geometryEngine.cut(poly, lines);\r\n    const response = [];\r\n    for (let item of divide) {\r\n      item.rings.map((i) => {\r\n        const simplePolygon = new Polygon({\r\n          rings: [i],\r\n          spatialReference: item.spatialReference\r\n        });\r\n        response.push(simplePolygon);\r\n      });\r\n    };\r\n    return response;\r\n  },\r\n\r\n  _populateTableDrawLine(idLine) {\r\n    let row = `<td class=\"center-aligned\">${selfCm.idxLines}</td>\r\n              <td contenteditable=\"true\" id=\"${idLine}_name\">${idLine}</td>\r\n              <td class=\"center-aligned\">\r\n                <span id=\"${idLine}_ext\"><i class=\"fas fa-search\"></i></span>\r\n              </td>\r\n              <td class=\"center-aligned\">\r\n                <span id=\"${idLine}_del\" style=\"color: #FF5722;\"><i class=\"far fa-trash-alt\"></i></span>\r\n              </td>`\r\n    let tr = dojo.create('tr');\r\n    tr.id = idLine;\r\n    tr.innerHTML = row;\r\n    tr.style.cursor = \"pointer\";\r\n    selfCm.bodyTbLinesDvApCm.appendChild(tr)\r\n    dojo.query(`#${idLine}_del`).on('click', selfCm._deleteRowLine);\r\n    dojo.query(`#${idLine}_ext`).on('click', selfCm._zoonToLineDivision);\r\n    dojo.query(`#${idLine}_name`).on('input', selfCm._editaNameLineDivision);\r\n  },\r\n\r\n  _deleteRowLine(evt) {\r\n    let id = evt.currentTarget.id.replace('_del', '');\r\n    let elem = dojo.query(`#${id}`);\r\n    let graphic = graphicLayerLineaDivision.graphics.filter(item => item.attributes.id == id);\r\n    graphicLayerLineaDivision.remove(graphic[0])\r\n    let graphicLabel = graphicLayerLabelLineaDivision.graphics.filter(item => item.attributes.id == id);\r\n    graphicLayerLabelLineaDivision.remove(graphicLabel[0])\r\n    selfCm._removeLayerGraphic(idGraphicLoteCm)\r\n    selfCm._removeLayerGraphic(idGraphicPuntoLote)\r\n    selfCm._removeLayerGraphic(idGraphicFrenteLote)\r\n    selfCm._removeLayerGraphic(idGraphicLabelCodLote)\r\n    graphicLayerPredioByDivison.clear()\r\n    elem[0].parentNode.removeChild(elem[0]);\r\n  },\r\n\r\n  _addNameToLine(name, polylineGeom) {\r\n    let polylineGeomUtm = webMercatorUtils.webMercatorToGeographic(polylineGeom)\r\n    let midPoint = selfCm._findMidpoint(polylineGeomUtm)\r\n\r\n    let pointLabel = new Point({\r\n      x: midPoint.geometry.coordinates[0],\r\n      y: midPoint.geometry.coordinates[1],\r\n      spatialReference: { wkid: 4326 }\r\n    })\r\n\r\n    let font = new Font(\"15px\", Font.STYLE_NORMAL, Font.VARIANT_NORMAL, Font.WEIGHT_BOLD, \"Arial\");\r\n    let txtSym = new TextSymbol(name, font, new Color([250, 0, 0, 0.9]));\r\n    txtSym.setOffset(15, 15).setAlign(TextSymbol.ALIGN_END)\r\n    txtSym.setHaloColor(new Color([255, 255, 255]));\r\n    txtSym.setHaloSize(1.5);\r\n    let graphicLabel = new Graphic(pointLabel, txtSym, { id: name });\r\n\r\n    // graphicLayer.add(graphic);\r\n    graphicLayerLabelLineaDivision.add(graphicLabel);\r\n  },\r\n\r\n  _zoonToLineDivision(evt) {\r\n    let id = evt.currentTarget.id.replace('_ext', '');\r\n    let graphic = graphicLayerLabelLineaDivision.graphics.filter(item => item.attributes.id == id);\r\n    selfCm.map.setExtent(graphic[0]._extent, true);\r\n  },\r\n\r\n  _editaNameLineDivision(evt) {\r\n    let id = evt.currentTarget.id.replace('_name', '');\r\n    let graphic = graphicLayerLabelLineaDivision.graphics.filter(item => item.attributes.id == id)\r\n    graphic[0].symbol.text = evt.currentTarget.innerText;\r\n    graphicLayerLabelLineaDivision.refresh()\r\n  },\r\n\r\n  _populateTablePredio(bodyTable, drawFunction) {\r\n    bodyTable.innerHTML = ''\r\n    selfCm.responseRequests.forEach((predio, idx) => {\r\n      const tr = dojo.create('tr');\r\n      tr.id = `predio_${predio['id']}`;\r\n      const row = `<td class=\"center-aligned\">${idx + 1}</td>\r\n                  <td>${predio['address']}</td>\r\n                  <td class=\"center-aligned\">\r\n                   <span \r\n                    id=\"${tr.id}_draw\"\r\n                    data-cpm=${predio['cpm']} \r\n                    data-resolutionType=${predio['resolutionType']} \r\n                    data-resolutionDocument=${predio['resolutionDocument']}\r\n                    data-floor=${predio['floor']}\r\n                    data-urbanLotNumber=${predio['urbanLotNumber']}\r\n                   >\r\n                      <i class=\"fas fa-map-marker-alt\"></i>\r\n                   </span>\r\n                  </td>`\r\n      tr.innerHTML = row;\r\n      tr.style.cursor = \"pointer\";\r\n      bodyTable.appendChild(tr)\r\n      dojo.query(`#${tr.id}_draw`).on('click', drawFunction)\r\n    });\r\n  },\r\n\r\n  _activateSnappingPrediosByDivision(graphiclayer) {\r\n    let graphicsLayerInfo = new esri.layers.LayerInfo({\r\n      id: graphiclayer.id, // El id del `GraphicsLayer`\r\n      name: graphiclayer.name, // El nombre del `GraphicsLayer`\r\n      layer: graphiclayer // El `GraphicsLayer` a utilizar\r\n    });\r\n\r\n    // Agregar el `LayerInfo` al mapa y habilitar el snapping\r\n    selfCm.map.enableSnapping({\r\n      layerInfos: [graphicsLayerInfo], // Agregar el `LayerInfo` al mapa\r\n      // alwaysSnap: true,\r\n      snapPointSymbol: symbolSnapPointCm,\r\n      tolerance: 5,\r\n    });\r\n  },\r\n\r\n  _activateToolPrediosByDivision(evt) {\r\n    selfCm._removeClassActiveButton()\r\n    ToolDraw.toolbarDraw.deactivate()\r\n    selfCm.idButtonDrawActive = evt.currentTarget.id\r\n    dojo.query(`#${selfCm.idButtonDrawActive}`)[0].classList.add('activeButton')\r\n    selfCm.cpmPredioDivision = evt.currentTarget.dataset.cpm === 'null' ? null : evt.currentTarget.dataset.cpm;\r\n    selfCm.idPredioDivision = evt.currentTarget.parentElement.parentElement.id;\r\n    selfCm.resolutionType = evt.currentTarget.dataset.resolutiontype === 'null' ? null : evt.currentTarget.dataset.resolutiontype;\r\n    selfCm.resolutionDocument = evt.currentTarget.dataset.resolutiondocument === 'null' ? null : evt.currentTarget.dataset.resolutiondocument;\r\n    selfCm.floor = evt.currentTarget.dataset.floor === 'null' ? null : evt.currentTarget.dataset.floor;\r\n    selfCm.urbanLotNumber = evt.currentTarget.dataset.urbanlotnumber === 'null' ? null : evt.currentTarget.dataset.urbanlotnumber;\r\n    const graphic = graphicLayerPredioByDivison.graphics.filter(item => item.attributes.id === selfCm.idPredioDivision);\r\n    graphicLayerPredioByDivison.remove(graphic[0])\r\n    selfCm.map.setInfoWindowOnClick(false);\r\n    const graphicLayerPuntoLote = selfCm.map.getLayer(idGraphicPuntoLote)\r\n    selfCm._activateSnappingPrediosByDivision(graphicLayerPuntoLote);\r\n    toolbarCm.activate(Draw[\"POINT\"]);\r\n  },\r\n\r\n  _changeValueCodLote(evt) {\r\n    const selectedValue = evt.target.value;\r\n    const currentSelectId = evt.target.id;\r\n    const id = evt.target.id.split('_')[1]\r\n    // const idx = evt.target.selectedIndex\r\n    // const cod_lote = evt.target.value\r\n    const lyr = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n    const graphicSelected = lyr.graphics.filter(item => item.attributes.id == `label_${id}`)\r\n    graphicSelected[0].symbol.text = selectedValue\r\n    const selects = dojo.query('.codLoteSelectDvCls');\r\n    selects.forEach(select => {\r\n      if (select.id !== currentSelectId && select.value === selectedValue) {\r\n        select.value = '';\r\n        const graphicNotSelected = lyr.graphics.filter(item => item.attributes.id == `label_${select.id.split('_')[1]}`)\r\n        graphicNotSelected[0].symbol.text = ''\r\n      }\r\n      lyr.refresh()\r\n    });\r\n  },\r\n\r\n  _changeLotUrb(evt) {\r\n    const selectedValue = evt.target.value;\r\n    const currentSelectId = evt.target.id;\r\n    const selects = dojo.query('.loteUrbSelectDvCls');\r\n    const lyr = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n    // const graphicSelected = lyr.graphics.filter(item => item.attributes.id == `label_${id}`)\r\n    selects.forEach(select => {\r\n      if (select.id !== currentSelectId && select.value === selectedValue) {\r\n        select.value = '';\r\n        const graphicNotSelected = lyr.graphics.filter(item => item.attributes.id == `label_${select.id.split('_')[1]}`)\r\n        graphicNotSelected[0].attributes.lot_urb = ''\r\n      }\r\n    });\r\n  },\r\n\r\n  _centerAtLabelCodLoteDivision(evt) {\r\n    let id = evt.currentTarget.id\r\n    let lyr = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n    let graphicSelected = lyr.graphics.filter(item => item.attributes.id == id)\r\n    selfCm.map.centerAndZoom(graphicSelected[0].geometry)\r\n  },\r\n\r\n  _editLoteUrbanoDivision(evt) {\r\n    const id = evt.target.id.replace('loteUrbanoDv_', '');\r\n    const lyr = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n    const graphic = lyr.graphics.filter(item => item.attributes.id == `label_${id}`)\r\n    graphic[0].attributes.lot_urb = evt.target.selectedOptions[0].value\r\n    lyr.refresh()\r\n  },\r\n\r\n  _buildDataLoteTable(tableBody, predios) {\r\n    tableBody.innerHTML = ''\r\n    predios.forEach((predio, index) => {\r\n      const row = document.createElement('tr');\r\n\r\n      // celda de índice\r\n      const indexCell = document.createElement('td');\r\n      indexCell.className = \"center-aligned\"\r\n      indexCell.textContent = predio.num;\r\n      row.appendChild(indexCell);\r\n\r\n      // celda de codigo de predio\r\n      const codigoCell = document.createElement('td');\r\n      const select = document.createElement('select');\r\n      select.className = \"codLoteSelectDvCls\"\r\n      select.id = `codLoteSelectDv_${predio.num}`\r\n\r\n      const optionDisabled = document.createElement('option');\r\n      optionDisabled.value = '';\r\n      optionDisabled.textContent = '---';\r\n      optionDisabled.disabled = true;\r\n      select.appendChild(optionDisabled);\r\n      predios.forEach(p => {\r\n        const option = document.createElement('option');\r\n        option.value = p.cod_lote;\r\n        option.textContent = p.cod_lote;\r\n        if (p.cod_lote === predio.cod_lote) {\r\n          option.selected = true;\r\n        }\r\n        select.appendChild(option);\r\n      });\r\n\r\n      codigoCell.appendChild(select);\r\n      row.appendChild(codigoCell);\r\n\r\n\r\n      const loteUrbCell = document.createElement('td');\r\n      const loteUrbSelect = document.createElement('select');\r\n      loteUrbSelect.className = \"loteUrbSelectDvCls\"\r\n      loteUrbSelect.id = `loteUrbanoDv_${predio.num}`\r\n\r\n      const optionDisabledLotUrb = optionDisabled.cloneNode(true)\r\n      loteUrbSelect.appendChild(optionDisabledLotUrb);\r\n\r\n      selfCm.responseRequests.forEach((request, idx) => {\r\n        const option = document.createElement('option');\r\n        option.value = request.urbanLotNumber;\r\n        option.textContent = request.urbanLotNumber;\r\n        loteUrbSelect.appendChild(option);\r\n        if (predio.num == idx + 1) {\r\n          option.selected = true;\r\n        }\r\n        // selected option by index predio.num\r\n      })\r\n      loteUrbCell.appendChild(loteUrbSelect);\r\n      loteUrbCell.className = \"loteUrbanoDvCls\"\r\n      row.appendChild(loteUrbCell);\r\n\r\n      const locationMarker = document.createElement('td');\r\n      locationMarker.id = predio.id\r\n      locationMarker.className = \"center-aligned\"\r\n      locationMarker.innerHTML = `<span class=\"locationLabelLoteDvCls\" id=\"${predio.id}\"><i class=\"fas fa-search\"></i></span>`\r\n      row.appendChild(locationMarker);\r\n      tableBody.appendChild(row);\r\n      // dojo.query(`#${predio.id}`).on('click', selfCm._centerAtLabelCodLoteDivision)\r\n\r\n    });\r\n    dojo.query('.codLoteSelectDvCls').on('change', selfCm._changeValueCodLote)\r\n    dojo.query('.loteUrbSelectDvCls').on('change', selfCm._changeLotUrb)\r\n    dojo.query('.locationLabelLoteDvCls').on('click', selfCm._centerAtLabelCodLoteDivision)\r\n    dojo.query('.loteUrbanoDvCls').on('change', selfCm._editLoteUrbanoDivision);\r\n\r\n  },\r\n\r\n  _ordenarPoligonosNorteSur(poligonos, idx, bodyTable) {\r\n    const deferred = new Deferred();\r\n    // Obtener la coordenada más al norte de cada polígono\r\n    const coordenadasNorte = poligonos.map(poligono => {\r\n      const extent = poligono.getExtent();\r\n      return extent.ymax;\r\n    });\r\n\r\n    // Ordenar los polígonos en base a la coordenada más al norte\r\n    const poligonosOrdenados = poligonos.slice().sort((a, b) => {\r\n      const coordenadaNorteA = coordenadasNorte[poligonos.indexOf(a)];\r\n      const coordenadaNorteB = coordenadasNorte[poligonos.indexOf(b)];\r\n      return coordenadaNorteB - coordenadaNorteA; // Ordenar de norte a sur\r\n    });\r\n\r\n    // console.log(poligonos)\r\n\r\n    const graphicLayerLabelCodLoteDivision = new GraphicsLayer({\r\n      id: idGraphicLabelCodLote,\r\n    });\r\n\r\n    const font = new Font(\"20px\", Font.STYLE_NORMAL, Font.VARIANT_NORMAL, Font.WEIGHT_BOLD, \"Arial\");\r\n\r\n    const dataLoteTable = []\r\n\r\n    selfCm.geometryService.labelPoints(poligonosOrdenados)\r\n      .then((labelPoints) => {\r\n        labelPoints.forEach((point, index) => {\r\n          const cod_lote = selfCm._zfill(idx + 1, 3)\r\n          const txtSym = new TextSymbol(cod_lote, font, new Color([250, 0, 0, 1]));\r\n          txtSym.setColor(new esri.Color([0, 0, 0, 1])); // color blanco\r\n          txtSym.setSize(\"12pt\");\r\n          txtSym.setHaloColor(new esri.Color([255, 255, 255, 1]));\r\n          txtSym.setHaloSize(2);\r\n          const idGraphic = `label_${index + 1}`\r\n          const graphicLabel = new Graphic(\r\n            point,\r\n            txtSym,\r\n            {\r\n              id: idGraphic,\r\n              lot_urb: selfCm.responseRequests[index].urbanLotNumber,\r\n              clase: 'labelCodLoteDivision'\r\n            });\r\n          graphicLayerLabelCodLoteDivision.add(graphicLabel);\r\n          dataLoteTable.push({ num: index + 1, id: idGraphic, cod_lote: cod_lote })\r\n          idx = idx + 1\r\n        });\r\n        return dataLoteTable\r\n      })\r\n      .then((dataLoteTable) => {\r\n        selfCm._buildDataLoteTable(bodyTable, dataLoteTable)\r\n        selfCm.map.addLayer(graphicLayerLabelCodLoteDivision)\r\n        return deferred.resolve(dataLoteTable);\r\n      })\r\n      .catch((error) => {\r\n        return deferred.reject(error);\r\n      });\r\n\r\n    return deferred.promise;\r\n  },\r\n\r\n  // _enableEditingLabelsLotesDivision(evt) {\r\n  //   if (evt && evt.graphic && evt.graphic.attributes && evt.graphic.attributes.clase == 'labelCodLoteDivision') {\r\n  //     selfCm.map.setInfoWindowOnClick(false)\r\n  //     selfCm.editToolbar.activate(Edit.MOVE, evt.graphic);\r\n  //   } else {\r\n  //     selfCm.editToolbar.deactivate()\r\n  //   }\r\n  // },\r\n\r\n  _zfill(num, len) {\r\n    return (Array(len).fill('0').join('') + num).slice(-len);\r\n  },\r\n\r\n  _getMaxCodLot(polygonos) {\r\n    const deferred = new Deferred();\r\n    const estadisticaDef = new StatisticDefinition();\r\n    estadisticaDef.statisticType = 'max';\r\n    estadisticaDef.onStatisticField = _COD_LOTE_FIELD;\r\n    estadisticaDef.outStatisticFieldName = \"resultado\";\r\n\r\n    const query = new Query();\r\n    query.where = selfCm.arancel;\r\n    query.outFields = [_COD_LOTE_FIELD];\r\n    query.returnGeometry = false;\r\n    query.outStatistics = [estadisticaDef];\r\n\r\n    const queryTask = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl());\r\n    queryTask.execute(query)\r\n      .then(result => {\r\n        if (result.features.length > 0) {\r\n          const maxCodLote = result.features[0].attributes.resultado;\r\n          return deferred.resolve({\r\n            maxCodLote: maxCodLote,\r\n            polygons: polygonos\r\n          });\r\n        } else {\r\n          return deferred.reject('No se encontraron lotes');\r\n        }\r\n      });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _getOriginalLots(query) {\r\n    const selfCm = this;\r\n    const deferred = new Deferred();\r\n    const params = {\r\n      where: query,\r\n      returnGeometry: true,\r\n      outFields: \"*\",\r\n      outSR: 4326,\r\n      f: \"json\"\r\n    };\r\n\r\n    const requestOptions = {\r\n      url: `${selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl()}/query`,\r\n      content: params,\r\n      handleAs: \"json\",\r\n      callbackParamName: \"callback\"\r\n    };\r\n\r\n    esriRequest(requestOptions, { usePost: true })\r\n      .then((response) => {\r\n        selfCm.currentLotsRows = response.features;\r\n\r\n        if (selfCm.case == 2) {\r\n          if (selfCm.currentLotsRows.length < 2) {\r\n            throw new Error(selfCm.nls.errorAcumulationLandsNumber);\r\n          }\r\n        }\r\n\r\n        selfCm.currentLotsRows.forEach(row => {\r\n          row.geometry = new Polygon({\r\n            rings: row.geometry.rings,\r\n            spatialReference: { wkid: 4326 }\r\n          });\r\n        });\r\n        return deferred.resolve(selfCm.currentLotsRows);\r\n      })\r\n      .catch(err => deferred.reject(err));\r\n\r\n    return deferred.promise;\r\n  },\r\n\r\n  _getPolylinesDrawn() {\r\n    const arr = []\r\n    for (let i of graphicLayerLineaDivision.graphics) {\r\n      arr.push(i.geometry);\r\n    }\r\n    const unionGraphicLayerLineaDivision = selfCm._unionFeatures(arr);\r\n\r\n    let lineGeometry = new Polyline({\r\n      paths: unionGraphicLayerLineaDivision.paths,\r\n      spatialReference: { wkid: 102100 }\r\n    });\r\n    lineGeometry = esri.geometry.webMercatorToGeographic(lineGeometry);\r\n    return lineGeometry;\r\n  },\r\n\r\n  _divideLotsByLines() {\r\n    // const geomLote = results.features[0].geometry\r\n    if (selfCm.currentLotsRows.length == 0) {\r\n      selfCm._showMessage(selfCm.nls.errorLotQuery, 'warning');\r\n      return;\r\n    }\r\n    const lineGeometry = selfCm._getPolylinesDrawn();\r\n\r\n    const polygonGeometry = selfCm.currentLotsRows[0].geometry;\r\n\r\n    const geomLoteDivided = selfCm._dividePolygon(polygonGeometry, lineGeometry)\r\n\r\n    if (geomLoteDivided.length == 0) {\r\n      //  genera un mensage show indicando que no se encontro el lote\r\n      throw new Error(selfCm.nls.errorDivideLot);\r\n      // selfCm._showMessage(selfCm.nls.errorDivideLot, type = 'error');\r\n      // return;\r\n    }\r\n\r\n    if (geomLoteDivided.length != selfCm.responseRequests.length) {\r\n      throw new Error(`No se puede proceder con la operación\\nLa cantidad de lotes generados (${geomLoteDivided.length}) es diferente a lo solicitado (${selfCm.responseRequests.length})`);\r\n      // selfCm._showMessage(`No se puede proceder con la operación\\nSe han generado más lotes (${geomLoteDivided.length}) de los solicitados (${selfCm.responseRequests.length})`, type = 'error');\r\n      // return;\r\n    }\r\n\r\n    // Creamos grafico de lote fusionado\r\n    const graphicLayerLoteDivision = new GraphicsLayer({\r\n      id: idGraphicLoteCm\r\n    });\r\n\r\n    // // Configurar el LabelClass con un símbolo transparente\r\n    // const labelClass = new LabelClass({\r\n    //   labelExpressionInfo: { value: \"-\" },\r\n    //   useCodedValues: false,\r\n    //   labelPlacement: \"always-horizontal\",\r\n    //   symbol: new TextSymbol().setColor(new Color([0, 0, 0])) // Color transparente\r\n    // });\r\n\r\n    // console.log(graphicLayerLoteDivision);\r\n    // graphicLayerLoteDivision.setLabelingInfo([labelClass]);\r\n\r\n    // iterar sobre los graficos de la capa de division y agregar cada uno a graphicLayerLoteDivision\r\n    for (let i of geomLoteDivided) {\r\n      const lote = new Graphic(i, symbolFusionLote)\r\n\r\n      // agregar el grafico directo al mapa\r\n      graphicLayerLoteDivision.add(lote);\r\n    }\r\n    selfCm.map.addLayer(graphicLayerLoteDivision);\r\n    return geomLoteDivided;\r\n  },\r\n\r\n  _addGraphicsPointLotsAndArancel() {\r\n    const deferred = new Deferred();\r\n    const query = new Query();\r\n    query.where = `${selfCm.arancel} and ID_SVIA IS NOT NULL`\r\n    // especificar los campos devueltos\r\n    query.outFields = [_UBIGEO_FIELD, _F_MZN_FIELD];\r\n    query.returnGeometry = true\r\n    // query with order by fields\r\n    query.orderByFields = [_F_MZN_FIELD];\r\n    const qTask = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrCfArancel).getUrl());\r\n    qTask.execute(query, function (results) {\r\n      // Creamos grafico de punto lote\r\n      const graphicLayerPuntoLote = new GraphicsLayer({\r\n        id: idGraphicPuntoLote\r\n      });\r\n      // creamos grafico de frente de lote\r\n      const graphicLayerFrenteLote = new GraphicsLayer({\r\n        id: idGraphicFrenteLote\r\n      });\r\n      // let graphicLayerPredio = new GraphicsLayer({\r\n      //   id: idGraphicPredioCm\r\n      // });\r\n      const graphicLoteDivision = selfCm.map.getLayer(idGraphicLoteCm)\r\n      if (!graphicLoteDivision) {\r\n        return;\r\n      }\r\n      const frentes = {}\r\n      for (let row of results.features) {\r\n        for (let graphic of graphicLoteDivision.graphics) {\r\n          const isItc = geometryEngine.intersects(row.geometry, graphic.geometry)\r\n          if (!isItc) {\r\n            continue\r\n          }\r\n          // saber si un key esta dentro del objeto frentes\r\n          if (!frentes.hasOwnProperty(row.attributes[_F_MZN_FIELD])) {\r\n            frentes[row.attributes[_F_MZN_FIELD]] = row.geometry;\r\n          }\r\n          else {\r\n            // check if row.geometry share a commin coordinate with frentes\r\n            const unionFrentes = geometryEngine.union([frentes[row.attributes[_F_MZN_FIELD]], row.geometry])\r\n            frentes[row.attributes[_F_MZN_FIELD]] = unionFrentes;\r\n          }\r\n        }\r\n      }\r\n\r\n      for (let lote of graphicLoteDivision.graphics) {\r\n        for (let idx in frentes) {\r\n          const idItcFrentesByLotes = geometryEngine.intersects(lote.geometry, frentes[idx])\r\n          if (!idItcFrentesByLotes) {\r\n            continue\r\n          }\r\n          const itcFrentesByLotes = geometryEngine.intersect(frentes[idx], lote.geometry)\r\n          for (let row of itcFrentesByLotes.paths) {\r\n            const polylineChunk = new Polyline({\r\n              paths: [row],\r\n              spatialReference: itcFrentesByLotes.spatialReference\r\n            });\r\n            // add frentes to graphicLayerFrenteLote\r\n            const symbolFrenteLote = new SimpleLineSymbol(\r\n              SimpleLineSymbol.STYLE_SOLID,\r\n              new Color(\r\n                [\r\n                  Math.floor(Math.random() * 255),\r\n                  Math.floor(Math.random() * 255),\r\n                  Math.floor(Math.random() * 255)]),\r\n              5\r\n            )\r\n            const frente = new Graphic(polylineChunk, symbolFrenteLote)\r\n            graphicLayerFrenteLote.add(frente);\r\n\r\n            const puntoLoteTurf = selfCm._findMidpoint(polylineChunk)\r\n\r\n            // crear un punto en el mapa\r\n            const puntoLote = new Point({\r\n              x: puntoLoteTurf.geometry.coordinates[0],\r\n              y: puntoLoteTurf.geometry.coordinates[1],\r\n              spatialReference: { wkid: 4326 }\r\n            })\r\n\r\n            // Agregar el punto p al mapa          \r\n            const puntoLoteGraphic = new Graphic(puntoLote, symbolPuntoLote)\r\n            graphicLayerPuntoLote.add(puntoLoteGraphic)\r\n          };\r\n        }\r\n      }\r\n      selfCm.map.addLayer(graphicLayerFrenteLote);\r\n      selfCm.map.addLayer(graphicLayerPuntoLote);\r\n      selfCm._removeLayerGraphic(idGraphicPredioByDivison);\r\n      selfCm.map.addLayer(graphicLayerPredioByDivison)\r\n      return deferred.resolve();\r\n    });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _ApplyDivideLotesRefactor() {\r\n    selfCm.busyIndicator.show();\r\n    selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n    selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n    selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n    selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n    selfCm._removeLayerGraphic(idGraphicLoteDeleteCm);\r\n    selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n\r\n    // Union all graphics of graphicslayer\r\n    if (graphicLayerLineaDivision.graphics.length == 0) {\r\n      selfCm._showMessage(selfCm.nls.emptyLineSubdivision, 'warning');\r\n      selfCm.busyIndicator.hide();\r\n      return\r\n    }\r\n    if (!selfCm.lotesQuery) {\r\n      selfCm._showMessage(selfCm.nls.errorGetLand, 'warning');\r\n      selfCm.busyIndicator.hide();\r\n      return\r\n    }\r\n    return selfCm._getOriginalLots(selfCm.lotesQuery)\r\n      .then(originLots => {\r\n        const geomLoteDivided = selfCm._divideLotsByLines();\r\n        return selfCm._getMaxCodLot(geomLoteDivided);\r\n      })\r\n      .then(proprsLot => {\r\n        return selfCm._ordenarPoligonosNorteSur(\r\n          proprsLot.polygons,\r\n          parseInt(proprsLot.maxCodLote),\r\n          selfCm.bodyTbDatosLoteDvApCm\r\n        )\r\n      })\r\n      .then(() => {\r\n        selfCm.map.reorderLayer(selfCm.map.getLayer(idGraphicLoteCm), selfCm.map.graphicsLayerIds.indexOf(graphicLayerLabelLineaDivision.id));\r\n        selfCm.map.setExtent(selfCm.currentLotsRows[0].geometry.getExtent().expand(1.5), true);\r\n        return selfCm._addGraphicsPointLotsAndArancel();\r\n      })\r\n      .then(() => {\r\n        selfCm._populateTablePredio(selfCm.bodyTbPrediosDvApCm, selfCm._activateToolPrediosByDivision)\r\n        selfCm.busyIndicator.hide();\r\n      })\r\n      .catch(error => {\r\n        // console.log(error)\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(error.message, type = \"error\")\r\n      })\r\n  },\r\n\r\n  // // ----------------------------------------------------------------------------------------------\r\n  // // GeoprocessingServices\r\n  // // ----------------------------------------------------------------------------------------------\r\n  // _executeReasignacionGpService(evt) {\r\n  //   if (!selfCm.xy.length) {\r\n  //     selfCm._showMessage(selfCm.nls.emptyNewLocation, type = \"error\")\r\n  //     return\r\n  //   }\r\n  //   selfCm._showMessageConfirm().then(function (result) {\r\n  //     if (result) {\r\n  //       let params = {\r\n  //         \"cod_pred\": selfCm.uniqueCodeLands,\r\n  //         \"ubigeo\": paramsApp['ubigeo'],\r\n  //         \"geometry\": selfCm.xy,\r\n  //         \"user\": paramsApp['username'],\r\n  //         \"id_solicitud\": selfCm.codRequestsCm\r\n  //       }\r\n\r\n  //       // revisar si alguna propiedad tiene valor nulo o indefinido\r\n  //       for (let key in params) {\r\n  //         if (params[key] == null || params[key] == undefined) {\r\n  //           selfCm._showMessage(`Debe especificar el valor de ${key}`, type = \"error\");\r\n  //           return\r\n  //         }\r\n  //       }\r\n  //       selfCm._executeGPService(selfCm.config.reasignacionUrl, params)\r\n  //     }\r\n  //     else {\r\n  //       return\r\n  //     }\r\n  //   })\r\n  // },\r\n\r\n  _executeAcumulacionGpService(evt) {\r\n    if (!selfCm.lotesQuery) {\r\n      selfCm._showMessage(selfCm.nls.errorGetLand, 'warning');\r\n      selfCm.busyIndicator.hide();\r\n      return\r\n    }\r\n    if (!selfCm.map.getLayer(idGraphicLoteCm)) {\r\n      selfCm._showMessage(selfCm.nls.emptyPreviewAccumulation, type = \"error\")\r\n      return\r\n    }\r\n\r\n    if (!selfCm.xy.length) {\r\n      selfCm._showMessage(selfCm.nls.emptyNewLand, type = \"error\")\r\n      return\r\n    }\r\n    const labelCodLotesLayer = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n\r\n    selfCm._showMessageConfirm().then(function (result) {\r\n      if (result) {\r\n        selfCm.busyIndicator.show();\r\n        selfCm._addWarningMessageExecute()\r\n        const labelCodLotesLayerGraphic = labelCodLotesLayer.graphics;\r\n\r\n        Acumulation.codRequests = selfCm.codRequestsCm;\r\n        Acumulation.currentLotsRows = selfCm.currentLotsRows;\r\n\r\n        Acumulation.attributes = labelCodLotesLayerGraphic.map((i) => {\r\n          return {\r\n            codLot: i.symbol.text,\r\n            lotUrb: i.attributes.lot_urb,\r\n            coords: [\r\n              i.geometry.x,\r\n              i.geometry.y\r\n            ]\r\n          }\r\n        });\r\n\r\n        Acumulation.newPointLotsGraphics = selfCm.map.getLayer(idGraphicPuntoLote).graphics;\r\n        Acumulation.newLandsGraphics = selfCm.map.getLayer(idGraphicPredioCm).graphics;\r\n        Acumulation.newLandsGraphics[0]['codPre'] = selfCm.cpmAcumulacion;\r\n        Acumulation.newLandsGraphics[0]['id'] = selfCm.idAcumulacion;\r\n        Acumulation.newLandsGraphics[0]['resolutionType'] = selfCm.resolutionType;\r\n        Acumulation.newLandsGraphics[0]['resolutionDocument'] = selfCm.resolutionDocument;\r\n        Acumulation.newLandsGraphics[0]['floor'] = selfCm.floor;\r\n        Acumulation.newLandsGraphics[0]['urbanLotNumber'] = selfCm.urbanLotNumber;\r\n        Acumulation.landUrl = selfCm.layersMap.getLayerInfoById(idLyrCfPredios).getUrl();\r\n        Acumulation.pointLotUrl = selfCm.layersMap.getLayerInfoById(idLyrCfLotesPun).getUrl();\r\n        Acumulation.lotUrl = selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl();\r\n        Acumulation.arancelUrl = selfCm.layersMap.getLayerInfoById(idLyrCfArancel).getUrl();\r\n        Acumulation.blockUrl = selfCm.layersMap.getLayerInfoById(idLyrCfManzanaUrb).getUrl();\r\n        Acumulation.cadastralBlockUrl = selfCm.layersMap.getLayerInfoById(idLyrCfManzana).getUrl();\r\n        Acumulation.config = selfCm.config;\r\n        Acumulation.lotGraphic = selfCm.map.getLayer(idGraphicLoteCm).graphics;\r\n        Acumulation.ubigeo = paramsApp['ubigeo'];\r\n        Acumulation.user = paramsApp['username'];\r\n        Acumulation.caseRequest = selfCm.case;\r\n        Acumulation.queryBlock = selfCm.arancel;\r\n\r\n\r\n        Acumulation.executeAcumulation()\r\n          .then(response => {\r\n            selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n            selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n            selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n            selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n            selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n            selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(false)\r\n            selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(true)\r\n            selfCm._FormResult(selfCm.codRequestsCm, selfCm.caseDescription);\r\n            selfCm.busyIndicator.hide();\r\n            selfCm._removeWarningMessageExecute()\r\n            selfCm._showMessage(selfCm.nls.successProcess, type = \"success\");\r\n          })\r\n          .catch(error => {\r\n            // console.log(error)\r\n            // selfCm._removeWarningMessageExecute()\r\n            // selfCm._showMessage(error.message, type = \"error\");\r\n            // selfCm.busyIndicator.hide();\r\n\r\n            selfCm._removeWarningMessageExecute()\r\n            selfCm.busyIndicator.hide();\r\n            if (error.name === CustomException.ErrorEqualUrbanLotWithinBlock.name) {\r\n              return\r\n            } else {\r\n              selfCm._showMessage(error.message, type = \"error\");\r\n            }\r\n          })\r\n        // .finally(() => {\r\n        //   selfCm.lotesQuery = null;\r\n        // })\r\n      }\r\n      else {\r\n        selfCm.busyIndicator.hide();\r\n        return\r\n      }\r\n    })\r\n  },\r\n\r\n  _executeSubdivisionGpService(evt) {\r\n\r\n    const layerLote = selfCm.map.getLayer(idGraphicLoteCm);\r\n\r\n    if (!selfCm.lotesQuery) {\r\n      selfCm._showMessage(selfCm.nls.errorGetLand, 'warning');\r\n      selfCm.busyIndicator.hide();\r\n      return;\r\n    };\r\n\r\n    if (!layerLote) {\r\n      selfCm._showMessage(selfCm.nls.emptyPreviewSubdivision, type = \"error\");\r\n      return;\r\n    };\r\n\r\n    // Check if all labels have a value\r\n    const labelCodLotesLayer = selfCm.map.getLayer(idGraphicLabelCodLote);\r\n    for (let pred of labelCodLotesLayer.graphics) {\r\n      if (!pred.symbol.text) {\r\n        selfCm._showMessage(selfCm.nls.emptyLotCodeSubdivision, type = \"error\");\r\n        return;\r\n      };\r\n      if (!pred.attributes.lot_urb || pred.attributes.lot_urb === \"...\") {\r\n        selfCm._showMessage(selfCm.nls.emptyUrbanLotSubdivision, type = \"error\");\r\n        return;\r\n      };\r\n    };\r\n\r\n    if (graphicLayerPredioByDivison.graphics.length != layerLote.graphics.length) {\r\n      selfCm._showMessage(selfCm.nls.emptyGraphicLandSubdivision, type = \"error\");\r\n      return;\r\n    };\r\n    // Check if all lots have a land\r\n    const checkLotsWithinLands = UtilityCase.checkLotsWithinLands(layerLote.graphics, graphicLayerPredioByDivison.graphics);\r\n    if (!checkLotsWithinLands) {\r\n      selfCm._showMessage(selfCm.nls.emptyLandResultSubdivision, type = \"error\");\r\n      return\r\n    };\r\n\r\n    // Check lotUrb\r\n    const lotUrbArray = labelCodLotesLayer.graphics.map(i => i.attributes.lot_urb);\r\n    const duplicateLotUrban = UtilityCase.checkDuplicateLotUrbanResults(lotUrbArray);\r\n    if (duplicateLotUrban.length > 0) {\r\n      selfCm._showMessage(`${selfCm.nls.duplicateLotUrbanResult}: ${duplicateLotUrban}`, type = 'error');\r\n      return;\r\n    };\r\n\r\n    selfCm._showMessageConfirm().then(function (result) {\r\n      if (result) {\r\n        selfCm.busyIndicator.show();\r\n        selfCm._addWarningMessageExecute();\r\n        const labelCodLotesLayerGraphic = labelCodLotesLayer.graphics;\r\n\r\n        SubDivision.blockUrl = selfCm.layersMap.getLayerInfoById(idLyrCfManzanaUrb).getUrl();\r\n        SubDivision.lotUrl = selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl();\r\n        SubDivision.pointLotUrl = selfCm.layersMap.getLayerInfoById(idLyrCfLotesPun).getUrl();\r\n        SubDivision.arancelUrl = selfCm.layersMap.getLayerInfoById(idLyrCfArancel).getUrl();\r\n        SubDivision.landUrl = selfCm.layersMap.getLayerInfoById(idLyrCfPredios).getUrl();\r\n        SubDivision.cadastralBlockUrl = selfCm.layersMap.getLayerInfoById(idLyrCfManzana).getUrl();\r\n        SubDivision.currentLotsRows = selfCm.currentLotsRows;\r\n        SubDivision.newPointLotsGraphics = selfCm.map.getLayer(idGraphicPuntoLote).graphics;\r\n        SubDivision.newLandsGraphics = graphicLayerPredioByDivison.graphics;\r\n        SubDivision.queryBlock = selfCm.arancel;\r\n        SubDivision.newLandsGraphics.forEach((i) => {\r\n          i['id'] = i.attributes.id.split('_')[1],\r\n            i['codPre'] = i.attributes.cpm,\r\n            i['resolutionType'] = i.attributes.resolutionType,\r\n            i['resolutionDocument'] = i.attributes.resolutionDocument,\r\n            i['floor'] = i.attributes.floor,\r\n            i['urbanLotNumber'] = i.attributes.urbanLotNumber\r\n        });\r\n        SubDivision.lotGraphic = layerLote.graphics;\r\n\r\n        SubDivision.attributes = labelCodLotesLayerGraphic.map((i) => {\r\n          return {\r\n            codLot: i.symbol.text,\r\n            lotUrb: i.attributes.lot_urb,\r\n            coords: [\r\n              i.geometry.x,\r\n              i.geometry.y\r\n            ]\r\n          }\r\n        });\r\n\r\n        SubDivision.config = selfCm.config;\r\n        SubDivision.ubigeo = paramsApp['ubigeo'];\r\n        SubDivision.user = paramsApp['username'];\r\n        SubDivision.caseRequest = selfCm.case;\r\n        SubDivision.codRequests = selfCm.codRequestsCm;\r\n\r\n        SubDivision.executeSubdivision()\r\n          .then(response => {\r\n            graphicLayerPredioByDivison.clear();\r\n            graphicLayerLineaDivision.clear();\r\n            graphicLayerLabelLineaDivision.clear();\r\n            selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n            selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n            selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n            selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n            selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(false)\r\n            selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(true)\r\n            selfCm._FormResult(selfCm.codRequestsCm, selfCm.caseDescription);\r\n            selfCm.busyIndicator.hide();\r\n            selfCm._removeWarningMessageExecute()\r\n            selfCm._showMessage(selfCm.nls.successProcess, type = \"success\");\r\n          })\r\n          .catch(error => {\r\n            selfCm._removeWarningMessageExecute()\r\n            selfCm.busyIndicator.hide();\r\n            if (error.name === CustomException.ErrorEqualUrbanLotWithinBlock.name) {\r\n              return\r\n            } else {\r\n              selfCm._showMessage(error.message, type = \"error\");\r\n            }\r\n          })\r\n        // .finally(() => {\r\n        //   selfCm.lotesQuery = null;\r\n        // })\r\n      }\r\n      else {\r\n        return\r\n      }\r\n    })\r\n  },\r\n\r\n  _executeInactivarGpService(evt) {\r\n    if (!selfCm.currentLotsRows) {\r\n      selfCm._showMessage(selfCm.nls.emptyLotRequests, type = \"error\")\r\n      return\r\n    }\r\n\r\n    selfCm._showMessageConfirm().then(function (result) {\r\n      if (result) {\r\n        selfCm.busyIndicator.show();\r\n        selfCm._addWarningMessageExecute();\r\n        Deactivate.caseRequest = selfCm.case;\r\n        Deactivate.codRequest = selfCm.codRequestsCm;\r\n        Deactivate.user = paramsApp['username'];\r\n        Deactivate.ubigeo = paramsApp['ubigeo'];\r\n        Deactivate.config = selfCm.config;\r\n        Deactivate.landUrl = selfCm.layersMap.getLayerInfoById(idLyrCfPredios).getUrl();\r\n        Deactivate.cpu = selfCm.uniqueCodeLands;\r\n        Deactivate.currentLotsRows = selfCm.currentLotsRows;\r\n\r\n        Deactivate.executeDeactivate()\r\n          .then(response => {\r\n            selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(false)\r\n            selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(true)\r\n            selfCm._removeWarningMessageExecute()\r\n            selfCm._loadIniRequestsCm()\r\n            dojo.query(\".backTrayClsCm\")[0].click()\r\n            selfCm.busyIndicator.hide();\r\n            selfCm._showMessage(selfCm.nls.successProcess, type = \"success\");\r\n          })\r\n          .catch(error => {\r\n            selfCm._removeWarningMessageExecute()\r\n            selfCm._showMessage(error.message, type = \"error\");\r\n            selfCm.busyIndicator.hide();\r\n          })\r\n          .finally(() => {\r\n            selfCm.currentLotsRows = null;\r\n          })\r\n      }\r\n      else {\r\n        return\r\n      }\r\n    })\r\n  },\r\n\r\n  _addWarningMessageExecute() {\r\n    const self = this;\r\n    const buzyElm = dojo.query(\"#dojox_widget_Standby_0\")[0]\r\n    const imgElm = buzyElm.querySelector(\"img\")\r\n    const loadingText = document.createElement('div');\r\n    loadingText.id = 'loadingTextCustom';\r\n    loadingText.style.position = 'absolute';\r\n    const topMessage = parseFloat(imgElm.style.top) + 80;\r\n    loadingText.style.top = `${topMessage}px`;\r\n    const leftImg = parseFloat(imgElm.style.left) + imgElm.width / 2;\r\n    loadingText.style.left = `${leftImg}px`;\r\n    loadingText.style.transform = 'translate(-50%, -50%)';\r\n    loadingText.style.background = 'white';\r\n    loadingText.style.zIndex = '1000';\r\n    loadingText.innerHTML = self.nls.warningExecute;\r\n\r\n    dojo.query(\"#dojox_widget_Standby_0\")[0].appendChild(loadingText);\r\n  },\r\n\r\n  _removeWarningMessageExecute() {\r\n    dojo.query(\"#loadingTextCustom\")[0].remove();\r\n  },\r\n\r\n  _executeIndependenceLands(evt) {\r\n    if (!selfCm.currentLotsRows) {\r\n      selfCm._showMessage(selfCm.nls.emptyLotRequests, type = \"error\")\r\n      return\r\n    }\r\n    if (!LandAssignment.checkPointLotsSelected()) {\r\n      selfCm._showMessage(selfCm.nls.emptyWaySelectedIndependence, type = \"error\")\r\n      return\r\n    }\r\n    selfCm._showMessageConfirm().then(function (result) {\r\n      if (result) {\r\n        selfCm.busyIndicator.show();\r\n        selfCm._addWarningMessageExecute();\r\n        Independence.codRequest = selfCm.codRequestsCm;\r\n        Independence.cadastralBlockUrl = selfCm.layersMap.getLayerInfoById(idLyrCfManzana).getUrl();\r\n        Independence.ubigeo = paramsApp['ubigeo'];\r\n        Independence.user = paramsApp['username'];\r\n        Independence.newLands = LandAssignment.lands;\r\n        Independence.urlLands = selfCm.layersMap.getLayerInfoById(idLyrCfPredios).getUrl();\r\n        Independence.matrixLand = selfCm.currentLandTabRows;\r\n        Independence.config = selfCm.config;\r\n        Independence.currentLotsRows = selfCm.currentLotsRows;\r\n        Independence.caseRequest = selfCm.case;\r\n\r\n        Independence.executeIndependence()\r\n          .then(response => {\r\n            LandAssignment.removeAllGraphics();\r\n            selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(false)\r\n            selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(true)\r\n            selfCm._FormResult(selfCm.codRequestsCm, selfCm.caseDescription);\r\n            selfCm.busyIndicator.hide();\r\n            selfCm._removeWarningMessageExecute();\r\n            selfCm._showMessage(selfCm.nls.successProcess, type = \"success\");\r\n          })\r\n          .catch(error => {\r\n            selfCm._removeWarningMessageExecute();\r\n            selfCm._showMessage(error.message, type = \"error\");\r\n            selfCm.busyIndicator.hide();\r\n          })\r\n          .finally(() => {\r\n            selfCm.currentLotsRows = null;\r\n          })\r\n      }\r\n      else {\r\n        return\r\n      }\r\n    })\r\n  },\r\n\r\n  _executeGPService(url, params) {\r\n    let urlStatusRequest = `${selfCm.config.applicationListUrl}/${selfCm.codRequestsCm}`\r\n    selfCm._callApiRestServices(urlStatusRequest, {}).then(function (result) {\r\n      try {\r\n        if (result.idStatus != 1) {\r\n          throw new Error(`Esta solicitud (${selfCm.codRequestsCm}) ya fue procesada con anterioridad: ${result.date}`)\r\n        }\r\n        selfCm.busyIndicator.show();\r\n        // Agregar un elemento de texto debajo del BusyIndicator\r\n        let buzyElm = dojo.query(\"#dojox_widget_Standby_0\")[0]\r\n        let imgElm = buzyElm.querySelector(\"img\")\r\n        let loadingText = document.createElement('div');\r\n        loadingText.id = 'loadingTextCustom';\r\n        loadingText.style.position = 'absolute';\r\n        let topMessage = parseFloat(imgElm.style.top) + 80;\r\n        loadingText.style.top = `${topMessage}px`;\r\n        let leftImg = parseFloat(imgElm.style.left) + imgElm.width / 2;\r\n        loadingText.style.left = `${leftImg}px`;\r\n        loadingText.style.transform = 'translate(-50%, -50%)';\r\n        loadingText.style.background = 'white';\r\n        loadingText.style.zIndex = '1000';\r\n\r\n        dojo.query(\"#dojox_widget_Standby_0\")[0].appendChild(loadingText);\r\n        // selfCm._FormResult(selfCm.codRequestsCm, selfCm.caseDescription);\r\n        selfCm.gp = new Geoprocessor(url);\r\n        selfCm.gp.submitJob(params, selfCm._completeCallback, selfCm._statusCallback);\r\n      } catch (error) {\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(error.message, type = \"error\")\r\n      }\r\n\r\n    })\r\n  },\r\n\r\n  _statusCallback(JobInfo) {\r\n    selfCm.jobId = JobInfo.jobId\r\n    let textMessage = JobInfo.messages.map((message) => { return message.description })\r\n    try {\r\n      dojo.query(\"#loadingTextCustom\")[0].textContent = textMessage.slice(-1)[0] ? textMessage.slice(-1)[0] : ''\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  },\r\n  _completeCallback(JobInfo) {\r\n    switch (JobInfo.jobStatus) {\r\n      case \"esriJobSubmitted\":\r\n        // El trabajo se ha enviado al servidor y está esperando en la cola.\r\n        console.log(\"El trabajo se ha enviado y está esperando en la cola.\");\r\n        break;\r\n      case \"esriJobExecuting\":\r\n        // El trabajo se está ejecutando actualmente en el servidor.\r\n        console.log(\"El trabajo se está ejecutando en el servidor.\");\r\n        break;\r\n      case \"esriJobSucceeded\":\r\n        // El trabajo se ha completado satisfactoriamente y los resultados están disponibles.\r\n        selfCm.gp.getResultData(JobInfo.jobId, \"response\", function (result) {\r\n          if (!result.value.status) {\r\n            selfCm.busyIndicator.hide();\r\n            selfCm._showMessage(result.value.message, type = \"error\");\r\n            return\r\n          }\r\n\r\n          selfCm._sendDataToPlatform(result.value.response)\r\n\r\n\r\n          switch (selfCm.case) {\r\n            case \"1\":\r\n              selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n              break;\r\n            case \"2\":\r\n              selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n              selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n              selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n              selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n              selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n              break\r\n            case \"3\":\r\n              graphicLayerPredioByDivison.clear();\r\n              graphicLayerLineaDivision.clear();\r\n              graphicLayerLabelLineaDivision.clear();\r\n              // selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n              selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n              selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n              selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n              selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n              break\r\n            case \"4\":\r\n              // dojo.query(\".tablinksCm.active\")[0].click();\r\n              selfCm._loadIniRequestsCm()\r\n              break\r\n            default:\r\n              break;\r\n          }\r\n          selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(false)\r\n          selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(true)\r\n          if (selfCm.case == \"4\") {\r\n            dojo.query(\".backTrayClsCm\")[0].click()\r\n          } else {\r\n            selfCm._FormResult(selfCm.codRequestsCm, selfCm.caseDescription);\r\n          }\r\n          // Codigo para mostrar la ventana de resultados\r\n\r\n\r\n        })\r\n        break;\r\n      case \"esriJobFailed\":\r\n        // El trabajo ha fallado y no se han podido generar los resultados.\r\n        selfCm._showMessage(\"El proceso ha fallado y no se han podido generar los resultados.\", type = \"error\");\r\n        break;\r\n      case \"esriJobCancelled\":\r\n        // El trabajo ha sido cancelado por el usuario.\r\n        selfCm._showMessage(\"El proceso ha sido cancelado por el usuario.\");\r\n        break;\r\n      case \"esriJobTimedOut\":\r\n        // El trabajo ha expirado debido a un tiempo de espera.\r\n        selfCm._showMessage(\"El proceso ha superado el tiempo de espera necesario para su ejecución.\", type = \"error\");\r\n        break;\r\n      default:\r\n        // El estado del trabajo no se reconoce.\r\n        selfCm._showMessage(\"El estado del proceso no se reconoce.\");\r\n        break;\r\n    }\r\n    selfCm.busyIndicator.hide();\r\n    // remove 'loadingTextCustom'\r\n    dojo.query(\"#loadingTextCustom\")[0].remove();\r\n  },\r\n  // _cancelProcess(evt) {\r\n  //   selfCm.gp.cancelJob(selfCm.jobId, function (info) {\r\n  //     console.log(info.jobStatus)\r\n  //   });\r\n  // },\r\n\r\n  // _sendDataToPlatform(data) {\r\n  //   for (let predio of data.results) {\r\n  //     predio['ubigeo'] = paramsApp.ubigeo;\r\n  //   }\r\n\r\n  //   data['idType'] = parseInt(selfCm.case)\r\n  //   fetch(selfCm.config.updateStatusApplication, {\r\n  //     method: 'POST', // o 'PUT'\r\n  //     body: JSON.stringify(data), // los datos pueden ser de tipo 'string' o {object}\r\n  //     headers: {\r\n  //       'Content-Type': 'application/json'\r\n  //     }\r\n  //   }).then(res => res.json())\r\n  //     .then(response => selfCm._showMessage('El proceso se completó satisfactoriamente.'))\r\n  //     // .catch(error => console.error('Error:', error));\r\n  //     .catch(error => selfCm._showMessage(error, type = \"error\"));\r\n  // },\r\n\r\n  _exportTableToExcel(evt) {\r\n    // Obtén la tabla HTML\r\n    const table = dojo.query(\"#tableRequestCm\")[0]\r\n    let headerRow = table.querySelector(\"tr\");\r\n    let rows = table.querySelectorAll(\"tr\")\r\n\r\n    let headers = [];\r\n    let headerCols = headerRow.querySelectorAll(\"th\");\r\n    for (let h = 0; h < headerCols.length - 1; h++) {\r\n      headers.push(headerCols[h].innerText);\r\n    }\r\n\r\n    let data = [];\r\n\r\n    // Recorre las filas (ignora la primera fila que contiene los encabezados)\r\n    for (let i = 0; i < rows.length; i++) {\r\n      if (i == 0) continue;\r\n      let row = {}, cols = rows[i].querySelectorAll(\"td\");\r\n\r\n      // Recorre las columnas\r\n      for (let j = 0; j < cols.length - 1; j++) {\r\n        // Usa el texto del encabezado como clave y el texto de la celda como valor\r\n        row[headers[j]] = cols[j].innerText;\r\n      }\r\n\r\n      data.push(row);\r\n    }\r\n\r\n\r\n\r\n    // Convierte el array de objetos en una cadena JSON\r\n    let wb = XLSX.utils.book_new();\r\n\r\n    // Crear una hoja de cálculo a partir de los datos JSON\r\n    let ws = XLSX.utils.json_to_sheet(data);\r\n    let sheetName = selfCm.currentTabActive.replace(\"_\", \" \");\r\n    XLSX.utils.book_append_sheet(wb, ws, sheetName);\r\n\r\n    // Escribir el libro de trabajo y forzar una descarga\r\n    XLSX.writeFile(wb, `reporte_solicitudes_${selfCm.currentTabActive}.xlsx`);\r\n  },\r\n\r\n  _dataURItoBlob(dataURI) {\r\n    var byteString = atob(dataURI.split(',')[1]);\r\n    var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n    var buffer = new ArrayBuffer(byteString.length);\r\n    var dataView = new Uint8Array(buffer);\r\n    for (var i = 0; i < byteString.length; i++) {\r\n      dataView[i] = byteString.charCodeAt(i);\r\n    }\r\n    return new Blob([buffer], { type: mimeString });\r\n  },\r\n\r\n  _sendObservation(evt) {\r\n    selfCm.busyIndicator.show();\r\n    const file = selfCm.imgUploadApCm.files[0];\r\n    const messageObservation = selfCm.textAreaObsApCm.value.trim();\r\n    if (messageObservation == '') {\r\n      selfCm.busyIndicator.hide();\r\n      selfCm._showMessage(selfCm.nls.emptyObservation, type = \"error\");\r\n      return\r\n    }\r\n    if (file == undefined) {\r\n      selfCm.busyIndicator.hide();\r\n      selfCm._showMessage(selfCm.nls.emptyImageSupport, type = \"error\");\r\n      return\r\n    }\r\n    const reader = new FileReader();\r\n    const data = new FormData();\r\n    reader.onloadend = function () {\r\n      data.append('application_id', selfCm.codRequestsCm);\r\n      data.append('description', selfCm.textAreaObsApCm.value);\r\n      data.append('img', selfCm.imgUploadApCm.files[0]);\r\n\r\n      return fetch(selfCm.config.observationUrl, {\r\n        method: 'POST',\r\n        body: data\r\n      })\r\n        .then(response => {\r\n          if (!response.ok) {\r\n            selfCm.busyIndicator.hide();\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n          }\r\n          selfCm.busyIndicator.hide();\r\n          selfCm._showMessagePromise(selfCm.nls.successRequestObservation).then((result) => {\r\n            dojo.query(\".backRequestsClsCm\")[0].click();\r\n            dojo.query(\".backTrayClsCm\")[0].click();\r\n            selfCm._loadIniRequestsCm();\r\n          })\r\n\r\n        }).catch(error => {\r\n          selfCm.busyIndicator.hide();\r\n          selfCm._showMessage(`${selfCm.nls.errorProcessRequestObservation} ${error}`, type = \"error\")\r\n        });\r\n    }\r\n    reader.readAsDataURL(file);\r\n  },\r\n\r\n  _uploadImagenObs(evt) {\r\n    let imageDiv = dojo.query(\".thumbnailClsCm\")[0];\r\n    let file = evt.target.files[0];\r\n    let reader = new FileReader();\r\n\r\n    reader.onloadend = function () {\r\n      imageDiv.innerHTML = \"\";\r\n      imageDiv.style.backgroundImage = 'url(' + reader.result + ')';\r\n      imageDiv.style.backgroundSize = 'contain';\r\n      imageDiv.style.backgroundRepeat = 'no-repeat';\r\n      imageDiv.style.backgroundPosition = 'center';\r\n    }\r\n\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n      imageDiv.innerHTML = \"<span><i class='far fa-image'></i></span>\";\r\n    }\r\n  },\r\n  _searchRequestByCodPred(evt) {\r\n    if (evt.keyCode === 13) {\r\n      if (evt.target.value == '') {\r\n        if ('cup' in selfCm.queryRequests) {\r\n          delete selfCm.queryRequests['cup'];\r\n        }\r\n      } else {\r\n        selfCm.queryRequests['cup'] = evt.target.value;\r\n        // selfCm.queryRequests.limit = selfCm.defaultLimit;\r\n      }\r\n      dojo.query(\".tablinksCm.active\")[0].click();\r\n    }\r\n  },\r\n\r\n  _sortedByDate(evt) {\r\n    const columnOrder = evt.currentTarget.dataset.val\r\n    evt.currentTarget.dataset.val = columnOrder.includes('-') ? columnOrder.replace('-', '') : `-${columnOrder}`\r\n    selfCm.queryRequests['ordering'] = evt.currentTarget.dataset.val;\r\n    selfCm._loadRequestsCm();\r\n    // dojo.query(\".tablinksCm.active\")[0].click();\r\n  },\r\n\r\n\r\n\r\n  onOpen() {\r\n    this._createToolbar();\r\n\r\n    dojo.query(\".backTrayClsCm\").on('click', this._openFormCase);\r\n    dojo.query(\".tablinksCm\").on('click', this._loadRequestTabActiveCm);\r\n    dojo.query(\"#btnObsCaseCm\").on('click', this._openFormObs);\r\n    dojo.query(\".backRequestsClsCm\").on('click', this._openFormObs);\r\n    // dojo.query(\"#goodRequestsCm\").on('click', this._openFormResult);\r\n    dojo.query(\"#showInfoDocCm\").on('click', this._openSupportingDocument)\r\n\r\n    // Reasignacion\r\n    dojo.query(\"#btnDrawMarkerCm\").on('click', this._activateTool);\r\n\r\n    dojo.query(\"#btnFsCm\").on('click', this._ApplyAcumulationLotsRefactor)\r\n    dojo.query(\"#btnDrawLinesDvCm\").on('click', this._activateToolLinesDivision)\r\n    dojo.query(\"#btnApplyDvCm\").on('click', this._ApplyDivideLotesRefactor)\r\n    dojo.query(\"#titleCaseCm\").on('click', this._zoomHomeRequests)\r\n    // dojo.query(\"#sendDataRsCm\").on('click', this._executeReasignacionGpService)\r\n    dojo.query('#sendDataFsCm').on('click', this._executeAcumulacionGpService)\r\n    dojo.query('#sendDataDvCm').on('click', this._executeSubdivisionGpService)\r\n    dojo.query('#sendDataDtCm').on('click', this._executeInactivarGpService)\r\n    dojo.query('#btnReportCm').on('click', this._exportTableToExcel)\r\n    dojo.query('#imgUploadCm').on('change', this._uploadImagenObs)\r\n    dojo.query('#sendDataObsGrCm').on('click', this._sendObservation)\r\n    dojo.query('#searchTbxCm').on(\"keyup\", this._searchRequestByCodPred)\r\n    dojo.query('.columnDateClsCm').on(\"click\", this._sortedByDate)\r\n    dojo.query('.selectLimitClsCm').on(\"change\", this._changeLimitPagination)\r\n    dojo.query('.buttonPaginationPrevClsCm').on(\"click\", this._prevPagePagination)\r\n    dojo.query('.buttonPaginationNextClsCm').on(\"click\", this._nextPagePagination)\r\n\r\n    // dojo.query('.columnCaseClsCm').on(\"click\", this._sortedByDate)\r\n    this._loadIniRequestsCm()\r\n\r\n    selfCm.map.addLayer(graphicLayerLabelLineaDivision)\r\n    // selfCm.map.addLayer(graphicLayerLandsByIndependence)\r\n    selfCm.editToolbar = new Edit(selfCm.map);\r\n    // selfCm.map.on(\"click\", selfCm._enableEditingLabelsLotesDivision);\r\n    selfCm.editToolbar.on(\"deactivate\", function (evt) {\r\n      if (evt.info.isModified) {\r\n        selfCm.map.setInfoWindowOnClick(true)\r\n        // firePerimeterFL.applyEdits(null, [evt.graphic], null);\r\n      }\r\n    });\r\n  },\r\n\r\n  // this.toolDraw.map = this.map;\r\n\r\n  // onClose(){\r\n  //   console.log('CartoMaintenanceWgt::onClose');\r\n  // },\r\n  // onMinimize(){\r\n  //   console.log('CartoMaintenanceWgt::onMinimize');\r\n  // },\r\n  // onMaximize(){\r\n  //   console.log('CartoMaintenanceWgt::onMaximize');\r\n  // },\r\n  // onSignIn(credential){\r\n  //   console.log('CartoMaintenanceWgt::onSignIn', credential);\r\n  // },\r\n  // onSignOut(){\r\n  //   console.log('CartoMaintenanceWgt::onSignOut');\r\n  // }\r\n  // onPositionChange(){\r\n  //   console.log('CartoMaintenanceWgt::onPositionChange');\r\n  // },\r\n  // resize(){\r\n  //   console.log('CartoMaintenanceWgt::resize');\r\n  // }\r\n});\r\n"]}