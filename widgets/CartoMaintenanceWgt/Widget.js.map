{"version":3,"sources":["../../../widgets/CartoMaintenanceWgt/Widget.js"],"names":["declare","BaseWidget","_WidgetsInTemplateMixin","Draw","Edit","Graphic","SimpleFillSymbol","SimpleMarkerSymbol","SimpleLineSymbol","Color","GraphicsLayer","Point","LayerInfos","lang","FeatureLayer","QueryTask","Query","WidgetManager","geometryEngine","Polyline","Polygon","webMercatorUtils","Geoprocessor","BusyIndicator","Message","turf","XLSX","Deferred","TextSymbol","Font","CaseInfo","StatisticDefinition","esriRequest","SubDivision","Acumulation","Independence","LandAssignment","LandProcess","LandMatrix","UtilityCase","requestToAttendState","requestsObservedState","requestsAttendState","idLyrCatastroFiscal","idLyrCfPredios","idLyrCfLotesPun","idLyrCfEje_vial","idLyrCfNumeracion","idLyrCfArancel","idLyrCfLotes","idLyrCfUnidadesurbanas","idLyrCfParques","idLyrCfManzana","idLyrCfManzanaUrb","idLyrCfSector","idLyrDistricts","iconByState","_UBIGEO_FIELD","_ID_LOTE_P_FIELD","_COD_MZN_FIELD","_F_MZN_FIELD","_COD_SECT_FIELD","_COD_PRE_FIELD","_COD_LOTE_FIELD","toolbarCm","params","URLSearchParams","window","location","search","paramsApp","keys","key","get","symbolPuntoLote","STYLE_SQUARE","STYLE_SOLID","symbolFusionLote","symbolEliminarLote","STYLE_DIAGONAL_CROSS","symbolLoteSelected","symbolDivisionLote","STYLE_DASH","symbolPredio","symbolPredioSelected","symbolPredioSelected2","symbolSnapPointCm","STYLE_CROSS","idGraphicPredioCm","idGraphicPredioByDivison","idGraphicPredioSelectedCm","idGraphicLoteCm","idGraphicLoteSelectedCm","idGraphicPuntoLote","idGraphicFrenteLote","idGraphicLineaDivision","idGraphicLoteDeleteCm","idGraphicLabelLineaDivision","idGraphicLabelCodLote","symbolByCase","graphicLayerLineaDivision","id","graphicLayerLabelLineaDivision","graphicLayerPredioByDivison","fontAwesome","document","createElement","src","head","appendChild","baseClass","codRequestsCm","currentTabActive","layersMap","queryUbigeo","case","caseDescription","lotesQuery","idlotes","arancel","codigosPredios","xy","idxLines","idPredioDivision","idPredioAcumulacion","editToolbar","idButtonDrawActive","queryRequests","ubigeo","limit","ordering","responseRequests","currentLotsRows","currentLandRows","currentPoinLotsRows","postCreate","inherited","arguments","console","log","_getAllLayers","selfCm","_filterByDistrictCm","_startExtentByDistrictCm","esri","bundle","toolbars","draw","addPoint","addShape","resume","start","getInstance","map","itemInfo","then","hitch","layerInfosObj","_showMessage","message","type","title","nls","_widgetLabel","titleLabel","_showMessagePromise","messagetext","deferred","buttons","label","onClick","resolve","hide","promise","_showMessageConfirm","mensaje","queryPredios","getLayerInfoById","getFilter","setFilter","query","where","qTask","getUrl","executeForExtent","results","setExtent","extent","homeWidget","getWidgetsByName","homeDijit","error","startup","busyIndicator","create","target","domNode","parentNode","backgroundOpacity","_callApiRestServices","baseUrl","url","URL","Object","forEach","searchParams","append","fetch","response","Error","status","json","catch","err","_getRequestsTrayDataCm","responseData","state","data","filter","i","_loadIniRequestsCm","dojo","click","_parseDateStringtoFormat","dateString","date","Date","day","getDate","month","getMonth","year","getFullYear","_loadDocSupportCm","urlStatusRequest","config","applicationListUrl","result","value","support","_loadRequestsCm","evt","show","estado","desc","dataHtml","lands","lnd","join","idType","icon","tbody","innerHTML","tb","getElementsByTagName","length","tableRequestApCm","removeChild","on","_openFormCase","_openFormResult","removeClass","classList","add","_zoomToPredSelectedEvt","cod_pred","currentTarget","dataset","codpre","_zoomToPredSelected","_removeLayerGraphic","prediosLayer","propertyLayer","mode","MODE_ONDEMAND","outFields","selectFeatures","SELECTION_NEW","featureSelected","addLayer","centerAt","geometry","interval","setInterval","graphics","symbol","setSymbol","setTimeout","clearInterval","_openSupportingDocument","open","focus","executeQueryTask","Promise","reject","execute","_getLandsOriginals","self","LandCls","Land","LotCls","Lot","queryLands","codPreOriginal","currentLandTabRows","cpm","ubigeoFieldName","codPre","returnGeometry","urlLands","features","errorGetLand","idLots","attributes","idLotP","_getLotsOriginals","queryLots","urlLots","codMznValues","codSectValues","_getPointLotsOriginals","queryPointLots","urlPointLots","_getLandsOriginalsTab","idSolicitud","urlOriginal","landsByApplicationUrl","_getOriginalData","_zoomExtentToLote","unionPredios","_unionFeatures","getExtent","expand","_zoomExtentToLoteRefactor","cod_pre","split","returnDistinctValues","urlPredios","idLote","idmanzana","idsector","queryLote","urlLotes","graphic","_zoomHomeRequests","_toggleBodyCaseInfo","closest","querySelector","toggle","_requestCaseInfo","urlResults","resultsByApplication","urlDocSupport","all","_","responseResults","responseDocSupport","rows","contentCard","rowsResults","reasignarApCm","fusionApCm","divisionApCm","eliminacionApCm","independenceApCm","pointLots","landsSymbol","landsSymbolSelected","removeAllGraphics","renderTableLandAssignment","renderButtonProcess","_executeIndependenceLands","selectedPointLots","bind","highlightLand","reestartSymbolLand","resultCtnApCm","remove","obsCtnApCm","requestTrayApCm","casesCtnApCm","row","rowList","td","deactivate","disableSnapping","bodyTbLinesDvApCm","bodyTbPrediosDvApCm","bodyTbDatosLoteDvApCm","clear","_removeClassActiveButton","_openFormObs","textAreaObsApCm","imageDiv","imgUploadApCm","style","backgroundImage","_FormResult","id_solicitud","caseCm","urlPredioResults","bodyTbResultsApCm","predio","index","_centerAtPredioResult","replace","_createToolbar","_addToMap","screenPoint","toScreen","snappingManager","getSnappingPoint","undefined","point_g","webMercatorToGeographic","graphicLayer","x","y","setInfoWindowOnClick","alert","errorSnapingLocate","nameIdLine","_populateTableDrawLine","_addNameToLine","layerId","graphicsLayerIds","includes","removeLayer","getLayer","_activateTool","_activateSnappingByReasignar","activate","_activateToolAcumulacion","_activateSnappingByAcumulacion","_activateToolLinesDivision","_activateSnappingByDivision","cflayer","snapManager","enableSnapping","snapPointSymbol","tolerance","layerInfos","layer","setLayerInfos","graphicLayerPuntoLote","graphicsLayerInfo","layers","LayerInfo","name","arr","union","_unionFeaturesAcumulation","graphicLayerLoteFusion","_extent","_ApplyAcumulationLotsRefactor","_getOriginalLots","geomLoteAcumulation","_getMaxCodLot","_ordenarPoligonosNorteSur","proprsLot","polygons","parseInt","maxCodLote","bodyTbDatosLoteFsApCm","_addGraphicsPointLotsAndArancel","_populateTablePredio","bodyTbPrediosFsApCm","_getMidpoint","polyline","geodesicLength","midpoint","geodesicDensify","getPoint","_findMidpoint","lengthPolylineChunk","line","lineString","paths","options","units","along","_getLongestPolyline","longestPath","path","polylineChunk","spatialReference","wkid","_dividePolygon","poly","lines","divide","cut","idLine","tr","cursor","_deleteRowLine","_zoonToLineDivision","_editaNameLineDivision","elem","item","graphicLabel","polylineGeom","polylineGeomUtm","midPoint","pointLabel","coordinates","font","STYLE_NORMAL","VARIANT_NORMAL","WEIGHT_BOLD","txtSym","setOffset","setAlign","ALIGN_END","setHaloColor","setHaloSize","text","innerText","refresh","bodyTable","drawFunction","idx","_activateSnappingPrediosByDivision","graphiclayer","_activateToolPrediosByDivision","_changeValueCodLote","selectedIndex","cod_lote","lyr","graphicSelected","_centerAtLabelCodLoteDivision","_editLoteUrbanoDivision","lot_urb","selectedOptions","_buildDataLoteTable","tableBody","predios","indexCell","className","textContent","num","codigoCell","select","option","p","selected","loteUrbCell","loteUrbSelect","request","urbanLotNumber","locationMarker","poligonos","coordenadasNorte","poligono","ymax","poligonosOrdenados","slice","sort","a","b","coordenadaNorteA","indexOf","coordenadaNorteB","graphicLayerLabelCodLoteDivision","dataLoteTable","polygon","rings","center","pointOnFeature","_zfill","setColor","setSize","idGraphic","clase","push","_enableEditingLabelsLotesDivision","MOVE","len","Array","fill","polygonos","estadisticaDef","statisticType","onStatisticField","outStatisticFieldName","outStatistics","queryTask","resultado","outSR","f","requestOptions","content","handleAs","callbackParamName","usePost","_getPolylinesDrawn","unionGraphicLayerLineaDivision","lineGeometry","_divideLotsByLines","errorLotQuery","polygonGeometry","geomLoteDivided","errorDivideLot","graphicLayerLoteDivision","lote","orderByFields","graphicLayerFrenteLote","graphicLoteDivision","frentes","isItc","intersects","hasOwnProperty","unionFrentes","idItcFrentesByLotes","itcFrentesByLotes","intersect","symbolFrenteLote","Math","floor","random","frente","puntoLoteTurf","puntoLote","puntoLoteGraphic","_ApplyDivideLotesRefactor","reorderLayer","_executeReasignacionGpService","_executeGPService","reasignacionUrl","_executeAcumulacionGpService","labelCodLotesLayer","_addWarningMessageExecute","labelCodLotesLayerGraphic","codRequests","codLot","lotUrb","coords","newPointLotsGraphics","newLandsGraphics","landUrl","pointLotUrl","lotUrl","arancelUrl","blockUrl","cadastralBlockUrl","lotGraphic","user","caseRequest","executeAcumulation","setVisibility","_removeWarningMessageExecute","_executeSubdivisionGpService","layerLote","pred","checkLotsWithinLands","executeSubdivision","_executeInactivarGpService","inactivacionUrl","buzyElm","imgElm","loadingText","position","topMessage","parseFloat","top","leftImg","left","width","transform","background","zIndex","warningExecute","checkPointLotsSelected","codRequest","newLands","matrixLand","executeIndependence","idStatus","gp","submitJob","_completeCallback","_statusCallback","JobInfo","jobId","textMessage","messages","description","jobStatus","getResultData","_sendDataToPlatform","_cancelProcess","cancelJob","info","updateStatusApplication","method","body","JSON","stringify","headers","res","_exportTableToExcel","table","headerRow","querySelectorAll","headerCols","h","cols","j","wb","utils","book_new","ws","json_to_sheet","sheetName","book_append_sheet","writeFile","_dataURItoBlob","dataURI","byteString","atob","mimeString","buffer","ArrayBuffer","dataView","Uint8Array","charCodeAt","Blob","_sendObservation","file","files","reader","FileReader","FormData","onloadend","observationUrl","ok","readAsDataURL","_uploadImagenObs","backgroundSize","backgroundRepeat","backgroundPosition","_searchRequestByCodPred","keyCode","_sortedByDate","columnOrder","val","onOpen","isModified"],"mappings":"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","file":"Widget.js","sourcesContent":["import declare from 'dojo/_base/declare';\r\nimport BaseWidget from 'jimu/BaseWidget';\r\nimport _WidgetsInTemplateMixin from 'dijit/_WidgetsInTemplateMixin';\r\nimport Draw from \"esri/toolbars/draw\";\r\nimport Edit from \"esri/toolbars/edit\";\r\nimport Graphic from \"esri/graphic\";\r\nimport SimpleFillSymbol from \"esri/symbols/SimpleFillSymbol\";\r\nimport SimpleMarkerSymbol from \"esri/symbols/SimpleMarkerSymbol\";\r\nimport SimpleLineSymbol from \"esri/symbols/SimpleLineSymbol\";\r\nimport Color from 'dojo/_base/Color';\r\nimport GraphicsLayer from \"esri/layers/GraphicsLayer\"\r\nimport Point from \"esri/geometry/Point\"\r\nimport LayerInfos from \"jimu/LayerInfos/LayerInfos\";\r\nimport lang from \"dojo/_base/lang\";\r\nimport FeatureLayer from \"esri/layers/FeatureLayer\";\r\nimport QueryTask from \"esri/tasks/QueryTask\";\r\nimport Query from \"esri/tasks/query\";\r\nimport WidgetManager from \"jimu/WidgetManager\"\r\nimport geometryEngine from \"esri/geometry/geometryEngine\";\r\nimport Polyline from \"esri/geometry/Polyline\";\r\nimport Polygon from \"esri/geometry/Polygon\";\r\nimport webMercatorUtils from \"esri/geometry/webMercatorUtils\";\r\nimport Geoprocessor from \"esri/tasks/Geoprocessor\";\r\nimport BusyIndicator from 'esri/dijit/util/busyIndicator';\r\nimport Message from \"jimu/dijit/Message\";\r\nimport turf from \"https://unpkg.com/@turf/turf@6/turf.min.js\"\r\nimport XLSX from \"https://unpkg.com/xlsx@0.17.2/dist/xlsx.full.min.js\"\r\nimport Deferred from \"dojo/Deferred\";\r\nimport TextSymbol from \"esri/symbols/TextSymbol\";\r\nimport Font from \"esri/symbols/Font\";\r\nimport CaseInfo from './CaseInfo';\r\nimport StatisticDefinition from \"esri/tasks/StatisticDefinition\"\r\nimport esriRequest from \"esri/request\"\r\nimport SubDivision from './case/Subdivision';\r\nimport Acumulation from './case/Acumulation';\r\nimport Independence from './case/Independence';\r\nimport LandAssignment from './components/LandAssignment';\r\nimport LandProcess from './components/LandProcess';\r\nimport LandMatrix from './components/LandMatrix';\r\nimport UtilityCase from './case/UtilityCase';\r\n\r\n\r\n\r\nconst requestToAttendState = \"por_atender\"\r\nconst requestsObservedState = \"observado\"\r\nconst requestsAttendState = \"atendido\"\r\n\r\n\r\n// Layers ids\r\nconst idLyrCatastroFiscal = \"CARTO_FISCAL_6806\"\r\nconst idLyrCfPredios = \"CARTO_FISCAL_6806_0\"\r\nconst idLyrCfLotesPun = \"CARTO_FISCAL_6806_1\"\r\nconst idLyrCfEje_vial = \"CARTO_FISCAL_6806_2\"\r\nconst idLyrCfNumeracion = \"CARTO_FISCAL_6806_3\"\r\nconst idLyrCfArancel = \"CARTO_FISCAL_6806_4\"\r\nconst idLyrCfLotes = \"CARTO_FISCAL_6806_5\"\r\nconst idLyrCfUnidadesurbanas = \"CARTO_FISCAL_6806_6\"\r\nconst idLyrCfParques = \"CARTO_FISCAL_6806_7\"\r\nconst idLyrCfManzana = \"CARTO_FISCAL_6806_8\"\r\nconst idLyrCfManzanaUrb = \"CARTO_FISCAL_6806_9\"\r\nconst idLyrCfSector = \"CARTO_FISCAL_6806_9\"\r\n// const idLyrActpuntoimg = \"ACTUALIZACION_DE_PUNTO_IMG_1890\"\r\nconst idLyrDistricts = \"limites_nacional_1821_2\"\r\n\r\nconst iconByState = {\r\n  \"por_atender\": { 'icon': 'fas fa-pencil-alt', 'id': 'editRequestsCm', 'desc': \"Por atender\" },\r\n  \"observado\": { 'icon': 'fas fa-pause', 'id': 'obsRequestsCm', 'desc': \"Observado\" },\r\n  \"atendido\": { 'icon': 'fas fa-check', 'id': 'goodRequestsCm', 'desc': \"Atendido\" },\r\n}\r\n\r\n// Fields \r\nconst _UBIGEO_FIELD = \"UBIGEO\"\r\nconst _ID_LOTE_P_FIELD = \"ID_LOTE_P\"\r\nconst _COD_MZN_FIELD = \"COD_MZN\"\r\nconst _F_MZN_FIELD = \"F_MZN\"\r\nconst _COD_SECT_FIELD = \"COD_SECT\"\r\nconst _COD_PRE_FIELD = \"COD_PRE\"\r\nconst _COD_LOTE_FIELD = \"COD_LOTE\"\r\n\r\n\r\nlet toolbarCm\r\n\r\nconst params = new URLSearchParams(window.location.search)\r\nconst paramsApp = {}\r\n\r\nfor (let key of params.keys()) {\r\n  paramsApp[key] = params.get(key)\r\n}\r\n\r\n// Styles\r\nconst symbolPuntoLote = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_SQUARE,\r\n  20,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0]), 2),\r\n  new Color([0, 92, 230, 1]\r\n  )\r\n)\r\n\r\nconst symbolFusionLote = new SimpleFillSymbol(\r\n  SimpleFillSymbol.STYLE_SOLID,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0]),\r\n    2\r\n  ),\r\n  new Color([255, 255, 0, 0.25])\r\n)\r\n\r\nconst symbolEliminarLote = new SimpleFillSymbol(\r\n  SimpleFillSymbol.STYLE_DIAGONAL_CROSS,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([100, 100, 100]),\r\n    2\r\n  ),\r\n  new Color([229, 229, 229, 0.9])\r\n)\r\n\r\nconst symbolLoteSelected = new SimpleFillSymbol(\r\n  SimpleFillSymbol.STYLE_SOLID,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0, 0.75]),\r\n    4\r\n  ),\r\n  new Color([0, 255, 0, 0])\r\n)\r\n\r\nconst symbolDivisionLote = new SimpleLineSymbol(\r\n  SimpleLineSymbol.STYLE_DASH,\r\n  new Color([255, 0, 0]),\r\n  2\r\n)\r\n\r\nconst symbolPredio = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_SQUARE,\r\n  20,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0]), 2),\r\n  new Color([235, 69, 95, 1]\r\n  )\r\n)\r\n\r\nconst symbolPredioSelected = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_SQUARE, 20,\r\n  new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0]), 4),\r\n  new Color([0, 255, 0, 0])\r\n);\r\n\r\nconst symbolPredioSelected2 = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_SQUARE,\r\n  30,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([0, 183, 205]), 2),\r\n  new Color([0, 255, 255]\r\n  )\r\n);\r\n\r\nconst symbolSnapPointCm = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_CROSS,\r\n  20,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0]),\r\n    2\r\n  ),\r\n  new Color([0, 255, 0, 0.25])\r\n)\r\n\r\n\r\n// Identificadores de graficos\r\nconst idGraphicPredioCm = \"graphicPredioCm2\"\r\nconst idGraphicPredioByDivison = \"graphicPredioByDivison\"\r\n// const idGraphicLandsByIndependence = \"graphicLandsByIndependence\"\r\nconst idGraphicPredioSelectedCm = \"graphicPredioSelected\"\r\nconst idGraphicLoteCm = \"graphicLoteCm\"\r\nconst idGraphicLoteSelectedCm = \"graphicLoteSelectedCm\"\r\nconst idGraphicPuntoLote = \"graphicPuntoLote\"\r\nconst idGraphicFrenteLote = \"graphicFrenteLote\"\r\nconst idGraphicLineaDivision = \"graphicLineaDivision\"\r\nconst idGraphicLoteDeleteCm = \"graphicLoteDeleteCm\"\r\nconst idGraphicLabelLineaDivision = \"graphicLabelLineaDivision\"\r\nconst idGraphicLabelCodLote = \"graphicLabelCodLoteDivision\"\r\n\r\n// symbol by case\r\nconst symbolByCase = {\r\n  \"1\": { \"symbol\": symbolPredio },\r\n  \"2\": { \"symbol\": symbolPredio },\r\n  \"3\": { \"symbol\": symbolPredio },\r\n}\r\n\r\n// graphicsLayer main\r\nlet graphicLayerLineaDivision = new GraphicsLayer({\r\n  id: idGraphicLineaDivision,\r\n});\r\n\r\nlet graphicLayerLabelLineaDivision = new GraphicsLayer({\r\n  id: idGraphicLabelLineaDivision,\r\n});\r\n\r\n// let graphicLayerLabelCodLoteDivision = new GraphicsLayer({\r\n//   id: idGraphicLabelCodLote,\r\n// });\r\n\r\nlet graphicLayerPredioByDivison = new GraphicsLayer({\r\n  id: idGraphicPredioByDivison,\r\n});\r\n\r\n// const graphicLayerLandsByIndependence = new GraphicsLayer({\r\n//   id: idGraphicLandsByIndependence,\r\n// });\r\n\r\nlet fontAwesome = document.createElement('script');\r\nfontAwesome.src = 'https://use.fontawesome.com/releases/v5.3.1/js/all.js';\r\ndocument.head.appendChild(fontAwesome);\r\n\r\n// To create a widget, you need to derive from BaseWidget.\r\nexport default declare([BaseWidget], {\r\n\r\n  // Custom widget code goes here\r\n\r\n  baseClass: 'carto-maintenance-wgt',\r\n  codRequestsCm: null,\r\n  currentTabActive: null,\r\n  layersMap: [],\r\n  queryUbigeo: paramsApp['ubigeo'] ? `${_UBIGEO_FIELD} = '${paramsApp['ubigeo']}'` : \"1=1\",\r\n  case: 0,\r\n  caseDescription: '',\r\n  lotesQuery: null,\r\n  idlotes: null,\r\n  arancel: null,\r\n  codigosPredios: null,\r\n  xy: [],\r\n  idxLines: 0,\r\n  idPredioDivision: '',\r\n  idPredioAcumulacion: '',\r\n  editToolbar: null,\r\n  idButtonDrawActive: '',\r\n  queryRequests: {\r\n    ubigeo: paramsApp['ubigeo'],\r\n    limit: 1000000,\r\n    ordering: \"-date\"\r\n  },\r\n\r\n  responseRequests: null,\r\n  currentLotsRows: null,\r\n  currentLandRows: null,\r\n  currentPoinLotsRows: null,\r\n  // currentLotsRowsAsPolygons: null,\r\n\r\n  // add additional properties here\r\n\r\n  // methods to communication with app container:\r\n  postCreate() {\r\n    this.inherited(arguments);\r\n    console.log('CartoMaintenanceWgt::postCreate');\r\n    this._getAllLayers();\r\n    selfCm = this;\r\n    this._filterByDistrictCm();\r\n    this._startExtentByDistrictCm();\r\n    esri.bundle.toolbars.draw.addPoint = esri.bundle.toolbars.draw.addPoint + \"<br/>Pulsar <strong>CTRL</strong> para activar la alineación\";\r\n    esri.bundle.toolbars.draw.addShape = esri.bundle.toolbars.draw.addShape + \"<br/>Pulsar <strong>CTRL</strong> para activar la alineación\";\r\n    esri.bundle.toolbars.draw.resume = esri.bundle.toolbars.draw.resume + \"<br/>Pulsar <strong>CTRL</strong> para activar la alineación\";\r\n    esri.bundle.toolbars.draw.start = esri.bundle.toolbars.draw.start + \"<br/>Pulsar <strong>CTRL</strong> para activar la alineación\";\r\n  },\r\n  _getAllLayers() {\r\n    LayerInfos.getInstance(this.map, this.map.itemInfo).then(lang.hitch(this, function (layerInfosObj) {\r\n      this.layersMap = layerInfosObj;\r\n    }));\r\n  },\r\n\r\n  _showMessage(message, type = 'message') {\r\n    let title = `${this.nls._widgetLabel}: ${type}`\r\n    switch (type) {\r\n      case 'error':\r\n        new Message({\r\n          type: type,\r\n          titleLabel: title,\r\n          message: message,\r\n        });\r\n        break;\r\n      default:\r\n        new Message({\r\n          type: type,\r\n          titleLabel: title,\r\n          message: message,\r\n        });\r\n        break;\r\n    }\r\n\r\n  },\r\n\r\n  _showMessagePromise(messagetext) {\r\n    let deferred = new Deferred();\r\n    let message = new Message({\r\n      message: messagetext,\r\n      buttons: [{\r\n        label: \"Ok\",\r\n        onClick: function () {\r\n          deferred.resolve(true);\r\n          message.hide();\r\n        }\r\n      }]\r\n    });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _showMessageConfirm() {\r\n    let deferred = new Deferred();\r\n    let mensaje = new Message({\r\n      message: \"¿Estás seguro de que deseas continuar?\",\r\n      type: \"question\",\r\n      buttons: [{\r\n        label: \"Sí\",\r\n        onClick: function () {\r\n          deferred.resolve(true);\r\n          mensaje.hide();\r\n        }\r\n      }, {\r\n        label: \"No\",\r\n        onClick: function () {\r\n          deferred.resolve(false);\r\n          mensaje.hide();\r\n        }\r\n      }]\r\n    });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _filterByDistrictCm() {\r\n    let queryPredios = selfCm.layersMap.getLayerInfoById(idLyrCfPredios).getFilter()\r\n    queryPredios = queryPredios ? queryPredios + \" AND \" + selfCm.queryUbigeo : selfCm.queryUbigeo\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfPredios).setFilter(queryPredios)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfLotesPun).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfEje_vial).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfNumeracion).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfArancel).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfLotes).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfUnidadesurbanas).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfParques).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfManzana).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfSector).setFilter(selfCm.queryUbigeo)\r\n    // selfCm.layersMap.getLayerInfoById(idLyrActpuntoimg).setFilter(selfCm.queryUbigeo)\r\n  },\r\n\r\n  _startExtentByDistrictCm() {\r\n    let query = new Query()\r\n    query.where = selfCm.queryUbigeo\r\n\r\n    let qTask = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrDistricts).getUrl())\r\n\r\n    qTask.executeForExtent(query, function (results) {\r\n      selfCm.map.setExtent(results.extent).then(function () {\r\n        // get the next scale value from the current scale\r\n        let homeWidget = WidgetManager.getInstance().getWidgetsByName(\"HomeButton\");\r\n        homeWidget[0].homeDijit.extent = selfCm.map.extent;\r\n      })\r\n    }, function (error) {\r\n      console.log(error)\r\n    })\r\n  },\r\n\r\n  startup() {\r\n    this.inherited(arguments);\r\n    console.log('CartoMaintenanceWgt::startup');\r\n\r\n    this.busyIndicator = BusyIndicator.create({\r\n      target: this.domNode.parentNode.parentNode,\r\n      backgroundOpacity: 0\r\n    });\r\n  },\r\n\r\n  _callApiRestServices(baseUrl, params) {\r\n    let url = new URL(baseUrl);\r\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\r\n\r\n    return fetch(url)\r\n      .then(response => {\r\n        if (!response) {\r\n          selfCm.busyIndicator.hide();\r\n          throw new Error(\"HTTP error \" + response.status);\r\n        }\r\n        return response.json();\r\n      })\r\n      .catch(function (err) {\r\n        selfCm.busyIndicator.hide();\r\n        console.log(\"An error occurred while fetching the data.\");\r\n      });\r\n  },\r\n\r\n  _getRequestsTrayDataCm(responseData, state) {\r\n    // Reemplazar todo el metodo para capturar datos de servicio\r\n    let data = responseData.filter((i) => i.status == state);\r\n    return data\r\n  },\r\n\r\n  _loadIniRequestsCm() {\r\n    dojo.query(`#${requestToAttendState}`)[0].click()\r\n  },\r\n\r\n  _parseDateStringtoFormat(dateString) {\r\n    let date = new Date(dateString)\r\n    let day = date.getDate()\r\n    let month = date.getMonth() + 1\r\n    let year = date.getFullYear()\r\n    return `${day}/${month}/${year}`\r\n  },\r\n\r\n  // _loadRequestsByEventCm(evt) {\r\n  //   let params = {\r\n  //     ubigeo: paramsApp['ubigeo'],\r\n  //   }\r\n  //   let target = evt.target\r\n  //   selfCm._loadRequestsCm(params, target)\r\n  // },\r\n\r\n  _loadDocSupportCm() {\r\n    let urlStatusRequest = `${selfCm.config.applicationListUrl}/${selfCm.codRequestsCm}`\r\n    selfCm._callApiRestServices(urlStatusRequest, {}).then(function (result) {\r\n      try {\r\n        dojo.query(\"#showInfoDocCm\")[0].value = result.support\r\n      } catch (error) {\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(error.message, type = \"error\")\r\n      }\r\n\r\n    })\r\n  },\r\n\r\n  _loadRequestsCm(evt) {\r\n    selfCm.busyIndicator.show();\r\n    selfCm._callApiRestServices(selfCm.config.applicationListUrl, selfCm.queryRequests).then(response => {\r\n      // // ----------------------------------------------\r\n      // // @danielgis\r\n      // // comentar esta linea cuando se pase a produccion\r\n      // // ----------------------------------------------\r\n      // response = {\r\n      //   \"count\": 8,\r\n      //   \"next\": null,\r\n      //   \"previous\": null,\r\n      //   \"results\": [\r\n      //     {\r\n      //       \"id\": 92,\r\n      //       \"lands\": [\r\n      //         {\r\n      //           \"cpm\": \"1758\",\r\n      //         }\r\n      //       ],\r\n      //       \"status\": \"Por atender\",\r\n      //       \"type\": \"Independización\",\r\n\r\n      //       \"idType\": 5,\r\n      //       \"date\": \"2023-12-27T11:04:20.817416\",\r\n      //       \"idStatus\": 1,\r\n      //       \"support\": \"http://appstest.mineco.gob.pe/plataformaCF/catastroback/media/sustento/Captura_de_pantalla_2023-12-19_103952.png\",\r\n      //       \"usermane\": null,\r\n      //       \"ubigeo\": \"240104\"\r\n      //     },\r\n      //     {\r\n      //       \"id\": 9,\r\n      //       \"lands\": [\r\n      //         {\r\n      //           \"cpm\": \"380\",\r\n      //         }\r\n      //       ],\r\n      //       \"status\": \"Por atender\",\r\n      //       \"type\": \"División\",\r\n      //       \"idType\": 3,\r\n      //       \"date\": \"2023-12-19T10:16:31.828636\",\r\n      //       \"idStatus\": 1,\r\n      //       \"support\": \"http://appstest.mineco.gob.pe/plataformaCF/catastroback/media/sustento/Captura_de_pantalla_2023-07-10_155226_5mUbV5D.png\",\r\n      //       \"usermane\": null,\r\n      //       \"ubigeo\": \"240104\"\r\n      //     },\r\n      //   ]\r\n      // }\r\n      // // ----------------------------------------------\r\n\r\n      response = response['results']\r\n      selfCm.currentTabActive = evt.target.id;\r\n      let estado = iconByState[evt.target.id].desc;\r\n      let data = selfCm._getRequestsTrayDataCm(response, estado);\r\n      let dataHtml = data.map((i) => `<tr>\r\n                                        <td>${i.id}</td>\r\n                                        <td>${i.type}</td>\r\n                                        <td>${i.lands.map(lnd => lnd['cpm']).join(',')}</td>\r\n                                        <td>${selfCm._parseDateStringtoFormat(i.date)}</td>\r\n                                        <td>\r\n                                          <button id=\"${iconByState[evt.target.id].id}\" value=\"${i.idType}\" class=\"stateRequestClsCm\">\r\n                                            <i class=\"${iconByState[evt.target.id].icon}\"></i>\r\n                                          </button>\r\n                                        </td>\r\n                                      </tr>`\r\n      )\r\n      let tbody = dojo.create('tbody', { innerHTML: dataHtml.join('') });\r\n      let tb = dojo.query(\".tableRequestClsCm\")[0]\r\n      if (tb.getElementsByTagName(\"tbody\").length > 0) {\r\n        selfCm.tableRequestApCm.removeChild(tb.getElementsByTagName(\"tbody\")[0])\r\n      }\r\n      selfCm.tableRequestApCm.appendChild(tbody);\r\n      if (evt.target.id == requestToAttendState) {\r\n        dojo.query(\".stateRequestClsCm\").on('click', selfCm._openFormCase);\r\n      }\r\n      if (evt.target.id == requestsAttendState) {\r\n        dojo.query(\".stateRequestClsCm\").on('click', selfCm._openFormResult);\r\n      }\r\n\r\n      dojo.query(\".tablinksCm\").removeClass(\"active\");\r\n      evt.target.classList.add(\"active\");\r\n      selfCm.busyIndicator.hide();\r\n    })\r\n  },\r\n\r\n  _zoomToPredSelectedEvt(evt) {\r\n    const cod_pred = evt.currentTarget.dataset.codpre\r\n    selfCm._zoomToPredSelected(cod_pred)\r\n  },\r\n\r\n  _zoomToPredSelected(cod_pred) {\r\n    selfCm._removeLayerGraphic(idGraphicPredioSelectedCm);\r\n    let prediosLayer = selfCm.layersMap.getLayerInfoById(idLyrCfPredios);\r\n    let propertyLayer = new FeatureLayer(prediosLayer.getUrl(), {\r\n      mode: FeatureLayer.MODE_ONDEMAND,\r\n      outFields: [\"*\"]\r\n    });\r\n    // crear una consulta para seleccionar la fila deseada\r\n    let query = new Query();\r\n    query.where = `${_UBIGEO_FIELD} = '${paramsApp['ubigeo']}' and ${_COD_PRE_FIELD} = '${cod_pred}'`\r\n\r\n    // seleccionar la fila\r\n    propertyLayer.selectFeatures(query, FeatureLayer.SELECTION_NEW, function (results) {\r\n      if (results.length == 0) {\r\n        selfCm._showMessage(\"No se encontró el predio seleccionado\", type = \"error\")\r\n        return\r\n      }\r\n      let featureSelected = new GraphicsLayer({\r\n        id: idGraphicPredioSelectedCm\r\n      });\r\n      featureSelected.add(results[0]);\r\n      selfCm.map.addLayer(featureSelected);\r\n      selfCm.map.centerAt(results[0].geometry);\r\n\r\n      // Parpadeo de seleccion\r\n      let interval = setInterval(function () {\r\n        if (featureSelected.graphics[0].symbol === symbolPredioSelected) {\r\n          featureSelected.graphics[0].setSymbol(null);\r\n        } else {\r\n          featureSelected.graphics[0].setSymbol(symbolPredioSelected);\r\n        }\r\n      }, 200);\r\n      setTimeout(function () {\r\n        clearInterval(interval);\r\n        selfCm._removeLayerGraphic(idGraphicPredioSelectedCm);\r\n      }, 2000);\r\n\r\n    });\r\n  },\r\n\r\n  _openSupportingDocument(evt) {\r\n    // check if value is empty\r\n    if (!evt.currentTarget.value) {\r\n      selfCm._showMessage(\"No se adjuntó documento de soporte\", type = \"error\")\r\n      return\r\n    }\r\n    window.open(evt.currentTarget.value, '_blank').focus();\r\n  },\r\n\r\n  executeQueryTask(url, query, type = 'query') {\r\n    return new Promise((resolve, reject) => {\r\n      let qTask = new QueryTask(url);\r\n      switch (type) {\r\n        case 'query':\r\n          qTask.execute(query, resolve, reject);\r\n          break;\r\n        case 'queryForExtent':\r\n          qTask.executeForExtent(query, resolve, reject);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  },\r\n\r\n  // executeQueryTaskForExtent(url, queryLote) {\r\n  //   return new Promise((resolve, reject) => {\r\n  //     let qTaskLote = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl());\r\n  //     qTaskLote.executeForExtent(queryLote, resolve, reject);\r\n  //   });\r\n  // },\r\n\r\n  _getLandsOriginals() {\r\n    const self = this;\r\n    const deferred = new Deferred();\r\n    const LandCls = new UtilityCase.Land();\r\n    const LotCls = new UtilityCase.Lot();\r\n    const queryLands = new Query();\r\n    const codPreOriginal = self.currentLandTabRows.map((i) => i.cpm);\r\n    queryLands.where = `${UtilityCase.ubigeoFieldName} = '${paramsApp['ubigeo']}' and ${LandCls.codPre} in ('${codPreOriginal.join(\"', '\")}')`;\r\n    queryLands.returnGeometry = true;\r\n    queryLands.outFields = [\"*\"];\r\n    const urlLands = self.layersMap.getLayerInfoById(idLyrCfPredios).getUrl();\r\n    self.executeQueryTask(urlLands, queryLands)\r\n      .then(results => {\r\n        if (results.features.length == 0) {\r\n          throw new Error(self.nls.errorGetLand);\r\n        }\r\n        self.currentLandRows = results.features;\r\n        const idLots = self.currentLandRows.map((i) => i.attributes[LotCls.idLotP]);\r\n        deferred.resolve(idLots);\r\n      })\r\n      .catch(error => {\r\n        deferred.reject(error);\r\n      });\r\n    return deferred.promise;\r\n  },\r\n  _getLotsOriginals(idLots) {\r\n    const self = this;\r\n    const LotCls = new UtilityCase.Lot()\r\n    const deferred = new Deferred();\r\n    const queryLots = new Query();\r\n    queryLots.where = `${LotCls.idLotP} in (${idLots.join(\",\")}) and (${UtilityCase.ubigeoFieldName} = ${paramsApp['ubigeo']})`;\r\n    self.lotesQuery = queryLots.where;\r\n    queryLots.returnGeometry = true;\r\n    queryLots.outFields = [\"*\"];\r\n    const urlLots = self.layersMap.getLayerInfoById(idLyrCfLotes).getUrl();\r\n    self.executeQueryTask(urlLots, queryLots)\r\n      .then(results => {\r\n        if (results.features.length == 0) {\r\n          throw new Error(\"No se encontró ningún lote asociado a esta solicitud\");\r\n        }\r\n        self.currentLotsRows = results.features;\r\n        const codMznValues = self.currentLotsRows.map((i) => i.attributes[_COD_MZN_FIELD]).join(\",\")\r\n        const codSectValues = self.currentLotsRows.map((i) => i.attributes[_COD_SECT_FIELD]).join(\",\")\r\n        self.arancel = `(${UtilityCase.ubigeoFieldName} = ${paramsApp['ubigeo']}) and ${_COD_MZN_FIELD} in (${codMznValues}) and ${_COD_SECT_FIELD} in (${codSectValues})`;\r\n        deferred.resolve(idLots);\r\n      })\r\n      .catch(error => {\r\n        deferred.reject(error);\r\n      });\r\n    return deferred.promise;\r\n  },\r\n  _getPointLotsOriginals(idLots) {\r\n    const self = this;\r\n    const LotCls = new UtilityCase.Lot()\r\n    const deferred = new Deferred();\r\n    const queryPointLots = new Query();\r\n    queryPointLots.where = `${LotCls.idLotP} in (${idLots.join(\",\")}) and (${UtilityCase.ubigeoFieldName} = ${paramsApp['ubigeo']})`;\r\n    queryPointLots.returnGeometry = true;\r\n    queryPointLots.outFields = [\"*\"];\r\n    const urlPointLots = self.layersMap.getLayerInfoById(idLyrCfLotesPun).getUrl();\r\n    self.executeQueryTask(urlPointLots, queryPointLots)\r\n      .then(results => {\r\n        if (results.features.length == 0) {\r\n          throw new Error(\"No se encontró ningún punto lote asociado a esta solicitud\");\r\n        }\r\n        self.currentPoinLotsRows = results.features;\r\n        deferred.resolve(idLots);\r\n      })\r\n      .catch(error => {\r\n        deferred.reject(error);\r\n      });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _getLandsOriginalsTab(idSolicitud) {\r\n    const self = this;\r\n    const deferred = new Deferred();\r\n    const urlOriginal = `${self.config.landsByApplicationUrl}/${idSolicitud}`;\r\n    fetch(urlOriginal)\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        if (response.length == 0) {\r\n          throw new Error(self.nls.errorGetLand);\r\n        }\r\n        self.currentLandTabRows = response.results;\r\n        deferred.resolve(self.currentLandTabRows);\r\n      })\r\n      .catch(error => {\r\n        deferred.reject(error);\r\n      });\r\n    return deferred.promise;\r\n  },\r\n\r\n  // _getArancelOriginals(){\r\n  // selfCm.arancel = `${_UBIGEO_FIELD} = '${paramsApp.ubigeo}' and (${_COD_MZN_FIELD} in (${idmanzana.join(\",\")})) and (${_COD_SECT_FIELD} IN (${idsector.join(\",\")}))`;\r\n  // },\r\n\r\n  _getOriginalData(idSolicitud) {\r\n    return this._getLandsOriginalsTab(idSolicitud)\r\n      .then(landsTab => this._getLandsOriginals())\r\n      .then(idLots => this._getPointLotsOriginals(idLots))\r\n      .then(idLots => this._getLotsOriginals(idLots))\r\n      .then((idLots) => {\r\n        return idLots;\r\n      })\r\n      .catch(error => {\r\n        selfCm._showMessage(error.message, type = \"error\");\r\n        // throw error;\r\n      });\r\n  },\r\n\r\n  _zoomExtentToLote() {\r\n    const unionPredios = this._unionFeatures(this.currentLotsRows.map((i) => i.geometry))\r\n    this.map.setExtent(unionPredios.getExtent().expand(2))\r\n\r\n    // let graphic = new Graphic(unionPredios, symbolLoteSelected);\r\n    // let featureSelected = new GraphicsLayer({\r\n    //   id: idGraphicLoteSelectedCm\r\n    // });\r\n    // featureSelected.add(graphic);\r\n    // selfCm.map.addLayer(featureSelected);\r\n\r\n    // // Parpadeo de seleccion\r\n    // let interval = setInterval(function () {\r\n    //   let graphic = featureSelected.graphics[0];\r\n    //   graphic.setSymbol(graphic.symbol === symbolLoteSelected ? null : symbolLoteSelected);\r\n    // }, 200);\r\n\r\n    // setTimeout(function () {\r\n    //   clearInterval(interval);\r\n    //   selfCm._removeLayerGraphic(idGraphicLoteSelectedCm);\r\n    // }, 2000);\r\n    // selfCm.busyIndicator.hide();\r\n    // return selfCm.map.setExtent(unionPredios.getExtent().expand(2))    \r\n  },\r\n\r\n  _zoomExtentToLoteRefactor(cod_pre) {\r\n    const query = new Query()\r\n\r\n    query.where = `${_UBIGEO_FIELD} = '${paramsApp['ubigeo']}' and ${_COD_PRE_FIELD} in ('${(cod_pre.split(',')).join(\"', '\")}')`\r\n    // fields return\r\n    query.outFields = [_ID_LOTE_P_FIELD, _COD_MZN_FIELD, _COD_SECT_FIELD]\r\n    query.returnGeometry = false\r\n\r\n    // Return distinct values\r\n    query.returnDistinctValues = true\r\n\r\n    // let qTask = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrCfPredios).getUrl())\r\n    const urlPredios = selfCm.layersMap.getLayerInfoById(idLyrCfPredios).getUrl();\r\n\r\n    return selfCm.executeQueryTask(urlPredios, query)\r\n      .then(results => {\r\n        const idLote = results.features.map((i) => i.attributes[_ID_LOTE_P_FIELD]);\r\n        // selfCm.idlotes = idLote;\r\n        const idmanzana = results.features.map((i) => i.attributes[_COD_MZN_FIELD]);\r\n        const idsector = results.features.map((i) => i.attributes[_COD_SECT_FIELD]);\r\n        const queryLote = new Query();\r\n        queryLote.where = `${_ID_LOTE_P_FIELD} in (${idLote.join(\",\")}) and (${_UBIGEO_FIELD} = ${paramsApp['ubigeo']})`;\r\n        selfCm.lotesQuery = queryLote.where;\r\n        selfCm.arancel = `${_UBIGEO_FIELD} = '${paramsApp.ubigeo}' and (${_COD_MZN_FIELD} in (${idmanzana.join(\",\")})) and (${_COD_SECT_FIELD} IN (${idsector.join(\",\")}))`;\r\n        queryLote.returnGeometry = true;\r\n        const urlLotes = selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl();\r\n        // let qTaskLote = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl())\r\n        selfCm.busyIndicator.hide();\r\n        return selfCm.executeQueryTask(urlLotes, queryLote)\r\n      })\r\n      .then(results => {\r\n        if (results.features.length == 0) {\r\n          // execute error for catch\r\n          throw new Error(\"No se encontró el lote seleccionado\")\r\n          // selfCm._showMessage(\"No se encontró el lote seleccionado\", type = \"error\")\r\n          // return\r\n        }\r\n        const unionPredios = selfCm._unionFeatures(results.features.map((i) => i.geometry))\r\n\r\n        selfCm.map.setExtent(unionPredios.getExtent().expand(2))\r\n\r\n        let graphic = new Graphic(unionPredios, symbolLoteSelected);\r\n        let featureSelected = new GraphicsLayer({\r\n          id: idGraphicLoteSelectedCm\r\n        });\r\n        featureSelected.add(graphic);\r\n        selfCm.map.addLayer(featureSelected);\r\n\r\n        // Parpadeo de seleccion\r\n        let interval = setInterval(function () {\r\n          let graphic = featureSelected.graphics[0];\r\n          graphic.setSymbol(graphic.symbol === symbolLoteSelected ? null : symbolLoteSelected);\r\n        }, 200);\r\n\r\n        setTimeout(function () {\r\n          clearInterval(interval);\r\n          selfCm._removeLayerGraphic(idGraphicLoteSelectedCm);\r\n        }, 2000);\r\n        selfCm.busyIndicator.hide();\r\n        return selfCm.map.setExtent(unionPredios.getExtent().expand(2))\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n        selfCm.busyIndicator.hide();\r\n        throw error;\r\n      })\r\n  },\r\n\r\n  _zoomHomeRequests() {\r\n    return selfCm._zoomExtentToLote()\r\n  },\r\n\r\n  _toggleBodyCaseInfo(evt) {\r\n    this.closest('.caseInfoClsCm').querySelector('.bodyPredInfoClsCm').classList.toggle('active')\r\n  },\r\n\r\n  _requestCaseInfo(idSolicitud) {\r\n    selfCm.busyIndicator.show();\r\n    // const urlOriginal = `${selfCm.config.landsByApplicationUrl}/${idSolicitud}`\r\n    const urlResults = `${selfCm.config.resultsByApplication}/${idSolicitud}`\r\n    const urlDocSupport = `${selfCm.config.applicationListUrl}/${selfCm.codRequestsCm}`\r\n\r\n    Promise.all([\r\n      // fetch(urlOriginal).then(response => response.json()),\r\n      selfCm._getOriginalData(idSolicitud),\r\n      fetch(urlResults).then(response => response.json()),\r\n      fetch(urlDocSupport).then(response => response.json()),\r\n    ]).then(function ([_, responseResults, responseDocSupport]) {\r\n\r\n      const rows = selfCm.currentLandTabRows.map((i) => {\r\n        return CaseInfo.contentCard(i, 'original');\r\n      });\r\n\r\n      if (responseResults.results.length == 0) {\r\n        // Escribir mensaje de error\r\n        selfCm._showMessage(`No existe registro de los predios resultantes en esta solicitud: ${idSolicitud}`, type = \"error\");\r\n        selfCm.busyIndicator.hide();\r\n        return\r\n      }\r\n\r\n      const rowsResults = responseResults.results.map((i) => {\r\n        return CaseInfo.contentCard(i, 'result');\r\n      });\r\n\r\n      dojo.query(\"#showInfoDocCm\")[0].value = responseDocSupport.support\r\n\r\n      dojo.query('.CtnOriginalClsCm')[0].innerHTML = rows.join('');\r\n      dojo.query('.CtnResultClsCm')[0].innerHTML = rowsResults.join('');\r\n\r\n      dojo.query(\".zoomPredInfoClsCm\").on('click', selfCm._zoomToPredSelectedEvt);\r\n      dojo.query(\".colapsePredInfoClsCm\").on('click', selfCm._toggleBodyCaseInfo);\r\n      selfCm.codigosPredios = selfCm.currentLandTabRows.map((i) => i.cpm).join(',');\r\n\r\n      selfCm.responseRequests = responseResults['results']\r\n\r\n    })\r\n      .then(function () {\r\n        switch (selfCm.case) {\r\n          case \"1\":\r\n            selfCm.reasignarApCm.classList.toggle('active')\r\n            break;\r\n          case \"2\":\r\n            selfCm.fusionApCm.classList.toggle('active')\r\n            break\r\n          case \"3\":\r\n            selfCm.divisionApCm.classList.toggle('active')\r\n            break\r\n          case \"4\":\r\n            selfCm.eliminacionApCm.classList.toggle('active')\r\n            break\r\n          case \"5\":\r\n            selfCm.independenceApCm.classList.toggle('active')\r\n            selfCm.independenceApCm.innerHTML = ''\r\n            LandAssignment.title = \"Independización\";\r\n            LandAssignment.lands = selfCm.responseRequests;\r\n            LandAssignment.pointLots = selfCm.currentPoinLotsRows;\r\n            LandAssignment.map = selfCm.map;\r\n            LandAssignment.landsSymbol = symbolPredio;\r\n            LandAssignment.landsSymbolSelected = symbolPredioSelected2;\r\n            // LandAssignment.graphicLayer = graphicLayerLandsByIndependence;\r\n            LandAssignment.removeAllGraphics();\r\n            selfCm.independenceApCm.appendChild(LandAssignment.renderTableLandAssignment());\r\n\r\n            LandProcess.title = \"Enviar datos\";\r\n            LandProcess.type = \"independence\";\r\n            selfCm.independenceApCm.appendChild(LandProcess.renderButtonProcess());\r\n            dojo.query(`#${LandProcess.id}`).on('click', selfCm._executeIndependenceLands);\r\n            dojo.query(\".pointLotSelectionCm\").on('change', LandAssignment.selectedPointLots.bind(LandAssignment));\r\n            dojo.query('.tableClsCm tr').on('mouseover', LandAssignment.highlightLand.bind(LandAssignment));\r\n            dojo.query('.tableClsCm tr').on('mouseout', LandAssignment.reestartSymbolLand.bind(LandAssignment));\r\n            break\r\n          default:\r\n            break;\r\n        }\r\n\r\n        // selfCm.codigosPredios = rowList[2]\r\n        // selfCm._zoomHomeRequests()\r\n        selfCm.resultCtnApCm.classList.remove('active')\r\n        selfCm.obsCtnApCm.classList.remove('active')\r\n        selfCm.requestTrayApCm.classList.remove('active')\r\n        selfCm.casesCtnApCm.classList.toggle('active')\r\n        selfCm._zoomExtentToLote()\r\n        selfCm.busyIndicator.hide();\r\n      })\r\n      .catch(function (error) {\r\n        selfCm.busyIndicator.hide();\r\n        console.log(error)\r\n      })\r\n\r\n    // selfCm._zoomExtentToLote(selfCm.codigosPredios)\r\n  },\r\n\r\n  _openFormCase(evt) {\r\n    if (evt.currentTarget.id == \"editRequestsCm\") {\r\n      let row = dojo.query(evt.currentTarget).closest(\"tr\")[0];\r\n      let rowList = dojo.query(\"td\", row).map(td => td.innerHTML);\r\n      selfCm.codRequestsCm = rowList[0]\r\n      selfCm.caseDescription = rowList[1]\r\n      dojo.query('#titleCaseCm')[0].innerHTML = `<span>${selfCm.caseDescription} <span class=\"fa fa-search\" style=\"font-size: 15px\"></span></span>`\r\n\r\n      selfCm.case = evt.currentTarget.value\r\n      selfCm._requestCaseInfo(selfCm.codRequestsCm);\r\n\r\n    } else if (evt.currentTarget.id == 'backTrayCm' || evt.currentTarget.id == 'backTrayResultCm') {\r\n      // desactivar el toolbarCm de edicion si esta activado\r\n      toolbarCm.deactivate();\r\n\r\n      // deshabilitar snapping\r\n      selfCm.map.disableSnapping()\r\n      selfCm.bodyTbLinesDvApCm.innerHTML = ''\r\n      // selfCm.CtnPrediosDvApCm.style.display = 'none'\r\n      selfCm.bodyTbPrediosDvApCm.innerHTML = ''\r\n\r\n      dojo.query(\".caseClsCm\").removeClass(\"active\")\r\n      // remove all graphics layer if exist\r\n      selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n      selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n      selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n      selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n      selfCm._removeLayerGraphic(idGraphicPredioSelectedCm);\r\n      selfCm._removeLayerGraphic(idGraphicLabelCodLote)\r\n      selfCm.bodyTbDatosLoteDvApCm.innerHTML = ''\r\n\r\n      graphicLayerLineaDivision.clear();\r\n      graphicLayerLabelLineaDivision.clear();\r\n      graphicLayerPredioByDivison.clear();\r\n\r\n      selfCm.lotesQuery = null\r\n      selfCm.arancel = null\r\n      selfCm.xy = []\r\n\r\n      selfCm.casesCtnApCm.classList.remove('active')\r\n      selfCm.resultCtnApCm.classList.remove('active')\r\n      selfCm.obsCtnApCm.classList.remove('active')\r\n      selfCm.requestTrayApCm.classList.toggle('active')\r\n      selfCm._removeClassActiveButton()\r\n      selfCm._loadIniRequestsCm();\r\n    }\r\n\r\n  },\r\n  _openFormObs() {\r\n    selfCm.textAreaObsApCm.value = ''\r\n    let imageDiv = dojo.query(\".thumbnailClsCm\")[0];\r\n    selfCm.imgUploadApCm.value = ''\r\n    imageDiv.style.backgroundImage = \"none\";\r\n    imageDiv.innerHTML = \"<span class=alignVCenter><i class='far fa-image'></i></span>\";\r\n    dojo.query('#headeRequestsCtnCm')[0].innerHTML = `<span class=\"alignVCenter\">Solicitud: ${selfCm.codRequestsCm}</span>`\r\n    selfCm.casesCtnApCm.classList.toggle(\"active\");\r\n    selfCm.obsCtnApCm.classList.toggle('active')\r\n  },\r\n\r\n  _FormResult(id_solicitud, caseCm) {\r\n    let urlPredioResults = `${selfCm.config.resultsByApplication}/${id_solicitud}`\r\n    selfCm._callApiRestServices(urlPredioResults, {}).then(function (response) {\r\n      try {\r\n        selfCm.bodyTbResultsApCm.innerHTML = ''\r\n        dojo.query(\"#titleCaseResult\")[0].innerHTML = `<span>Solicitud ${id_solicitud}: ${caseCm}</span>`\r\n\r\n        let rows = response.results.map((predio, index) => {\r\n          return `<tr><td class=\"center-aligned\">${index + 1}</td>\r\n                  <td>${predio['cpm']}</td>\r\n                  <td>${predio['address']}</td>\r\n                  <td class=\"center-aligned\">\r\n                    <span id=\"${predio['cpm']}_search\" class=\"zoomPredioResultClsCm\"><i class=\"fas fa-search\"></i></span>\r\n                  </td></tr>`\r\n        })\r\n        selfCm.bodyTbResultsApCm.innerHTML = rows.join('')\r\n        dojo.query('.zoomPredioResultClsCm').on('click', selfCm._centerAtPredioResult)\r\n        selfCm.casesCtnApCm.classList.remove(\"active\");\r\n        selfCm.obsCtnApCm.classList.remove('active')\r\n        selfCm.requestTrayApCm.classList.remove('active')\r\n        selfCm.resultCtnApCm.classList.toggle('active')\r\n        selfCm.busyIndicator.hide()\r\n      }\r\n      catch (error) {\r\n        console.log(error)\r\n      }\r\n    })\r\n  },\r\n\r\n  _centerAtPredioResult(evt) {\r\n    let cod_pre = evt.currentTarget.id.replace('_search', '')\r\n    selfCm._zoomToPredSelected(cod_pre)\r\n  },\r\n\r\n  _openFormResult(evt) {\r\n    let row = dojo.query(evt.currentTarget).closest(\"tr\")[0];\r\n    let rowList = dojo.query(\"td\", row).map(td => td.innerHTML);\r\n    selfCm.codRequestsCm = rowList[0]\r\n    selfCm.caseDescription = rowList[1]\r\n    selfCm._FormResult(selfCm.codRequestsCm, selfCm.caseDescription)\r\n  },\r\n\r\n  // Toolbar function\r\n  _createToolbar() {\r\n    toolbarCm = new Draw(selfCm.map);\r\n    toolbarCm.on(\"draw-end\", selfCm._addToMap);\r\n  },\r\n\r\n  _addToMap(evt) {\r\n    if (evt.geometry.type === \"point\") {\r\n      let screenPoint = selfCm.map.toScreen(evt.geometry)\r\n      let deferred = selfCm.map.snappingManager.getSnappingPoint(screenPoint);\r\n      deferred.then(function (value) {\r\n        if (value !== undefined) {\r\n          let point_g = webMercatorUtils.webMercatorToGeographic(new Point(value));\r\n          let graphic = new Graphic(point_g, symbolByCase[selfCm.case].symbol);\r\n          // si es el caso reasignacion de predio\r\n          if (selfCm.case == 1 || selfCm.case == 2) {\r\n\r\n            const graphicLayer = new GraphicsLayer({\r\n              id: idGraphicPredioCm,\r\n            });\r\n            graphicLayer.add(graphic);\r\n            selfCm.map.addLayer(graphicLayer);\r\n            selfCm.xy = [point_g.x, point_g.y]\r\n          }\r\n          else if (selfCm.case == 3) {\r\n            graphic['attributes'] = { id: selfCm.idPredioDivision }\r\n            graphicLayerPredioByDivison.add(graphic);\r\n          }\r\n          selfCm.map.setInfoWindowOnClick(true);\r\n          toolbarCm.deactivate();\r\n          selfCm._removeClassActiveButton()\r\n        } else {\r\n          alert(selfCm.nls.errorSnapingLocate);\r\n        }\r\n      }, function (error) {\r\n        console.log(error);\r\n      });\r\n    } else if (evt.geometry.type === \"polyline\") {\r\n      selfCm.idxLines = selfCm.idxLines + 1\r\n      let nameIdLine = `Polyline_${selfCm.idxLines}`\r\n      let graphic = new Graphic(evt.geometry, symbolDivisionLote, { id: nameIdLine });\r\n      graphicLayerLineaDivision.add(graphic);\r\n      selfCm._populateTableDrawLine(nameIdLine)\r\n      selfCm._addNameToLine(nameIdLine, evt.geometry)\r\n      selfCm.map.addLayer(graphicLayerLineaDivision);\r\n      selfCm.map.setInfoWindowOnClick(true);\r\n      toolbarCm.deactivate();\r\n      selfCm._removeClassActiveButton()\r\n      // desactiva el boton luego de dibujar\r\n    }\r\n    // check exist activeButton class in button\r\n\r\n  },\r\n\r\n  _removeClassActiveButton() {\r\n    if (dojo.query(`#${selfCm.idButtonDrawActive}`).length > 0) {\r\n      dojo.query(`#${selfCm.idButtonDrawActive}`)[0].classList.remove('activeButton')\r\n    }\r\n  },\r\n\r\n  _removeLayerGraphic(layerId) {\r\n    if (selfCm.map.graphicsLayerIds.includes(layerId)) {\r\n      selfCm.map.removeLayer(selfCm.map.getLayer(layerId));\r\n    }\r\n  },\r\n\r\n  _activateTool(evt) {\r\n    selfCm._removeClassActiveButton()\r\n    selfCm.idButtonDrawActive = evt.currentTarget.id\r\n    dojo.query(`#${selfCm.idButtonDrawActive}`)[0].classList.add('activeButton')\r\n    selfCm._activateSnappingByReasignar();\r\n    selfCm.map.setInfoWindowOnClick(false);\r\n    selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n    toolbarCm.activate(Draw[\"POINT\"]);\r\n  },\r\n\r\n  _activateToolAcumulacion(evt) {\r\n    selfCm._removeClassActiveButton()\r\n    let id = evt.currentTarget.id\r\n    selfCm.idPredioAcumulacion = id\r\n    selfCm.idButtonDrawActive = id\r\n    dojo.query(`#${selfCm.idButtonDrawActive}`)[0].classList.add('activeButton')\r\n    selfCm.map.setInfoWindowOnClick(false);\r\n    selfCm._activateSnappingByAcumulacion();\r\n    selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n    toolbarCm.activate(Draw[\"POINT\"]);\r\n  },\r\n\r\n  _activateToolLinesDivision(evt) {\r\n    selfCm._removeClassActiveButton()\r\n    selfCm.idButtonDrawActive = evt.currentTarget.id\r\n    dojo.query(`#${selfCm.idButtonDrawActive}`)[0].classList.add('activeButton')\r\n    selfCm.map.setInfoWindowOnClick(false);\r\n    selfCm._activateSnappingByDivision();\r\n    selfCm._removeLayerGraphic(idGraphicLoteCm)\r\n    selfCm._removeLayerGraphic(idGraphicPuntoLote)\r\n    selfCm._removeLayerGraphic(idGraphicFrenteLote)\r\n    selfCm._removeLayerGraphic(idGraphicLabelCodLote)\r\n    selfCm.bodyTbDatosLoteDvApCm.innerHTML = ''\r\n    // selfCm.bodyTbPrediosDvApCm.innerHTML = ''\r\n    graphicLayerPredioByDivison.clear()\r\n    toolbarCm.activate(Draw[\"POLYLINE\"]);\r\n  },\r\n\r\n  _activateSnappingByReasignar() {\r\n    let cflayer = selfCm.layersMap.getLayerInfoById(idLyrCfLotesPun)\r\n    let propertyLayer = new FeatureLayer(cflayer.getUrl(), {\r\n      mode: FeatureLayer.MODE_ONDEMAND,\r\n      outFields: [\"*\"]\r\n    });\r\n    let snapManager = selfCm.map.enableSnapping({\r\n      // alwaysSnap: true,\r\n      // snapKey: keys.CTRL,\r\n      snapPointSymbol: symbolSnapPointCm,\r\n      tolerance: 5,\r\n    });\r\n    // get layerinfo by id of layer to snap\r\n    let layerInfos = [{\r\n      layer: propertyLayer\r\n    }];\r\n\r\n    snapManager.setLayerInfos(layerInfos);\r\n  },\r\n\r\n  _activateSnappingByAcumulacion() {\r\n    let graphicLayerPuntoLote = selfCm.map.getLayer(idGraphicPuntoLote)\r\n    let graphicsLayerInfo = new esri.layers.LayerInfo({\r\n      id: graphicLayerPuntoLote.id, // El id del `GraphicsLayer`\r\n      name: graphicLayerPuntoLote.name, // El nombre del `GraphicsLayer`\r\n      layer: graphicLayerPuntoLote // El `GraphicsLayer` a utilizar\r\n    });\r\n\r\n    // Agregar el `LayerInfo` al mapa y habilitar el snapping\r\n    selfCm.map.enableSnapping({\r\n      layerInfos: [graphicsLayerInfo], // Agregar el `LayerInfo` al mapa\r\n      // alwaysSnap: true,\r\n      snapPointSymbol: symbolSnapPointCm,\r\n      tolerance: 5,\r\n    });\r\n  },\r\n\r\n  _activateSnappingByDivision() {\r\n    let graphicsLayerInfo = new esri.layers.LayerInfo({\r\n      id: graphicLayerLineaDivision.id, // El id del `GraphicsLayer`\r\n      name: graphicLayerLineaDivision.name, // El nombre del `GraphicsLayer`\r\n      layer: graphicLayerLineaDivision // El `GraphicsLayer` a utilizar\r\n    });\r\n\r\n    let cflayer = selfCm.layersMap.getLayerInfoById(idLyrCfLotes)\r\n    let propertyLayer = new FeatureLayer(cflayer.getUrl(), {\r\n      mode: FeatureLayer.MODE_ONDEMAND,\r\n      outFields: [\"*\"]\r\n    });\r\n\r\n    let layerInfos = [{\r\n      layer: propertyLayer\r\n    }, graphicsLayerInfo];\r\n\r\n    // Agregar el `LayerInfo` al mapa y habilitar el snapping\r\n    selfCm.map.enableSnapping({\r\n      layerInfos: layerInfos, // Agregar el `LayerInfo` al mapa\r\n      // alwaysSnap: true,\r\n      snapPointSymbol: symbolSnapPointCm,\r\n      tolerance: 5,\r\n    });\r\n  },\r\n\r\n  // crear una funcion que permita dos poligonos aceptando dos poligonos json como parametros\r\n  // la funcion debe retornar un poligono json\r\n  _unionFeatures(arr) {\r\n    let union = geometryEngine.union(arr);\r\n    return union;\r\n  },\r\n\r\n  _unionFeaturesAcumulation() {\r\n    // Creamos grafico de lote fusionado\r\n    const graphicLayerLoteFusion = new GraphicsLayer({\r\n      id: idGraphicLoteCm\r\n    });\r\n    // let arr = []\r\n    // const polygonGeometry = selfCm.currentLotsRows[0].geometry;\r\n    const arr = selfCm.currentLotsRows.map((i) => i.geometry);\r\n    // for (let i of selfCm.currentLotsRows) {\r\n    //   arr.push(i.geometry)\r\n    // }\r\n    const response = selfCm._unionFeatures(arr);\r\n    const graphic = new Graphic(response, symbolFusionLote);\r\n\r\n    graphicLayerLoteFusion.add(graphic);\r\n    selfCm.map.addLayer(graphicLayerLoteFusion);\r\n    selfCm.map.setExtent(graphic._extent.expand(1.5), true);\r\n    return [response];\r\n  },\r\n\r\n  _ApplyAcumulationLotsRefactor() {\r\n    selfCm.busyIndicator.show();\r\n    selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n    selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n    selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n    selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n    selfCm._removeLayerGraphic(idGraphicLoteDeleteCm);\r\n    selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n\r\n    if (!selfCm.lotesQuery) {\r\n      selfCm._showMessage(selfCm.nls.errorGetLand, 'warning');\r\n      selfCm.busyIndicator.hide();\r\n      return\r\n    }\r\n\r\n    return selfCm._getOriginalLots(selfCm.lotesQuery)\r\n      .then(originLots => {\r\n        const geomLoteAcumulation = selfCm._unionFeaturesAcumulation();\r\n        return selfCm._getMaxCodLot(geomLoteAcumulation);\r\n      })\r\n      .then(proprsLot => {\r\n        selfCm._ordenarPoligonosNorteSur(\r\n          proprsLot.polygons,\r\n          parseInt(proprsLot.maxCodLote),\r\n          selfCm.bodyTbDatosLoteFsApCm\r\n        );\r\n        selfCm.map.setExtent(proprsLot.polygons[0].getExtent().expand(1.5), true);\r\n        return selfCm._addGraphicsPointLotsAndArancel();\r\n      })\r\n      .then(() => {\r\n        selfCm._populateTablePredio(selfCm.bodyTbPrediosFsApCm, selfCm._activateToolAcumulacion)\r\n        selfCm.busyIndicator.hide();\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(error.message, type = \"error\")\r\n      })\r\n  },\r\n\r\n  _getMidpoint(polyline) {\r\n    let length = geometryEngine.geodesicLength(polyline, \"meters\");\r\n    let midpoint = geometryEngine.geodesicDensify(polyline, length / 2, \"meters\").getPoint(0, 0);\r\n    return midpoint;\r\n  },\r\n\r\n  _findMidpoint(polyline) {\r\n    let lengthPolylineChunk = geometryEngine.geodesicLength(polyline, \"meters\")\r\n    let line = turf.lineString(polyline.paths[0]);\r\n    let options = { units: 'meters' };\r\n    let along = turf.along(line, lengthPolylineChunk / 2, options);\r\n    return along\r\n  },\r\n\r\n  // funcion que recibe una polilinea con muchas partes y retorna la parte mas larga como una polilinea\r\n  _getLongestPolyline(polyline) {\r\n    let paths = polyline.paths\r\n    let longestPath = 0\r\n    let response = null;\r\n    for (let path of paths) {\r\n      let polylineChunk = new Polyline({\r\n        paths: [path],\r\n        spatialReference: { wkid: 4326 }\r\n      });\r\n      let lengthPolylineChunk = geometryEngine.geodesicLength(polylineChunk, \"meters\")\r\n      if (lengthPolylineChunk > longestPath) {\r\n        longestPath = lengthPolylineChunk\r\n        response = polylineChunk\r\n      }\r\n    }\r\n    return response\r\n  },\r\n\r\n  // --------------------------------------------------------------\r\n  // SUBDIVISION DE LOTES\r\n  // function that allows dividing a polygon from cutting lines, the parameters will be a polygon and several lines in json format\r\n  // the function must return a polygon json\r\n  // --------------------------------------------------------------\r\n  _dividePolygon(poly, lines) {\r\n    const divide = geometryEngine.cut(poly, lines);\r\n    return divide;\r\n  },\r\n\r\n  _populateTableDrawLine(idLine) {\r\n    let row = `<td class=\"center-aligned\">${selfCm.idxLines}</td>\r\n              <td contenteditable=\"true\" id=\"${idLine}_name\">${idLine}</td>\r\n              <td class=\"center-aligned\">\r\n                <span id=\"${idLine}_ext\"><i class=\"fas fa-search\"></i></span>\r\n              </td>\r\n              <td class=\"center-aligned\">\r\n                <span id=\"${idLine}_del\" style=\"color: #FF5722;\"><i class=\"far fa-trash-alt\"></i></span>\r\n              </td>`\r\n    let tr = dojo.create('tr');\r\n    tr.id = idLine;\r\n    tr.innerHTML = row;\r\n    tr.style.cursor = \"pointer\";\r\n    selfCm.bodyTbLinesDvApCm.appendChild(tr)\r\n    dojo.query(`#${idLine}_del`).on('click', selfCm._deleteRowLine);\r\n    dojo.query(`#${idLine}_ext`).on('click', selfCm._zoonToLineDivision);\r\n    dojo.query(`#${idLine}_name`).on('input', selfCm._editaNameLineDivision);\r\n  },\r\n\r\n  _deleteRowLine(evt) {\r\n    let id = evt.currentTarget.id.replace('_del', '');\r\n    let elem = dojo.query(`#${id}`);\r\n    let graphic = graphicLayerLineaDivision.graphics.filter(item => item.attributes.id == id);\r\n    graphicLayerLineaDivision.remove(graphic[0])\r\n    let graphicLabel = graphicLayerLabelLineaDivision.graphics.filter(item => item.attributes.id == id);\r\n    graphicLayerLabelLineaDivision.remove(graphicLabel[0])\r\n    selfCm._removeLayerGraphic(idGraphicLoteCm)\r\n    selfCm._removeLayerGraphic(idGraphicPuntoLote)\r\n    selfCm._removeLayerGraphic(idGraphicFrenteLote)\r\n    selfCm._removeLayerGraphic(idGraphicLabelCodLote)\r\n    graphicLayerPredioByDivison.clear()\r\n    elem[0].parentNode.removeChild(elem[0]);\r\n  },\r\n\r\n  _addNameToLine(name, polylineGeom) {\r\n    let polylineGeomUtm = webMercatorUtils.webMercatorToGeographic(polylineGeom)\r\n    let midPoint = selfCm._findMidpoint(polylineGeomUtm)\r\n\r\n    let pointLabel = new Point({\r\n      x: midPoint.geometry.coordinates[0],\r\n      y: midPoint.geometry.coordinates[1],\r\n      spatialReference: { wkid: 4326 }\r\n    })\r\n\r\n    let font = new Font(\"15px\", Font.STYLE_NORMAL, Font.VARIANT_NORMAL, Font.WEIGHT_BOLD, \"Arial\");\r\n    let txtSym = new TextSymbol(name, font, new Color([250, 0, 0, 0.9]));\r\n    txtSym.setOffset(15, 15).setAlign(TextSymbol.ALIGN_END)\r\n    txtSym.setHaloColor(new Color([255, 255, 255]));\r\n    txtSym.setHaloSize(1.5);\r\n    let graphicLabel = new Graphic(pointLabel, txtSym, { id: name });\r\n\r\n    // graphicLayer.add(graphic);\r\n    graphicLayerLabelLineaDivision.add(graphicLabel);\r\n  },\r\n\r\n  _zoonToLineDivision(evt) {\r\n    let id = evt.currentTarget.id.replace('_ext', '');\r\n    let graphic = graphicLayerLabelLineaDivision.graphics.filter(item => item.attributes.id == id);\r\n    selfCm.map.setExtent(graphic[0]._extent, true);\r\n  },\r\n\r\n  _editaNameLineDivision(evt) {\r\n    let id = evt.currentTarget.id.replace('_name', '');\r\n    let graphic = graphicLayerLabelLineaDivision.graphics.filter(item => item.attributes.id == id)\r\n    graphic[0].symbol.text = evt.currentTarget.innerText;\r\n    graphicLayerLabelLineaDivision.refresh()\r\n  },\r\n\r\n  _populateTablePredio(bodyTable, drawFunction) {\r\n    // obtener del servicio los predios resultantes de la solicitud\r\n    let urlPredioResults = `${selfCm.config.resultsByApplication}/${selfCm.codRequestsCm}`\r\n    selfCm._callApiRestServices(urlPredioResults, {}).then(response => {\r\n      try {\r\n        // --------------------------------------------------------------\r\n        // Comentar lineas cuando se tenga el servicio\r\n        // response = responseDivision[selfCm.codRequestsCm]\r\n        // --------------------------------------------------------------\r\n        let idx = 1\r\n        bodyTable.innerHTML = ''\r\n        for (let predio of response.results) {\r\n          let tr = dojo.create('tr');\r\n          tr.id = `predio_${idx}_${predio['cpm']}`;\r\n          let row = `<td class=\"center-aligned\">${idx}</td>\r\n                     <td>${predio['cpm']}</td>\r\n                     <td>${predio['address']}</td>\r\n                     <td class=\"center-aligned\">\r\n                      <span id=\"${tr.id}_draw\"><i class=\"fas fa-map-marker-alt\"></i></span>\r\n                     </td>`\r\n          tr.innerHTML = row;\r\n          tr.style.cursor = \"pointer\";\r\n          bodyTable.appendChild(tr)\r\n          dojo.query(`#${tr.id}_draw`).on('click', drawFunction)\r\n          idx = idx + 1\r\n        }\r\n      } catch (error) {\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(error.message, type = \"error\")\r\n      }\r\n    })\r\n  },\r\n\r\n  _activateSnappingPrediosByDivision(graphiclayer) {\r\n    let graphicsLayerInfo = new esri.layers.LayerInfo({\r\n      id: graphiclayer.id, // El id del `GraphicsLayer`\r\n      name: graphiclayer.name, // El nombre del `GraphicsLayer`\r\n      layer: graphiclayer // El `GraphicsLayer` a utilizar\r\n    });\r\n\r\n    // Agregar el `LayerInfo` al mapa y habilitar el snapping\r\n    selfCm.map.enableSnapping({\r\n      layerInfos: [graphicsLayerInfo], // Agregar el `LayerInfo` al mapa\r\n      // alwaysSnap: true,\r\n      snapPointSymbol: symbolSnapPointCm,\r\n      tolerance: 5,\r\n    });\r\n  },\r\n\r\n  _activateToolPrediosByDivision(evt) {\r\n    selfCm._removeClassActiveButton()\r\n    selfCm.idButtonDrawActive = evt.currentTarget.id\r\n    dojo.query(`#${selfCm.idButtonDrawActive}`)[0].classList.add('activeButton')\r\n    let id = evt.currentTarget.id\r\n    selfCm.idPredioDivision = id\r\n    let graphic = graphicLayerPredioByDivison.graphics.filter(item => item.attributes.id == id);\r\n    graphicLayerPredioByDivison.remove(graphic[0])\r\n    selfCm.map.setInfoWindowOnClick(false);\r\n    let graphicLayerPuntoLote = selfCm.map.getLayer(idGraphicPuntoLote)\r\n    selfCm._activateSnappingPrediosByDivision(graphicLayerPuntoLote);\r\n    toolbarCm.activate(Draw[\"POINT\"]);\r\n  },\r\n\r\n  _changeValueCodLote(evt) {\r\n    const id = evt.target.id.split('_')[1]\r\n    const idx = evt.target.selectedIndex\r\n    const cod_lote = evt.target.options[idx].value\r\n    const lyr = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n    const graphicSelected = lyr.graphics.filter(item => item.attributes.id == `label_${id}`)\r\n    graphicSelected[0].symbol.text = cod_lote\r\n    lyr.refresh()\r\n  },\r\n\r\n  _centerAtLabelCodLoteDivision(evt) {\r\n    let id = evt.currentTarget.id\r\n    let lyr = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n    let graphicSelected = lyr.graphics.filter(item => item.attributes.id == id)\r\n    selfCm.map.centerAt(graphicSelected[0].geometry)\r\n  },\r\n\r\n  _editLoteUrbanoDivision(evt) {\r\n    // let id = evt.currentTarget.id.replace('loteUrbanoDv_', '');\r\n    let id = evt.target.id.replace('loteUrbanoDv_', '');\r\n    let lyr = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n    let graphic = lyr.graphics.filter(item => item.attributes.id == `label_${id}`)\r\n    graphic[0].attributes.lot_urb = evt.target.selectedOptions[0].value\r\n    lyr.refresh()\r\n  },\r\n\r\n  _buildDataLoteTable(tableBody, predios) {\r\n    tableBody.innerHTML = ''\r\n    // const tableBody = document.getElementById(tableBodyId);\r\n    predios.forEach((predio, index) => {\r\n      const row = document.createElement('tr');\r\n\r\n      // celda de índice\r\n      const indexCell = document.createElement('td');\r\n      indexCell.className = \"center-aligned\"\r\n      indexCell.textContent = predio.num;\r\n      row.appendChild(indexCell);\r\n\r\n      // celda de codigo de predio\r\n      const codigoCell = document.createElement('td');\r\n      const select = document.createElement('select');\r\n      select.className = \"codLoteSelectDvCls\"\r\n      select.id = `codLoteSelectDv_${predio.num}`\r\n\r\n      predios.forEach(p => {\r\n        const option = document.createElement('option');\r\n        option.value = p.cod_lote;\r\n        option.textContent = p.cod_lote;\r\n        if (p.cod_lote === predio.cod_lote) {\r\n          option.selected = true;\r\n        }\r\n        select.appendChild(option);\r\n      });\r\n      codigoCell.appendChild(select);\r\n      row.appendChild(codigoCell);\r\n\r\n      // const lyr = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n      // const graphicSelected = lyr.graphics.filter(item => item.attributes.id == `label_${id}`)\r\n      // graphicSelected[0].symbol.text = cod_lote\r\n      // lyr.refresh()\r\n\r\n      const loteUrbCell = document.createElement('td');\r\n      const loteUrbSelect = document.createElement('select');\r\n      loteUrbSelect.className = \"loteUrbSelectDvCls\"\r\n      loteUrbSelect.id = `loteUrbanoDv_${predio.num}`\r\n      selfCm.responseRequests.forEach((request, idx) => {\r\n        const option = document.createElement('option');\r\n        option.value = request.urbanLotNumber;\r\n        option.textContent = request.urbanLotNumber;\r\n        loteUrbSelect.appendChild(option);\r\n        if (predio.num == idx + 1) {\r\n          option.selected = true;\r\n        }\r\n        // selected option by index predio.num\r\n\r\n\r\n\r\n        // if (request.urbanLotNumber === predio.lot_urb) {\r\n        //   loteUrbSelect.selected = true;\r\n        // }\r\n      })\r\n      loteUrbCell.appendChild(loteUrbSelect);\r\n      loteUrbCell.className = \"loteUrbanoDvCls\"\r\n      row.appendChild(loteUrbCell);\r\n\r\n      // celda de lote urbano\r\n      // const loteUrbCell = document.createElement('td');\r\n      // loteUrbCell.contentEditable = true\r\n      // loteUrbCell.textContent = '...';\r\n      // loteUrbCell.id = `loteUrbanoDv_${predio.num}`\r\n      // loteUrbCell.className = \"loteUrbanoDvCls\"\r\n      // row.appendChild(loteUrbCell);\r\n\r\n      const locationMarker = document.createElement('td');\r\n      locationMarker.id = predio.id\r\n      locationMarker.className = \"center-aligned\"\r\n      locationMarker.innerHTML = `<span class=\"locationLabelLoteDvCls\" id=\"${predio.id}\"><i class=\"fas fa-search\"></i></span>`\r\n      row.appendChild(locationMarker);\r\n      tableBody.appendChild(row);\r\n      // dojo.query(`#${predio.id}`).on('click', selfCm._centerAtLabelCodLoteDivision)\r\n\r\n    });\r\n    dojo.query('.codLoteSelectDvCls').on('change', selfCm._changeValueCodLote)\r\n    dojo.query('.locationLabelLoteDvCls').on('click', selfCm._centerAtLabelCodLoteDivision)\r\n    dojo.query('.loteUrbanoDvCls').on('change', selfCm._editLoteUrbanoDivision);\r\n\r\n  },\r\n\r\n  _ordenarPoligonosNorteSur(poligonos, idx, bodyTable) {\r\n    // Obtener la coordenada más al norte de cada polígono\r\n    let coordenadasNorte = poligonos.map(poligono => {\r\n      let extent = poligono.getExtent();\r\n      return extent.ymax;\r\n    });\r\n\r\n    // Ordenar los polígonos en base a la coordenada más al norte\r\n    let poligonosOrdenados = poligonos.slice().sort((a, b) => {\r\n      let coordenadaNorteA = coordenadasNorte[poligonos.indexOf(a)];\r\n      let coordenadaNorteB = coordenadasNorte[poligonos.indexOf(b)];\r\n      return coordenadaNorteB - coordenadaNorteA; // Ordenar de norte a sur\r\n    });\r\n\r\n    let graphicLayerLabelCodLoteDivision = new GraphicsLayer({\r\n      id: idGraphicLabelCodLote,\r\n    });\r\n\r\n    let font = new Font(\"20px\", Font.STYLE_NORMAL, Font.VARIANT_NORMAL, Font.WEIGHT_BOLD, \"Arial\");\r\n\r\n    let dataLoteTable = []\r\n\r\n    // Paso 5: Agregar número de polígono a propiedad \"order\"\r\n    poligonosOrdenados.forEach((poligono, index) => {\r\n\r\n      const polygon = turf.polygon(poligono.rings);\r\n      let center = turf.pointOnFeature(polygon);\r\n\r\n      let pointLabel = new Point({\r\n        x: center.geometry.coordinates[0],\r\n        y: center.geometry.coordinates[1],\r\n        spatialReference: { wkid: 4326 }\r\n      })\r\n      let cod_lote = selfCm._zfill(idx + 1, 3)\r\n      let txtSym = new TextSymbol(cod_lote, font, new Color([250, 0, 0, 1]));\r\n      txtSym.setColor(new esri.Color([0, 0, 0, 1])); // color blanco\r\n      txtSym.setSize(\"12pt\");\r\n      txtSym.setHaloColor(new esri.Color([255, 255, 255, 1]));\r\n      txtSym.setHaloSize(2);\r\n      let idGraphic = `label_${index + 1}`\r\n      let graphicLabel = new Graphic(\r\n        pointLabel,\r\n        txtSym,\r\n        {\r\n          id: idGraphic,\r\n          lot_urb: selfCm.responseRequests[index].urbanLotNumber,\r\n          clase: 'labelCodLoteDivision'\r\n        });\r\n      graphicLayerLabelCodLoteDivision.add(graphicLabel);\r\n      dataLoteTable.push({ num: index + 1, id: idGraphic, cod_lote: cod_lote })\r\n      idx = idx + 1\r\n      // editToolbar.activate(Edit.MOVE, graphicLabel, {allowAddVertices: false, allowDeleteVertices: false});\r\n    });\r\n\r\n\r\n    // Completar table\r\n    selfCm._buildDataLoteTable(bodyTable, dataLoteTable)\r\n    selfCm.map.addLayer(graphicLayerLabelCodLoteDivision)\r\n  },\r\n\r\n  _enableEditingLabelsLotesDivision(evt) {\r\n    if (evt && evt.graphic && evt.graphic.attributes && evt.graphic.attributes.clase == 'labelCodLoteDivision') {\r\n      selfCm.map.setInfoWindowOnClick(false)\r\n      selfCm.editToolbar.activate(Edit.MOVE, evt.graphic);\r\n    } else {\r\n      selfCm.editToolbar.deactivate()\r\n    }\r\n  },\r\n\r\n  _zfill(num, len) {\r\n    return (Array(len).fill('0').join('') + num).slice(-len);\r\n  },\r\n\r\n  _getMaxCodLot(polygonos) {\r\n    const deferred = new Deferred();\r\n    const estadisticaDef = new StatisticDefinition();\r\n    estadisticaDef.statisticType = 'max';\r\n    estadisticaDef.onStatisticField = _COD_LOTE_FIELD;\r\n    estadisticaDef.outStatisticFieldName = \"resultado\";\r\n\r\n    const query = new Query();\r\n    query.where = selfCm.arancel;\r\n    query.outFields = [_COD_LOTE_FIELD];\r\n    query.returnGeometry = false;\r\n    query.outStatistics = [estadisticaDef];\r\n\r\n    const queryTask = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl());\r\n    queryTask.execute(query)\r\n      .then(result => {\r\n        if (result.features.length > 0) {\r\n          const maxCodLote = result.features[0].attributes.resultado;\r\n          return deferred.resolve({\r\n            maxCodLote: maxCodLote,\r\n            polygons: polygonos\r\n          });\r\n        } else {\r\n          return deferred.reject('No se encontraron lotes');\r\n        }\r\n      });\r\n    return deferred.promise;\r\n  },\r\n\r\n  // _etiquetasCodLote(url, campo, queryWhere, tipoEstadistica, polygonos, bodyTable) {\r\n  //   var estadisticaDef = new esri.tasks.StatisticDefinition();\r\n  //   estadisticaDef.statisticType = tipoEstadistica;\r\n  //   estadisticaDef.onStatisticField = campo;\r\n  //   estadisticaDef.outStatisticFieldName = \"resultado\";\r\n\r\n  //   var query = new esri.tasks.Query();\r\n  //   query.where = queryWhere;\r\n  //   query.outFields = [campo];\r\n  //   query.returnGeometry = false;\r\n  //   query.outStatistics = [estadisticaDef];\r\n\r\n  //   var queryTask = new esri.tasks.QueryTask(url);\r\n  //   queryTask.execute(query, function (result) {\r\n  //     if (result.features.length > 0) {\r\n  //       let resultado = result.features[0].attributes.resultado;\r\n  //       selfCm._ordenarPoligonosNorteSur(polygonos, parseInt(resultado), bodyTable)\r\n  //     } else {\r\n  //       return 0;\r\n  //     }\r\n  //   }, function (error) {\r\n  //     console.log(\"Error al ejecutar la consulta: \", error);\r\n  //   });\r\n  // },\r\n\r\n  _getOriginalLots(query) {\r\n    const selfCm = this;\r\n    const deferred = new Deferred();\r\n    const params = {\r\n      where: query,\r\n      returnGeometry: true,\r\n      outFields: \"*\",\r\n      outSR: 4326,\r\n      f: \"json\"\r\n    };\r\n\r\n    const requestOptions = {\r\n      url: `${selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl()}/query`,\r\n      content: params,\r\n      handleAs: \"json\",\r\n      callbackParamName: \"callback\"\r\n    };\r\n\r\n    esriRequest(requestOptions, {\r\n      usePost: true\r\n    }).then(function (response) {\r\n      selfCm.currentLotsRows = response.features;\r\n      selfCm.currentLotsRows.forEach(row => {\r\n        row.geometry = new Polygon({\r\n          rings: row.geometry.rings,\r\n          spatialReference: { wkid: 4326 }\r\n        });\r\n      });\r\n      return deferred.resolve(selfCm.currentLotsRows);\r\n    }, function (error) {\r\n      deferred.reject(error);\r\n    });\r\n\r\n    return deferred.promise;\r\n  },\r\n\r\n  _getPolylinesDrawn() {\r\n    const arr = []\r\n    for (let i of graphicLayerLineaDivision.graphics) {\r\n      arr.push(i.geometry);\r\n    }\r\n    const unionGraphicLayerLineaDivision = selfCm._unionFeatures(arr);\r\n\r\n    let lineGeometry = new Polyline({\r\n      paths: unionGraphicLayerLineaDivision.paths,\r\n      spatialReference: { wkid: 102100 }\r\n    });\r\n    lineGeometry = esri.geometry.webMercatorToGeographic(lineGeometry);\r\n    return lineGeometry;\r\n  },\r\n\r\n  _divideLotsByLines() {\r\n    // const geomLote = results.features[0].geometry\r\n    if (selfCm.currentLotsRows.length == 0) {\r\n      selfCm._showMessage(selfCm.nls.errorLotQuery, 'warning');\r\n      return;\r\n    }\r\n    const lineGeometry = selfCm._getPolylinesDrawn();\r\n    // let polygonGeometry = new Polygon({\r\n    //   rings: selfCm.currentLotsRows[0].geometry.rings,\r\n    //   spatialReference: { wkid: 4326 }\r\n    // });\r\n\r\n    const polygonGeometry = selfCm.currentLotsRows[0].geometry;\r\n\r\n    const geomLoteDivided = selfCm._dividePolygon(polygonGeometry, lineGeometry)\r\n\r\n    if (geomLoteDivided.length == 0) {\r\n      //  genera un mensage show indicando que no se encontro el lote\r\n      selfCm._showMessage(selfCm.nls.errorDivideLot, type = 'error');\r\n      return;\r\n    }\r\n\r\n    // Creamos grafico de lote fusionado\r\n    const graphicLayerLoteDivision = new GraphicsLayer({\r\n      id: idGraphicLoteCm\r\n    });\r\n\r\n    // iterar sobre los graficos de la capa de division y agregar cada uno a graphicLayerLoteDivision\r\n    for (let i of geomLoteDivided) {\r\n      const lote = new Graphic(i, symbolFusionLote)\r\n\r\n      // agregar el grafico directo al mapa\r\n      graphicLayerLoteDivision.add(lote);\r\n    }\r\n    selfCm.map.addLayer(graphicLayerLoteDivision);\r\n    return geomLoteDivided;\r\n  },\r\n\r\n  _addGraphicsPointLotsAndArancel() {\r\n    const deferred = new Deferred();\r\n    const query = new Query();\r\n    query.where = selfCm.arancel\r\n    // especificar los campos devueltos\r\n    query.outFields = [_UBIGEO_FIELD, _F_MZN_FIELD];\r\n    query.returnGeometry = true\r\n    // query with order by fields\r\n    query.orderByFields = [_F_MZN_FIELD];\r\n    const qTask = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrCfArancel).getUrl());\r\n    qTask.execute(query, function (results) {\r\n      // Creamos grafico de punto lote\r\n      const graphicLayerPuntoLote = new GraphicsLayer({\r\n        id: idGraphicPuntoLote\r\n      });\r\n      // creamos grafico de frente de lote\r\n      const graphicLayerFrenteLote = new GraphicsLayer({\r\n        id: idGraphicFrenteLote\r\n      });\r\n      // let graphicLayerPredio = new GraphicsLayer({\r\n      //   id: idGraphicPredioCm\r\n      // });\r\n      const graphicLoteDivision = selfCm.map.getLayer(idGraphicLoteCm)\r\n      if (!graphicLoteDivision) {\r\n        return;\r\n      }\r\n      const frentes = {}\r\n      for (let row of results.features) {\r\n        for (let graphic of graphicLoteDivision.graphics) {\r\n          const isItc = geometryEngine.intersects(row.geometry, graphic.geometry)\r\n          if (!isItc) {\r\n            continue\r\n          }\r\n          // saber si un key esta dentro del objeto frentes\r\n          if (!frentes.hasOwnProperty(row.attributes[_F_MZN_FIELD])) {\r\n            frentes[row.attributes[_F_MZN_FIELD]] = row.geometry;\r\n          }\r\n          else {\r\n            const unionFrentes = geometryEngine.union([frentes[row.attributes[_F_MZN_FIELD]], row.geometry])\r\n            frentes[row.attributes[_F_MZN_FIELD]] = unionFrentes;\r\n          }\r\n        }\r\n      }\r\n      console.log(frentes)\r\n      for (let lote of graphicLoteDivision.graphics) {\r\n        for (let idx in frentes) {\r\n          const idItcFrentesByLotes = geometryEngine.intersects(lote.geometry, frentes[idx])\r\n          if (!idItcFrentesByLotes) {\r\n            continue\r\n          }\r\n          let itcFrentesByLotes = geometryEngine.intersect(frentes[idx], lote.geometry)\r\n          // add frentes to graphicLayerFrenteLote\r\n          const symbolFrenteLote = new SimpleLineSymbol(\r\n            SimpleLineSymbol.STYLE_SOLID,\r\n            new Color(\r\n              [\r\n                Math.floor(Math.random() * 255),\r\n                Math.floor(Math.random() * 255),\r\n                Math.floor(Math.random() * 255)]),\r\n            5\r\n          )\r\n          const frente = new Graphic(itcFrentesByLotes, symbolFrenteLote)\r\n          graphicLayerFrenteLote.add(frente);\r\n\r\n          // polilinea de frentes resultantes\r\n          let polyline = new Polyline({\r\n            paths: itcFrentesByLotes.paths,\r\n            spatialReference: { wkid: 4326 }\r\n          });\r\n\r\n          const puntoLoteTurf = selfCm._findMidpoint(polyline)\r\n\r\n          // crear un punto en el mapa\r\n          const puntoLote = new Point({\r\n            x: puntoLoteTurf.geometry.coordinates[0],\r\n            y: puntoLoteTurf.geometry.coordinates[1],\r\n            spatialReference: { wkid: 4326 }\r\n          })\r\n\r\n          // Agregar el punto p al mapa          \r\n          const puntoLoteGraphic = new Graphic(puntoLote, symbolPuntoLote)\r\n          graphicLayerPuntoLote.add(puntoLoteGraphic)\r\n        }\r\n      }\r\n      selfCm.map.addLayer(graphicLayerFrenteLote);\r\n      selfCm.map.addLayer(graphicLayerPuntoLote);\r\n      selfCm._removeLayerGraphic(idGraphicPredioByDivison);\r\n      selfCm.map.addLayer(graphicLayerPredioByDivison)\r\n      deferred.resolve();\r\n    });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _ApplyDivideLotesRefactor() {\r\n    selfCm.busyIndicator.show();\r\n    selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n    selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n    selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n    selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n    selfCm._removeLayerGraphic(idGraphicLoteDeleteCm);\r\n    selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n\r\n    // Union all graphics of graphicslayer\r\n    // let graphicLayerLineaDivision = selfCm.map.getLayer(idGraphicLineaDivision);\r\n    if (graphicLayerLineaDivision.graphics.length == 0) {\r\n      selfCm._showMessage('No se ha dibujado ninguna linea de division', 'warning');\r\n      selfCm.busyIndicator.hide();\r\n      return\r\n    }\r\n    if (!selfCm.lotesQuery) {\r\n      selfCm._showMessage(selfCm.nls.errorGetLand, 'warning');\r\n      selfCm.busyIndicator.hide();\r\n      return\r\n    }\r\n    return selfCm._getOriginalLots(selfCm.lotesQuery)\r\n      .then(originLots => {\r\n        const geomLoteDivided = selfCm._divideLotsByLines();\r\n        return selfCm._getMaxCodLot(geomLoteDivided);\r\n      })\r\n      .then(proprsLot => {\r\n        selfCm._ordenarPoligonosNorteSur(\r\n          proprsLot.polygons,\r\n          parseInt(proprsLot.maxCodLote),\r\n          selfCm.bodyTbDatosLoteDvApCm\r\n        )\r\n        selfCm.map.reorderLayer(selfCm.map.getLayer(idGraphicLoteCm), selfCm.map.graphicsLayerIds.indexOf(graphicLayerLabelLineaDivision.id));\r\n        selfCm.map.setExtent(selfCm.currentLotsRows[0].geometry.getExtent().expand(1.5), true);\r\n        return selfCm._addGraphicsPointLotsAndArancel();\r\n      })\r\n      .then(() => {\r\n        selfCm._populateTablePredio(selfCm.bodyTbPrediosDvApCm, selfCm._activateToolPrediosByDivision)\r\n        // let graphicLayerPuntoLote = selfCm.map.getLayer(idGraphicPuntoLote)\r\n        // console.log(graphicLayerPuntoLote)\r\n        // LandAssignment.lands = selfCm.responseRequests;\r\n        // LandAssignment.pointLots = selfCm.currentPoinLotsRows;\r\n        // LandAssignment.addRowToTableLandAssignment();\r\n        selfCm.busyIndicator.hide();\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(error.message, type = \"error\")\r\n      })\r\n  },\r\n\r\n  // ----------------------------------------------------------------------------------------------\r\n  // GeoprocessingServices\r\n  // ----------------------------------------------------------------------------------------------\r\n  _executeReasignacionGpService(evt) {\r\n    if (!selfCm.xy.length) {\r\n      selfCm._showMessage(\"La solicitud no se puede realizar porque no se grafico la nueva ubicación del predio\", type = \"error\")\r\n      return\r\n    }\r\n    selfCm._showMessageConfirm().then(function (result) {\r\n      if (result) {\r\n        let params = {\r\n          \"cod_pred\": selfCm.codigosPredios,\r\n          \"ubigeo\": paramsApp['ubigeo'],\r\n          \"geometry\": selfCm.xy,\r\n          \"user\": paramsApp['username'],\r\n          \"id_solicitud\": selfCm.codRequestsCm\r\n        }\r\n\r\n        // revisar si alguna propiedad tiene valor nulo o indefinido\r\n        for (let key in params) {\r\n          if (params[key] == null || params[key] == undefined) {\r\n            selfCm._showMessage(`Debe especificar el valor de ${key}`, type = \"error\");\r\n            return\r\n          }\r\n        }\r\n        selfCm._executeGPService(selfCm.config.reasignacionUrl, params)\r\n      }\r\n      else {\r\n        return\r\n      }\r\n    })\r\n  },\r\n\r\n  _executeAcumulacionGpService(evt) {\r\n    if (!selfCm.lotesQuery) {\r\n      selfCm._showMessage(selfCm.nls.errorGetLand, 'warning');\r\n      selfCm.busyIndicator.hide();\r\n      return\r\n    }\r\n    if (!selfCm.map.getLayer(idGraphicLoteCm)) {\r\n      selfCm._showMessage(\"La solicitud no se puede realizar porque no se ha previsualizado la acumulación\", type = \"error\")\r\n      return\r\n    }\r\n\r\n    if (!selfCm.xy.length) {\r\n      selfCm._showMessage(\"La solicitud no se puede realizar porque no se grafico el predio resultante\", type = \"error\")\r\n      return\r\n    }\r\n    const labelCodLotesLayer = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n\r\n    selfCm._showMessageConfirm().then(function (result) {\r\n      selfCm.busyIndicator.show();\r\n      selfCm._addWarningMessageExecute()\r\n      if (result) {\r\n        const labelCodLotesLayerGraphic = labelCodLotesLayer.graphics;\r\n\r\n        Acumulation.codRequests = selfCm.codRequestsCm;\r\n        Acumulation.currentLotsRows = selfCm.currentLotsRows;\r\n\r\n        Acumulation.attributes = labelCodLotesLayerGraphic.map((i) => {\r\n          return {\r\n            codLot: i.symbol.text,\r\n            lotUrb: i.attributes.lot_urb,\r\n            coords: [\r\n              i.geometry.x,\r\n              i.geometry.y\r\n            ]\r\n          }\r\n        });\r\n\r\n        Acumulation.newPointLotsGraphics = selfCm.map.getLayer(idGraphicPuntoLote).graphics;\r\n        Acumulation.newLandsGraphics = selfCm.map.getLayer(idGraphicPredioCm).graphics;\r\n        Acumulation.newLandsGraphics[0]['codPre'] = selfCm.idPredioAcumulacion.split(\"_\")[2];\r\n        Acumulation.landUrl = selfCm.layersMap.getLayerInfoById(idLyrCfPredios).getUrl();\r\n        Acumulation.pointLotUrl = selfCm.layersMap.getLayerInfoById(idLyrCfLotesPun).getUrl();\r\n        Acumulation.lotUrl = selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl();\r\n        Acumulation.arancelUrl = selfCm.layersMap.getLayerInfoById(idLyrCfArancel).getUrl();\r\n        Acumulation.blockUrl = selfCm.layersMap.getLayerInfoById(idLyrCfManzanaUrb).getUrl();\r\n        Acumulation.cadastralBlockUrl = selfCm.layersMap.getLayerInfoById(idLyrCfManzana).getUrl();\r\n        Acumulation.config = selfCm.config;\r\n        Acumulation.lotGraphic = selfCm.map.getLayer(idGraphicLoteCm).graphics;\r\n        Acumulation.ubigeo = paramsApp['ubigeo'];\r\n        Acumulation.user = paramsApp['username'];\r\n        Acumulation.caseRequest = selfCm.case;\r\n\r\n\r\n        Acumulation.executeAcumulation()\r\n          .then(response => {\r\n            selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n            selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n            selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n            selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n            selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n            selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(false)\r\n            selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(true)\r\n            selfCm._FormResult(selfCm.codRequestsCm, selfCm.caseDescription);\r\n            selfCm.busyIndicator.hide();\r\n            selfCm._removeWarningMessageExecute()\r\n            selfCm._showMessage(\"Proceso completado satisfactoriamente\", type = \"success\");\r\n          })\r\n          .catch(error => {\r\n            console.log(error)\r\n            selfCm._removeWarningMessageExecute()\r\n            selfCm._showMessage(error, type = \"error\");\r\n            selfCm.busyIndicator.hide();\r\n          })\r\n      }\r\n      else {\r\n        selfCm.busyIndicator.hide();\r\n        return\r\n      }\r\n    })\r\n  },\r\n\r\n  _executeSubdivisionGpService(evt) {\r\n\r\n    const layerLote = selfCm.map.getLayer(idGraphicLoteCm)\r\n\r\n    if (!selfCm.lotesQuery) {\r\n      selfCm._showMessage(selfCm.nls.errorGetLand, 'warning');\r\n      selfCm.busyIndicator.hide();\r\n      return\r\n    }\r\n\r\n    if (!layerLote) {\r\n      selfCm._showMessage(\"La solicitud no se puede realizar porque no se ha previsualizado la subdivisión\", type = \"error\")\r\n      return\r\n    }\r\n\r\n    if (graphicLayerPredioByDivison.graphics.length != layerLote.graphics.length) {\r\n      selfCm._showMessage(\"La solicitud no se puede realizar porque no se graficaron los predios resultantes\", type = \"error\")\r\n      return\r\n    }\r\n\r\n    // Check if all labels have a value\r\n    const labelCodLotesLayer = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n    for (let pred of labelCodLotesLayer.graphics) {\r\n      if (!pred.attributes.lot_urb || pred.attributes.lot_urb === \"...\") {\r\n        selfCm._showMessage(\"Debe especificar los valores de Lote Urbano\", type = \"error\")\r\n        return\r\n      }\r\n    }\r\n\r\n    // Check if all lots have a land\r\n    const checkLotsWithinLands = UtilityCase.checkLotsWithinLands(layerLote.graphics, graphicLayerPredioByDivison.graphics)\r\n    if (!checkLotsWithinLands) {\r\n      selfCm._showMessage(\"La solicitud no se puede realizar porque uno de los lotes no tiene un predio resultante\", type = \"error\")\r\n      return\r\n    }\r\n\r\n    selfCm._showMessageConfirm().then(function (result) {\r\n      if (result) {\r\n        selfCm.busyIndicator.show();\r\n        selfCm._addWarningMessageExecute();\r\n        const labelCodLotesLayerGraphic = labelCodLotesLayer.graphics;\r\n\r\n        SubDivision.blockUrl = selfCm.layersMap.getLayerInfoById(idLyrCfManzanaUrb).getUrl();\r\n        SubDivision.lotUrl = selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl();\r\n        SubDivision.pointLotUrl = selfCm.layersMap.getLayerInfoById(idLyrCfLotesPun).getUrl();\r\n        SubDivision.arancelUrl = selfCm.layersMap.getLayerInfoById(idLyrCfArancel).getUrl();\r\n        SubDivision.landUrl = selfCm.layersMap.getLayerInfoById(idLyrCfPredios).getUrl();\r\n        SubDivision.cadastralBlockUrl = selfCm.layersMap.getLayerInfoById(idLyrCfManzana).getUrl();\r\n        SubDivision.currentLotsRows = selfCm.currentLotsRows;\r\n        SubDivision.newPointLotsGraphics = selfCm.map.getLayer(idGraphicPuntoLote).graphics;\r\n        SubDivision.newLandsGraphics = graphicLayerPredioByDivison.graphics;\r\n        SubDivision.newLandsGraphics.forEach((i) => {\r\n          i['codPre'] = i.attributes.id.split(\"_\")[2]\r\n        });\r\n        SubDivision.lotGraphic = layerLote.graphics;\r\n\r\n        SubDivision.attributes = labelCodLotesLayerGraphic.map((i) => {\r\n          return {\r\n            codLot: i.symbol.text,\r\n            lotUrb: i.attributes.lot_urb,\r\n            coords: [\r\n              i.geometry.x,\r\n              i.geometry.y\r\n            ]\r\n          }\r\n        });\r\n\r\n        SubDivision.config = selfCm.config;\r\n        SubDivision.ubigeo = paramsApp['ubigeo'];\r\n        SubDivision.user = paramsApp['username'];\r\n        SubDivision.caseRequest = selfCm.case;\r\n        SubDivision.codRequests = selfCm.codRequestsCm;\r\n\r\n        SubDivision.executeSubdivision()\r\n          .then(response => {\r\n            graphicLayerPredioByDivison.clear();\r\n            graphicLayerLineaDivision.clear();\r\n            graphicLayerLabelLineaDivision.clear();\r\n            selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n            selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n            selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n            selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n            selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(false)\r\n            selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(true)\r\n            selfCm._FormResult(selfCm.codRequestsCm, selfCm.caseDescription);\r\n            selfCm.busyIndicator.hide();\r\n            selfCm._removeWarningMessageExecute()\r\n            selfCm._showMessage(\"Proceso completado satisfactoriamente\", type = \"success\");\r\n          })\r\n          .catch(error => {\r\n            console.log(error)\r\n            selfCm._removeWarningMessageExecute()\r\n            selfCm._showMessage(error, type = \"error\");\r\n            selfCm.busyIndicator.hide();\r\n          })\r\n      }\r\n      else {\r\n        return\r\n      }\r\n    })\r\n  },\r\n\r\n  _executeInactivarGpService(evt) {\r\n    selfCm._showMessageConfirm().then(function (result) {\r\n      if (result) {\r\n        // let labelCodLotesLayer = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n        let params = {\r\n          \"ubigeo\": paramsApp['ubigeo'],\r\n          \"cod_pred\": selfCm.codigosPredios,\r\n          \"user\": paramsApp['username'],\r\n          \"id_solicitud\": selfCm.codRequestsCm\r\n        }\r\n        // revisar si alguna propiedad tiene valor nulo o indefinido\r\n        for (let key in params) {\r\n          if (params[key] == null || params[key] == undefined) {\r\n            selfCm._showMessage(`Debe especificar el valor de ${key}`, type = \"error\");\r\n            return\r\n          }\r\n        }\r\n        selfCm._executeGPService(selfCm.config.inactivacionUrl, params)\r\n      }\r\n      else {\r\n        return\r\n      }\r\n    })\r\n  },\r\n\r\n  _addWarningMessageExecute() {\r\n    const self = this;\r\n    const buzyElm = dojo.query(\"#dojox_widget_Standby_0\")[0]\r\n    const imgElm = buzyElm.querySelector(\"img\")\r\n    const loadingText = document.createElement('div');\r\n    loadingText.id = 'loadingTextCustom';\r\n    loadingText.style.position = 'absolute';\r\n    const topMessage = parseFloat(imgElm.style.top) + 80;\r\n    loadingText.style.top = `${topMessage}px`;\r\n    const leftImg = parseFloat(imgElm.style.left) + imgElm.width / 2;\r\n    loadingText.style.left = `${leftImg}px`;\r\n    loadingText.style.transform = 'translate(-50%, -50%)';\r\n    loadingText.style.background = 'white';\r\n    loadingText.style.zIndex = '1000';\r\n    loadingText.innerHTML = self.nls.warningExecute;\r\n\r\n    dojo.query(\"#dojox_widget_Standby_0\")[0].appendChild(loadingText);\r\n  },\r\n\r\n  _removeWarningMessageExecute() {\r\n    dojo.query(\"#loadingTextCustom\")[0].remove();\r\n  },\r\n\r\n  _executeIndependenceLands(evt) {\r\n    if (!LandAssignment.checkPointLotsSelected()) {\r\n      selfCm._showMessage(\"La solicitud no se puede realizar porque no se selecciono la vía donde se ubica el predio\", type = \"error\")\r\n      return\r\n    }\r\n    selfCm._showMessageConfirm().then(function (result) {\r\n      if (result) {\r\n        selfCm.busyIndicator.show();\r\n        selfCm._addWarningMessageExecute();\r\n        Independence.codRequest = selfCm.codRequestsCm;\r\n        Independence.cadastralBlockUrl = selfCm.layersMap.getLayerInfoById(idLyrCfManzana).getUrl();\r\n        Independence.ubigeo = paramsApp['ubigeo'];\r\n        Independence.user = paramsApp['username'];\r\n        Independence.newLands = LandAssignment.lands;\r\n        Independence.urlLands = selfCm.layersMap.getLayerInfoById(idLyrCfPredios).getUrl();\r\n        Independence.matrixLand = selfCm.currentLandTabRows;\r\n        Independence.config = selfCm.config;\r\n        Independence.currentLotsRows = selfCm.currentLotsRows;\r\n        Independence.caseRequest = selfCm.case;\r\n\r\n        Independence.executeIndependence()\r\n          .then(response => {\r\n            LandAssignment.removeAllGraphics();\r\n            selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(false)\r\n            selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(true)\r\n            selfCm._FormResult(selfCm.codRequestsCm, selfCm.caseDescription);\r\n            selfCm.busyIndicator.hide();\r\n            selfCm._removeWarningMessageExecute();\r\n            selfCm._showMessage(\"Proceso completado satisfactoriamente\", type = \"success\");\r\n          })\r\n          .catch(error => {\r\n            console.log(error)\r\n            selfCm._removeWarningMessageExecute();\r\n            selfCm._showMessage(error, type = \"error\");\r\n            selfCm.busyIndicator.hide();\r\n          })\r\n      }\r\n      else {\r\n        return\r\n      }\r\n    })\r\n  },\r\n\r\n  _executeGPService(url, params) {\r\n    let urlStatusRequest = `${selfCm.config.applicationListUrl}/${selfCm.codRequestsCm}`\r\n    selfCm._callApiRestServices(urlStatusRequest, {}).then(function (result) {\r\n      try {\r\n        if (result.idStatus != 1) {\r\n          throw new Error(`Esta solicitud (${selfCm.codRequestsCm}) ya fue procesada con anterioridad: ${result.date}`)\r\n        }\r\n        selfCm.busyIndicator.show();\r\n        // Agregar un elemento de texto debajo del BusyIndicator\r\n        let buzyElm = dojo.query(\"#dojox_widget_Standby_0\")[0]\r\n        let imgElm = buzyElm.querySelector(\"img\")\r\n        let loadingText = document.createElement('div');\r\n        loadingText.id = 'loadingTextCustom';\r\n        loadingText.style.position = 'absolute';\r\n        let topMessage = parseFloat(imgElm.style.top) + 80;\r\n        loadingText.style.top = `${topMessage}px`;\r\n        let leftImg = parseFloat(imgElm.style.left) + imgElm.width / 2;\r\n        loadingText.style.left = `${leftImg}px`;\r\n        loadingText.style.transform = 'translate(-50%, -50%)';\r\n        loadingText.style.background = 'white';\r\n        loadingText.style.zIndex = '1000';\r\n\r\n        dojo.query(\"#dojox_widget_Standby_0\")[0].appendChild(loadingText);\r\n        // selfCm._FormResult(selfCm.codRequestsCm, selfCm.caseDescription);\r\n        selfCm.gp = new Geoprocessor(url);\r\n        selfCm.gp.submitJob(params, selfCm._completeCallback, selfCm._statusCallback);\r\n      } catch (error) {\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(error.message, type = \"error\")\r\n      }\r\n\r\n    })\r\n  },\r\n\r\n  _statusCallback(JobInfo) {\r\n    // console.log(JobInfo)\r\n    selfCm.jobId = JobInfo.jobId\r\n    let textMessage = JobInfo.messages.map((message) => { return message.description })\r\n    try {\r\n      dojo.query(\"#loadingTextCustom\")[0].textContent = textMessage.slice(-1)[0] ? textMessage.slice(-1)[0] : ''\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  },\r\n  _completeCallback(JobInfo) {\r\n    switch (JobInfo.jobStatus) {\r\n      case \"esriJobSubmitted\":\r\n        // El trabajo se ha enviado al servidor y está esperando en la cola.\r\n        console.log(\"El trabajo se ha enviado y está esperando en la cola.\");\r\n        break;\r\n      case \"esriJobExecuting\":\r\n        // El trabajo se está ejecutando actualmente en el servidor.\r\n        console.log(\"El trabajo se está ejecutando en el servidor.\");\r\n        break;\r\n      case \"esriJobSucceeded\":\r\n        // El trabajo se ha completado satisfactoriamente y los resultados están disponibles.\r\n        selfCm.gp.getResultData(JobInfo.jobId, \"response\", function (result) {\r\n          if (!result.value.status) {\r\n            selfCm.busyIndicator.hide();\r\n            selfCm._showMessage(result.value.message, type = \"error\");\r\n            return\r\n          }\r\n\r\n          selfCm._sendDataToPlatform(result.value.response)\r\n\r\n\r\n          switch (selfCm.case) {\r\n            case \"1\":\r\n              selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n              break;\r\n            case \"2\":\r\n              selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n              selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n              selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n              selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n              selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n              break\r\n            case \"3\":\r\n              graphicLayerPredioByDivison.clear();\r\n              graphicLayerLineaDivision.clear();\r\n              graphicLayerLabelLineaDivision.clear();\r\n              // selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n              selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n              selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n              selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n              selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n              break\r\n            case \"4\":\r\n              // dojo.query(\".tablinksCm.active\")[0].click();\r\n              // selfCm._loadIniRequestsCm()\r\n              break\r\n            default:\r\n              break;\r\n          }\r\n          selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(false)\r\n          selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(true)\r\n          if (selfCm.case == \"4\") {\r\n            dojo.query(\".backTrayClsCm\")[0].click()\r\n          } else {\r\n            selfCm._FormResult(selfCm.codRequestsCm, selfCm.caseDescription);\r\n          }\r\n          // Codigo para mostrar la ventana de resultados\r\n\r\n\r\n        })\r\n        break;\r\n      case \"esriJobFailed\":\r\n        // El trabajo ha fallado y no se han podido generar los resultados.\r\n        selfCm._showMessage(\"El proceso ha fallado y no se han podido generar los resultados.\", type = \"error\");\r\n        break;\r\n      case \"esriJobCancelled\":\r\n        // El trabajo ha sido cancelado por el usuario.\r\n        selfCm._showMessage(\"El proceso ha sido cancelado por el usuario.\");\r\n        break;\r\n      case \"esriJobTimedOut\":\r\n        // El trabajo ha expirado debido a un tiempo de espera.\r\n        selfCm._showMessage(\"El proceso ha superado el tiempo de espera necesario para su ejecución.\", type = \"error\");\r\n        break;\r\n      default:\r\n        // El estado del trabajo no se reconoce.\r\n        selfCm._showMessage(\"El estado del proceso no se reconoce.\");\r\n        break;\r\n    }\r\n    selfCm.busyIndicator.hide();\r\n    // remove 'loadingTextCustom'\r\n    dojo.query(\"#loadingTextCustom\")[0].remove();\r\n  },\r\n  _cancelProcess(evt) {\r\n    selfCm.gp.cancelJob(selfCm.jobId, function (info) {\r\n      console.log(info.jobStatus)\r\n    });\r\n  },\r\n\r\n  _sendDataToPlatform(data) {\r\n    for (let predio of data.results) {\r\n      predio['ubigeo'] = paramsApp.ubigeo;\r\n    }\r\n\r\n    data['idType'] = parseInt(selfCm.case)\r\n    fetch(selfCm.config.updateStatusApplication, {\r\n      method: 'POST', // o 'PUT'\r\n      body: JSON.stringify(data), // los datos pueden ser de tipo 'string' o {object}\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n      .then(response => selfCm._showMessage('El proceso se completó satisfactoriamente.'))\r\n      // .catch(error => console.error('Error:', error));\r\n      .catch(error => selfCm._showMessage(error, type = \"error\"));\r\n  },\r\n\r\n  _exportTableToExcel(evt) {\r\n    // Obtén la tabla HTML\r\n    const table = dojo.query(\"#tableRequestCm\")[0]\r\n    let headerRow = table.querySelector(\"tr\");\r\n    let rows = table.querySelectorAll(\"tr\")\r\n\r\n    let headers = [];\r\n    let headerCols = headerRow.querySelectorAll(\"th\");\r\n    for (let h = 0; h < headerCols.length - 1; h++) {\r\n      headers.push(headerCols[h].innerText);\r\n    }\r\n\r\n    let data = [];\r\n\r\n    // Recorre las filas (ignora la primera fila que contiene los encabezados)\r\n    for (let i = 0; i < rows.length; i++) {\r\n      if (i == 0) continue;\r\n      let row = {}, cols = rows[i].querySelectorAll(\"td\");\r\n\r\n      // Recorre las columnas\r\n      for (let j = 0; j < cols.length - 1; j++) {\r\n        // Usa el texto del encabezado como clave y el texto de la celda como valor\r\n        row[headers[j]] = cols[j].innerText;\r\n      }\r\n\r\n      data.push(row);\r\n    }\r\n\r\n\r\n\r\n    // Convierte el array de objetos en una cadena JSON\r\n    let wb = XLSX.utils.book_new();\r\n\r\n    // Crear una hoja de cálculo a partir de los datos JSON\r\n    let ws = XLSX.utils.json_to_sheet(data);\r\n    let sheetName = selfCm.currentTabActive.replace(\"_\", \" \");\r\n    XLSX.utils.book_append_sheet(wb, ws, sheetName);\r\n\r\n    // Escribir el libro de trabajo y forzar una descarga\r\n    XLSX.writeFile(wb, `reporte_solicitudes_${selfCm.currentTabActive}.xlsx`);\r\n  },\r\n\r\n  _dataURItoBlob(dataURI) {\r\n    var byteString = atob(dataURI.split(',')[1]);\r\n    var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n    var buffer = new ArrayBuffer(byteString.length);\r\n    var dataView = new Uint8Array(buffer);\r\n    for (var i = 0; i < byteString.length; i++) {\r\n      dataView[i] = byteString.charCodeAt(i);\r\n    }\r\n    return new Blob([buffer], { type: mimeString });\r\n  },\r\n\r\n  _sendObservation(evt) {\r\n    selfCm.busyIndicator.show();\r\n    let file = selfCm.imgUploadApCm.files[0];\r\n    if (file == undefined) {\r\n      selfCm.busyIndicator.hide();\r\n      selfCm._showMessage(\"Debe enviar una imagen como elemento de sustento\", type = \"error\");\r\n      return\r\n    }\r\n    let reader = new FileReader();\r\n    let data = new FormData();\r\n    reader.onloadend = function () {\r\n      data.append('application_id', selfCm.codRequestsCm);\r\n      data.append('description', selfCm.textAreaObsApCm.value);\r\n      data.append('img', selfCm.imgUploadApCm.files[0]);\r\n\r\n      return fetch(selfCm.config.observationUrl, {\r\n        method: 'POST',\r\n        body: data\r\n      })\r\n        .then(response => {\r\n          if (!response.ok) {\r\n            selfCm.busyIndicator.hide();\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n          }\r\n          selfCm.busyIndicator.hide();\r\n          selfCm._showMessagePromise(\"Se envió la solucitud satisfactoriamente.\").then((result) => {\r\n            dojo.query(\".backRequestsClsCm\")[0].click();\r\n            dojo.query(\".backTrayClsCm\")[0].click();\r\n            selfCm._loadIniRequestsCm();\r\n          })\r\n\r\n        }).catch(error => {\r\n          selfCm.busyIndicator.hide();\r\n          selfCm._showMessage(`Ocurrio un problema al procesar su solicitud: ${error}`, type = \"error\")\r\n        });\r\n    }\r\n    reader.readAsDataURL(file);\r\n  },\r\n\r\n  _uploadImagenObs(evt) {\r\n    let imageDiv = dojo.query(\".thumbnailClsCm\")[0];\r\n    let file = evt.target.files[0];\r\n    let reader = new FileReader();\r\n\r\n    reader.onloadend = function () {\r\n      imageDiv.innerHTML = \"\";\r\n      imageDiv.style.backgroundImage = 'url(' + reader.result + ')';\r\n      imageDiv.style.backgroundSize = 'contain';\r\n      imageDiv.style.backgroundRepeat = 'no-repeat';\r\n      imageDiv.style.backgroundPosition = 'center';\r\n    }\r\n\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n      imageDiv.innerHTML = \"<span><i class='far fa-image'></i></span>\";\r\n    }\r\n  },\r\n  _searchRequestByCodPred(evt) {\r\n    if (evt.keyCode === 13) {\r\n      if (evt.target.value == '') {\r\n        if ('cpm' in selfCm.queryRequests) {\r\n          delete selfCm.queryRequests['cpm'];\r\n        }\r\n      } else {\r\n        selfCm.queryRequests['cpm'] = evt.target.value;\r\n      }\r\n      dojo.query(\".tablinksCm.active\")[0].click();\r\n    }\r\n  },\r\n\r\n  _sortedByDate(evt) {\r\n    let columnOrder = evt.currentTarget.dataset.val\r\n    evt.currentTarget.dataset.val = columnOrder.includes('-') ? columnOrder.replace('-', '') : `-${columnOrder}`\r\n    selfCm.queryRequests['ordering'] = evt.currentTarget.dataset.val;\r\n    dojo.query(\".tablinksCm.active\")[0].click();\r\n  },\r\n\r\n  onOpen() {\r\n    console.log('CartoMaintenanceWgt::onOpen');\r\n    // let panel = this.getPanel();\r\n    // panel.position.height = 700;\r\n    // panel.setPosition(panel.position);\r\n    // panel.panelManager.normalizePanel(panel);\r\n\r\n    this._createToolbar();\r\n\r\n    dojo.query(\".backTrayClsCm\").on('click', this._openFormCase);\r\n    dojo.query(\".tablinksCm\").on('click', this._loadRequestsCm);\r\n    dojo.query(\"#btnObsCaseCm\").on('click', this._openFormObs);\r\n    dojo.query(\".backRequestsClsCm\").on('click', this._openFormObs);\r\n    // dojo.query(\"#goodRequestsCm\").on('click', this._openFormResult);\r\n    dojo.query(\"#showInfoDocCm\").on('click', this._openSupportingDocument)\r\n\r\n    // Reasignacion\r\n    dojo.query(\"#btnDrawMarkerCm\").on('click', this._activateTool);\r\n\r\n    dojo.query(\"#btnFsCm\").on('click', this._ApplyAcumulationLotsRefactor)\r\n    dojo.query(\"#btnDrawLinesDvCm\").on('click', this._activateToolLinesDivision)\r\n    dojo.query(\"#btnApplyDvCm\").on('click', this._ApplyDivideLotesRefactor)\r\n    dojo.query(\"#titleCaseCm\").on('click', this._zoomHomeRequests)\r\n    dojo.query(\"#sendDataRsCm\").on('click', this._executeReasignacionGpService)\r\n    dojo.query('#sendDataFsCm').on('click', this._executeAcumulacionGpService)\r\n    dojo.query('#sendDataDvCm').on('click', this._executeSubdivisionGpService)\r\n    dojo.query('#sendDataDtCm').on('click', this._executeInactivarGpService)\r\n    dojo.query('#btnReportCm').on('click', this._exportTableToExcel)\r\n    dojo.query('#imgUploadCm').on('change', this._uploadImagenObs)\r\n    dojo.query('#sendDataObsGrCm').on('click', this._sendObservation)\r\n    dojo.query('#searchTbxCm').on(\"keyup\", this._searchRequestByCodPred)\r\n    dojo.query('.columnDateClsCm').on(\"click\", this._sortedByDate)\r\n    // dojo.query('.columnCaseClsCm').on(\"click\", this._sortedByDate)\r\n    this._loadIniRequestsCm()\r\n\r\n    selfCm.map.addLayer(graphicLayerLabelLineaDivision)\r\n    // selfCm.map.addLayer(graphicLayerLandsByIndependence)\r\n    selfCm.editToolbar = new Edit(selfCm.map);\r\n    selfCm.map.on(\"click\", selfCm._enableEditingLabelsLotesDivision);\r\n    selfCm.editToolbar.on(\"deactivate\", function (evt) {\r\n      if (evt.info.isModified) {\r\n        selfCm.map.setInfoWindowOnClick(true)\r\n        // firePerimeterFL.applyEdits(null, [evt.graphic], null);\r\n      }\r\n    });\r\n  },\r\n\r\n\r\n  // onClose(){\r\n  //   console.log('CartoMaintenanceWgt::onClose');\r\n  // },\r\n  // onMinimize(){\r\n  //   console.log('CartoMaintenanceWgt::onMinimize');\r\n  // },\r\n  // onMaximize(){\r\n  //   console.log('CartoMaintenanceWgt::onMaximize');\r\n  // },\r\n  // onSignIn(credential){\r\n  //   console.log('CartoMaintenanceWgt::onSignIn', credential);\r\n  // },\r\n  // onSignOut(){\r\n  //   console.log('CartoMaintenanceWgt::onSignOut');\r\n  // }\r\n  // onPositionChange(){\r\n  //   console.log('CartoMaintenanceWgt::onPositionChange');\r\n  // },\r\n  // resize(){\r\n  //   console.log('CartoMaintenanceWgt::resize');\r\n  // }\r\n});\r\n"]}