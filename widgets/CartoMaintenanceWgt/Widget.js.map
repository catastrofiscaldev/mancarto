{"version":3,"sources":["../../../widgets/CartoMaintenanceWgt/Widget.js"],"names":["declare","BaseWidget","_WidgetsInTemplateMixin","Draw","Edit","Graphic","SimpleFillSymbol","SimpleMarkerSymbol","SimpleLineSymbol","Color","GraphicsLayer","Point","LayerInfos","lang","FeatureLayer","QueryTask","Query","WidgetManager","geometryEngine","Polyline","Polygon","webMercatorUtils","Geoprocessor","BusyIndicator","Message","turf","XLSX","Deferred","TextSymbol","Font","CaseInfo","StatisticDefinition","esriRequest","SubDivision","Acumulation","Independence","Deactivate","LandAssignment","LandProcess","LandMatrix","UtilityCase","requestToAttendState","requestsObservedState","requestsAttendState","idLyrCatastroFiscal","idLyrCfPredios","idLyrCfLotesPun","idLyrCfEje_vial","idLyrCfNumeracion","idLyrCfArancel","idLyrCfLotes","idLyrCfUnidadesurbanas","idLyrCfParques","idLyrCfManzana","idLyrCfManzanaUrb","idLyrCfSector","idLyrDistricts","iconByState","_UBIGEO_FIELD","_ID_LOTE_P_FIELD","_COD_MZN_FIELD","_F_MZN_FIELD","_COD_SECT_FIELD","_COD_PRE_FIELD","_COD_LOTE_FIELD","toolbarCm","params","URLSearchParams","window","location","search","paramsApp","keys","key","get","symbolPuntoLote","STYLE_SQUARE","STYLE_SOLID","symbolFusionLote","symbolEliminarLote","STYLE_DIAGONAL_CROSS","symbolLoteSelected","symbolDivisionLote","STYLE_DASH","symbolPredio","symbolPredioSelected","symbolPredioSelected2","symbolSnapPointCm","STYLE_CROSS","idGraphicPredioCm","idGraphicPredioByDivison","idGraphicPredioSelectedCm","idGraphicLoteCm","idGraphicLoteSelectedCm","idGraphicPuntoLote","idGraphicFrenteLote","idGraphicLineaDivision","idGraphicLoteDeleteCm","idGraphicLabelLineaDivision","idGraphicLabelCodLote","symbolByCase","graphicLayerLineaDivision","id","graphicLayerLabelLineaDivision","graphicLayerPredioByDivison","fontAwesome","document","createElement","src","head","appendChild","baseClass","codRequestsCm","currentTabActive","layersMap","queryUbigeo","case","caseDescription","lotesQuery","idlotes","arancel","codigosPredios","xy","idxLines","cpmPredioDivision","idPredioDivision","cpmAcumulacion","idAcumulacion","editToolbar","idButtonDrawActive","queryRequests","ubigeo","limit","ordering","responseRequests","currentLotsRows","currentLandRows","currentPoinLotsRows","postCreate","inherited","arguments","console","log","_getAllLayers","selfCm","_filterByDistrictCm","_startExtentByDistrictCm","esri","bundle","toolbars","draw","addPoint","addShape","resume","start","getInstance","map","itemInfo","then","hitch","layerInfosObj","_showMessage","message","type","title","nls","_widgetLabel","titleLabel","_showMessagePromise","messagetext","deferred","buttons","label","onClick","resolve","hide","promise","_showMessageConfirm","mensaje","quesstionContinue","queryPredios","getLayerInfoById","getFilter","setFilter","query","where","qTask","getUrl","executeForExtent","results","setExtent","extent","homeWidget","getWidgetsByName","homeDijit","error","startup","busyIndicator","create","target","domNode","parentNode","backgroundOpacity","_callApiRestServices","baseUrl","url","URL","Object","forEach","searchParams","append","fetch","response","Error","status","json","catch","err","_getRequestsTrayDataCm","responseData","state","data","filter","i","_loadIniRequestsCm","dojo","click","_parseDateStringtoFormat","dateString","date","Date","day","getDate","month","getMonth","year","getFullYear","_loadRequestsCm","evt","show","config","applicationListUrl","estado","desc","dataHtml","lands","lnd","join","idType","icon","tbody","innerHTML","tb","getElementsByTagName","length","tableRequestApCm","removeChild","on","_openFormCase","_openFormResult","removeClass","classList","add","_zoomToPredSelectedEvt","cup","currentTarget","dataset","_zoomToPredSelected","_handleFeatureSelected","feature","featureSelected","setSymbol","addLayer","centerAt","geometry","setTimeout","_removeLayerGraphic","LandCls","Land","prediosLayer","propertyLayer","mode","MODE_ONDEMAND","outFields","codCpu","selectFeatures","SELECTION_NEW","emptyLandSelected","reject","_openSupportingDocument","value","emptyDocSupport","open","focus","executeQueryTask","Promise","execute","_getLandsOriginals","self","LotCls","Lot","queryLands","cpuOriginal","currentLandTabRows","ubigeoFieldName","returnGeometry","urlLands","features","errorGetLand","idLots","attributes","idLotP","_getLotsOriginals","queryLots","urlLots","emptyLotRequests","codMznValues","codSectValues","_getPointLotsOriginals","queryPointLots","urlPointLots","emptyPointLotRequests","_getLandsOriginalsTab","idSolicitud","urlOriginal","landsByApplicationUrl","_getOriginalData","_zoomExtentToLote","unionPredios","_unionFeatures","getExtent","expand","_zoomExtentToLoteRefactor","cod_pre","split","returnDistinctValues","urlPredios","idLote","idmanzana","idsector","queryLote","urlLotes","emptyLotSelected","graphic","interval","setInterval","graphics","symbol","clearInterval","_zoomHomeRequests","_toggleBodyCaseInfo","closest","querySelector","toggle","_requestCaseInfo","urlResults","resultsByApplication","urlDocSupport","all","_","responseResults","responseDocSupport","rows","idx","contentCard","active","empyLandResultsRequests","support","rowsResults","addClass","uniqueCodeLands","reasignarApCm","fusionApCm","divisionApCm","eliminacionApCm","independenceApCm","pointLots","landsSymbol","landsSymbolSelected","removeAllGraphics","renderTableLandAssignment","renderButtonProcess","_executeIndependenceLands","selectedPointLots","bind","highlightLand","reestartSymbolLand","resultCtnApCm","remove","obsCtnApCm","requestTrayApCm","casesCtnApCm","row","rowList","td","deactivate","disableSnapping","bodyTbLinesDvApCm","bodyTbPrediosDvApCm","bodyTbDatosLoteDvApCm","clear","_removeClassActiveButton","_openFormObs","textAreaObsApCm","imageDiv","imgUploadApCm","style","backgroundImage","_FormResult","id_solicitud","caseCm","urlPredioResults","bodyTbResultsApCm","predio","index","_centerAtPredioResult","replace","_createToolbar","_addToMap","screenPoint","toScreen","snappingManager","getSnappingPoint","undefined","point_g","webMercatorToGeographic","graphicLayer","x","y","cpm","setInfoWindowOnClick","alert","errorSnapingLocate","nameIdLine","_populateTableDrawLine","_addNameToLine","layerId","graphicsLayerIds","includes","removeLayer","getLayer","_activateTool","_activateSnappingByReasignar","activate","_activateToolAcumulacion","parentElement","_activateSnappingByAcumulacion","_activateToolLinesDivision","_activateSnappingByDivision","cflayer","snapManager","enableSnapping","snapPointSymbol","tolerance","layerInfos","layer","setLayerInfos","graphicLayerPuntoLote","graphicsLayerInfo","layers","LayerInfo","name","arr","union","_unionFeaturesAcumulation","graphicLayerLoteFusion","_extent","_ApplyAcumulationLotsRefactor","_getOriginalLots","geomLoteAcumulation","_getMaxCodLot","_ordenarPoligonosNorteSur","proprsLot","polygons","parseInt","maxCodLote","bodyTbDatosLoteFsApCm","_addGraphicsPointLotsAndArancel","_populateTablePredio","bodyTbPrediosFsApCm","_getMidpoint","polyline","geodesicLength","midpoint","geodesicDensify","getPoint","_findMidpoint","lengthPolylineChunk","line","lineString","paths","options","units","along","_getLongestPolyline","longestPath","path","polylineChunk","spatialReference","wkid","_dividePolygon","poly","lines","divide","cut","item","rings","simplePolygon","push","idLine","tr","cursor","_deleteRowLine","_zoonToLineDivision","_editaNameLineDivision","elem","graphicLabel","polylineGeom","polylineGeomUtm","midPoint","pointLabel","coordinates","font","STYLE_NORMAL","VARIANT_NORMAL","WEIGHT_BOLD","txtSym","setOffset","setAlign","ALIGN_END","setHaloColor","setHaloSize","text","innerText","refresh","bodyTable","drawFunction","_activateSnappingPrediosByDivision","graphiclayer","_activateToolPrediosByDivision","_changeValueCodLote","selectedValue","currentSelectId","lyr","graphicSelected","selects","select","graphicNotSelected","_changeLotUrb","lot_urb","_centerAtLabelCodLoteDivision","centerAndZoom","_editLoteUrbanoDivision","selectedOptions","_buildDataLoteTable","tableBody","predios","indexCell","className","textContent","num","codigoCell","optionDisabled","disabled","option","p","cod_lote","selected","loteUrbCell","loteUrbSelect","optionDisabledLotUrb","cloneNode","request","urbanLotNumber","locationMarker","poligonos","coordenadasNorte","poligono","ymax","poligonosOrdenados","slice","sort","a","b","coordenadaNorteA","indexOf","coordenadaNorteB","graphicLayerLabelCodLoteDivision","dataLoteTable","polygon","center","pointOnFeature","_zfill","setColor","setSize","idGraphic","clase","_enableEditingLabelsLotesDivision","MOVE","len","Array","fill","polygonos","estadisticaDef","statisticType","onStatisticField","outStatisticFieldName","outStatistics","queryTask","result","resultado","outSR","f","requestOptions","content","handleAs","callbackParamName","usePost","_getPolylinesDrawn","unionGraphicLayerLineaDivision","lineGeometry","_divideLotsByLines","errorLotQuery","polygonGeometry","geomLoteDivided","errorDivideLot","graphicLayerLoteDivision","lote","orderByFields","graphicLayerFrenteLote","graphicLoteDivision","frentes","isItc","intersects","hasOwnProperty","unionFrentes","idItcFrentesByLotes","itcFrentesByLotes","intersect","symbolFrenteLote","Math","floor","random","frente","puntoLoteTurf","puntoLote","puntoLoteGraphic","_ApplyDivideLotesRefactor","emptyLineSubdivision","reorderLayer","_executeReasignacionGpService","emptyNewLocation","_executeGPService","reasignacionUrl","_executeAcumulacionGpService","emptyPreviewAccumulation","emptyNewLand","labelCodLotesLayer","_addWarningMessageExecute","labelCodLotesLayerGraphic","codRequests","codLot","lotUrb","coords","newPointLotsGraphics","newLandsGraphics","landUrl","pointLotUrl","lotUrl","arancelUrl","blockUrl","cadastralBlockUrl","lotGraphic","user","caseRequest","queryBlock","executeAcumulation","setVisibility","_removeWarningMessageExecute","successProcess","_executeSubdivisionGpService","layerLote","emptyPreviewSubdivision","pred","emptyLotCodeSubdivision","emptyUrbanLotSubdivision","emptyGraphicLandSubdivision","checkLotsWithinLands","emptyLandResultSubdivision","executeSubdivision","_executeInactivarGpService","codRequest","cpu","executeDeactivate","buzyElm","imgElm","loadingText","position","topMessage","parseFloat","top","leftImg","left","width","transform","background","zIndex","warningExecute","checkPointLotsSelected","emptyWaySelectedIndependence","newLands","matrixLand","executeIndependence","urlStatusRequest","idStatus","gp","submitJob","_completeCallback","_statusCallback","JobInfo","jobId","textMessage","messages","description","jobStatus","getResultData","_sendDataToPlatform","_cancelProcess","cancelJob","info","_exportTableToExcel","table","headerRow","querySelectorAll","headers","headerCols","h","cols","j","wb","utils","book_new","ws","json_to_sheet","sheetName","book_append_sheet","writeFile","_dataURItoBlob","dataURI","byteString","atob","mimeString","buffer","ArrayBuffer","dataView","Uint8Array","charCodeAt","Blob","_sendObservation","file","files","emptyImageSupport","reader","FileReader","FormData","onloadend","observationUrl","method","body","ok","successRequestObservation","errorProcessRequestObservation","readAsDataURL","_uploadImagenObs","backgroundSize","backgroundRepeat","backgroundPosition","_searchRequestByCodPred","keyCode","_sortedByDate","columnOrder","val","onOpen","isModified"],"mappings":"QAAoB,oB,EACG,iB,EACa,+B,EACnB,oB,EACA,oB,EACG,c,EACS,+B,EACE,iC,EACF,+B,EACX,kB,EACQ,2B,EACR,qB,EACK,4B,EACN,iB,EACQ,0B,EACH,sB,EACJ,kB,EACQ,oB,EACC,8B,EACN,wB,EACD,uB,EACS,gC,EACJ,yB,EACC,+B,EACN,oB,EACH,4C,EACA,qD,EACI,e,EACE,yB,EACN,mB,EACI,Y,EACW,gC,EACR,c,EACA,oB,EACA,oB,EACC,qB,EACF,mB,EACI,6B,EACH,0B,EACD,yB,EACC,oB,aAxCjBA,O,EACAC,U,EACAC,uB,EACAC,I,EACAC,I,EACAC,O,EACAC,gB,EACAC,kB,EACAC,gB,EACAC,K,EACAC,a,EACAC,K,EACAC,U,EACAC,I,EACAC,Y,EACAC,S,EACAC,K,EACAC,a,EACAC,c,EACAC,Q,EACAC,O,EACAC,gB,EACAC,Y,EACAC,a,EACAC,O,EACAC,I,EACAC,I,EACAC,Q,EACAC,U,EACAC,I,EACAC,Q,EACAC,mB,EACAC,W,EACAC,W,EACAC,W,EACAC,Y,EACAC,U,EACAC,c,EACAC,W,EACAC,U,EACAC,W;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIP,MAAMC,uBAAuB,aAA7B;AACA,MAAMC,wBAAwB,WAA9B;AACA,MAAMC,sBAAsB,UAA5B;;AAGA;AACA,MAAMC,sBAAsB,mBAA5B;AACA,MAAMC,iBAAiB,qBAAvB;AACA,MAAMC,kBAAkB,qBAAxB;AACA,MAAMC,kBAAkB,qBAAxB;AACA,MAAMC,oBAAoB,qBAA1B;AACA,MAAMC,iBAAiB,qBAAvB;AACA,MAAMC,eAAe,qBAArB;AACA,MAAMC,yBAAyB,qBAA/B;AACA,MAAMC,iBAAiB,qBAAvB;AACA,MAAMC,iBAAiB,qBAAvB;AACA,MAAMC,oBAAoB,qBAA1B;AACA,MAAMC,gBAAgB,qBAAtB;AACA;AACA,MAAMC,iBAAiB,yBAAvB;;AAEA,MAAMC,cAAc;AAClB,mBAAe,EAAE,QAAQ,mBAAV,EAA+B,MAAM,gBAArC,EAAuD,QAAQ,aAA/D,EADG;AAElB,iBAAa,EAAE,QAAQ,cAAV,EAA0B,MAAM,eAAhC,EAAiD,QAAQ,WAAzD,EAFK;AAGlB,gBAAY,EAAE,QAAQ,cAAV,EAA0B,MAAM,gBAAhC,EAAkD,QAAQ,UAA1D;;AAGd;AANoB,GAApB,CAOA,IAAMC,gBAAgB,QAAtB;AACA,MAAMC,mBAAmB,WAAzB;AACA,MAAMC,iBAAiB,SAAvB;AACA,MAAMC,eAAe,OAArB;AACA,MAAMC,kBAAkB,UAAxB;AACA,MAAMC,iBAAiB,SAAvB;AACA,MAAMC,kBAAkB,UAAxB;;AAGA,MAAIC,kBAAJ;;AAEA,MAAMC,SAAS,IAAIC,eAAJ,CAAoBC,OAAOC,QAAP,CAAgBC,MAApC,CAAf;AACA,MAAMC,YAAY,EAAlB;;;;;;;AAEA,yBAAgBL,OAAOM,IAAP,EAAhB,8HAA+B;AAAA,UAAtBC,GAAsB;;AAC7BF,gBAAUE,GAAV,IAAiBP,OAAOQ,GAAP,CAAWD,GAAX,CAAjB;AACD;;AAED;;;;;;;;;;;;;;;;AACA,MAAME,kBAAkB,IAAIpE,kBAAJ,CACtBA,mBAAmBqE,YADG,EAEtB,EAFsB,EAGtB,IAAIpE,gBAAJ,CACEA,iBAAiBqE,WADnB,EAEE,IAAIpE,KAAJ,CAAU,CAAC,GAAD,EAAM,CAAN,EAAS,CAAT,CAAV,CAFF,EAE0B,CAF1B,CAHsB,EAMtB,IAAIA,KAAJ,CAAU,CAAC,CAAD,EAAI,EAAJ,EAAQ,GAAR,EAAa,CAAb,CAAV,CANsB,CAAxB;;AAUA,MAAMqE,mBAAmB,IAAIxE,gBAAJ,CACvBA,iBAAiBuE,WADM,EAEvB,IAAIrE,gBAAJ,CACEA,iBAAiBqE,WADnB,EAEE,IAAIpE,KAAJ,CAAU,CAAC,GAAD,EAAM,CAAN,EAAS,CAAT,CAAV,CAFF,EAGE,CAHF,CAFuB,EAOvB,IAAIA,KAAJ,CAAU,CAAC,GAAD,EAAM,GAAN,EAAW,CAAX,EAAc,IAAd,CAAV,CAPuB,CAAzB;;AAUA,MAAMsE,qBAAqB,IAAIzE,gBAAJ,CACzBA,iBAAiB0E,oBADQ,EAEzB,IAAIxE,gBAAJ,CACEA,iBAAiBqE,WADnB,EAEE,IAAIpE,KAAJ,CAAU,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAV,CAFF,EAGE,CAHF,CAFyB,EAOzB,IAAIA,KAAJ,CAAU,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAV,CAPyB,CAA3B;;AAUA,MAAMwE,qBAAqB,IAAI3E,gBAAJ,CACzBA,iBAAiBuE,WADQ,EAEzB,IAAIrE,gBAAJ,CACEA,iBAAiBqE,WADnB,EAEE,IAAIpE,KAAJ,CAAU,CAAC,GAAD,EAAM,CAAN,EAAS,CAAT,EAAY,IAAZ,CAAV,CAFF,EAGE,CAHF,CAFyB,EAOzB,IAAIA,KAAJ,CAAU,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAAV,CAPyB,CAA3B;;AAUA,MAAMyE,qBAAqB,IAAI1E,gBAAJ,CACzBA,iBAAiB2E,UADQ,EAEzB,IAAI1E,KAAJ,CAAU,CAAC,GAAD,EAAM,CAAN,EAAS,CAAT,CAAV,CAFyB,EAGzB,CAHyB,CAA3B;;AAMA,MAAM2E,eAAe,IAAI7E,kBAAJ,CACnBA,mBAAmBqE,YADA,EAEnB,EAFmB,EAGnB,IAAIpE,gBAAJ,CACEA,iBAAiBqE,WADnB,EAEE,IAAIpE,KAAJ,CAAU,CAAC,GAAD,EAAM,CAAN,EAAS,CAAT,CAAV,CAFF,EAE0B,CAF1B,CAHmB,EAMnB,IAAIA,KAAJ,CAAU,CAAC,GAAD,EAAM,EAAN,EAAU,EAAV,EAAc,CAAd,CAAV,CANmB,CAArB;;AAUA,MAAM4E,uBAAuB,IAAI9E,kBAAJ,CAC3BA,mBAAmBqE,YADQ,EACM,EADN,EAE3B,IAAIpE,gBAAJ,CAAqBA,iBAAiBqE,WAAtC,EACE,IAAIpE,KAAJ,CAAU,CAAC,GAAD,EAAM,CAAN,EAAS,CAAT,CAAV,CADF,EAC0B,CAD1B,CAF2B,EAI3B,IAAIA,KAAJ,CAAU,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ,CAAV,CAJ2B,CAA7B;;AAOA,MAAM6E,wBAAwB,IAAI/E,kBAAJ,CAC5BA,mBAAmBqE,YADS,EAE5B,EAF4B,EAG5B,IAAIpE,gBAAJ,CACEA,iBAAiBqE,WADnB,EAEE,IAAIpE,KAAJ,CAAU,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT,CAAV,CAFF,EAE4B,CAF5B,CAH4B,EAM5B,IAAIA,KAAJ,CAAU,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT,CAAV,CAN4B,CAA9B;;AAUA,MAAM8E,oBAAoB,IAAIhF,kBAAJ,CACxBA,mBAAmBiF,WADK,EAExB,EAFwB,EAGxB,IAAIhF,gBAAJ,CACEA,iBAAiBqE,WADnB,EAEE,IAAIpE,KAAJ,CAAU,CAAC,GAAD,EAAM,CAAN,EAAS,CAAT,CAAV,CAFF,EAGE,CAHF,CAHwB,EAQxB,IAAIA,KAAJ,CAAU,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,IAAZ,CAAV,CARwB,CAA1B;;AAYA;AACA,MAAMgF,oBAAoB,kBAA1B;AACA,MAAMC,2BAA2B,wBAAjC;AACA;AACA,MAAMC,4BAA4B,uBAAlC;AACA,MAAMC,kBAAkB,eAAxB;AACA,MAAMC,0BAA0B,uBAAhC;AACA,MAAMC,qBAAqB,kBAA3B;AACA,MAAMC,sBAAsB,mBAA5B;AACA,MAAMC,yBAAyB,sBAA/B;AACA,MAAMC,wBAAwB,qBAA9B;AACA,MAAMC,8BAA8B,2BAApC;AACA,MAAMC,wBAAwB,6BAA9B;;AAEA;AACA,MAAMC,eAAe;AACnB,SAAK,EAAE,UAAUhB,YAAZ,EADc;AAEnB,SAAK,EAAE,UAAUA,YAAZ,EAFc;AAGnB,SAAK,EAAE,UAAUA,YAAZ;;AAGP;AANqB,GAArB,CAOA,IAAIiB,4BAA4B,IAAI3F,aAAJ,CAAkB;AAChD4F,QAAIN;AAD4C,GAAlB,CAAhC;;AAIA,MAAIO,iCAAiC,IAAI7F,aAAJ,CAAkB;AACrD4F,QAAIJ;AADiD,GAAlB,CAArC;;AAIA;AACA;AACA;;AAEA,MAAIM,8BAA8B,IAAI9F,aAAJ,CAAkB;AAClD4F,QAAIZ;AAD8C,GAAlB,CAAlC;;AAIA;AACA;AACA;;AAEA,MAAIe,cAAcC,SAASC,aAAT,CAAuB,QAAvB,CAAlB;AACAF,cAAYG,GAAZ,GAAkB,uDAAlB;AACAF,WAASG,IAAT,CAAcC,WAAd,CAA0BL,WAA1B;;AAEA;SACezG,QAAQ,CAACC,UAAD,CAAR,EAAsB;;AAEnC;;AAEA8G,eAAW,uBAJwB;AAKnCC,mBAAe,IALoB;AAMnCC,sBAAkB,IANiB;AAOnCC,eAAW,EAPwB;AAQnCC,iBAAa5C,UAAU,QAAV,IAAyBb,aAAzB,aAA6Ca,UAAU,QAAV,CAA7C,UAAsE,KARhD;AASnC6C,UAAM,CAT6B;AAUnCC,qBAAiB,EAVkB;AAWnCC,gBAAY,IAXuB;AAYnCC,aAAS,IAZ0B;AAanCC,aAAS,IAb0B;AAcnCC,oBAAgB,IAdmB;AAenCC,QAAI,EAf+B;AAgBnCC,cAAU,CAhByB;AAiBnCC,uBAAmB,EAjBgB;AAkBnCC,sBAAkB,EAlBiB;AAmBnCC,oBAAgB,EAnBmB;AAoBnCC,mBAAe,EApBoB;AAqBnCC,iBAAa,IArBsB;AAsBnCC,wBAAoB,EAtBe;AAuBnCC,mBAAe;AACbC,cAAQ5D,UAAU,QAAV,CADK;AAEb6D,aAAO,OAFM;AAGbC,gBAAU;AAHG,KAvBoB;;AA6BnCC,sBAAkB,IA7BiB;AA8BnCC,qBAAiB,IA9BkB;AA+BnCC,qBAAiB,IA/BkB;AAgCnCC,yBAAqB,IAhCc;AAsCnCC,cAtCmC,wBAsCtB;AACX,WAAKC,SAAL,CAAeC,SAAf;AACAC,cAAQC,GAAR,CAAY,iCAAZ;AACA,WAAKC,aAAL;AACAC,eAAS,IAAT;AACA,WAAKC,mBAAL;AACA,WAAKC,wBAAL;AACAC,WAAKC,MAAL,CAAYC,QAAZ,CAAqBC,IAArB,CAA0BC,QAA1B,GAAqCJ,KAAKC,MAAL,CAAYC,QAAZ,CAAqBC,IAArB,CAA0BC,QAA1B,GAAqC,8DAA1E;AACAJ,WAAKC,MAAL,CAAYC,QAAZ,CAAqBC,IAArB,CAA0BE,QAA1B,GAAqCL,KAAKC,MAAL,CAAYC,QAAZ,CAAqBC,IAArB,CAA0BE,QAA1B,GAAqC,8DAA1E;AACAL,WAAKC,MAAL,CAAYC,QAAZ,CAAqBC,IAArB,CAA0BG,MAA1B,GAAmCN,KAAKC,MAAL,CAAYC,QAAZ,CAAqBC,IAArB,CAA0BG,MAA1B,GAAmC,8DAAtE;AACAN,WAAKC,MAAL,CAAYC,QAAZ,CAAqBC,IAArB,CAA0BI,KAA1B,GAAkCP,KAAKC,MAAL,CAAYC,QAAZ,CAAqBC,IAArB,CAA0BI,KAA1B,GAAkC,8DAApE;AACD,KAjDkC;AAkDnCX,iBAlDmC,2BAkDnB;AACdnI,iBAAW+I,WAAX,CAAuB,KAAKC,GAA5B,EAAiC,KAAKA,GAAL,CAASC,QAA1C,EAAoDC,IAApD,CAAyDjJ,KAAKkJ,KAAL,CAAW,IAAX,EAAiB,UAAUC,aAAV,EAAyB;AACjG,aAAK9C,SAAL,GAAiB8C,aAAjB;AACD,OAFwD,CAAzD;AAGD,KAtDkC;AAwDnCC,gBAxDmC,wBAwDtBC,OAxDsB,EAwDK;AAAA,UAAlBC,IAAkB,uEAAX,SAAW;;AACtC,UAAIC,QAAW,KAAKC,GAAL,CAASC,YAApB,UAAqCH,IAAzC;AACA,cAAQA,IAAR;AACE,aAAK,OAAL;AACE,cAAI3I,OAAJ,CAAY;AACV2I,kBAAMA,IADI;AAEVI,wBAAYH,KAFF;AAGVF,qBAASA;AAHC,WAAZ;AAKA;AACF;AACE,cAAI1I,OAAJ,CAAY;AACV2I,kBAAMA,IADI;AAEVI,wBAAYH,KAFF;AAGVF,qBAASA;AAHC,WAAZ;AAKA;AAdJ;AAiBD,KA3EkC;AA6EnCM,uBA7EmC,+BA6EfC,WA7Ee,EA6EF;AAC/B,UAAIC,WAAW,IAAI/I,QAAJ,EAAf;AACA,UAAIuI,UAAU,IAAI1I,OAAJ,CAAY;AACxB0I,iBAASO,WADe;AAExBE,iBAAS,CAAC;AACRC,iBAAO,IADC;AAERC,mBAAS,mBAAY;AACnBH,qBAASI,OAAT,CAAiB,IAAjB;AACAZ,oBAAQa,IAAR;AACD;AALO,SAAD;AAFe,OAAZ,CAAd;AAUA,aAAOL,SAASM,OAAhB;AACD,KA1FkC;AA4FnCC,uBA5FmC,iCA4Fb;AACpB,UAAIP,WAAW,IAAI/I,QAAJ,EAAf;AACA,UAAIuJ,UAAU,IAAI1J,OAAJ,CAAY;AACxB0I,iBAASlB,OAAOqB,GAAP,CAAWc,iBADI;AAExBhB,cAAM,UAFkB;AAGxBQ,iBAAS,CAAC;AACRC,iBAAO,IADC;AAERC,mBAAS,mBAAY;AACnBH,qBAASI,OAAT,CAAiB,IAAjB;AACAI,oBAAQH,IAAR;AACD;AALO,SAAD,EAMN;AACDH,iBAAO,IADN;AAEDC,mBAAS,mBAAY;AACnBH,qBAASI,OAAT,CAAiB,KAAjB;AACAI,oBAAQH,IAAR;AACD;AALA,SANM;AAHe,OAAZ,CAAd;AAiBA,aAAOL,SAASM,OAAhB;AACD,KAhHkC;AAkHnC/B,uBAlHmC,iCAkHb;AACpB,UAAImC,eAAepC,OAAO9B,SAAP,CAAiBmE,gBAAjB,CAAkCxI,cAAlC,EAAkDyI,SAAlD,EAAnB;AACAF,qBAAeA,eAAeA,eAAe,OAAf,GAAyBpC,OAAO7B,WAA/C,GAA6D6B,OAAO7B,WAAnF;AACA6B,aAAO9B,SAAP,CAAiBmE,gBAAjB,CAAkCxI,cAAlC,EAAkD0I,SAAlD,CAA4DH,YAA5D;AACApC,aAAO9B,SAAP,CAAiBmE,gBAAjB,CAAkCvI,eAAlC,EAAmDyI,SAAnD,CAA6DvC,OAAO7B,WAApE;AACA6B,aAAO9B,SAAP,CAAiBmE,gBAAjB,CAAkCtI,eAAlC,EAAmDwI,SAAnD,CAA6DvC,OAAO7B,WAApE;AACA6B,aAAO9B,SAAP,CAAiBmE,gBAAjB,CAAkCrI,iBAAlC,EAAqDuI,SAArD,CAA+DvC,OAAO7B,WAAtE;AACA6B,aAAO9B,SAAP,CAAiBmE,gBAAjB,CAAkCpI,cAAlC,EAAkDsI,SAAlD,CAA4DvC,OAAO7B,WAAnE;AACA6B,aAAO9B,SAAP,CAAiBmE,gBAAjB,CAAkCnI,YAAlC,EAAgDqI,SAAhD,CAA0DvC,OAAO7B,WAAjE;AACA6B,aAAO9B,SAAP,CAAiBmE,gBAAjB,CAAkClI,sBAAlC,EAA0DoI,SAA1D,CAAoEvC,OAAO7B,WAA3E;AACA6B,aAAO9B,SAAP,CAAiBmE,gBAAjB,CAAkCjI,cAAlC,EAAkDmI,SAAlD,CAA4DvC,OAAO7B,WAAnE;AACA6B,aAAO9B,SAAP,CAAiBmE,gBAAjB,CAAkChI,cAAlC,EAAkDkI,SAAlD,CAA4DvC,OAAO7B,WAAnE;AACA6B,aAAO9B,SAAP,CAAiBmE,gBAAjB,CAAkC9H,aAAlC,EAAiDgI,SAAjD,CAA2DvC,OAAO7B,WAAlE;AACA;AACD,KAhIkC;AAkInC+B,4BAlImC,sCAkIR;AACzB,UAAMsC,QAAQ,IAAIxK,KAAJ,EAAd;AACAwK,YAAMC,KAAN,GAAczC,OAAO7B,WAArB;;AAEA,UAAMuE,QAAQ,IAAI3K,SAAJ,CAAciI,OAAO9B,SAAP,CAAiBmE,gBAAjB,CAAkC7H,cAAlC,EAAkDmI,MAAlD,EAAd,CAAd;;AAEAD,YAAME,gBAAN,CAAuBJ,KAAvB,EAA8B,UAAUK,OAAV,EAAmB;AAC/C7C,eAAOY,GAAP,CAAWkC,SAAX,CAAqBD,QAAQE,MAA7B,EAAqCjC,IAArC,CAA0C,YAAY;AACpD;AACA,cAAMkC,aAAa/K,cAAc0I,WAAd,GAA4BsC,gBAA5B,CAA6C,YAA7C,CAAnB;AACAD,qBAAW,CAAX,EAAcE,SAAd,CAAwBH,MAAxB,GAAiC/C,OAAOY,GAAP,CAAWmC,MAA5C;AACD,SAJD;AAKD,OAND,EAMG,UAAUI,KAAV,EAAiB;AAClBtD,gBAAQC,GAAR,CAAYqD,KAAZ;AACD,OARD;AASD,KAjJkC;AAmJnCC,WAnJmC,qBAmJzB;AACR,WAAKzD,SAAL,CAAeC,SAAf;AACAC,cAAQC,GAAR,CAAY,8BAAZ;;AAEA,WAAKuD,aAAL,GAAqB9K,cAAc+K,MAAd,CAAqB;AACxCC,gBAAQ,KAAKC,OAAL,CAAaC,UAAb,CAAwBA,UADQ;AAExCC,2BAAmB;AAFqB,OAArB,CAArB;AAID,KA3JkC;AA6JnCC,wBA7JmC,gCA6JdC,OA7Jc,EA6JL1I,MA7JK,EA6JG;AACpC,UAAM2I,MAAM,IAAIC,GAAJ,CAAQF,OAAR,CAAZ;AACAG,aAAOvI,IAAP,CAAYN,MAAZ,EAAoB8I,OAApB,CAA4B;AAAA,eAAOH,IAAII,YAAJ,CAAiBC,MAAjB,CAAwBzI,GAAxB,EAA6BP,OAAOO,GAAP,CAA7B,CAAP;AAAA,OAA5B;;AAEA,aAAO0I,MAAMN,GAAN,EACJ/C,IADI,CACC,oBAAY;AAChB,YAAI,CAACsD,QAAL,EAAe;AACbpE,iBAAOqD,aAAP,CAAqBtB,IAArB;AACA,gBAAM,IAAIsC,KAAJ,CAAU,gBAAgBD,SAASE,MAAnC,CAAN;AACD;AACD,eAAOF,SAASG,IAAT,EAAP;AACD,OAPI,EAQJC,KARI,CAQE,UAAUC,GAAV,EAAe;AACpBzE,eAAOqD,aAAP,CAAqBtB,IAArB;AACAlC,gBAAQC,GAAR,CAAY,4CAAZ;AACD,OAXI,CAAP;AAYD,KA7KkC;AA+KnC4E,0BA/KmC,kCA+KZC,YA/KY,EA+KEC,KA/KF,EA+KS;AAC1C;AACA,UAAMC,OAAOF,aAAaG,MAAb,CAAoB,UAACC,CAAD;AAAA,eAAOA,EAAET,MAAF,IAAYM,KAAnB;AAAA,OAApB,CAAb;AACA,aAAOC,IAAP;AACD,KAnLkC;AAqLnCG,sBArLmC,gCAqLd;AACnBC,WAAKzC,KAAL,OAAe/I,oBAAf,EAAuC,CAAvC,EAA0CyL,KAA1C;AACD,KAvLkC;AAyLnCC,4BAzLmC,oCAyLVC,UAzLU,EAyLE;AACnC,UAAMC,OAAO,IAAIC,IAAJ,CAASF,UAAT,CAAb;AACA,UAAMG,MAAMF,KAAKG,OAAL,EAAZ;AACA,UAAMC,QAAQJ,KAAKK,QAAL,KAAkB,CAAhC;AACA,UAAMC,OAAON,KAAKO,WAAL,EAAb;AACA,aAAUL,GAAV,SAAiBE,KAAjB,SAA0BE,IAA1B;AACD,KA/LkC;AA8MnCE,mBA9MmC,2BA8MnBC,GA9MmB,EA8Md;AACnB9F,aAAOqD,aAAP,CAAqB0C,IAArB;AACA/F,aAAO2D,oBAAP,CAA4B3D,OAAOgG,MAAP,CAAcC,kBAA1C,EAA8DjG,OAAOd,aAArE,EAAoF4B,IAApF,CAAyF,oBAAY;AACnGsD,mBAAWA,SAAS,SAAT,CAAX;AACA;AACApE,eAAO/B,gBAAP,GAA0B6H,IAAIvC,MAAJ,CAAWjG,EAArC;AACA,YAAM4I,SAASzL,YAAYqL,IAAIvC,MAAJ,CAAWjG,EAAvB,EAA2B6I,IAA1C;AACA,YAAMtB,OAAO7E,OAAO0E,sBAAP,CAA8BN,QAA9B,EAAwC8B,MAAxC,CAAb;AACA,YAAME,WAAWvB,KAAKjE,GAAL,CAAS,UAACmE,CAAD;AAAA,wEACcA,EAAEzH,EADhB,2DAEcyH,EAAE5D,IAFhB,2DAGc4D,EAAEsB,KAAF,CAAQzF,GAAR,CAAY;AAAA,mBAAO0F,IAAI,KAAJ,CAAP;AAAA,WAAZ,EAA+BC,IAA/B,CAAoC,GAApC,CAHd,2DAIcvG,OAAOmF,wBAAP,CAAgCJ,EAAEM,IAAlC,CAJd,mHAMwB5K,YAAYqL,IAAIvC,MAAJ,CAAWjG,EAAvB,EAA2BA,EANnD,iBAMiEyH,EAAEyB,MANnE,4FAOwB/L,YAAYqL,IAAIvC,MAAJ,CAAWjG,EAAvB,EAA2BmJ,IAPnD;AAAA,SAAT,CAAjB;AAYA,YAAMC,QAAQzB,KAAK3B,MAAL,CAAY,OAAZ,EAAqB,EAAEqD,WAAWP,SAASG,IAAT,CAAc,EAAd,CAAb,EAArB,CAAd;AACA,YAAMK,KAAK3B,KAAKzC,KAAL,CAAW,oBAAX,EAAiC,CAAjC,CAAX;AACA,YAAIoE,GAAGC,oBAAH,CAAwB,OAAxB,EAAiCC,MAAjC,GAA0C,CAA9C,EAAiD;AAC/C9G,iBAAO+G,gBAAP,CAAwBC,WAAxB,CAAoCJ,GAAGC,oBAAH,CAAwB,OAAxB,EAAiC,CAAjC,CAApC;AACD;AACD7G,eAAO+G,gBAAP,CAAwBjJ,WAAxB,CAAoC4I,KAApC;AACA,YAAIZ,IAAIvC,MAAJ,CAAWjG,EAAX,IAAiB7D,oBAArB,EAA2C;AACzCwL,eAAKzC,KAAL,CAAW,oBAAX,EAAiCyE,EAAjC,CAAoC,OAApC,EAA6CjH,OAAOkH,aAApD;AACD;AACD,YAAIpB,IAAIvC,MAAJ,CAAWjG,EAAX,IAAiB3D,mBAArB,EAA0C;AACxCsL,eAAKzC,KAAL,CAAW,oBAAX,EAAiCyE,EAAjC,CAAoC,OAApC,EAA6CjH,OAAOmH,eAApD;AACD;;AAEDlC,aAAKzC,KAAL,CAAW,aAAX,EAA0B4E,WAA1B,CAAsC,QAAtC;AACAtB,YAAIvC,MAAJ,CAAW8D,SAAX,CAAqBC,GAArB,CAAyB,QAAzB;AACAtH,eAAOqD,aAAP,CAAqBtB,IAArB;AACD,OAlCD;AAmCD,KAnPkC;AAqPnCwF,0BArPmC,kCAqPZzB,GArPY,EAqPP;AAC1B;AACA,UAAM0B,MAAM1B,IAAI2B,aAAJ,CAAkBC,OAAlB,CAA0BF,GAAtC;AACA,aAAOxH,OAAO2H,mBAAP,CAA2BH,GAA3B,CAAP;AACD,KAzPkC;AA2PnCI,0BA3PmC,kCA2PZC,OA3PY,EA2PH;AAC9B,UAAMC,kBAAkB,IAAIpQ,aAAJ,CAAkB;AACxC4F,YAAIX;AADoC,OAAlB,CAAxB;AAGAkL,cAAQ,CAAR,EAAWE,SAAX,CAAqB1L,oBAArB;AACAyL,sBAAgBR,GAAhB,CAAoBO,QAAQ,CAAR,CAApB;AACA7H,aAAOY,GAAP,CAAWoH,QAAX,CAAoBF,eAApB;AACA9H,aAAOY,GAAP,CAAWqH,QAAX,CAAoBJ,QAAQ,CAAR,EAAWK,QAA/B;;AAEAC,iBAAW,YAAY;AACrB;AACAnI,eAAOoI,mBAAP,CAA2BzL,yBAA3B;AACD,OAHD,EAGG,IAHH;AAID,KAxQkC;AA0QnCgL,uBA1QmC,+BA0QfH,GA1Qe,EA0QV;AACvBxH,aAAOqD,aAAP,CAAqB0C,IAArB;AACA,UAAMrE,WAAW,IAAI/I,QAAJ,EAAjB;AACA,UAAM0P,UAAU,IAAI7O,YAAY8O,IAAhB,EAAhB;AACAtI,aAAOoI,mBAAP,CAA2BzL,yBAA3B;AACA,UAAM4L,eAAevI,OAAO9B,SAAP,CAAiBmE,gBAAjB,CAAkCxI,cAAlC,CAArB;AACA,UAAM2O,gBAAgB,IAAI1Q,YAAJ,CAAiByQ,aAAa5F,MAAb,EAAjB,EAAwC;AAC5D8F,cAAM3Q,aAAa4Q,aADyC;AAE5DC,mBAAW,CAAC,GAAD;AAFiD,OAAxC,CAAtB;AAIA;AACA,UAAMnG,QAAQ,IAAIxK,KAAJ,EAAd;AACA;AACAwK,YAAMC,KAAN,GAAiB/H,aAAjB,aAAqCa,UAAU,QAAV,CAArC,eAAiE8M,QAAQO,MAAzE,aAAsFpB,GAAtF;;AAEA;AACAgB,oBAAcK,cAAd,CAA6BrG,KAA7B,EAAoC1K,aAAagR,aAAjD,EACGhI,IADH,CAEI,mBAAW;AACT,YAAI+B,QAAQiE,MAAR,IAAkB,CAAtB,EAAyB;AACvB,gBAAM,IAAIzC,KAAJ,CAAUrE,OAAOqB,GAAP,CAAW0H,iBAArB,CAAN;AACD;AACD/I,eAAO4H,sBAAP,CAA8B/E,OAA9B;AACA7C,eAAOqD,aAAP,CAAqBtB,IAArB;AACA,eAAOL,SAASI,OAAT,CAAiBe,OAAjB,CAAP;AACD,OATL,EAWG2B,KAXH,CAWS,iBAAS;AACdxE,eAAOqD,aAAP,CAAqBtB,IAArB;AACA/B,eAAOiB,YAAP,CAAoBkC,MAAMjC,OAA1B,EAAmCC,OAAO,OAA1C;AACAO,iBAASsH,MAAT,CAAgB7F,KAAhB;AACD,OAfH;AAgBA,aAAOzB,SAASM,OAAhB;AACD,KA3SkC;AA6SnCiH,2BA7SmC,mCA6SXnD,GA7SW,EA6SN;AAC3B;AACA,UAAI,CAACA,IAAI2B,aAAJ,CAAkByB,KAAvB,EAA8B;AAC5BlJ,eAAOiB,YAAP,CAAoBjB,OAAOqB,GAAP,CAAW8H,eAA/B,EAAgDhI,OAAO,OAAvD;AACA;AACD;AACD/F,aAAOgO,IAAP,CAAYtD,IAAI2B,aAAJ,CAAkByB,KAA9B,EAAqC,QAArC,EAA+CG,KAA/C;AACD,KApTkC;AAsTnCC,oBAtTmC,4BAsTlBzF,GAtTkB,EAsTbrB,KAtTa,EAsTU;AAAA,UAAhBrB,IAAgB,uEAAT,OAAS;;AAC3C,aAAO,IAAIoI,OAAJ,CAAY,UAACzH,OAAD,EAAUkH,MAAV,EAAqB;AACtC,YAAMtG,QAAQ,IAAI3K,SAAJ,CAAc8L,GAAd,CAAd;AACA,gBAAQ1C,IAAR;AACE,eAAK,OAAL;AACEuB,kBAAM8G,OAAN,CAAchH,KAAd,EAAqBV,OAArB,EAA8BkH,MAA9B;AACA;AACF,eAAK,gBAAL;AACEtG,kBAAME,gBAAN,CAAuBJ,KAAvB,EAA8BV,OAA9B,EAAuCkH,MAAvC;AACA;AACF;AACE;AARJ;AAUD,OAZM,CAAP;AAaD,KApUkC;AAsUnCS,sBAtUmC,gCAsUd;AACnB,UAAMC,OAAO,IAAb;AACA,UAAMhI,WAAW,IAAI/I,QAAJ,EAAjB;AACA,UAAM0P,UAAU,IAAI7O,YAAY8O,IAAhB,EAAhB;AACA,UAAMqB,SAAS,IAAInQ,YAAYoQ,GAAhB,EAAf;AACA,UAAMC,aAAa,IAAI7R,KAAJ,EAAnB;AACA;AACA,UAAM8R,cAAcJ,KAAKK,kBAAL,CAAwBnJ,GAAxB,CAA4B;AAAA,eAAKmE,EAAEyC,GAAP;AAAA,OAA5B,CAApB;AACAqC,iBAAWpH,KAAX,GAAsBjJ,YAAYwQ,eAAlC,aAAwDzO,UAAU,QAAV,CAAxD,eAAoF8M,QAAQO,MAA5F,eAA2GkB,YAAYvD,IAAZ,CAAiB,MAAjB,CAA3G;AACAsD,iBAAWI,cAAX,GAA4B,IAA5B;AACAJ,iBAAWlB,SAAX,GAAuB,CAAC,GAAD,CAAvB;AACA,UAAMuB,WAAWR,KAAKxL,SAAL,CAAemE,gBAAf,CAAgCxI,cAAhC,EAAgD8I,MAAhD,EAAjB;AACA+G,WAAKJ,gBAAL,CAAsBY,QAAtB,EAAgCL,UAAhC,EACG/I,IADH,CACQ,mBAAW;AACf,YAAI+B,QAAQsH,QAAR,CAAiBrD,MAAjB,IAA2B,CAA/B,EAAkC;AAChC,gBAAM,IAAIzC,KAAJ,CAAUqF,KAAKrI,GAAL,CAAS+I,YAAnB,CAAN;AACD;AACDV,aAAKlK,eAAL,GAAuBqD,QAAQsH,QAA/B;AACA,YAAME,SAASX,KAAKlK,eAAL,CAAqBoB,GAArB,CAAyB,UAACmE,CAAD;AAAA,iBAAOA,EAAEuF,UAAF,CAAaX,OAAOY,MAApB,CAAP;AAAA,SAAzB,CAAf;AACA7I,iBAASI,OAAT,CAAiBuI,MAAjB;AACD,OARH,EASG7F,KATH,CASS,iBAAS;AACd9C,iBAASsH,MAAT,CAAgB7F,KAAhB;AACD,OAXH;AAYA,aAAOzB,SAASM,OAAhB;AACD,KA/VkC;AAgWnCwI,qBAhWmC,6BAgWjBH,MAhWiB,EAgWT;AACxB,UAAMX,OAAO,IAAb;AACA,UAAMC,SAAS,IAAInQ,YAAYoQ,GAAhB,EAAf;AACA,UAAMlI,WAAW,IAAI/I,QAAJ,EAAjB;AACA,UAAM8R,YAAY,IAAIzS,KAAJ,EAAlB;AACAyS,gBAAUhI,KAAV,GAAqBkH,OAAOY,MAA5B,aAA0CF,OAAO9D,IAAP,CAAY,GAAZ,CAA1C,eAAoE/M,YAAYwQ,eAAhF,WAAqGzO,UAAU,QAAV,CAArG;AACAmO,WAAKpL,UAAL,GAAkBmM,UAAUhI,KAA5B;AACAgI,gBAAUR,cAAV,GAA2B,IAA3B;AACAQ,gBAAU9B,SAAV,GAAsB,CAAC,GAAD,CAAtB;AACA,UAAM+B,UAAUhB,KAAKxL,SAAL,CAAemE,gBAAf,CAAgCnI,YAAhC,EAA8CyI,MAA9C,EAAhB;AACA+G,WAAKJ,gBAAL,CAAsBoB,OAAtB,EAA+BD,SAA/B,EACG3J,IADH,CACQ,mBAAW;AACf,YAAI+B,QAAQsH,QAAR,CAAiBrD,MAAjB,IAA2B,CAA/B,EAAkC;AAChC,gBAAM,IAAIzC,KAAJ,CAAUqF,KAAKrI,GAAL,CAASsJ,gBAAnB,CAAN;AACD;AACDjB,aAAKnK,eAAL,GAAuBsD,QAAQsH,QAA/B;AACA,YAAMS,eAAelB,KAAKnK,eAAL,CAAqBqB,GAArB,CAAyB,UAACmE,CAAD;AAAA,iBAAOA,EAAEuF,UAAF,CAAa1P,cAAb,CAAP;AAAA,SAAzB,EAA8D2L,IAA9D,CAAmE,GAAnE,CAArB;AACA,YAAMsE,gBAAgBnB,KAAKnK,eAAL,CAAqBqB,GAArB,CAAyB,UAACmE,CAAD;AAAA,iBAAOA,EAAEuF,UAAF,CAAaxP,eAAb,CAAP;AAAA,SAAzB,EAA+DyL,IAA/D,CAAoE,GAApE,CAAtB;AACAmD,aAAKlL,OAAL,SAAmBhF,YAAYwQ,eAA/B,WAAoDzO,UAAU,QAAV,CAApD,cAAgFX,cAAhF,aAAsGgQ,YAAtG,cAA2H9P,eAA3H,aAAkJ+P,aAAlJ;AACAnJ,iBAASI,OAAT,CAAiBuI,MAAjB;AACD,OAVH,EAWG7F,KAXH,CAWS,iBAAS;AACd9C,iBAASsH,MAAT,CAAgB7F,KAAhB;AACD,OAbH;AAcA,aAAOzB,SAASM,OAAhB;AACD,KAzXkC;AA0XnC8I,0BA1XmC,kCA0XZT,MA1XY,EA0XJ;AAC7B,UAAMX,OAAO,IAAb;AACA,UAAMC,SAAS,IAAInQ,YAAYoQ,GAAhB,EAAf;AACA,UAAMlI,WAAW,IAAI/I,QAAJ,EAAjB;AACA,UAAMoS,iBAAiB,IAAI/S,KAAJ,EAAvB;AACA+S,qBAAetI,KAAf,GAA0BkH,OAAOY,MAAjC,aAA+CF,OAAO9D,IAAP,CAAY,GAAZ,CAA/C,eAAyE/M,YAAYwQ,eAArF,WAA0GzO,UAAU,QAAV,CAA1G;AACAwP,qBAAed,cAAf,GAAgC,IAAhC;AACAc,qBAAepC,SAAf,GAA2B,CAAC,GAAD,CAA3B;AACA,UAAMqC,eAAetB,KAAKxL,SAAL,CAAemE,gBAAf,CAAgCvI,eAAhC,EAAiD6I,MAAjD,EAArB;AACA+G,WAAKJ,gBAAL,CAAsB0B,YAAtB,EAAoCD,cAApC,EACGjK,IADH,CACQ,mBAAW;AACf,YAAI+B,QAAQsH,QAAR,CAAiBrD,MAAjB,IAA2B,CAA/B,EAAkC;AAChC,gBAAM,IAAIzC,KAAJ,CAAUqF,KAAKrI,GAAL,CAAS4J,qBAAnB,CAAN;AACD;AACDvB,aAAKjK,mBAAL,GAA2BoD,QAAQsH,QAAnC;AACAzI,iBAASI,OAAT,CAAiBuI,MAAjB;AACD,OAPH,EAQG7F,KARH,CAQS,iBAAS;AACd9C,iBAASsH,MAAT,CAAgB7F,KAAhB;AACD,OAVH;AAWA,aAAOzB,SAASM,OAAhB;AACD,KA/YkC;AAiZnCkJ,yBAjZmC,iCAiZbC,WAjZa,EAiZA;AACjC,UAAMzB,OAAO,IAAb;AACA,UAAMhI,WAAW,IAAI/I,QAAJ,EAAjB;AACA,UAAMyS,cAAiB1B,KAAK1D,MAAL,CAAYqF,qBAA7B,SAAsDF,WAA5D;AACAhH,YAAMiH,WAAN,EACGtK,IADH,CACQ;AAAA,eAAYsD,SAASG,IAAT,EAAZ;AAAA,OADR,EAEGzD,IAFH,CAEQ,oBAAY;AAChB,YAAIsD,SAAS0C,MAAT,IAAmB,CAAvB,EAA0B;AACxB,gBAAM,IAAIzC,KAAJ,CAAUqF,KAAKrI,GAAL,CAAS+I,YAAnB,CAAN;AACD;AACDV,aAAKK,kBAAL,GAA0B3F,SAASvB,OAAnC;AACAnB,iBAASI,OAAT,CAAiB4H,KAAKK,kBAAtB;AACD,OARH,EASGvF,KATH,CASS,iBAAS;AACd9C,iBAASsH,MAAT,CAAgB7F,KAAhB;AACD,OAXH;AAYA,aAAOzB,SAASM,OAAhB;AACD,KAlakC;AAoanCsJ,oBApamC,4BAoalBH,WApakB,EAoaL;AAAA;;AAC5B,aAAO,KAAKD,qBAAL,CAA2BC,WAA3B,EACJrK,IADI,CACC;AAAA,eAAY,MAAK2I,kBAAL,EAAZ;AAAA,OADD,EAEJ3I,IAFI,CAEC;AAAA,eAAU,MAAKgK,sBAAL,CAA4BT,MAA5B,CAAV;AAAA,OAFD,EAGJvJ,IAHI,CAGC;AAAA,eAAU,MAAK0J,iBAAL,CAAuBH,MAAvB,CAAV;AAAA,OAHD,EAIJvJ,IAJI,CAIC,UAACuJ,MAAD,EAAY;AAChB,eAAOA,MAAP;AACD,OANI,EAOJ7F,KAPI,CAOE,iBAAS;AACdxE,eAAOiB,YAAP,CAAoBkC,MAAMjC,OAA1B,EAAmCC,OAAO,OAA1C;AACA;AACD,OAVI,CAAP;AAWD,KAhbkC;AAkbnCoK,qBAlbmC,+BAkbf;AAClB,UAAMC,eAAe,KAAKC,cAAL,CAAoB,KAAKlM,eAAL,CAAqBqB,GAArB,CAAyB,UAACmE,CAAD;AAAA,eAAOA,EAAEmD,QAAT;AAAA,OAAzB,CAApB,CAArB;AACA,WAAKtH,GAAL,CAASkC,SAAT,CAAmB0I,aAAaE,SAAb,GAAyBC,MAAzB,CAAgC,CAAhC,CAAnB;AAED,KAtbkC;AAwbnCC,6BAxbmC,qCAwbTC,OAxbS,EAwbA;AACjC,UAAMrJ,QAAQ,IAAIxK,KAAJ,EAAd;;AAEAwK,YAAMC,KAAN,GAAiB/H,aAAjB,aAAqCa,UAAU,QAAV,CAArC,eAAiER,cAAjE,eAAyF8Q,QAAQC,KAAR,CAAc,GAAd,CAAD,CAAqBvF,IAArB,CAA0B,MAA1B,CAAxF;AACA;AACA/D,YAAMmG,SAAN,GAAkB,CAAChO,gBAAD,EAAmBC,cAAnB,EAAmCE,eAAnC,CAAlB;AACA0H,YAAMyH,cAAN,GAAuB,KAAvB;;AAEA;AACAzH,YAAMuJ,oBAAN,GAA6B,IAA7B;;AAEA;AACA,UAAMC,aAAahM,OAAO9B,SAAP,CAAiBmE,gBAAjB,CAAkCxI,cAAlC,EAAkD8I,MAAlD,EAAnB;;AAEA,aAAO3C,OAAOsJ,gBAAP,CAAwB0C,UAAxB,EAAoCxJ,KAApC,EACJ1B,IADI,CACC,mBAAW;AACf,YAAMmL,SAASpJ,QAAQsH,QAAR,CAAiBvJ,GAAjB,CAAqB,UAACmE,CAAD;AAAA,iBAAOA,EAAEuF,UAAF,CAAa3P,gBAAb,CAAP;AAAA,SAArB,CAAf;AACA;AACA,YAAMuR,YAAYrJ,QAAQsH,QAAR,CAAiBvJ,GAAjB,CAAqB,UAACmE,CAAD;AAAA,iBAAOA,EAAEuF,UAAF,CAAa1P,cAAb,CAAP;AAAA,SAArB,CAAlB;AACA,YAAMuR,WAAWtJ,QAAQsH,QAAR,CAAiBvJ,GAAjB,CAAqB,UAACmE,CAAD;AAAA,iBAAOA,EAAEuF,UAAF,CAAaxP,eAAb,CAAP;AAAA,SAArB,CAAjB;AACA,YAAMsR,YAAY,IAAIpU,KAAJ,EAAlB;AACAoU,kBAAU3J,KAAV,GAAqB9H,gBAArB,aAA6CsR,OAAO1F,IAAP,CAAY,GAAZ,CAA7C,eAAuE7L,aAAvE,WAA0Fa,UAAU,QAAV,CAA1F;AACAyE,eAAO1B,UAAP,GAAoB8N,UAAU3J,KAA9B;AACAzC,eAAOxB,OAAP,GAAoB9D,aAApB,aAAwCa,UAAU4D,MAAlD,gBAAkEvE,cAAlE,aAAwFsR,UAAU3F,IAAV,CAAe,GAAf,CAAxF,gBAAsHzL,eAAtH,aAA6IqR,SAAS5F,IAAT,CAAc,GAAd,CAA7I;AACA6F,kBAAUnC,cAAV,GAA2B,IAA3B;AACA,YAAMoC,WAAWrM,OAAO9B,SAAP,CAAiBmE,gBAAjB,CAAkCnI,YAAlC,EAAgDyI,MAAhD,EAAjB;AACA3C,eAAOqD,aAAP,CAAqBtB,IAArB;AACA,eAAO/B,OAAOsJ,gBAAP,CAAwB+C,QAAxB,EAAkCD,SAAlC,CAAP;AACD,OAdI,EAeJtL,IAfI,CAeC,mBAAW;AACf,YAAI+B,QAAQsH,QAAR,CAAiBrD,MAAjB,IAA2B,CAA/B,EAAkC;AAChC;AACA,gBAAM,IAAIzC,KAAJ,CAAUrE,OAAOqB,GAAP,CAAWiL,gBAArB,CAAN;AACD;AACD,YAAMd,eAAexL,OAAOyL,cAAP,CAAsB5I,QAAQsH,QAAR,CAAiBvJ,GAAjB,CAAqB,UAACmE,CAAD;AAAA,iBAAOA,EAAEmD,QAAT;AAAA,SAArB,CAAtB,CAArB;;AAEAlI,eAAOY,GAAP,CAAWkC,SAAX,CAAqB0I,aAAaE,SAAb,GAAyBC,MAAzB,CAAgC,CAAhC,CAArB;;AAEA,YAAMY,UAAU,IAAIlV,OAAJ,CAAYmU,YAAZ,EAA0BvP,kBAA1B,CAAhB;AACA,YAAM6L,kBAAkB,IAAIpQ,aAAJ,CAAkB;AACxC4F,cAAIT;AADoC,SAAlB,CAAxB;AAGAiL,wBAAgBR,GAAhB,CAAoBiF,OAApB;AACAvM,eAAOY,GAAP,CAAWoH,QAAX,CAAoBF,eAApB;;AAEA;AACA,YAAI0E,WAAWC,YAAY,YAAY;AACrC,cAAIF,UAAUzE,gBAAgB4E,QAAhB,CAAyB,CAAzB,CAAd;AACAH,kBAAQxE,SAAR,CAAkBwE,QAAQI,MAAR,KAAmB1Q,kBAAnB,GAAwC,IAAxC,GAA+CA,kBAAjE;AACD,SAHc,EAGZ,GAHY,CAAf;;AAKAkM,mBAAW,YAAY;AACrByE,wBAAcJ,QAAd;AACAxM,iBAAOoI,mBAAP,CAA2BvL,uBAA3B;AACD,SAHD,EAGG,IAHH;AAIAmD,eAAOqD,aAAP,CAAqBtB,IAArB;AACA,eAAO/B,OAAOY,GAAP,CAAWkC,SAAX,CAAqB0I,aAAaE,SAAb,GAAyBC,MAAzB,CAAgC,CAAhC,CAArB,CAAP;AACD,OA3CI,EA4CJnH,KA5CI,CA4CE,iBAAS;AACd3E,gBAAQC,GAAR,CAAYqD,KAAZ;AACAnD,eAAOqD,aAAP,CAAqBtB,IAArB;AACA,cAAMoB,KAAN;AACD,OAhDI,CAAP;AAiDD,KAvfkC;AAyfnC0J,qBAzfmC,+BAyff;AAClB,aAAO7M,OAAOuL,iBAAP,EAAP;AACD,KA3fkC;AA6fnCuB,uBA7fmC,+BA6ffhH,GA7fe,EA6fV;AACvB,WAAKiH,OAAL,CAAa,gBAAb,EAA+BC,aAA/B,CAA6C,oBAA7C,EAAmE3F,SAAnE,CAA6E4F,MAA7E,CAAoF,QAApF;AACD,KA/fkC;AAigBnCC,oBAjgBmC,8BAigBhB;AACjBlN,aAAOqD,aAAP,CAAqB0C,IAArB;AACA;AACA,UAAMoH,aAAgBnN,OAAOgG,MAAP,CAAcoH,oBAA9B,SAAsDpN,OAAOhC,aAAnE;AACA,UAAMqP,gBAAmBrN,OAAOgG,MAAP,CAAcC,kBAAjC,SAAuDjG,OAAOhC,aAApE;;AAEAuL,cAAQ+D,GAAR,CAAY;AACV;AACAtN,aAAOsL,gBAAP,CAAwBtL,OAAOhC,aAA/B,CAFU,EAGVmG,MAAMgJ,UAAN,EAAkBrM,IAAlB,CAAuB;AAAA,eAAYsD,SAASG,IAAT,EAAZ;AAAA,OAAvB,CAHU,EAIVJ,MAAMkJ,aAAN,EAAqBvM,IAArB,CAA0B;AAAA,eAAYsD,SAASG,IAAT,EAAZ;AAAA,OAA1B,CAJU,CAAZ,EAKGzD,IALH,CAKQ,gBAAoD;AAAA;AAAA,YAAzCyM,CAAyC;AAAA,YAAtCC,eAAsC;AAAA,YAArBC,kBAAqB;;AAC1D5N,gBAAQC,GAAR,CAAYE,OAAO+J,kBAAnB;AACAlK,gBAAQC,GAAR,CAAY0N,eAAZ;AACA3N,gBAAQC,GAAR,CAAY2N,kBAAZ;AACA,YAAMC,OAAO1N,OAAO+J,kBAAP,CAA0BnJ,GAA1B,CAA8B,UAACmE,CAAD,EAAI4I,GAAJ,EAAY;AACrD,iBAAO7U,SAAS8U,WAAT,CAAqB7I,CAArB,EAAwB,UAAxB,EAAoCA,EAAEyC,GAAtC,EAA2CqG,SAAS7N,OAAO5B,IAAP,IAAe,CAAf,GAAmB,IAAnB,GAA0B,KAA9E,CAAP;AACD,SAFY,CAAb;;AAIA,YAAI4B,OAAO5B,IAAP,IAAe,CAAnB,EAAsB;AACpB,cAAIoP,gBAAgB3K,OAAhB,CAAwBiE,MAAxB,IAAkC,CAAtC,EAAyC;AACvC9G,mBAAOiB,YAAP,CAAuBjB,OAAOqB,GAAP,CAAWyM,uBAAlC,SAA6D9N,OAAOhC,aAApE,EAAqFmD,OAAO,OAA5F;AACAnB,mBAAOqD,aAAP,CAAqBtB,IAArB;AACA;AACD;AACF;;AAEDkD,aAAKzC,KAAL,CAAW,gBAAX,EAA6B,CAA7B,EAAgC0G,KAAhC,GAAwCuE,mBAAmBM,OAA3D;AACA9I,aAAKzC,KAAL,CAAW,mBAAX,EAAgC,CAAhC,EAAmCmE,SAAnC,GAA+C+G,KAAKnH,IAAL,CAAU,EAAV,CAA/C;AACAtB,aAAKzC,KAAL,CAAW,oBAAX,EAAiCyE,EAAjC,CAAoC,OAApC,EAA6CjH,OAAOuH,sBAApD;;AAEA,YAAIvH,OAAO5B,IAAP,IAAe,CAAnB,EAAsB;AACpB,cAAM4P,cAAcR,gBAAgB3K,OAAhB,CAAwBjC,GAAxB,CAA4B,UAACmE,CAAD,EAAI4I,GAAJ,EAAY;AAC1D;AACA;AACA,mBAAO7U,SAAS8U,WAAT,CAAqB7I,CAArB,EAAwB,QAAxB,EAAkC4I,MAAM,CAAxC,EAA2C,KAA3C,EAAkD,IAAlD,CAAP;AACD,WAJmB,CAApB;AAKA1I,eAAKzC,KAAL,CAAW,iBAAX,EAA8B,CAA9B,EAAiCmE,SAAjC,GAA6CqH,YAAYzH,IAAZ,CAAiB,EAAjB,CAA7C;AACAtB,eAAKzC,KAAL,CAAW,kBAAX,EAA+ByL,QAA/B,CAAwC,QAAxC;AACD,SARD,MAQO;AACLhJ,eAAKzC,KAAL,CAAW,iBAAX,EAA8B,CAA9B,EAAiCmE,SAAjC,GAA6C,EAA7C;AACA1B,eAAKzC,KAAL,CAAW,kBAAX,EAA+B4E,WAA/B,CAA2C,QAA3C;AACD;;AAEDnC,aAAKzC,KAAL,CAAW,uBAAX,EAAoCyE,EAApC,CAAuC,OAAvC,EAAgDjH,OAAO8M,mBAAvD;;AAEA;AACA9M,eAAOkO,eAAP,GAAyBlO,OAAO+J,kBAAP,CAA0BnJ,GAA1B,CAA8B,UAACmE,CAAD;AAAA,iBAAOA,EAAEyC,GAAT;AAAA,SAA9B,EAA4CjB,IAA5C,CAAiD,GAAjD,CAAzB;AACAvG,eAAOV,gBAAP,GAA0BkO,gBAAgB,SAAhB,CAA1B;AAED,OA5CD,EA6CG1M,IA7CH,CA6CQ,YAAY;AAChB,gBAAQd,OAAO5B,IAAf;AACE,eAAK,GAAL;AACE4B,mBAAOmO,aAAP,CAAqB9G,SAArB,CAA+B4F,MAA/B,CAAsC,QAAtC;AACA;AACF,eAAK,GAAL;AACEjN,mBAAOoO,UAAP,CAAkB/G,SAAlB,CAA4B4F,MAA5B,CAAmC,QAAnC;AACA;AACF,eAAK,GAAL;AACEjN,mBAAOqO,YAAP,CAAoBhH,SAApB,CAA8B4F,MAA9B,CAAqC,QAArC;AACA;AACF,eAAK,GAAL;AACEjN,mBAAOsO,eAAP,CAAuBjH,SAAvB,CAAiC4F,MAAjC,CAAwC,QAAxC;AACA;AACF,eAAK,GAAL;AACEjN,mBAAOuO,gBAAP,CAAwBlH,SAAxB,CAAkC4F,MAAlC,CAAyC,QAAzC;AACAjN,mBAAOuO,gBAAP,CAAwB5H,SAAxB,GAAoC,EAApC;AACAtN,2BAAe+H,KAAf,GAAuB,iBAAvB;AACA/H,2BAAegN,KAAf,GAAuBrG,OAAOV,gBAA9B;AACAjG,2BAAemV,SAAf,GAA2BxO,OAAOP,mBAAlC;AACApG,2BAAeuH,GAAf,GAAqBZ,OAAOY,GAA5B;AACAvH,2BAAeoV,WAAf,GAA6BrS,YAA7B;AACA/C,2BAAeqV,mBAAf,GAAqCpS,qBAArC;AACAjD,2BAAesV,iBAAf;AACA3O,mBAAOuO,gBAAP,CAAwBzQ,WAAxB,CAAoCzE,eAAeuV,yBAAf,EAApC;;AAEAtV,wBAAY8H,KAAZ,GAAoB,cAApB;AACA9H,wBAAY6H,IAAZ,GAAmB,cAAnB;AACAnB,mBAAOuO,gBAAP,CAAwBzQ,WAAxB,CAAoCxE,YAAYuV,mBAAZ,EAApC;AACA5J,iBAAKzC,KAAL,OAAelJ,YAAYgE,EAA3B,EAAiC2J,EAAjC,CAAoC,OAApC,EAA6CjH,OAAO8O,yBAApD;AACA7J,iBAAKzC,KAAL,CAAW,sBAAX,EAAmCyE,EAAnC,CAAsC,QAAtC,EAAgD5N,eAAe0V,iBAAf,CAAiCC,IAAjC,CAAsC3V,cAAtC,CAAhD;AACA4L,iBAAKzC,KAAL,CAAW,gBAAX,EAA6ByE,EAA7B,CAAgC,WAAhC,EAA6C5N,eAAe4V,aAAf,CAA6BD,IAA7B,CAAkC3V,cAAlC,CAA7C;AACA4L,iBAAKzC,KAAL,CAAW,gBAAX,EAA6ByE,EAA7B,CAAgC,UAAhC,EAA4C5N,eAAe6V,kBAAf,CAAkCF,IAAlC,CAAuC3V,cAAvC,CAA5C;AACA;AACF;AACE;AAlCJ;;AAqCA2G,eAAOmP,aAAP,CAAqB9H,SAArB,CAA+B+H,MAA/B,CAAsC,QAAtC;AACApP,eAAOqP,UAAP,CAAkBhI,SAAlB,CAA4B+H,MAA5B,CAAmC,QAAnC;AACApP,eAAOsP,eAAP,CAAuBjI,SAAvB,CAAiC+H,MAAjC,CAAwC,QAAxC;AACApP,eAAOuP,YAAP,CAAoBlI,SAApB,CAA8B4F,MAA9B,CAAqC,QAArC;AACAjN,eAAOuL,iBAAP;AACAvL,eAAOqD,aAAP,CAAqBtB,IAArB;AACD,OAzFH,EA0FGyC,KA1FH,CA0FS,UAAUrB,KAAV,EAAiB;AACtBnD,eAAOqD,aAAP,CAAqBtB,IAArB;AACA/B,eAAOiB,YAAP,CAAoBkC,MAAMjC,OAA1B,EAAmCC,OAAO,OAA1C;AACAtB,gBAAQC,GAAR,CAAYqD,KAAZ;AACD,OA9FH;AAgGD,KAvmBkC;AAymBnC+D,iBAzmBmC,yBAymBrBpB,GAzmBqB,EAymBhB;AACjB,UAAIA,IAAI2B,aAAJ,CAAkBnK,EAAlB,IAAwB,gBAA5B,EAA8C;AAC5C,YAAMkS,MAAMvK,KAAKzC,KAAL,CAAWsD,IAAI2B,aAAf,EAA8BsF,OAA9B,CAAsC,IAAtC,EAA4C,CAA5C,CAAZ;AACA,YAAM0C,UAAUxK,KAAKzC,KAAL,CAAW,IAAX,EAAiBgN,GAAjB,EAAsB5O,GAAtB,CAA0B;AAAA,iBAAM8O,GAAG/I,SAAT;AAAA,SAA1B,CAAhB;AACA3G,eAAOhC,aAAP,GAAuByR,QAAQ,CAAR,CAAvB;AACAzP,eAAO3B,eAAP,GAAyBoR,QAAQ,CAAR,CAAzB;AACAxK,aAAKzC,KAAL,CAAW,cAAX,EAA2B,CAA3B,EAA8BmE,SAA9B,cAAmD3G,OAAO3B,eAA1D;;AAEA2B,eAAO5B,IAAP,GAAc0H,IAAI2B,aAAJ,CAAkByB,KAAhC;AACAlJ,eAAOkN,gBAAP;AAED,OAVD,MAUO,IAAIpH,IAAI2B,aAAJ,CAAkBnK,EAAlB,IAAwB,YAAxB,IAAwCwI,IAAI2B,aAAJ,CAAkBnK,EAAlB,IAAwB,kBAApE,EAAwF;AAC7F;AACArC,kBAAU0U,UAAV;;AAEA;AACA3P,eAAOY,GAAP,CAAWgP,eAAX;AACA5P,eAAO6P,iBAAP,CAAyBlJ,SAAzB,GAAqC,EAArC;AACA3G,eAAO8P,mBAAP,CAA2BnJ,SAA3B,GAAuC,EAAvC;;AAEA1B,aAAKzC,KAAL,CAAW,YAAX,EAAyB4E,WAAzB,CAAqC,QAArC;AACA;AACApH,eAAOoI,mBAAP,CAA2B3L,iBAA3B;AACAuD,eAAOoI,mBAAP,CAA2BxL,eAA3B;AACAoD,eAAOoI,mBAAP,CAA2BtL,kBAA3B;AACAkD,eAAOoI,mBAAP,CAA2BrL,mBAA3B;AACAiD,eAAOoI,mBAAP,CAA2BzL,yBAA3B;AACAqD,eAAOoI,mBAAP,CAA2BjL,qBAA3B;AACA6C,eAAO+P,qBAAP,CAA6BpJ,SAA7B,GAAyC,EAAzC;;AAEAtJ,kCAA0B2S,KAA1B;AACAzS,uCAA+ByS,KAA/B;AACAxS,oCAA4BwS,KAA5B;;AAEAhQ,eAAO1B,UAAP,GAAoB,IAApB;AACA0B,eAAOxB,OAAP,GAAiB,IAAjB;AACAwB,eAAOtB,EAAP,GAAY,EAAZ;;AAEAsB,eAAOuP,YAAP,CAAoBlI,SAApB,CAA8B+H,MAA9B,CAAqC,QAArC;AACApP,eAAOmP,aAAP,CAAqB9H,SAArB,CAA+B+H,MAA/B,CAAsC,QAAtC;AACApP,eAAOqP,UAAP,CAAkBhI,SAAlB,CAA4B+H,MAA5B,CAAmC,QAAnC;AACApP,eAAOsP,eAAP,CAAuBjI,SAAvB,CAAiC4F,MAAjC,CAAwC,QAAxC;AACAjN,eAAOiQ,wBAAP;AACAjQ,eAAOgF,kBAAP;AACD;AAEF,KAvpBkC;AAwpBnCkL,gBAxpBmC,0BAwpBpB;AACblQ,aAAOmQ,eAAP,CAAuBjH,KAAvB,GAA+B,EAA/B;AACA,UAAMkH,WAAWnL,KAAKzC,KAAL,CAAW,iBAAX,EAA8B,CAA9B,CAAjB;AACAxC,aAAOqQ,aAAP,CAAqBnH,KAArB,GAA6B,EAA7B;AACAkH,eAASE,KAAT,CAAeC,eAAf,GAAiC,MAAjC;AACAH,eAASzJ,SAAT,GAAqB,8DAArB;AACA1B,WAAKzC,KAAL,CAAW,qBAAX,EAAkC,CAAlC,EAAqCmE,SAArC,8CAA0F3G,OAAOhC,aAAjG;AACAgC,aAAOuP,YAAP,CAAoBlI,SAApB,CAA8B4F,MAA9B,CAAqC,QAArC;AACAjN,aAAOqP,UAAP,CAAkBhI,SAAlB,CAA4B4F,MAA5B,CAAmC,QAAnC;AACD,KAjqBkC;AAmqBnCuD,eAnqBmC,uBAmqBvBC,YAnqBuB,EAmqBTC,MAnqBS,EAmqBD;AAChC,UAAMC,mBAAsB3Q,OAAOgG,MAAP,CAAcoH,oBAApC,SAA4DqD,YAAlE;AACAzQ,aAAO2D,oBAAP,CAA4BgN,gBAA5B,EAA8C,EAA9C,EAAkD7P,IAAlD,CAAuD,UAAUsD,QAAV,EAAoB;AACzEvE,gBAAQC,GAAR,CAAYsE,QAAZ;AACA,YAAI;AACFpE,iBAAO4Q,iBAAP,CAAyBjK,SAAzB,GAAqC,EAArC;AACA1B,eAAKzC,KAAL,CAAW,kBAAX,EAA+B,CAA/B,EAAkCmE,SAAlC,wBAAiE8J,YAAjE,UAAkFC,MAAlF;;AAEA,cAAMhD,OAAOtJ,SAASvB,OAAT,CAAiBjC,GAAjB,CAAqB,UAACiQ,MAAD,EAASC,KAAT,EAAmB;AACnD,wDAAyCA,QAAQ,CAAjD,sCACcD,OAAO,KAAP,CADd,qCAEcA,OAAO,SAAP,CAFd,4FAIsBA,OAAO,KAAP,CAJtB;AAMD,WAPY,CAAb;AAQA7Q,iBAAO4Q,iBAAP,CAAyBjK,SAAzB,GAAqC+G,KAAKnH,IAAL,CAAU,EAAV,CAArC;AACAtB,eAAKzC,KAAL,CAAW,wBAAX,EAAqCyE,EAArC,CAAwC,OAAxC,EAAiDjH,OAAO+Q,qBAAxD;AACA/Q,iBAAOuP,YAAP,CAAoBlI,SAApB,CAA8B+H,MAA9B,CAAqC,QAArC;AACApP,iBAAOqP,UAAP,CAAkBhI,SAAlB,CAA4B+H,MAA5B,CAAmC,QAAnC;AACApP,iBAAOsP,eAAP,CAAuBjI,SAAvB,CAAiC+H,MAAjC,CAAwC,QAAxC;AACApP,iBAAOmP,aAAP,CAAqB9H,SAArB,CAA+B4F,MAA/B,CAAsC,QAAtC;AACAjN,iBAAOqD,aAAP,CAAqBtB,IAArB;AACD,SAnBD,CAoBA,OAAOoB,KAAP,EAAc;AACZtD,kBAAQC,GAAR,CAAYqD,KAAZ;AACD;AACF,OAzBD;AA0BD,KA/rBkC;AAisBnC4N,yBAjsBmC,iCAisBbjL,GAjsBa,EAisBR;AACzB,UAAM0B,MAAM1B,IAAI2B,aAAJ,CAAkBnK,EAAlB,CAAqB0T,OAArB,CAA6B,SAA7B,EAAwC,EAAxC,CAAZ;AACAhR,aAAO2H,mBAAP,CAA2BH,GAA3B;AACD,KApsBkC;AAssBnCL,mBAtsBmC,2BAssBnBrB,GAtsBmB,EAssBd;AACnB,UAAM0J,MAAMvK,KAAKzC,KAAL,CAAWsD,IAAI2B,aAAf,EAA8BsF,OAA9B,CAAsC,IAAtC,EAA4C,CAA5C,CAAZ;AACA,UAAM0C,UAAUxK,KAAKzC,KAAL,CAAW,IAAX,EAAiBgN,GAAjB,EAAsB5O,GAAtB,CAA0B;AAAA,eAAM8O,GAAG/I,SAAT;AAAA,OAA1B,CAAhB;AACA3G,aAAOhC,aAAP,GAAuByR,QAAQ,CAAR,CAAvB;AACAzP,aAAO3B,eAAP,GAAyBoR,QAAQ,CAAR,CAAzB;AACAzP,aAAOwQ,WAAP,CAAmBxQ,OAAOhC,aAA1B,EAAyCgC,OAAO3B,eAAhD;AACD,KA5sBkC;AA+sBnC4S,kBA/sBmC,4BA+sBlB;AACfhW,kBAAY,IAAI9D,IAAJ,CAAS6I,OAAOY,GAAhB,CAAZ;AACA3F,gBAAUgM,EAAV,CAAa,UAAb,EAAyBjH,OAAOkR,SAAhC;AACD,KAltBkC;AAotBnCA,aAptBmC,qBAotBzBpL,GAptByB,EAotBpB;AACb,UAAIA,IAAIoC,QAAJ,CAAa/G,IAAb,KAAsB,OAA1B,EAAmC;AACjC,YAAMgQ,cAAcnR,OAAOY,GAAP,CAAWwQ,QAAX,CAAoBtL,IAAIoC,QAAxB,CAApB;AACA,YAAMxG,WAAW1B,OAAOY,GAAP,CAAWyQ,eAAX,CAA2BC,gBAA3B,CAA4CH,WAA5C,CAAjB;AACAzP,iBAASZ,IAAT,CAAc,UAAUoI,KAAV,EAAiB;AAC7B,cAAIA,UAAUqI,SAAd,EAAyB;AACvB,gBAAMC,UAAUnZ,iBAAiBoZ,uBAAjB,CAAyC,IAAI9Z,KAAJ,CAAUuR,KAAV,CAAzC,CAAhB;AACA,gBAAMqD,UAAU,IAAIlV,OAAJ,CAAYma,OAAZ,EAAqBpU,aAAa4C,OAAO5B,IAApB,EAA0BuO,MAA/C,CAAhB;AACA;AACA,gBAAI3M,OAAO5B,IAAP,IAAe,CAAf,IAAoB4B,OAAO5B,IAAP,IAAe,CAAvC,EAA0C;;AAExC,kBAAMsT,eAAe,IAAIha,aAAJ,CAAkB;AACrC4F,oBAAIb;AADiC,eAAlB,CAArB;AAGAiV,2BAAapK,GAAb,CAAiBiF,OAAjB;AACAvM,qBAAOY,GAAP,CAAWoH,QAAX,CAAoB0J,YAApB;AACA1R,qBAAOtB,EAAP,GAAY,CAAC8S,QAAQG,CAAT,EAAYH,QAAQI,CAApB,CAAZ;AACD,aARD,MASK,IAAI5R,OAAO5B,IAAP,IAAe,CAAnB,EAAsB;AACzBmO,sBAAQ,YAAR,IAAwB;AACtBsF,qBAAK7R,OAAOpB,iBADU;AAEtBtB,oBAAI0C,OAAOnB;AAFW,eAAxB;AAIArB,0CAA4B8J,GAA5B,CAAgCiF,OAAhC;AACD;AACDvM,mBAAOY,GAAP,CAAWkR,oBAAX,CAAgC,IAAhC;AACA7W,sBAAU0U,UAAV;AACA3P,mBAAOiQ,wBAAP;AACD,WAvBD,MAuBO;AACL8B,kBAAM/R,OAAOqB,GAAP,CAAW2Q,kBAAjB;AACD;AACF,SA3BD,EA2BG,UAAU7O,KAAV,EAAiB;AAClBtD,kBAAQC,GAAR,CAAYqD,KAAZ;AACD,SA7BD;AA8BD,OAjCD,MAiCO,IAAI2C,IAAIoC,QAAJ,CAAa/G,IAAb,KAAsB,UAA1B,EAAsC;AAC3CnB,eAAOrB,QAAP,GAAkBqB,OAAOrB,QAAP,GAAkB,CAApC;AACA,YAAMsT,2BAAyBjS,OAAOrB,QAAtC;AACA,YAAM4N,UAAU,IAAIlV,OAAJ,CAAYyO,IAAIoC,QAAhB,EAA0BhM,kBAA1B,EAA8C,EAAEoB,IAAI2U,UAAN,EAA9C,CAAhB;AACA5U,kCAA0BiK,GAA1B,CAA8BiF,OAA9B;AACAvM,eAAOkS,sBAAP,CAA8BD,UAA9B;AACAjS,eAAOmS,cAAP,CAAsBF,UAAtB,EAAkCnM,IAAIoC,QAAtC;AACAlI,eAAOY,GAAP,CAAWoH,QAAX,CAAoB3K,yBAApB;AACA2C,eAAOY,GAAP,CAAWkR,oBAAX,CAAgC,IAAhC;AACA7W,kBAAU0U,UAAV;AACA3P,eAAOiQ,wBAAP;AACA;AACD;AACD;AAED,KArwBkC;AAuwBnCA,4BAvwBmC,sCAuwBR;AACzB,UAAIhL,KAAKzC,KAAL,OAAexC,OAAOf,kBAAtB,EAA4C6H,MAA5C,GAAqD,CAAzD,EAA4D;AAC1D7B,aAAKzC,KAAL,OAAexC,OAAOf,kBAAtB,EAA4C,CAA5C,EAA+CoI,SAA/C,CAAyD+H,MAAzD,CAAgE,cAAhE;AACD;AACF,KA3wBkC;AA6wBnChH,uBA7wBmC,+BA6wBfgK,OA7wBe,EA6wBN;AAC3B,UAAIpS,OAAOY,GAAP,CAAWyR,gBAAX,CAA4BC,QAA5B,CAAqCF,OAArC,CAAJ,EAAmD;AACjDpS,eAAOY,GAAP,CAAW2R,WAAX,CAAuBvS,OAAOY,GAAP,CAAW4R,QAAX,CAAoBJ,OAApB,CAAvB;AACD;AACF,KAjxBkC;AAmxBnCK,iBAnxBmC,yBAmxBrB3M,GAnxBqB,EAmxBhB;AACjB9F,aAAOiQ,wBAAP;AACAjQ,aAAOf,kBAAP,GAA4B6G,IAAI2B,aAAJ,CAAkBnK,EAA9C;AACA2H,WAAKzC,KAAL,OAAexC,OAAOf,kBAAtB,EAA4C,CAA5C,EAA+CoI,SAA/C,CAAyDC,GAAzD,CAA6D,cAA7D;AACAtH,aAAO0S,4BAAP;AACA1S,aAAOY,GAAP,CAAWkR,oBAAX,CAAgC,KAAhC;AACA9R,aAAOoI,mBAAP,CAA2B3L,iBAA3B;AACAxB,gBAAU0X,QAAV,CAAmBxb,KAAK,OAAL,CAAnB;AACD,KA3xBkC;AA6xBnCyb,4BA7xBmC,oCA6xBV9M,GA7xBU,EA6xBL;AAC5B9F,aAAOiQ,wBAAP;AACAjQ,aAAOf,kBAAP,GAA4B6G,IAAI2B,aAAJ,CAAkBnK,EAA9C;AACA0C,aAAOlB,cAAP,GAAwBgH,IAAI2B,aAAJ,CAAkBC,OAAlB,CAA0BmK,GAAlD;AACA7R,aAAOjB,aAAP,GAAuB+G,IAAI2B,aAAJ,CAAkBoL,aAAlB,CAAgCA,aAAhC,CAA8CvV,EAA9C,CAAiDwO,KAAjD,CAAuD,GAAvD,EAA4D,CAA5D,CAAvB;AACA7G,WAAKzC,KAAL,OAAexC,OAAOf,kBAAtB,EAA4C,CAA5C,EAA+CoI,SAA/C,CAAyDC,GAAzD,CAA6D,cAA7D;AACAtH,aAAOY,GAAP,CAAWkR,oBAAX,CAAgC,KAAhC;AACA9R,aAAO8S,8BAAP;AACA9S,aAAOoI,mBAAP,CAA2B3L,iBAA3B;AACAxB,gBAAU0X,QAAV,CAAmBxb,KAAK,OAAL,CAAnB;AACD,KAvyBkC;AAyyBnC4b,8BAzyBmC,sCAyyBRjN,GAzyBQ,EAyyBH;AAC9B9F,aAAOiQ,wBAAP;AACAjQ,aAAOf,kBAAP,GAA4B6G,IAAI2B,aAAJ,CAAkBnK,EAA9C;AACA2H,WAAKzC,KAAL,OAAexC,OAAOf,kBAAtB,EAA4C,CAA5C,EAA+CoI,SAA/C,CAAyDC,GAAzD,CAA6D,cAA7D;AACAtH,aAAOY,GAAP,CAAWkR,oBAAX,CAAgC,KAAhC;AACA9R,aAAOgT,2BAAP;AACAhT,aAAOoI,mBAAP,CAA2BxL,eAA3B;AACAoD,aAAOoI,mBAAP,CAA2BtL,kBAA3B;AACAkD,aAAOoI,mBAAP,CAA2BrL,mBAA3B;AACAiD,aAAOoI,mBAAP,CAA2BjL,qBAA3B;AACA6C,aAAO+P,qBAAP,CAA6BpJ,SAA7B,GAAyC,EAAzC;AACA;AACAnJ,kCAA4BwS,KAA5B;AACA/U,gBAAU0X,QAAV,CAAmBxb,KAAK,UAAL,CAAnB;AACD,KAvzBkC;AAyzBnCub,gCAzzBmC,0CAyzBJ;AAC7B,UAAMO,UAAUjT,OAAO9B,SAAP,CAAiBmE,gBAAjB,CAAkCvI,eAAlC,CAAhB;AACA,UAAM0O,gBAAgB,IAAI1Q,YAAJ,CAAiBmb,QAAQtQ,MAAR,EAAjB,EAAmC;AACvD8F,cAAM3Q,aAAa4Q,aADoC;AAEvDC,mBAAW,CAAC,GAAD;AAF4C,OAAnC,CAAtB;AAIA,UAAMuK,cAAclT,OAAOY,GAAP,CAAWuS,cAAX,CAA0B;AAC5C;AACA;AACAC,yBAAiB7W,iBAH2B;AAI5C8W,mBAAW;AAJiC,OAA1B,CAApB;AAMA;AACA,UAAMC,aAAa,CAAC;AAClBC,eAAO/K;AADW,OAAD,CAAnB;;AAIA0K,kBAAYM,aAAZ,CAA0BF,UAA1B;AACD,KA30BkC;AA60BnCR,kCA70BmC,4CA60BF;AAC/B,UAAIW,wBAAwBzT,OAAOY,GAAP,CAAW4R,QAAX,CAAoB1V,kBAApB,CAA5B;AACA,UAAI4W,oBAAoB,IAAIvT,KAAKwT,MAAL,CAAYC,SAAhB,CAA0B;AAChDtW,YAAImW,sBAAsBnW,EADsB,EAClB;AAC9BuW,cAAMJ,sBAAsBI,IAFoB,EAEd;AAClCN,eAAOE,qBAHyC,CAGnB;AAHmB,OAA1B,CAAxB;;AAMA;AACAzT,aAAOY,GAAP,CAAWuS,cAAX,CAA0B;AACxBG,oBAAY,CAACI,iBAAD,CADY,EACS;AACjC;AACAN,yBAAiB7W,iBAHO;AAIxB8W,mBAAW;AAJa,OAA1B;AAMD,KA51BkC;AA81BnCL,+BA91BmC,yCA81BL;AAC5B,UAAIU,oBAAoB,IAAIvT,KAAKwT,MAAL,CAAYC,SAAhB,CAA0B;AAChDtW,YAAID,0BAA0BC,EADkB,EACd;AAClCuW,cAAMxW,0BAA0BwW,IAFgB,EAEV;AACtCN,eAAOlW,yBAHyC,CAGf;AAHe,OAA1B,CAAxB;;AAMA,UAAI4V,UAAUjT,OAAO9B,SAAP,CAAiBmE,gBAAjB,CAAkCnI,YAAlC,CAAd;AACA,UAAIsO,gBAAgB,IAAI1Q,YAAJ,CAAiBmb,QAAQtQ,MAAR,EAAjB,EAAmC;AACrD8F,cAAM3Q,aAAa4Q,aADkC;AAErDC,mBAAW,CAAC,GAAD;AAF0C,OAAnC,CAApB;;AAKA,UAAI2K,aAAa,CAAC;AAChBC,eAAO/K;AADS,OAAD,EAEdkL,iBAFc,CAAjB;;AAIA;AACA1T,aAAOY,GAAP,CAAWuS,cAAX,CAA0B;AACxBG,oBAAYA,UADY,EACA;AACxB;AACAF,yBAAiB7W,iBAHO;AAIxB8W,mBAAW;AAJa,OAA1B;AAMD,KAt3BkC;AA03BnC5H,kBA13BmC,0BA03BpBqI,GA13BoB,EA03Bf;AAClB,UAAIC,QAAQ7b,eAAe6b,KAAf,CAAqBD,GAArB,CAAZ;AACA,aAAOC,KAAP;AACD,KA73BkC;AA+3BnCC,6BA/3BmC,uCA+3BP;AAC1B;AACA,UAAMC,yBAAyB,IAAIvc,aAAJ,CAAkB;AAC/C4F,YAAIV;AAD2C,OAAlB,CAA/B;AAGA;AACA;AACA,UAAMkX,MAAM9T,OAAOT,eAAP,CAAuBqB,GAAvB,CAA2B,UAACmE,CAAD;AAAA,eAAOA,EAAEmD,QAAT;AAAA,OAA3B,CAAZ;AACA;AACA;AACA;AACA,UAAM9D,WAAWpE,OAAOyL,cAAP,CAAsBqI,GAAtB,CAAjB;AACA,UAAMvH,UAAU,IAAIlV,OAAJ,CAAY+M,QAAZ,EAAsBtI,gBAAtB,CAAhB;;AAEAmY,6BAAuB3M,GAAvB,CAA2BiF,OAA3B;AACAvM,aAAOY,GAAP,CAAWoH,QAAX,CAAoBiM,sBAApB;AACAjU,aAAOY,GAAP,CAAWkC,SAAX,CAAqByJ,QAAQ2H,OAAR,CAAgBvI,MAAhB,CAAuB,GAAvB,CAArB,EAAkD,IAAlD;AACA,aAAO,CAACvH,QAAD,CAAP;AACD,KAj5BkC;AAm5BnC+P,iCAn5BmC,2CAm5BH;AAC9BnU,aAAOqD,aAAP,CAAqB0C,IAArB;AACA/F,aAAOoI,mBAAP,CAA2B3L,iBAA3B;AACAuD,aAAOoI,mBAAP,CAA2BxL,eAA3B;AACAoD,aAAOoI,mBAAP,CAA2BtL,kBAA3B;AACAkD,aAAOoI,mBAAP,CAA2BrL,mBAA3B;AACAiD,aAAOoI,mBAAP,CAA2BnL,qBAA3B;AACA+C,aAAOoI,mBAAP,CAA2BjL,qBAA3B;;AAEA,UAAI,CAAC6C,OAAO1B,UAAZ,EAAwB;AACtB0B,eAAOiB,YAAP,CAAoBjB,OAAOqB,GAAP,CAAW+I,YAA/B,EAA6C,SAA7C;AACApK,eAAOqD,aAAP,CAAqBtB,IAArB;AACA;AACD;;AAED,aAAO/B,OAAOoU,gBAAP,CAAwBpU,OAAO1B,UAA/B,EACJwC,IADI,CACC,sBAAc;AAClB,YAAMuT,sBAAsBrU,OAAOgU,yBAAP,EAA5B;AACA,eAAOhU,OAAOsU,aAAP,CAAqBD,mBAArB,CAAP;AACD,OAJI,EAKJvT,IALI,CAKC,qBAAa;AACjBd,eAAOuU,yBAAP,CACEC,UAAUC,QADZ,EAEEC,SAASF,UAAUG,UAAnB,CAFF,EAGE3U,OAAO4U,qBAHT;AAKA5U,eAAOY,GAAP,CAAWkC,SAAX,CAAqB0R,UAAUC,QAAV,CAAmB,CAAnB,EAAsB/I,SAAtB,GAAkCC,MAAlC,CAAyC,GAAzC,CAArB,EAAoE,IAApE;AACA,eAAO3L,OAAO6U,+BAAP,EAAP;AACD,OAbI,EAcJ/T,IAdI,CAcC,YAAM;AACVd,eAAO8U,oBAAP,CAA4B9U,OAAO+U,mBAAnC,EAAwD/U,OAAO4S,wBAA/D;AACA5S,eAAOqD,aAAP,CAAqBtB,IAArB;AACD,OAjBI,EAkBJyC,KAlBI,CAkBE,iBAAS;AACd3E,gBAAQC,GAAR,CAAYqD,KAAZ;AACAnD,eAAOqD,aAAP,CAAqBtB,IAArB;AACA/B,eAAOiB,YAAP,CAAoBkC,MAAMjC,OAA1B,EAAmCC,OAAO,OAA1C;AACD,OAtBI,CAAP;AAuBD,KAz7BkC;AA27BnC6T,gBA37BmC,wBA27BtBC,QA37BsB,EA27BZ;AACrB,UAAInO,SAAS5O,eAAegd,cAAf,CAA8BD,QAA9B,EAAwC,QAAxC,CAAb;AACA,UAAIE,WAAWjd,eAAekd,eAAf,CAA+BH,QAA/B,EAAyCnO,SAAS,CAAlD,EAAqD,QAArD,EAA+DuO,QAA/D,CAAwE,CAAxE,EAA2E,CAA3E,CAAf;AACA,aAAOF,QAAP;AACD,KA/7BkC;AAi8BnCG,iBAj8BmC,yBAi8BrBL,QAj8BqB,EAi8BX;AACtB,UAAIM,sBAAsBrd,eAAegd,cAAf,CAA8BD,QAA9B,EAAwC,QAAxC,CAA1B;AACA,UAAIO,OAAO/c,KAAKgd,UAAL,CAAgBR,SAASS,KAAT,CAAe,CAAf,CAAhB,CAAX;AACA,UAAIC,UAAU,EAAEC,OAAO,QAAT,EAAd;AACA,UAAIC,QAAQpd,KAAKod,KAAL,CAAWL,IAAX,EAAiBD,sBAAsB,CAAvC,EAA0CI,OAA1C,CAAZ;AACA,aAAOE,KAAP;AACD,KAv8BkC;AA08BnCC,uBA18BmC,+BA08Bfb,QA18Be,EA08BL;AAC5B,UAAIS,QAAQT,SAASS,KAArB;AACA,UAAIK,cAAc,CAAlB;AACA,UAAI3R,WAAW,IAAf;AAH4B;AAAA;AAAA;;AAAA;AAI5B,8BAAiBsR,KAAjB,mIAAwB;AAAA,cAAfM,IAAe;;AACtB,cAAIC,gBAAgB,IAAI9d,QAAJ,CAAa;AAC/Bud,mBAAO,CAACM,IAAD,CADwB;AAE/BE,8BAAkB,EAAEC,MAAM,IAAR;AAFa,WAAb,CAApB;AAIA,cAAIZ,sBAAsBrd,eAAegd,cAAf,CAA8Be,aAA9B,EAA6C,QAA7C,CAA1B;AACA,cAAIV,sBAAsBQ,WAA1B,EAAuC;AACrCA,0BAAcR,mBAAd;AACAnR,uBAAW6R,aAAX;AACD;AACF;AAd2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAe5B,aAAO7R,QAAP;AACD,KA19BkC;AAi+BnCgS,kBAj+BmC,0BAi+BpBC,IAj+BoB,EAi+BdC,KAj+Bc,EAi+BP;AAC1B,UAAMC,SAASre,eAAese,GAAf,CAAmBH,IAAnB,EAAyBC,KAAzB,CAAf;AACA,UAAMlS,WAAW,EAAjB;AAF0B;AAAA;AAAA;;AAAA;AAAA;AAAA,cAGjBqS,IAHiB;;AAIxBA,eAAKC,KAAL,CAAW9V,GAAX,CAAe,UAACmE,CAAD,EAAO;AACpB,gBAAM4R,gBAAgB,IAAIve,OAAJ,CAAY;AAChCse,qBAAO,CAAC3R,CAAD,CADyB;AAEhCmR,gCAAkBO,KAAKP;AAFS,aAAZ,CAAtB;AAIA9R,qBAASwS,IAAT,CAAcD,aAAd;AACD,WAND;AAJwB;;AAG1B,8BAAiBJ,MAAjB,mIAAyB;AAAA;AAQxB;AAXyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWzB;AACD,aAAOnS,QAAP;AACD,KA9+BkC;AAg/BnC8N,0BAh/BmC,kCAg/BZ2E,MAh/BY,EAg/BJ;AAC7B,UAAIrH,sCAAoCxP,OAAOrB,QAA3C,4DACuCkY,MADvC,eACuDA,MADvD,oFAGoBA,MAHpB,8IAMoBA,MANpB,+FAAJ;AAQA,UAAIC,KAAK7R,KAAK3B,MAAL,CAAY,IAAZ,CAAT;AACAwT,SAAGxZ,EAAH,GAAQuZ,MAAR;AACAC,SAAGnQ,SAAH,GAAe6I,GAAf;AACAsH,SAAGxG,KAAH,CAASyG,MAAT,GAAkB,SAAlB;AACA/W,aAAO6P,iBAAP,CAAyB/R,WAAzB,CAAqCgZ,EAArC;AACA7R,WAAKzC,KAAL,OAAeqU,MAAf,WAA6B5P,EAA7B,CAAgC,OAAhC,EAAyCjH,OAAOgX,cAAhD;AACA/R,WAAKzC,KAAL,OAAeqU,MAAf,WAA6B5P,EAA7B,CAAgC,OAAhC,EAAyCjH,OAAOiX,mBAAhD;AACAhS,WAAKzC,KAAL,OAAeqU,MAAf,YAA8B5P,EAA9B,CAAiC,OAAjC,EAA0CjH,OAAOkX,sBAAjD;AACD,KAjgCkC;AAmgCnCF,kBAngCmC,0BAmgCpBlR,GAngCoB,EAmgCf;AAClB,UAAIxI,KAAKwI,IAAI2B,aAAJ,CAAkBnK,EAAlB,CAAqB0T,OAArB,CAA6B,MAA7B,EAAqC,EAArC,CAAT;AACA,UAAImG,OAAOlS,KAAKzC,KAAL,OAAelF,EAAf,CAAX;AACA,UAAIiP,UAAUlP,0BAA0BqP,QAA1B,CAAmC5H,MAAnC,CAA0C;AAAA,eAAQ2R,KAAKnM,UAAL,CAAgBhN,EAAhB,IAAsBA,EAA9B;AAAA,OAA1C,CAAd;AACAD,gCAA0B+R,MAA1B,CAAiC7C,QAAQ,CAAR,CAAjC;AACA,UAAI6K,eAAe7Z,+BAA+BmP,QAA/B,CAAwC5H,MAAxC,CAA+C;AAAA,eAAQ2R,KAAKnM,UAAL,CAAgBhN,EAAhB,IAAsBA,EAA9B;AAAA,OAA/C,CAAnB;AACAC,qCAA+B6R,MAA/B,CAAsCgI,aAAa,CAAb,CAAtC;AACApX,aAAOoI,mBAAP,CAA2BxL,eAA3B;AACAoD,aAAOoI,mBAAP,CAA2BtL,kBAA3B;AACAkD,aAAOoI,mBAAP,CAA2BrL,mBAA3B;AACAiD,aAAOoI,mBAAP,CAA2BjL,qBAA3B;AACAK,kCAA4BwS,KAA5B;AACAmH,WAAK,CAAL,EAAQ1T,UAAR,CAAmBuD,WAAnB,CAA+BmQ,KAAK,CAAL,CAA/B;AACD,KAhhCkC;AAkhCnChF,kBAlhCmC,0BAkhCpB0B,IAlhCoB,EAkhCdwD,YAlhCc,EAkhCA;AACjC,UAAIC,kBAAkBjf,iBAAiBoZ,uBAAjB,CAAyC4F,YAAzC,CAAtB;AACA,UAAIE,WAAWvX,OAAOsV,aAAP,CAAqBgC,eAArB,CAAf;;AAEA,UAAIE,aAAa,IAAI7f,KAAJ,CAAU;AACzBga,WAAG4F,SAASrP,QAAT,CAAkBuP,WAAlB,CAA8B,CAA9B,CADsB;AAEzB7F,WAAG2F,SAASrP,QAAT,CAAkBuP,WAAlB,CAA8B,CAA9B,CAFsB;AAGzBvB,0BAAkB,EAAEC,MAAM,IAAR;AAHO,OAAV,CAAjB;;AAMA,UAAIuB,OAAO,IAAI7e,IAAJ,CAAS,MAAT,EAAiBA,KAAK8e,YAAtB,EAAoC9e,KAAK+e,cAAzC,EAAyD/e,KAAKgf,WAA9D,EAA2E,OAA3E,CAAX;AACA,UAAIC,SAAS,IAAIlf,UAAJ,CAAeib,IAAf,EAAqB6D,IAArB,EAA2B,IAAIjgB,KAAJ,CAAU,CAAC,GAAD,EAAM,CAAN,EAAS,CAAT,EAAY,GAAZ,CAAV,CAA3B,CAAb;AACAqgB,aAAOC,SAAP,CAAiB,EAAjB,EAAqB,EAArB,EAAyBC,QAAzB,CAAkCpf,WAAWqf,SAA7C;AACAH,aAAOI,YAAP,CAAoB,IAAIzgB,KAAJ,CAAU,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAV,CAApB;AACAqgB,aAAOK,WAAP,CAAmB,GAAnB;AACA,UAAIf,eAAe,IAAI/f,OAAJ,CAAYmgB,UAAZ,EAAwBM,MAAxB,EAAgC,EAAExa,IAAIuW,IAAN,EAAhC,CAAnB;;AAEA;AACAtW,qCAA+B+J,GAA/B,CAAmC8P,YAAnC;AACD,KAriCkC;AAuiCnCH,uBAviCmC,+BAuiCfnR,GAviCe,EAuiCV;AACvB,UAAIxI,KAAKwI,IAAI2B,aAAJ,CAAkBnK,EAAlB,CAAqB0T,OAArB,CAA6B,MAA7B,EAAqC,EAArC,CAAT;AACA,UAAIzE,UAAUhP,+BAA+BmP,QAA/B,CAAwC5H,MAAxC,CAA+C;AAAA,eAAQ2R,KAAKnM,UAAL,CAAgBhN,EAAhB,IAAsBA,EAA9B;AAAA,OAA/C,CAAd;AACA0C,aAAOY,GAAP,CAAWkC,SAAX,CAAqByJ,QAAQ,CAAR,EAAW2H,OAAhC,EAAyC,IAAzC;AACD,KA3iCkC;AA6iCnCgD,0BA7iCmC,kCA6iCZpR,GA7iCY,EA6iCP;AAC1B,UAAIxI,KAAKwI,IAAI2B,aAAJ,CAAkBnK,EAAlB,CAAqB0T,OAArB,CAA6B,OAA7B,EAAsC,EAAtC,CAAT;AACA,UAAIzE,UAAUhP,+BAA+BmP,QAA/B,CAAwC5H,MAAxC,CAA+C;AAAA,eAAQ2R,KAAKnM,UAAL,CAAgBhN,EAAhB,IAAsBA,EAA9B;AAAA,OAA/C,CAAd;AACAiP,cAAQ,CAAR,EAAWI,MAAX,CAAkByL,IAAlB,GAAyBtS,IAAI2B,aAAJ,CAAkB4Q,SAA3C;AACA9a,qCAA+B+a,OAA/B;AACD,KAljCkC;AAojCnCxD,wBApjCmC,gCAojCdyD,SApjCc,EAojCHC,YApjCG,EAojCW;AAC5CD,gBAAU5R,SAAV,GAAsB,EAAtB;AACA3G,aAAOV,gBAAP,CAAwB0E,OAAxB,CAAgC,UAAC6M,MAAD,EAASlD,GAAT,EAAiB;AAC/C,YAAMmJ,KAAK7R,KAAK3B,MAAL,CAAY,IAAZ,CAAX;AACAwT,WAAGxZ,EAAH,eAAkBuT,OAAO,IAAP,CAAlB;AACA,YAAMrB,uCAAoC7B,MAAM,CAA1C,sCACYkD,OAAO,SAAP,CADZ,2FAGmBiG,GAAGxZ,EAHtB,wBAG2CuT,OAAO,KAAP,CAH3C,2EAAN;AAKAiG,WAAGnQ,SAAH,GAAe6I,GAAf;AACAsH,WAAGxG,KAAH,CAASyG,MAAT,GAAkB,SAAlB;AACAwB,kBAAUza,WAAV,CAAsBgZ,EAAtB;AACA7R,aAAKzC,KAAL,OAAesU,GAAGxZ,EAAlB,YAA6B2J,EAA7B,CAAgC,OAAhC,EAAyCuR,YAAzC;AACD,OAZD;AAaD,KAnkCkC;AAqkCnCC,sCArkCmC,8CAqkCAC,YArkCA,EAqkCc;AAC/C,UAAIhF,oBAAoB,IAAIvT,KAAKwT,MAAL,CAAYC,SAAhB,CAA0B;AAChDtW,YAAIob,aAAapb,EAD+B,EAC3B;AACrBuW,cAAM6E,aAAa7E,IAF6B,EAEvB;AACzBN,eAAOmF,YAHyC,CAG5B;AAH4B,OAA1B,CAAxB;;AAMA;AACA1Y,aAAOY,GAAP,CAAWuS,cAAX,CAA0B;AACxBG,oBAAY,CAACI,iBAAD,CADY,EACS;AACjC;AACAN,yBAAiB7W,iBAHO;AAIxB8W,mBAAW;AAJa,OAA1B;AAMD,KAnlCkC;AAqlCnCsF,kCArlCmC,0CAqlCJ7S,GArlCI,EAqlCC;AAClC9F,aAAOiQ,wBAAP;AACAjQ,aAAOf,kBAAP,GAA4B6G,IAAI2B,aAAJ,CAAkBnK,EAA9C;AACA2H,WAAKzC,KAAL,OAAexC,OAAOf,kBAAtB,EAA4C,CAA5C,EAA+CoI,SAA/C,CAAyDC,GAAzD,CAA6D,cAA7D;AACA;AACAtH,aAAOpB,iBAAP,GAA2BkH,IAAI2B,aAAJ,CAAkBC,OAAlB,CAA0BmK,GAArD;AACA7R,aAAOnB,gBAAP,GAA0BiH,IAAI2B,aAAJ,CAAkBoL,aAAlB,CAAgCA,aAAhC,CAA8CvV,EAAxE;AACA;AACA,UAAMiP,UAAU/O,4BAA4BkP,QAA5B,CAAqC5H,MAArC,CAA4C;AAAA,eAAQ2R,KAAKnM,UAAL,CAAgBhN,EAAhB,KAAuB0C,OAAOnB,gBAAtC;AAAA,OAA5C,CAAhB;AACArB,kCAA4B4R,MAA5B,CAAmC7C,QAAQ,CAAR,CAAnC;AACAvM,aAAOY,GAAP,CAAWkR,oBAAX,CAAgC,KAAhC;AACA,UAAM2B,wBAAwBzT,OAAOY,GAAP,CAAW4R,QAAX,CAAoB1V,kBAApB,CAA9B;AACAkD,aAAOyY,kCAAP,CAA0ChF,qBAA1C;AACAxY,gBAAU0X,QAAV,CAAmBxb,KAAK,OAAL,CAAnB;AACD,KAnmCkC;AAqmCnCyhB,uBArmCmC,+BAqmCf9S,GArmCe,EAqmCV;AACvB,UAAM+S,gBAAgB/S,IAAIvC,MAAJ,CAAW2F,KAAjC;AACA,UAAM4P,kBAAkBhT,IAAIvC,MAAJ,CAAWjG,EAAnC;AACA,UAAMA,KAAKwI,IAAIvC,MAAJ,CAAWjG,EAAX,CAAcwO,KAAd,CAAoB,GAApB,EAAyB,CAAzB,CAAX;AACA;AACA;AACA,UAAMiN,MAAM/Y,OAAOY,GAAP,CAAW4R,QAAX,CAAoBrV,qBAApB,CAAZ;AACA,UAAM6b,kBAAkBD,IAAIrM,QAAJ,CAAa5H,MAAb,CAAoB;AAAA,eAAQ2R,KAAKnM,UAAL,CAAgBhN,EAAhB,eAA+BA,EAAvC;AAAA,OAApB,CAAxB;AACA0b,sBAAgB,CAAhB,EAAmBrM,MAAnB,CAA0ByL,IAA1B,GAAiCS,aAAjC;AACA,UAAMI,UAAUhU,KAAKzC,KAAL,CAAW,qBAAX,CAAhB;AACAyW,cAAQjV,OAAR,CAAgB,kBAAU;AACxB,YAAIkV,OAAO5b,EAAP,KAAcwb,eAAd,IAAiCI,OAAOhQ,KAAP,KAAiB2P,aAAtD,EAAqE;AACnEK,iBAAOhQ,KAAP,GAAe,EAAf;AACA,cAAMiQ,qBAAqBJ,IAAIrM,QAAJ,CAAa5H,MAAb,CAAoB;AAAA,mBAAQ2R,KAAKnM,UAAL,CAAgBhN,EAAhB,eAA+B4b,OAAO5b,EAAP,CAAUwO,KAAV,CAAgB,GAAhB,EAAqB,CAArB,CAAvC;AAAA,WAApB,CAA3B;AACAqN,6BAAmB,CAAnB,EAAsBxM,MAAtB,CAA6ByL,IAA7B,GAAoC,EAApC;AACD;AACDW,YAAIT,OAAJ;AACD,OAPD;AAQD,KAvnCkC;AAynCnCc,iBAznCmC,yBAynCrBtT,GAznCqB,EAynChB;AACjB,UAAM+S,gBAAgB/S,IAAIvC,MAAJ,CAAW2F,KAAjC;AACA,UAAM4P,kBAAkBhT,IAAIvC,MAAJ,CAAWjG,EAAnC;AACA,UAAM2b,UAAUhU,KAAKzC,KAAL,CAAW,qBAAX,CAAhB;AACA,UAAMuW,MAAM/Y,OAAOY,GAAP,CAAW4R,QAAX,CAAoBrV,qBAApB,CAAZ;AACA;AACA8b,cAAQjV,OAAR,CAAgB,kBAAU;AACxB,YAAIkV,OAAO5b,EAAP,KAAcwb,eAAd,IAAiCI,OAAOhQ,KAAP,KAAiB2P,aAAtD,EAAqE;AACnEK,iBAAOhQ,KAAP,GAAe,EAAf;AACA,cAAMiQ,qBAAqBJ,IAAIrM,QAAJ,CAAa5H,MAAb,CAAoB;AAAA,mBAAQ2R,KAAKnM,UAAL,CAAgBhN,EAAhB,eAA+B4b,OAAO5b,EAAP,CAAUwO,KAAV,CAAgB,GAAhB,EAAqB,CAArB,CAAvC;AAAA,WAApB,CAA3B;AACAqN,6BAAmB,CAAnB,EAAsB7O,UAAtB,CAAiC+O,OAAjC,GAA2C,EAA3C;AACD;AACF,OAND;AAOD,KAtoCkC;AAwoCnCC,iCAxoCmC,yCAwoCLxT,GAxoCK,EAwoCA;AACjC,UAAIxI,KAAKwI,IAAI2B,aAAJ,CAAkBnK,EAA3B;AACA,UAAIyb,MAAM/Y,OAAOY,GAAP,CAAW4R,QAAX,CAAoBrV,qBAApB,CAAV;AACA,UAAI6b,kBAAkBD,IAAIrM,QAAJ,CAAa5H,MAAb,CAAoB;AAAA,eAAQ2R,KAAKnM,UAAL,CAAgBhN,EAAhB,IAAsBA,EAA9B;AAAA,OAApB,CAAtB;AACAuC,cAAQC,GAAR,CAAYkZ,gBAAgB,CAAhB,EAAmB9Q,QAA/B;AACAlI,aAAOY,GAAP,CAAW2Y,aAAX,CAAyBP,gBAAgB,CAAhB,EAAmB9Q,QAA5C;AACD,KA9oCkC;AAgpCnCsR,2BAhpCmC,mCAgpCX1T,GAhpCW,EAgpCN;AAC3B,UAAMxI,KAAKwI,IAAIvC,MAAJ,CAAWjG,EAAX,CAAc0T,OAAd,CAAsB,eAAtB,EAAuC,EAAvC,CAAX;AACA,UAAM+H,MAAM/Y,OAAOY,GAAP,CAAW4R,QAAX,CAAoBrV,qBAApB,CAAZ;AACA,UAAMoP,UAAUwM,IAAIrM,QAAJ,CAAa5H,MAAb,CAAoB;AAAA,eAAQ2R,KAAKnM,UAAL,CAAgBhN,EAAhB,eAA+BA,EAAvC;AAAA,OAApB,CAAhB;AACAiP,cAAQ,CAAR,EAAWjC,UAAX,CAAsB+O,OAAtB,GAAgCvT,IAAIvC,MAAJ,CAAWkW,eAAX,CAA2B,CAA3B,EAA8BvQ,KAA9D;AACA6P,UAAIT,OAAJ;AACD,KAtpCkC;AAwpCnCoB,uBAxpCmC,+BAwpCfC,SAxpCe,EAwpCJC,OAxpCI,EAwpCK;AACtCD,gBAAUhT,SAAV,GAAsB,EAAtB;AACAiT,cAAQ5V,OAAR,CAAgB,UAAC6M,MAAD,EAASC,KAAT,EAAmB;AACjC,YAAMtB,MAAM9R,SAASC,aAAT,CAAuB,IAAvB,CAAZ;;AAEA;AACA,YAAMkc,YAAYnc,SAASC,aAAT,CAAuB,IAAvB,CAAlB;AACAkc,kBAAUC,SAAV,GAAsB,gBAAtB;AACAD,kBAAUE,WAAV,GAAwBlJ,OAAOmJ,GAA/B;AACAxK,YAAI1R,WAAJ,CAAgB+b,SAAhB;;AAEA;AACA,YAAMI,aAAavc,SAASC,aAAT,CAAuB,IAAvB,CAAnB;AACA,YAAMub,SAASxb,SAASC,aAAT,CAAuB,QAAvB,CAAf;AACAub,eAAOY,SAAP,GAAmB,oBAAnB;AACAZ,eAAO5b,EAAP,wBAA+BuT,OAAOmJ,GAAtC;;AAEA,YAAME,iBAAiBxc,SAASC,aAAT,CAAuB,QAAvB,CAAvB;AACAuc,uBAAehR,KAAf,GAAuB,EAAvB;AACAgR,uBAAeH,WAAf,GAA6B,KAA7B;AACAG,uBAAeC,QAAf,GAA0B,IAA1B;AACAjB,eAAOpb,WAAP,CAAmBoc,cAAnB;AACAN,gBAAQ5V,OAAR,CAAgB,aAAK;AACnB,cAAMoW,SAAS1c,SAASC,aAAT,CAAuB,QAAvB,CAAf;AACAyc,iBAAOlR,KAAP,GAAemR,EAAEC,QAAjB;AACAF,iBAAOL,WAAP,GAAqBM,EAAEC,QAAvB;AACA,cAAID,EAAEC,QAAF,KAAezJ,OAAOyJ,QAA1B,EAAoC;AAClCF,mBAAOG,QAAP,GAAkB,IAAlB;AACD;AACDrB,iBAAOpb,WAAP,CAAmBsc,MAAnB;AACD,SARD;;AAUAH,mBAAWnc,WAAX,CAAuBob,MAAvB;AACA1J,YAAI1R,WAAJ,CAAgBmc,UAAhB;;AAGA,YAAMO,cAAc9c,SAASC,aAAT,CAAuB,IAAvB,CAApB;AACA,YAAM8c,gBAAgB/c,SAASC,aAAT,CAAuB,QAAvB,CAAtB;AACA8c,sBAAcX,SAAd,GAA0B,oBAA1B;AACAW,sBAAcnd,EAAd,qBAAmCuT,OAAOmJ,GAA1C;;AAEA,YAAMU,uBAAuBR,eAAeS,SAAf,CAAyB,IAAzB,CAA7B;AACAF,sBAAc3c,WAAd,CAA0B4c,oBAA1B;;AAEA1a,eAAOV,gBAAP,CAAwB0E,OAAxB,CAAgC,UAAC4W,OAAD,EAAUjN,GAAV,EAAkB;AAChD,cAAMyM,SAAS1c,SAASC,aAAT,CAAuB,QAAvB,CAAf;AACAyc,iBAAOlR,KAAP,GAAe0R,QAAQC,cAAvB;AACAT,iBAAOL,WAAP,GAAqBa,QAAQC,cAA7B;AACAJ,wBAAc3c,WAAd,CAA0Bsc,MAA1B;AACA,cAAIvJ,OAAOmJ,GAAP,IAAcrM,MAAM,CAAxB,EAA2B;AACzByM,mBAAOG,QAAP,GAAkB,IAAlB;AACD;AACD;AACD,SATD;AAUAC,oBAAY1c,WAAZ,CAAwB2c,aAAxB;AACAD,oBAAYV,SAAZ,GAAwB,iBAAxB;AACAtK,YAAI1R,WAAJ,CAAgB0c,WAAhB;;AAEA,YAAMM,iBAAiBpd,SAASC,aAAT,CAAuB,IAAvB,CAAvB;AACAmd,uBAAexd,EAAf,GAAoBuT,OAAOvT,EAA3B;AACAwd,uBAAehB,SAAf,GAA2B,gBAA3B;AACAgB,uBAAenU,SAAf,iDAAuEkK,OAAOvT,EAA9E;AACAkS,YAAI1R,WAAJ,CAAgBgd,cAAhB;AACAnB,kBAAU7b,WAAV,CAAsB0R,GAAtB;AACA;AAED,OAhED;AAiEAvK,WAAKzC,KAAL,CAAW,qBAAX,EAAkCyE,EAAlC,CAAqC,QAArC,EAA+CjH,OAAO4Y,mBAAtD;AACA3T,WAAKzC,KAAL,CAAW,qBAAX,EAAkCyE,EAAlC,CAAqC,QAArC,EAA+CjH,OAAOoZ,aAAtD;AACAnU,WAAKzC,KAAL,CAAW,yBAAX,EAAsCyE,EAAtC,CAAyC,OAAzC,EAAkDjH,OAAOsZ,6BAAzD;AACArU,WAAKzC,KAAL,CAAW,kBAAX,EAA+ByE,EAA/B,CAAkC,QAAlC,EAA4CjH,OAAOwZ,uBAAnD;AAED,KAhuCkC;AAkuCnCjF,6BAluCmC,qCAkuCTwG,SAluCS,EAkuCEpN,GAluCF,EAkuCO4K,SAluCP,EAkuCkB;AACnD;AACA,UAAMyC,mBAAmBD,UAAUna,GAAV,CAAc,oBAAY;AACjD,YAAMmC,SAASkY,SAASvP,SAAT,EAAf;AACA,eAAO3I,OAAOmY,IAAd;AACD,OAHwB,CAAzB;;AAKA;AACA,UAAMC,qBAAqBJ,UAAUK,KAAV,GAAkBC,IAAlB,CAAuB,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAC1D,YAAMC,mBAAmBR,iBAAiBD,UAAUU,OAAV,CAAkBH,CAAlB,CAAjB,CAAzB;AACA,YAAMI,mBAAmBV,iBAAiBD,UAAUU,OAAV,CAAkBF,CAAlB,CAAjB,CAAzB;AACA,eAAOG,mBAAmBF,gBAA1B,CAH0D,CAGd;AAC7C,OAJ0B,CAA3B;;AAMA,UAAMG,mCAAmC,IAAIjkB,aAAJ,CAAkB;AACzD4F,YAAIH;AADqD,OAAlB,CAAzC;;AAIA,UAAMua,OAAO,IAAI7e,IAAJ,CAAS,MAAT,EAAiBA,KAAK8e,YAAtB,EAAoC9e,KAAK+e,cAAzC,EAAyD/e,KAAKgf,WAA9D,EAA2E,OAA3E,CAAb;;AAEA,UAAM+D,gBAAgB,EAAtB;;AAEA;AACAT,yBAAmBnX,OAAnB,CAA2B,UAACiX,QAAD,EAAWnK,KAAX,EAAqB;;AAE9C,YAAM+K,UAAUpjB,KAAKojB,OAAL,CAAaZ,SAASvE,KAAtB,CAAhB;AACA,YAAIoF,SAASrjB,KAAKsjB,cAAL,CAAoBF,OAApB,CAAb;;AAEA,YAAMrE,aAAa,IAAI7f,KAAJ,CAAU;AAC3Bga,aAAGmK,OAAO5T,QAAP,CAAgBuP,WAAhB,CAA4B,CAA5B,CADwB;AAE3B7F,aAAGkK,OAAO5T,QAAP,CAAgBuP,WAAhB,CAA4B,CAA5B,CAFwB;AAG3BvB,4BAAkB,EAAEC,MAAM,IAAR;AAHS,SAAV,CAAnB;AAKA,YAAMmE,WAAWta,OAAOgc,MAAP,CAAcrO,MAAM,CAApB,EAAuB,CAAvB,CAAjB;AACA,YAAMmK,SAAS,IAAIlf,UAAJ,CAAe0hB,QAAf,EAAyB5C,IAAzB,EAA+B,IAAIjgB,KAAJ,CAAU,CAAC,GAAD,EAAM,CAAN,EAAS,CAAT,EAAY,CAAZ,CAAV,CAA/B,CAAf;AACAqgB,eAAOmE,QAAP,CAAgB,IAAI9b,KAAK1I,KAAT,CAAe,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAf,CAAhB,EAZ8C,CAYC;AAC/CqgB,eAAOoE,OAAP,CAAe,MAAf;AACApE,eAAOI,YAAP,CAAoB,IAAI/X,KAAK1I,KAAT,CAAe,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,CAAhB,CAAf,CAApB;AACAqgB,eAAOK,WAAP,CAAmB,CAAnB;AACA,YAAMgE,wBAAqBrL,QAAQ,CAA7B,CAAN;AACA,YAAMsG,eAAe,IAAI/f,OAAJ,CACnBmgB,UADmB,EAEnBM,MAFmB,EAGnB;AACExa,cAAI6e,SADN;AAEE9C,mBAASrZ,OAAOV,gBAAP,CAAwBwR,KAAxB,EAA+B+J,cAF1C;AAGEuB,iBAAO;AAHT,SAHmB,CAArB;AAQAT,yCAAiCrU,GAAjC,CAAqC8P,YAArC;AACAwE,sBAAchF,IAAd,CAAmB,EAAEoD,KAAKlJ,QAAQ,CAAf,EAAkBxT,IAAI6e,SAAtB,EAAiC7B,UAAUA,QAA3C,EAAnB;AACA3M,cAAMA,MAAM,CAAZ;AACA;AACD,OA7BD;;AAgCA;AACA3N,aAAO0Z,mBAAP,CAA2BnB,SAA3B,EAAsCqD,aAAtC;AACA5b,aAAOY,GAAP,CAAWoH,QAAX,CAAoB2T,gCAApB;AACD,KA5xCkC;AA8xCnCU,qCA9xCmC,6CA8xCDvW,GA9xCC,EA8xCI;AACrC,UAAIA,OAAOA,IAAIyG,OAAX,IAAsBzG,IAAIyG,OAAJ,CAAYjC,UAAlC,IAAgDxE,IAAIyG,OAAJ,CAAYjC,UAAZ,CAAuB8R,KAAvB,IAAgC,sBAApF,EAA4G;AAC1Gpc,eAAOY,GAAP,CAAWkR,oBAAX,CAAgC,KAAhC;AACA9R,eAAOhB,WAAP,CAAmB2T,QAAnB,CAA4Bvb,KAAKklB,IAAjC,EAAuCxW,IAAIyG,OAA3C;AACD,OAHD,MAGO;AACLvM,eAAOhB,WAAP,CAAmB2Q,UAAnB;AACD;AACF,KAryCkC;AAuyCnCqM,UAvyCmC,kBAuyC5BhC,GAvyC4B,EAuyCvBuC,GAvyCuB,EAuyClB;AACf,aAAO,CAACC,MAAMD,GAAN,EAAWE,IAAX,CAAgB,GAAhB,EAAqBlW,IAArB,CAA0B,EAA1B,IAAgCyT,GAAjC,EAAsCoB,KAAtC,CAA4C,CAACmB,GAA7C,CAAP;AACD,KAzyCkC;AA2yCnCjI,iBA3yCmC,yBA2yCrBoI,SA3yCqB,EA2yCV;AACvB,UAAMhb,WAAW,IAAI/I,QAAJ,EAAjB;AACA,UAAMgkB,iBAAiB,IAAI5jB,mBAAJ,EAAvB;AACA4jB,qBAAeC,aAAf,GAA+B,KAA/B;AACAD,qBAAeE,gBAAf,GAAkC7hB,eAAlC;AACA2hB,qBAAeG,qBAAf,GAAuC,WAAvC;;AAEA,UAAMta,QAAQ,IAAIxK,KAAJ,EAAd;AACAwK,YAAMC,KAAN,GAAczC,OAAOxB,OAArB;AACAgE,YAAMmG,SAAN,GAAkB,CAAC3N,eAAD,CAAlB;AACAwH,YAAMyH,cAAN,GAAuB,KAAvB;AACAzH,YAAMua,aAAN,GAAsB,CAACJ,cAAD,CAAtB;;AAEA,UAAMK,YAAY,IAAIjlB,SAAJ,CAAciI,OAAO9B,SAAP,CAAiBmE,gBAAjB,CAAkCnI,YAAlC,EAAgDyI,MAAhD,EAAd,CAAlB;AACAqa,gBAAUxT,OAAV,CAAkBhH,KAAlB,EACG1B,IADH,CACQ,kBAAU;AACd,YAAImc,OAAO9S,QAAP,CAAgBrD,MAAhB,GAAyB,CAA7B,EAAgC;AAC9B,cAAM6N,aAAasI,OAAO9S,QAAP,CAAgB,CAAhB,EAAmBG,UAAnB,CAA8B4S,SAAjD;AACA,iBAAOxb,SAASI,OAAT,CAAiB;AACtB6S,wBAAYA,UADU;AAEtBF,sBAAUiI;AAFY,WAAjB,CAAP;AAID,SAND,MAMO;AACL,iBAAOhb,SAASsH,MAAT,CAAgB,yBAAhB,CAAP;AACD;AACF,OAXH;AAYA,aAAOtH,SAASM,OAAhB;AACD,KAt0CkC;AAw0CnCoS,oBAx0CmC,4BAw0ClB5R,KAx0CkB,EAw0CX;AACtB,UAAMxC,SAAS,IAAf;AACA,UAAM0B,WAAW,IAAI/I,QAAJ,EAAjB;AACA,UAAMuC,SAAS;AACbuH,eAAOD,KADM;AAEbyH,wBAAgB,IAFH;AAGbtB,mBAAW,GAHE;AAIbwU,eAAO,IAJM;AAKbC,WAAG;AALU,OAAf;;AAQA,UAAMC,iBAAiB;AACrBxZ,aAAQ7D,OAAO9B,SAAP,CAAiBmE,gBAAjB,CAAkCnI,YAAlC,EAAgDyI,MAAhD,EAAR,WADqB;AAErB2a,iBAASpiB,MAFY;AAGrBqiB,kBAAU,MAHW;AAIrBC,2BAAmB;AAJE,OAAvB;;AAOAxkB,kBAAYqkB,cAAZ,EAA4B,EAAEI,SAAS,IAAX,EAA5B,EACG3c,IADH,CACQ,UAACsD,QAAD,EAAc;AAClBpE,eAAOT,eAAP,GAAyB6E,SAAS+F,QAAlC;AACAnK,eAAOT,eAAP,CAAuByE,OAAvB,CAA+B,eAAO;AACpCwL,cAAItH,QAAJ,GAAe,IAAI9P,OAAJ,CAAY;AACzBse,mBAAOlH,IAAItH,QAAJ,CAAawO,KADK;AAEzBR,8BAAkB,EAAEC,MAAM,IAAR;AAFO,WAAZ,CAAf;AAID,SALD;AAMA,eAAOzU,SAASI,OAAT,CAAiB9B,OAAOT,eAAxB,CAAP;AACD,OAVH,EAWGiF,KAXH,CAWS;AAAA,eAAO9C,SAASsH,MAAT,CAAgBvE,GAAhB,CAAP;AAAA,OAXT;;AAaA,aAAO/C,SAASM,OAAhB;AACD,KAx2CkC;AA02CnC0b,sBA12CmC,gCA02Cd;AACnB,UAAM5J,MAAM,EAAZ;AADmB;AAAA;AAAA;;AAAA;AAEnB,8BAAczW,0BAA0BqP,QAAxC,mIAAkD;AAAA,cAAzC3H,CAAyC;;AAChD+O,cAAI8C,IAAJ,CAAS7R,EAAEmD,QAAX;AACD;AAJkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKnB,UAAMyV,iCAAiC3d,OAAOyL,cAAP,CAAsBqI,GAAtB,CAAvC;;AAEA,UAAI8J,eAAe,IAAIzlB,QAAJ,CAAa;AAC9Bud,eAAOiI,+BAA+BjI,KADR;AAE9BQ,0BAAkB,EAAEC,MAAM,MAAR;AAFY,OAAb,CAAnB;AAIAyH,qBAAezd,KAAK+H,QAAL,CAAcuJ,uBAAd,CAAsCmM,YAAtC,CAAf;AACA,aAAOA,YAAP;AACD,KAv3CkC;AAy3CnCC,sBAz3CmC,gCAy3Cd;AACnB;AACA,UAAI7d,OAAOT,eAAP,CAAuBuH,MAAvB,IAAiC,CAArC,EAAwC;AACtC9G,eAAOiB,YAAP,CAAoBjB,OAAOqB,GAAP,CAAWyc,aAA/B,EAA8C,SAA9C;AACA;AACD;AACD,UAAMF,eAAe5d,OAAO0d,kBAAP,EAArB;;AAEA,UAAMK,kBAAkB/d,OAAOT,eAAP,CAAuB,CAAvB,EAA0B2I,QAAlD;;AAEA,UAAM8V,kBAAkBhe,OAAOoW,cAAP,CAAsB2H,eAAtB,EAAuCH,YAAvC,CAAxB;;AAEA,UAAII,gBAAgBlX,MAAhB,IAA0B,CAA9B,EAAiC;AAC/B;AACA,cAAM,IAAIzC,KAAJ,CAAUrE,OAAOqB,GAAP,CAAW4c,cAArB,CAAN;AACA;AACA;AACD;;AAED,UAAID,gBAAgBlX,MAAhB,IAA0B9G,OAAOV,gBAAP,CAAwBwH,MAAtD,EAA8D;AAC5D,cAAM,IAAIzC,KAAJ,gFAAoF2Z,gBAAgBlX,MAApG,wCAA6I9G,OAAOV,gBAAP,CAAwBwH,MAArK,OAAN;AACA;AACA;AACD;;AAED;AACA,UAAMoX,2BAA2B,IAAIxmB,aAAJ,CAAkB;AACjD4F,YAAIV;AAD6C,OAAlB,CAAjC;;AAIA;AA9BmB;AAAA;AAAA;;AAAA;AA+BnB,8BAAcohB,eAAd,mIAA+B;AAAA,cAAtBjZ,CAAsB;;AAC7B,cAAMoZ,OAAO,IAAI9mB,OAAJ,CAAY0N,CAAZ,EAAejJ,gBAAf,CAAb;;AAEA;AACAoiB,mCAAyB5W,GAAzB,CAA6B6W,IAA7B;AACD;AApCkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAqCnBne,aAAOY,GAAP,CAAWoH,QAAX,CAAoBkW,wBAApB;AACA,aAAOF,eAAP;AACD,KAh6CkC;AAk6CnCnJ,mCAl6CmC,6CAk6CD;AAChC,UAAMnT,WAAW,IAAI/I,QAAJ,EAAjB;AACA,UAAM6J,QAAQ,IAAIxK,KAAJ,EAAd;AACAwK,YAAMC,KAAN,GAAczC,OAAOxB,OAArB;AACA;AACAgE,YAAMmG,SAAN,GAAkB,CAACjO,aAAD,EAAgBG,YAAhB,CAAlB;AACA2H,YAAMyH,cAAN,GAAuB,IAAvB;AACA;AACAzH,YAAM4b,aAAN,GAAsB,CAACvjB,YAAD,CAAtB;AACA,UAAM6H,QAAQ,IAAI3K,SAAJ,CAAciI,OAAO9B,SAAP,CAAiBmE,gBAAjB,CAAkCpI,cAAlC,EAAkD0I,MAAlD,EAAd,CAAd;AACAD,YAAM8G,OAAN,CAAchH,KAAd,EAAqB,UAAUK,OAAV,EAAmB;AACtC;AACA,YAAM4Q,wBAAwB,IAAI/b,aAAJ,CAAkB;AAC9C4F,cAAIR;AAD0C,SAAlB,CAA9B;AAGA;AACA,YAAMuhB,yBAAyB,IAAI3mB,aAAJ,CAAkB;AAC/C4F,cAAIP;AAD2C,SAAlB,CAA/B;AAGA;AACA;AACA;AACA,YAAMuhB,sBAAsBte,OAAOY,GAAP,CAAW4R,QAAX,CAAoB5V,eAApB,CAA5B;AACA,YAAI,CAAC0hB,mBAAL,EAA0B;AACxB;AACD;AACD,YAAMC,UAAU,EAAhB;AAhBsC;AAAA;AAAA;;AAAA;AAiBtC,gCAAgB1b,QAAQsH,QAAxB,mIAAkC;AAAA,gBAAzBqF,GAAyB;AAAA;AAAA;AAAA;;AAAA;AAChC,oCAAoB8O,oBAAoB5R,QAAxC,mIAAkD;AAAA,oBAAzCH,OAAyC;;AAChD,oBAAMiS,QAAQtmB,eAAeumB,UAAf,CAA0BjP,IAAItH,QAA9B,EAAwCqE,QAAQrE,QAAhD,CAAd;AACA,oBAAI,CAACsW,KAAL,EAAY;AACV;AACD;AACD;AACA,oBAAI,CAACD,QAAQG,cAAR,CAAuBlP,IAAIlF,UAAJ,CAAezP,YAAf,CAAvB,CAAL,EAA2D;AACzD0jB,0BAAQ/O,IAAIlF,UAAJ,CAAezP,YAAf,CAAR,IAAwC2U,IAAItH,QAA5C;AACD,iBAFD,MAGK;AACH;AACA,sBAAMyW,eAAezmB,eAAe6b,KAAf,CAAqB,CAACwK,QAAQ/O,IAAIlF,UAAJ,CAAezP,YAAf,CAAR,CAAD,EAAwC2U,IAAItH,QAA5C,CAArB,CAArB;AACAqW,0BAAQ/O,IAAIlF,UAAJ,CAAezP,YAAf,CAAR,IAAwC8jB,YAAxC;AACD;AACF;AAf+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBjC;AAjCqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAmCtC,gCAAiBL,oBAAoB5R,QAArC,mIAA+C;AAAA,gBAAtCyR,IAAsC;;AAC7C,iBAAK,IAAIxQ,GAAT,IAAgB4Q,OAAhB,EAAyB;AACvB,kBAAMK,sBAAsB1mB,eAAeumB,UAAf,CAA0BN,KAAKjW,QAA/B,EAAyCqW,QAAQ5Q,GAAR,CAAzC,CAA5B;AACA,kBAAI,CAACiR,mBAAL,EAA0B;AACxB;AACD;AACD,kBAAMC,oBAAoB3mB,eAAe4mB,SAAf,CAAyBP,QAAQ5Q,GAAR,CAAzB,EAAuCwQ,KAAKjW,QAA5C,CAA1B;AACArI,sBAAQC,GAAR,CAAY+e,iBAAZ;AANuB;AAAA;AAAA;;AAAA;AAOvB,sCAAgBA,kBAAkBnJ,KAAlC,mIAAyC;AAAA,sBAAhClG,IAAgC;;AACvC,sBAAMyG,gBAAgB,IAAI9d,QAAJ,CAAa;AACjCud,2BAAO,CAAClG,IAAD,CAD0B;AAEjC0G,sCAAkB2I,kBAAkB3I;AAFH,mBAAb,CAAtB;AAIA;AACA,sBAAM6I,mBAAmB,IAAIvnB,gBAAJ,CACvBA,iBAAiBqE,WADM,EAEvB,IAAIpE,KAAJ,CACE,CACEunB,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,GAA3B,CADF,EAEEF,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,GAA3B,CAFF,EAGEF,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,GAA3B,CAHF,CADF,CAFuB,EAOvB,CAPuB,CAAzB;AASA,sBAAMC,SAAS,IAAI9nB,OAAJ,CAAY4e,aAAZ,EAA2B8I,gBAA3B,CAAf;AACAV,yCAAuB/W,GAAvB,CAA2B6X,MAA3B;;AAEA,sBAAMC,gBAAgBpf,OAAOsV,aAAP,CAAqBW,aAArB,CAAtB;;AAEA;AACA,sBAAMoJ,YAAY,IAAI1nB,KAAJ,CAAU;AAC1Bga,uBAAGyN,cAAclX,QAAd,CAAuBuP,WAAvB,CAAmC,CAAnC,CADuB;AAE1B7F,uBAAGwN,cAAclX,QAAd,CAAuBuP,WAAvB,CAAmC,CAAnC,CAFuB;AAG1BvB,sCAAkB,EAAEC,MAAM,IAAR;AAHQ,mBAAV,CAAlB;;AAMA;AACA,sBAAMmJ,mBAAmB,IAAIjoB,OAAJ,CAAYgoB,SAAZ,EAAuB1jB,eAAvB,CAAzB;AACA8X,wCAAsBnM,GAAtB,CAA0BgY,gBAA1B;AACD;AArCsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAqCtB;AACF;AACF;AA3EqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA4EtCtf,eAAOY,GAAP,CAAWoH,QAAX,CAAoBqW,sBAApB;AACAre,eAAOY,GAAP,CAAWoH,QAAX,CAAoByL,qBAApB;AACAzT,eAAOoI,mBAAP,CAA2B1L,wBAA3B;AACAsD,eAAOY,GAAP,CAAWoH,QAAX,CAAoBxK,2BAApB;AACA,eAAOkE,SAASI,OAAT,EAAP;AACD,OAjFD;AAkFA,aAAOJ,SAASM,OAAhB;AACD,KA//CkC;AAigDnCud,6BAjgDmC,uCAigDP;AAC1Bvf,aAAOqD,aAAP,CAAqB0C,IAArB;AACA/F,aAAOoI,mBAAP,CAA2B3L,iBAA3B;AACAuD,aAAOoI,mBAAP,CAA2BxL,eAA3B;AACAoD,aAAOoI,mBAAP,CAA2BtL,kBAA3B;AACAkD,aAAOoI,mBAAP,CAA2BrL,mBAA3B;AACAiD,aAAOoI,mBAAP,CAA2BnL,qBAA3B;AACA+C,aAAOoI,mBAAP,CAA2BjL,qBAA3B;;AAEA;AACA,UAAIE,0BAA0BqP,QAA1B,CAAmC5F,MAAnC,IAA6C,CAAjD,EAAoD;AAClD9G,eAAOiB,YAAP,CAAoBjB,OAAOqB,GAAP,CAAWme,oBAA/B,EAAqD,SAArD;AACAxf,eAAOqD,aAAP,CAAqBtB,IAArB;AACA;AACD;AACD,UAAI,CAAC/B,OAAO1B,UAAZ,EAAwB;AACtB0B,eAAOiB,YAAP,CAAoBjB,OAAOqB,GAAP,CAAW+I,YAA/B,EAA6C,SAA7C;AACApK,eAAOqD,aAAP,CAAqBtB,IAArB;AACA;AACD;AACD,aAAO/B,OAAOoU,gBAAP,CAAwBpU,OAAO1B,UAA/B,EACJwC,IADI,CACC,sBAAc;AAClB,YAAMkd,kBAAkBhe,OAAO6d,kBAAP,EAAxB;AACA,eAAO7d,OAAOsU,aAAP,CAAqB0J,eAArB,CAAP;AACD,OAJI,EAKJld,IALI,CAKC,qBAAa;AACjBd,eAAOuU,yBAAP,CACEC,UAAUC,QADZ,EAEEC,SAASF,UAAUG,UAAnB,CAFF,EAGE3U,OAAO+P,qBAHT;AAKA/P,eAAOY,GAAP,CAAW6e,YAAX,CAAwBzf,OAAOY,GAAP,CAAW4R,QAAX,CAAoB5V,eAApB,CAAxB,EAA8DoD,OAAOY,GAAP,CAAWyR,gBAAX,CAA4BoJ,OAA5B,CAAoCle,+BAA+BD,EAAnE,CAA9D;AACA0C,eAAOY,GAAP,CAAWkC,SAAX,CAAqB9C,OAAOT,eAAP,CAAuB,CAAvB,EAA0B2I,QAA1B,CAAmCwD,SAAnC,GAA+CC,MAA/C,CAAsD,GAAtD,CAArB,EAAiF,IAAjF;AACA,eAAO3L,OAAO6U,+BAAP,EAAP;AACD,OAdI,EAeJ/T,IAfI,CAeC,YAAM;AACVd,eAAO8U,oBAAP,CAA4B9U,OAAO8P,mBAAnC,EAAwD9P,OAAO2Y,8BAA/D;AACA3Y,eAAOqD,aAAP,CAAqBtB,IAArB;AACD,OAlBI,EAmBJyC,KAnBI,CAmBE,iBAAS;AACd;AACAxE,eAAOqD,aAAP,CAAqBtB,IAArB;AACA/B,eAAOiB,YAAP,CAAoBkC,MAAMjC,OAA1B,EAAmCC,OAAO,OAA1C;AACD,OAvBI,CAAP;AAwBD,KA7iDkC;AAkjDnCue,iCAljDmC,yCAkjDL5Z,GAljDK,EAkjDA;AACjC,UAAI,CAAC9F,OAAOtB,EAAP,CAAUoI,MAAf,EAAuB;AACrB9G,eAAOiB,YAAP,CAAoBjB,OAAOqB,GAAP,CAAWse,gBAA/B,EAAiDxe,OAAO,OAAxD;AACA;AACD;AACDnB,aAAOiC,mBAAP,GAA6BnB,IAA7B,CAAkC,UAAUmc,MAAV,EAAkB;AAClD,YAAIA,MAAJ,EAAY;AACV,cAAI/hB,UAAS;AACX,wBAAY8E,OAAOkO,eADR;AAEX,sBAAU3S,UAAU,QAAV,CAFC;AAGX,wBAAYyE,OAAOtB,EAHR;AAIX,oBAAQnD,UAAU,UAAV,CAJG;AAKX,4BAAgByE,OAAOhC;;AAGzB;AARa,WAAb,CASA,KAAK,IAAIvC,GAAT,IAAgBP,OAAhB,EAAwB;AACtB,gBAAIA,QAAOO,GAAP,KAAe,IAAf,IAAuBP,QAAOO,GAAP,KAAe8V,SAA1C,EAAqD;AACnDvR,qBAAOiB,YAAP,mCAAoDxF,GAApD,EAA2D0F,OAAO,OAAlE;AACA;AACD;AACF;AACDnB,iBAAO4f,iBAAP,CAAyB5f,OAAOgG,MAAP,CAAc6Z,eAAvC,EAAwD3kB,OAAxD;AACD,SAjBD,MAkBK;AACH;AACD;AACF,OAtBD;AAuBD,KA9kDkC;AAglDnC4kB,gCAhlDmC,wCAglDNha,GAhlDM,EAglDD;AAChC,UAAI,CAAC9F,OAAO1B,UAAZ,EAAwB;AACtB0B,eAAOiB,YAAP,CAAoBjB,OAAOqB,GAAP,CAAW+I,YAA/B,EAA6C,SAA7C;AACApK,eAAOqD,aAAP,CAAqBtB,IAArB;AACA;AACD;AACD,UAAI,CAAC/B,OAAOY,GAAP,CAAW4R,QAAX,CAAoB5V,eAApB,CAAL,EAA2C;AACzCoD,eAAOiB,YAAP,CAAoBjB,OAAOqB,GAAP,CAAW0e,wBAA/B,EAAyD5e,OAAO,OAAhE;AACA;AACD;;AAED,UAAI,CAACnB,OAAOtB,EAAP,CAAUoI,MAAf,EAAuB;AACrB9G,eAAOiB,YAAP,CAAoBjB,OAAOqB,GAAP,CAAW2e,YAA/B,EAA6C7e,OAAO,OAApD;AACA;AACD;AACD,UAAM8e,qBAAqBjgB,OAAOY,GAAP,CAAW4R,QAAX,CAAoBrV,qBAApB,CAA3B;;AAEA6C,aAAOiC,mBAAP,GAA6BnB,IAA7B,CAAkC,UAAUmc,MAAV,EAAkB;AAClDjd,eAAOqD,aAAP,CAAqB0C,IAArB;AACA/F,eAAOkgB,yBAAP;AACA,YAAIjD,MAAJ,EAAY;AACV,cAAMkD,4BAA4BF,mBAAmBvT,QAArD;;AAEAxT,sBAAYknB,WAAZ,GAA0BpgB,OAAOhC,aAAjC;AACA9E,sBAAYqG,eAAZ,GAA8BS,OAAOT,eAArC;;AAEArG,sBAAYoR,UAAZ,GAAyB6V,0BAA0Bvf,GAA1B,CAA8B,UAACmE,CAAD,EAAO;AAC5D,mBAAO;AACLsb,sBAAQtb,EAAE4H,MAAF,CAASyL,IADZ;AAELkI,sBAAQvb,EAAEuF,UAAF,CAAa+O,OAFhB;AAGLkH,sBAAQ,CACNxb,EAAEmD,QAAF,CAAWyJ,CADL,EAEN5M,EAAEmD,QAAF,CAAW0J,CAFL;AAHH,aAAP;AAQD,WATwB,CAAzB;;AAWA1Y,sBAAYsnB,oBAAZ,GAAmCxgB,OAAOY,GAAP,CAAW4R,QAAX,CAAoB1V,kBAApB,EAAwC4P,QAA3E;AACAxT,sBAAYunB,gBAAZ,GAA+BzgB,OAAOY,GAAP,CAAW4R,QAAX,CAAoB/V,iBAApB,EAAuCiQ,QAAtE;AACAxT,sBAAYunB,gBAAZ,CAA6B,CAA7B,EAAgC,QAAhC,IAA4CzgB,OAAOlB,cAAnD;AACA5F,sBAAYunB,gBAAZ,CAA6B,CAA7B,EAAgC,IAAhC,IAAwCzgB,OAAOjB,aAA/C;AACA7F,sBAAYwnB,OAAZ,GAAsB1gB,OAAO9B,SAAP,CAAiBmE,gBAAjB,CAAkCxI,cAAlC,EAAkD8I,MAAlD,EAAtB;AACAzJ,sBAAYynB,WAAZ,GAA0B3gB,OAAO9B,SAAP,CAAiBmE,gBAAjB,CAAkCvI,eAAlC,EAAmD6I,MAAnD,EAA1B;AACAzJ,sBAAY0nB,MAAZ,GAAqB5gB,OAAO9B,SAAP,CAAiBmE,gBAAjB,CAAkCnI,YAAlC,EAAgDyI,MAAhD,EAArB;AACAzJ,sBAAY2nB,UAAZ,GAAyB7gB,OAAO9B,SAAP,CAAiBmE,gBAAjB,CAAkCpI,cAAlC,EAAkD0I,MAAlD,EAAzB;AACAzJ,sBAAY4nB,QAAZ,GAAuB9gB,OAAO9B,SAAP,CAAiBmE,gBAAjB,CAAkC/H,iBAAlC,EAAqDqI,MAArD,EAAvB;AACAzJ,sBAAY6nB,iBAAZ,GAAgC/gB,OAAO9B,SAAP,CAAiBmE,gBAAjB,CAAkChI,cAAlC,EAAkDsI,MAAlD,EAAhC;AACAzJ,sBAAY8M,MAAZ,GAAqBhG,OAAOgG,MAA5B;AACA9M,sBAAY8nB,UAAZ,GAAyBhhB,OAAOY,GAAP,CAAW4R,QAAX,CAAoB5V,eAApB,EAAqC8P,QAA9D;AACAxT,sBAAYiG,MAAZ,GAAqB5D,UAAU,QAAV,CAArB;AACArC,sBAAY+nB,IAAZ,GAAmB1lB,UAAU,UAAV,CAAnB;AACArC,sBAAYgoB,WAAZ,GAA0BlhB,OAAO5B,IAAjC;AACAlF,sBAAYioB,UAAZ,GAAyBnhB,OAAOxB,OAAhC;;AAGAtF,sBAAYkoB,kBAAZ,GACGtgB,IADH,CACQ,oBAAY;AAChBd,mBAAOoI,mBAAP,CAA2B3L,iBAA3B;AACAuD,mBAAOoI,mBAAP,CAA2BxL,eAA3B;AACAoD,mBAAOoI,mBAAP,CAA2BtL,kBAA3B;AACAkD,mBAAOoI,mBAAP,CAA2BrL,mBAA3B;AACAiD,mBAAOoI,mBAAP,CAA2BjL,qBAA3B;AACA6C,mBAAOY,GAAP,CAAW4R,QAAX,CAAoB5Y,mBAApB,EAAyCynB,aAAzC,CAAuD,KAAvD;AACArhB,mBAAOY,GAAP,CAAW4R,QAAX,CAAoB5Y,mBAApB,EAAyCynB,aAAzC,CAAuD,IAAvD;AACArhB,mBAAOwQ,WAAP,CAAmBxQ,OAAOhC,aAA1B,EAAyCgC,OAAO3B,eAAhD;AACA2B,mBAAOqD,aAAP,CAAqBtB,IAArB;AACA/B,mBAAOshB,4BAAP;AACAthB,mBAAOiB,YAAP,CAAoBjB,OAAOqB,GAAP,CAAWkgB,cAA/B,EAA+CpgB,OAAO,SAAtD;AACD,WAbH,EAcGqD,KAdH,CAcS,iBAAS;AACd3E,oBAAQC,GAAR,CAAYqD,KAAZ;AACAnD,mBAAOshB,4BAAP;AACAthB,mBAAOiB,YAAP,CAAoBkC,KAApB,EAA2BhC,OAAO,OAAlC;AACAnB,mBAAOqD,aAAP,CAAqBtB,IAArB;AACD,WAnBH;AAoBD,SAvDD,MAwDK;AACH/B,iBAAOqD,aAAP,CAAqBtB,IAArB;AACA;AACD;AACF,OA/DD;AAgED,KAjqDkC;AAmqDnCyf,gCAnqDmC,wCAmqDN1b,GAnqDM,EAmqDD;;AAEhC,UAAM2b,YAAYzhB,OAAOY,GAAP,CAAW4R,QAAX,CAAoB5V,eAApB,CAAlB;;AAEA,UAAI,CAACoD,OAAO1B,UAAZ,EAAwB;AACtB0B,eAAOiB,YAAP,CAAoBjB,OAAOqB,GAAP,CAAW+I,YAA/B,EAA6C,SAA7C;AACApK,eAAOqD,aAAP,CAAqBtB,IAArB;AACA;AACD;;AAED,UAAI,CAAC0f,SAAL,EAAgB;AACdzhB,eAAOiB,YAAP,CAAoBjB,OAAOqB,GAAP,CAAWqgB,uBAA/B,EAAwDvgB,OAAO,OAA/D;AACA;AACD;;AAED;AACA,UAAM8e,qBAAqBjgB,OAAOY,GAAP,CAAW4R,QAAX,CAAoBrV,qBAApB,CAA3B;AAhBgC;AAAA;AAAA;;AAAA;AAiBhC,+BAAiB8iB,mBAAmBvT,QAApC,wIAA8C;AAAA,cAArCiV,IAAqC;;AAC5C,cAAI,CAACA,KAAKhV,MAAL,CAAYyL,IAAjB,EAAuB;AACrBpY,mBAAOiB,YAAP,CAAoBjB,OAAOqB,GAAP,CAAWugB,uBAA/B,EAAwDzgB,OAAO,OAA/D;AACA;AACD;AACD,cAAI,CAACwgB,KAAKrX,UAAL,CAAgB+O,OAAjB,IAA4BsI,KAAKrX,UAAL,CAAgB+O,OAAhB,KAA4B,KAA5D,EAAmE;AACjErZ,mBAAOiB,YAAP,CAAoBjB,OAAOqB,GAAP,CAAWwgB,wBAA/B,EAAyD1gB,OAAO,OAAhE;AACA;AACD;AACF;AA1B+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA4BhC,UAAI3D,4BAA4BkP,QAA5B,CAAqC5F,MAArC,IAA+C2a,UAAU/U,QAAV,CAAmB5F,MAAtE,EAA8E;AAC5E9G,eAAOiB,YAAP,CAAoBjB,OAAOqB,GAAP,CAAWygB,2BAA/B,EAA4D3gB,OAAO,OAAnE;AACA;AACD;AACD;AACA,UAAM4gB,uBAAuBvoB,YAAYuoB,oBAAZ,CAAiCN,UAAU/U,QAA3C,EAAqDlP,4BAA4BkP,QAAjF,CAA7B;AACA,UAAI,CAACqV,oBAAL,EAA2B;AACzB/hB,eAAOiB,YAAP,CAAoBjB,OAAOqB,GAAP,CAAW2gB,0BAA/B,EAA2D7gB,OAAO,OAAlE;AACA;AACD;;AAEDnB,aAAOiC,mBAAP,GAA6BnB,IAA7B,CAAkC,UAAUmc,MAAV,EAAkB;AAClD,YAAIA,MAAJ,EAAY;AACVjd,iBAAOqD,aAAP,CAAqB0C,IAArB;AACA/F,iBAAOkgB,yBAAP;AACA,cAAMC,4BAA4BF,mBAAmBvT,QAArD;;AAEAzT,sBAAY6nB,QAAZ,GAAuB9gB,OAAO9B,SAAP,CAAiBmE,gBAAjB,CAAkC/H,iBAAlC,EAAqDqI,MAArD,EAAvB;AACA1J,sBAAY2nB,MAAZ,GAAqB5gB,OAAO9B,SAAP,CAAiBmE,gBAAjB,CAAkCnI,YAAlC,EAAgDyI,MAAhD,EAArB;AACA1J,sBAAY0nB,WAAZ,GAA0B3gB,OAAO9B,SAAP,CAAiBmE,gBAAjB,CAAkCvI,eAAlC,EAAmD6I,MAAnD,EAA1B;AACA1J,sBAAY4nB,UAAZ,GAAyB7gB,OAAO9B,SAAP,CAAiBmE,gBAAjB,CAAkCpI,cAAlC,EAAkD0I,MAAlD,EAAzB;AACA1J,sBAAYynB,OAAZ,GAAsB1gB,OAAO9B,SAAP,CAAiBmE,gBAAjB,CAAkCxI,cAAlC,EAAkD8I,MAAlD,EAAtB;AACA1J,sBAAY8nB,iBAAZ,GAAgC/gB,OAAO9B,SAAP,CAAiBmE,gBAAjB,CAAkChI,cAAlC,EAAkDsI,MAAlD,EAAhC;AACA1J,sBAAYsG,eAAZ,GAA8BS,OAAOT,eAArC;AACAtG,sBAAYunB,oBAAZ,GAAmCxgB,OAAOY,GAAP,CAAW4R,QAAX,CAAoB1V,kBAApB,EAAwC4P,QAA3E;AACAzT,sBAAYwnB,gBAAZ,GAA+BjjB,4BAA4BkP,QAA3D;AACAzT,sBAAYkoB,UAAZ,GAAyBnhB,OAAOxB,OAAhC;AACAvF,sBAAYwnB,gBAAZ,CAA6Bzc,OAA7B,CAAqC,UAACe,CAAD,EAAO;AAC1CA,cAAE,IAAF,IAAUA,EAAEuF,UAAF,CAAahN,EAAb,CAAgBwO,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAV,EACE/G,EAAE,QAAF,IAAcA,EAAEuF,UAAF,CAAauH,GAD7B;AAED,WAHD;AAIA5Y,sBAAY+nB,UAAZ,GAAyBS,UAAU/U,QAAnC;;AAEAzT,sBAAYqR,UAAZ,GAAyB6V,0BAA0Bvf,GAA1B,CAA8B,UAACmE,CAAD,EAAO;AAC5D,mBAAO;AACLsb,sBAAQtb,EAAE4H,MAAF,CAASyL,IADZ;AAELkI,sBAAQvb,EAAEuF,UAAF,CAAa+O,OAFhB;AAGLkH,sBAAQ,CACNxb,EAAEmD,QAAF,CAAWyJ,CADL,EAEN5M,EAAEmD,QAAF,CAAW0J,CAFL;AAHH,aAAP;AAQD,WATwB,CAAzB;;AAWA3Y,sBAAY+M,MAAZ,GAAqBhG,OAAOgG,MAA5B;AACA/M,sBAAYkG,MAAZ,GAAqB5D,UAAU,QAAV,CAArB;AACAtC,sBAAYgoB,IAAZ,GAAmB1lB,UAAU,UAAV,CAAnB;AACAtC,sBAAYioB,WAAZ,GAA0BlhB,OAAO5B,IAAjC;AACAnF,sBAAYmnB,WAAZ,GAA0BpgB,OAAOhC,aAAjC;;AAEA/E,sBAAYgpB,kBAAZ,GACGnhB,IADH,CACQ,oBAAY;AAChBtD,wCAA4BwS,KAA5B;AACA3S,sCAA0B2S,KAA1B;AACAzS,2CAA+ByS,KAA/B;AACAhQ,mBAAOoI,mBAAP,CAA2BxL,eAA3B;AACAoD,mBAAOoI,mBAAP,CAA2BtL,kBAA3B;AACAkD,mBAAOoI,mBAAP,CAA2BrL,mBAA3B;AACAiD,mBAAOoI,mBAAP,CAA2BjL,qBAA3B;AACA6C,mBAAOY,GAAP,CAAW4R,QAAX,CAAoB5Y,mBAApB,EAAyCynB,aAAzC,CAAuD,KAAvD;AACArhB,mBAAOY,GAAP,CAAW4R,QAAX,CAAoB5Y,mBAApB,EAAyCynB,aAAzC,CAAuD,IAAvD;AACArhB,mBAAOwQ,WAAP,CAAmBxQ,OAAOhC,aAA1B,EAAyCgC,OAAO3B,eAAhD;AACA2B,mBAAOqD,aAAP,CAAqBtB,IAArB;AACA/B,mBAAOshB,4BAAP;AACAthB,mBAAOiB,YAAP,CAAoBjB,OAAOqB,GAAP,CAAWkgB,cAA/B,EAA+CpgB,OAAO,SAAtD;AACD,WAfH,EAgBGqD,KAhBH,CAgBS,iBAAS;AACd;AACAxE,mBAAOshB,4BAAP;AACAthB,mBAAOiB,YAAP,CAAoBkC,KAApB,EAA2BhC,OAAO,OAAlC;AACAnB,mBAAOqD,aAAP,CAAqBtB,IAArB;AACD,WArBH;AAsBD,SA5DD,MA6DK;AACH;AACD;AACF,OAjED;AAkED,KA5wDkC;AA8wDnCmgB,8BA9wDmC,sCA8wDRpc,GA9wDQ,EA8wDH;AAC9B9F,aAAOiC,mBAAP,GAA6BnB,IAA7B,CAAkC,UAAUmc,MAAV,EAAkB;AAClD,YAAIA,MAAJ,EAAY;AACVjd,iBAAOqD,aAAP,CAAqB0C,IAArB;AACA/F,iBAAOkgB,yBAAP;AACA9mB,qBAAW8nB,WAAX,GAAyBlhB,OAAO5B,IAAhC;AACAhF,qBAAW+oB,UAAX,GAAwBniB,OAAOhC,aAA/B;AACA5E,qBAAW6nB,IAAX,GAAkB1lB,UAAU,UAAV,CAAlB;AACAnC,qBAAW+F,MAAX,GAAoB5D,UAAU,QAAV,CAApB;AACAnC,qBAAW4M,MAAX,GAAoBhG,OAAOgG,MAA3B;AACA5M,qBAAWsnB,OAAX,GAAqB1gB,OAAO9B,SAAP,CAAiBmE,gBAAjB,CAAkCxI,cAAlC,EAAkD8I,MAAlD,EAArB;AACAvJ,qBAAWgpB,GAAX,GAAiBpiB,OAAOkO,eAAxB;AACA9U,qBAAWmG,eAAX,GAA6BS,OAAOT,eAApC;;AAEAnG,qBAAWipB,iBAAX,GACGvhB,IADH,CACQ,oBAAY;AAChBd,mBAAOY,GAAP,CAAW4R,QAAX,CAAoB5Y,mBAApB,EAAyCynB,aAAzC,CAAuD,KAAvD;AACArhB,mBAAOY,GAAP,CAAW4R,QAAX,CAAoB5Y,mBAApB,EAAyCynB,aAAzC,CAAuD,IAAvD;AACArhB,mBAAOshB,4BAAP;AACAthB,mBAAOgF,kBAAP;AACAC,iBAAKzC,KAAL,CAAW,gBAAX,EAA6B,CAA7B,EAAgC0C,KAAhC;AACAlF,mBAAOqD,aAAP,CAAqBtB,IAArB;AACA/B,mBAAOiB,YAAP,CAAoBjB,OAAOqB,GAAP,CAAWkgB,cAA/B,EAA+CpgB,OAAO,SAAtD;AACD,WATH,EAUGqD,KAVH,CAUS,iBAAS;AACdxE,mBAAOshB,4BAAP;AACAthB,mBAAOiB,YAAP,CAAoBkC,KAApB,EAA2BhC,OAAO,OAAlC;AACAnB,mBAAOqD,aAAP,CAAqBtB,IAArB;AACD,WAdH;AAeD,SA3BD,MA4BK;AACH;AACD;AACF,OAhCD;AAiCD,KAhzDkC;AAkzDnCme,6BAlzDmC,uCAkzDP;AAC1B,UAAMxW,OAAO,IAAb;AACA,UAAM4Y,UAAUrd,KAAKzC,KAAL,CAAW,yBAAX,EAAsC,CAAtC,CAAhB;AACA,UAAM+f,SAASD,QAAQtV,aAAR,CAAsB,KAAtB,CAAf;AACA,UAAMwV,cAAc9kB,SAASC,aAAT,CAAuB,KAAvB,CAApB;AACA6kB,kBAAYllB,EAAZ,GAAiB,mBAAjB;AACAklB,kBAAYlS,KAAZ,CAAkBmS,QAAlB,GAA6B,UAA7B;AACA,UAAMC,aAAaC,WAAWJ,OAAOjS,KAAP,CAAasS,GAAxB,IAA+B,EAAlD;AACAJ,kBAAYlS,KAAZ,CAAkBsS,GAAlB,GAA2BF,UAA3B;AACA,UAAMG,UAAUF,WAAWJ,OAAOjS,KAAP,CAAawS,IAAxB,IAAgCP,OAAOQ,KAAP,GAAe,CAA/D;AACAP,kBAAYlS,KAAZ,CAAkBwS,IAAlB,GAA4BD,OAA5B;AACAL,kBAAYlS,KAAZ,CAAkB0S,SAAlB,GAA8B,uBAA9B;AACAR,kBAAYlS,KAAZ,CAAkB2S,UAAlB,GAA+B,OAA/B;AACAT,kBAAYlS,KAAZ,CAAkB4S,MAAlB,GAA2B,MAA3B;AACAV,kBAAY7b,SAAZ,GAAwB+C,KAAKrI,GAAL,CAAS8hB,cAAjC;;AAEAle,WAAKzC,KAAL,CAAW,yBAAX,EAAsC,CAAtC,EAAyC1E,WAAzC,CAAqD0kB,WAArD;AACD,KAn0DkC;AAq0DnClB,gCAr0DmC,0CAq0DJ;AAC7Brc,WAAKzC,KAAL,CAAW,oBAAX,EAAiC,CAAjC,EAAoC4M,MAApC;AACD,KAv0DkC;AAy0DnCN,6BAz0DmC,qCAy0DThJ,GAz0DS,EAy0DJ;AAC7B,UAAI,CAACzM,eAAe+pB,sBAAf,EAAL,EAA8C;AAC5CpjB,eAAOiB,YAAP,CAAoBjB,OAAOqB,GAAP,CAAWgiB,4BAA/B,EAA6DliB,OAAO,OAApE;AACA;AACD;AACDnB,aAAOiC,mBAAP,GAA6BnB,IAA7B,CAAkC,UAAUmc,MAAV,EAAkB;AAClD,YAAIA,MAAJ,EAAY;AACVjd,iBAAOqD,aAAP,CAAqB0C,IAArB;AACA/F,iBAAOkgB,yBAAP;AACA/mB,uBAAagpB,UAAb,GAA0BniB,OAAOhC,aAAjC;AACA7E,uBAAa4nB,iBAAb,GAAiC/gB,OAAO9B,SAAP,CAAiBmE,gBAAjB,CAAkChI,cAAlC,EAAkDsI,MAAlD,EAAjC;AACAxJ,uBAAagG,MAAb,GAAsB5D,UAAU,QAAV,CAAtB;AACApC,uBAAa8nB,IAAb,GAAoB1lB,UAAU,UAAV,CAApB;AACApC,uBAAamqB,QAAb,GAAwBjqB,eAAegN,KAAvC;AACAlN,uBAAa+Q,QAAb,GAAwBlK,OAAO9B,SAAP,CAAiBmE,gBAAjB,CAAkCxI,cAAlC,EAAkD8I,MAAlD,EAAxB;AACAxJ,uBAAaoqB,UAAb,GAA0BvjB,OAAO+J,kBAAjC;AACA5Q,uBAAa6M,MAAb,GAAsBhG,OAAOgG,MAA7B;AACA7M,uBAAaoG,eAAb,GAA+BS,OAAOT,eAAtC;AACApG,uBAAa+nB,WAAb,GAA2BlhB,OAAO5B,IAAlC;;AAEAjF,uBAAaqqB,mBAAb,GACG1iB,IADH,CACQ,oBAAY;AAChBzH,2BAAesV,iBAAf;AACA3O,mBAAOY,GAAP,CAAW4R,QAAX,CAAoB5Y,mBAApB,EAAyCynB,aAAzC,CAAuD,KAAvD;AACArhB,mBAAOY,GAAP,CAAW4R,QAAX,CAAoB5Y,mBAApB,EAAyCynB,aAAzC,CAAuD,IAAvD;AACArhB,mBAAOwQ,WAAP,CAAmBxQ,OAAOhC,aAA1B,EAAyCgC,OAAO3B,eAAhD;AACA2B,mBAAOqD,aAAP,CAAqBtB,IAArB;AACA/B,mBAAOshB,4BAAP;AACAthB,mBAAOiB,YAAP,CAAoBjB,OAAOqB,GAAP,CAAWkgB,cAA/B,EAA+CpgB,OAAO,SAAtD;AACD,WATH,EAUGqD,KAVH,CAUS,iBAAS;AACdxE,mBAAOshB,4BAAP;AACAthB,mBAAOiB,YAAP,CAAoBkC,KAApB,EAA2BhC,OAAO,OAAlC;AACAnB,mBAAOqD,aAAP,CAAqBtB,IAArB;AACD,WAdH;AAeD,SA7BD,MA8BK;AACH;AACD;AACF,OAlCD;AAmCD,KAj3DkC;AAm3DnC6d,qBAn3DmC,6BAm3DjB/b,GAn3DiB,EAm3DZ3I,MAn3DY,EAm3DJ;AAC7B,UAAIuoB,mBAAsBzjB,OAAOgG,MAAP,CAAcC,kBAApC,SAA0DjG,OAAOhC,aAArE;AACAgC,aAAO2D,oBAAP,CAA4B8f,gBAA5B,EAA8C,EAA9C,EAAkD3iB,IAAlD,CAAuD,UAAUmc,MAAV,EAAkB;AACvE,YAAI;AACF,cAAIA,OAAOyG,QAAP,IAAmB,CAAvB,EAA0B;AACxB,kBAAM,IAAIrf,KAAJ,sBAA6BrE,OAAOhC,aAApC,6CAAyFif,OAAO5X,IAAhG,CAAN;AACD;AACDrF,iBAAOqD,aAAP,CAAqB0C,IAArB;AACA;AACA,cAAIuc,UAAUrd,KAAKzC,KAAL,CAAW,yBAAX,EAAsC,CAAtC,CAAd;AACA,cAAI+f,SAASD,QAAQtV,aAAR,CAAsB,KAAtB,CAAb;AACA,cAAIwV,cAAc9kB,SAASC,aAAT,CAAuB,KAAvB,CAAlB;AACA6kB,sBAAYllB,EAAZ,GAAiB,mBAAjB;AACAklB,sBAAYlS,KAAZ,CAAkBmS,QAAlB,GAA6B,UAA7B;AACA,cAAIC,aAAaC,WAAWJ,OAAOjS,KAAP,CAAasS,GAAxB,IAA+B,EAAhD;AACAJ,sBAAYlS,KAAZ,CAAkBsS,GAAlB,GAA2BF,UAA3B;AACA,cAAIG,UAAUF,WAAWJ,OAAOjS,KAAP,CAAawS,IAAxB,IAAgCP,OAAOQ,KAAP,GAAe,CAA7D;AACAP,sBAAYlS,KAAZ,CAAkBwS,IAAlB,GAA4BD,OAA5B;AACAL,sBAAYlS,KAAZ,CAAkB0S,SAAlB,GAA8B,uBAA9B;AACAR,sBAAYlS,KAAZ,CAAkB2S,UAAlB,GAA+B,OAA/B;AACAT,sBAAYlS,KAAZ,CAAkB4S,MAAlB,GAA2B,MAA3B;;AAEAje,eAAKzC,KAAL,CAAW,yBAAX,EAAsC,CAAtC,EAAyC1E,WAAzC,CAAqD0kB,WAArD;AACA;AACAxiB,iBAAO2jB,EAAP,GAAY,IAAIrrB,YAAJ,CAAiBuL,GAAjB,CAAZ;AACA7D,iBAAO2jB,EAAP,CAAUC,SAAV,CAAoB1oB,MAApB,EAA4B8E,OAAO6jB,iBAAnC,EAAsD7jB,OAAO8jB,eAA7D;AACD,SAvBD,CAuBE,OAAO3gB,KAAP,EAAc;AACdnD,iBAAOqD,aAAP,CAAqBtB,IAArB;AACA/B,iBAAOiB,YAAP,CAAoBkC,MAAMjC,OAA1B,EAAmCC,OAAO,OAA1C;AACD;AAEF,OA7BD;AA8BD,KAn5DkC;AAq5DnC2iB,mBAr5DmC,2BAq5DnBC,OAr5DmB,EAq5DV;AACvB/jB,aAAOgkB,KAAP,GAAeD,QAAQC,KAAvB;AACA,UAAIC,cAAcF,QAAQG,QAAR,CAAiBtjB,GAAjB,CAAqB,UAACM,OAAD,EAAa;AAAE,eAAOA,QAAQijB,WAAf;AAA4B,OAAhE,CAAlB;AACA,UAAI;AACFlf,aAAKzC,KAAL,CAAW,oBAAX,EAAiC,CAAjC,EAAoCuX,WAApC,GAAkDkK,YAAY7I,KAAZ,CAAkB,CAAC,CAAnB,EAAsB,CAAtB,IAA2B6I,YAAY7I,KAAZ,CAAkB,CAAC,CAAnB,EAAsB,CAAtB,CAA3B,GAAsD,EAAxG;AACD,OAFD,CAEE,OAAOjY,KAAP,EAAc;AACdtD,gBAAQC,GAAR,CAAYqD,KAAZ;AACD;AACF,KA75DkC;AA85DnC0gB,qBA95DmC,6BA85DjBE,OA95DiB,EA85DR;AACzB,cAAQA,QAAQK,SAAhB;AACE,aAAK,kBAAL;AACE;AACAvkB,kBAAQC,GAAR,CAAY,uDAAZ;AACA;AACF,aAAK,kBAAL;AACE;AACAD,kBAAQC,GAAR,CAAY,+CAAZ;AACA;AACF,aAAK,kBAAL;AACE;AACAE,iBAAO2jB,EAAP,CAAUU,aAAV,CAAwBN,QAAQC,KAAhC,EAAuC,UAAvC,EAAmD,UAAU/G,MAAV,EAAkB;AACnE,gBAAI,CAACA,OAAO/T,KAAP,CAAa5E,MAAlB,EAA0B;AACxBtE,qBAAOqD,aAAP,CAAqBtB,IAArB;AACA/B,qBAAOiB,YAAP,CAAoBgc,OAAO/T,KAAP,CAAahI,OAAjC,EAA0CC,OAAO,OAAjD;AACA;AACD;;AAEDnB,mBAAOskB,mBAAP,CAA2BrH,OAAO/T,KAAP,CAAa9E,QAAxC;;AAGA,oBAAQpE,OAAO5B,IAAf;AACE,mBAAK,GAAL;AACE4B,uBAAOoI,mBAAP,CAA2B3L,iBAA3B;AACA;AACF,mBAAK,GAAL;AACEuD,uBAAOoI,mBAAP,CAA2B3L,iBAA3B;AACAuD,uBAAOoI,mBAAP,CAA2BxL,eAA3B;AACAoD,uBAAOoI,mBAAP,CAA2BtL,kBAA3B;AACAkD,uBAAOoI,mBAAP,CAA2BrL,mBAA3B;AACAiD,uBAAOoI,mBAAP,CAA2BjL,qBAA3B;AACA;AACF,mBAAK,GAAL;AACEK,4CAA4BwS,KAA5B;AACA3S,0CAA0B2S,KAA1B;AACAzS,+CAA+ByS,KAA/B;AACA;AACAhQ,uBAAOoI,mBAAP,CAA2BxL,eAA3B;AACAoD,uBAAOoI,mBAAP,CAA2BtL,kBAA3B;AACAkD,uBAAOoI,mBAAP,CAA2BrL,mBAA3B;AACAiD,uBAAOoI,mBAAP,CAA2BjL,qBAA3B;AACA;AACF,mBAAK,GAAL;AACE;AACA6C,uBAAOgF,kBAAP;AACA;AACF;AACE;AA1BJ;AA4BAhF,mBAAOY,GAAP,CAAW4R,QAAX,CAAoB5Y,mBAApB,EAAyCynB,aAAzC,CAAuD,KAAvD;AACArhB,mBAAOY,GAAP,CAAW4R,QAAX,CAAoB5Y,mBAApB,EAAyCynB,aAAzC,CAAuD,IAAvD;AACA,gBAAIrhB,OAAO5B,IAAP,IAAe,GAAnB,EAAwB;AACtB6G,mBAAKzC,KAAL,CAAW,gBAAX,EAA6B,CAA7B,EAAgC0C,KAAhC;AACD,aAFD,MAEO;AACLlF,qBAAOwQ,WAAP,CAAmBxQ,OAAOhC,aAA1B,EAAyCgC,OAAO3B,eAAhD;AACD;AACD;;AAGD,WAhDD;AAiDA;AACF,aAAK,eAAL;AACE;AACA2B,iBAAOiB,YAAP,CAAoB,kEAApB,EAAwFE,OAAO,OAA/F;AACA;AACF,aAAK,kBAAL;AACE;AACAnB,iBAAOiB,YAAP,CAAoB,8CAApB;AACA;AACF,aAAK,iBAAL;AACE;AACAjB,iBAAOiB,YAAP,CAAoB,yEAApB,EAA+FE,OAAO,OAAtG;AACA;AACF;AACE;AACAnB,iBAAOiB,YAAP,CAAoB,uCAApB;AACA;AA5EJ;AA8EAjB,aAAOqD,aAAP,CAAqBtB,IAArB;AACA;AACAkD,WAAKzC,KAAL,CAAW,oBAAX,EAAiC,CAAjC,EAAoC4M,MAApC;AACD,KAh/DkC;AAi/DnCmV,kBAj/DmC,0BAi/DpBze,GAj/DoB,EAi/Df;AAClB9F,aAAO2jB,EAAP,CAAUa,SAAV,CAAoBxkB,OAAOgkB,KAA3B,EAAkC,UAAUS,IAAV,EAAgB;AAChD5kB,gBAAQC,GAAR,CAAY2kB,KAAKL,SAAjB;AACD,OAFD;AAGD,KAr/DkC;AAygEnCM,uBAzgEmC,+BAygEf5e,GAzgEe,EAygEV;AACvB;AACA,UAAM6e,QAAQ1f,KAAKzC,KAAL,CAAW,iBAAX,EAA8B,CAA9B,CAAd;AACA,UAAIoiB,YAAYD,MAAM3X,aAAN,CAAoB,IAApB,CAAhB;AACA,UAAIU,OAAOiX,MAAME,gBAAN,CAAuB,IAAvB,CAAX;;AAEA,UAAIC,UAAU,EAAd;AACA,UAAIC,aAAaH,UAAUC,gBAAV,CAA2B,IAA3B,CAAjB;AACA,WAAK,IAAIG,IAAI,CAAb,EAAgBA,IAAID,WAAWje,MAAX,GAAoB,CAAxC,EAA2Cke,GAA3C,EAAgD;AAC9CF,gBAAQlO,IAAR,CAAamO,WAAWC,CAAX,EAAc3M,SAA3B;AACD;;AAED,UAAIxT,OAAO,EAAX;;AAEA;AACA,WAAK,IAAIE,IAAI,CAAb,EAAgBA,IAAI2I,KAAK5G,MAAzB,EAAiC/B,GAAjC,EAAsC;AACpC,YAAIA,KAAK,CAAT,EAAY;AACZ,YAAIyK,MAAM,EAAV;AAAA,YAAcyV,OAAOvX,KAAK3I,CAAL,EAAQ8f,gBAAR,CAAyB,IAAzB,CAArB;;AAEA;AACA,aAAK,IAAIK,IAAI,CAAb,EAAgBA,IAAID,KAAKne,MAAL,GAAc,CAAlC,EAAqCoe,GAArC,EAA0C;AACxC;AACA1V,cAAIsV,QAAQI,CAAR,CAAJ,IAAkBD,KAAKC,CAAL,EAAQ7M,SAA1B;AACD;;AAEDxT,aAAK+R,IAAL,CAAUpH,GAAV;AACD;;AAID;AACA,UAAI2V,KAAKzsB,KAAK0sB,KAAL,CAAWC,QAAX,EAAT;;AAEA;AACA,UAAIC,KAAK5sB,KAAK0sB,KAAL,CAAWG,aAAX,CAAyB1gB,IAAzB,CAAT;AACA,UAAI2gB,YAAYxlB,OAAO/B,gBAAP,CAAwB+S,OAAxB,CAAgC,GAAhC,EAAqC,GAArC,CAAhB;AACAtY,WAAK0sB,KAAL,CAAWK,iBAAX,CAA6BN,EAA7B,EAAiCG,EAAjC,EAAqCE,SAArC;;AAEA;AACA9sB,WAAKgtB,SAAL,CAAeP,EAAf,2BAA0CnlB,OAAO/B,gBAAjD;AACD,KAjjEkC;AAmjEnC0nB,kBAnjEmC,0BAmjEpBC,OAnjEoB,EAmjEX;AACtB,UAAIC,aAAaC,KAAKF,QAAQ9Z,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAAL,CAAjB;AACA,UAAIia,aAAaH,QAAQ9Z,KAAR,CAAc,GAAd,EAAmB,CAAnB,EAAsBA,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,EAAoCA,KAApC,CAA0C,GAA1C,EAA+C,CAA/C,CAAjB;AACA,UAAIka,SAAS,IAAIC,WAAJ,CAAgBJ,WAAW/e,MAA3B,CAAb;AACA,UAAIof,WAAW,IAAIC,UAAJ,CAAeH,MAAf,CAAf;AACA,WAAK,IAAIjhB,IAAI,CAAb,EAAgBA,IAAI8gB,WAAW/e,MAA/B,EAAuC/B,GAAvC,EAA4C;AAC1CmhB,iBAASnhB,CAAT,IAAc8gB,WAAWO,UAAX,CAAsBrhB,CAAtB,CAAd;AACD;AACD,aAAO,IAAIshB,IAAJ,CAAS,CAACL,MAAD,CAAT,EAAmB,EAAE7kB,MAAM4kB,UAAR,EAAnB,CAAP;AACD,KA5jEkC;AA8jEnCO,oBA9jEmC,4BA8jElBxgB,GA9jEkB,EA8jEb;AACpB9F,aAAOqD,aAAP,CAAqB0C,IAArB;AACA,UAAIwgB,OAAOvmB,OAAOqQ,aAAP,CAAqBmW,KAArB,CAA2B,CAA3B,CAAX;AACA,UAAID,QAAQhV,SAAZ,EAAuB;AACrBvR,eAAOqD,aAAP,CAAqBtB,IAArB;AACA/B,eAAOiB,YAAP,CAAoBjB,OAAOqB,GAAP,CAAWolB,iBAA/B,EAAkDtlB,OAAO,OAAzD;AACA;AACD;AACD,UAAIulB,SAAS,IAAIC,UAAJ,EAAb;AACA,UAAI9hB,OAAO,IAAI+hB,QAAJ,EAAX;AACAF,aAAOG,SAAP,GAAmB,YAAY;AAC7BhiB,aAAKX,MAAL,CAAY,gBAAZ,EAA8BlE,OAAOhC,aAArC;AACA6G,aAAKX,MAAL,CAAY,aAAZ,EAA2BlE,OAAOmQ,eAAP,CAAuBjH,KAAlD;AACArE,aAAKX,MAAL,CAAY,KAAZ,EAAmBlE,OAAOqQ,aAAP,CAAqBmW,KAArB,CAA2B,CAA3B,CAAnB;;AAEA,eAAOriB,MAAMnE,OAAOgG,MAAP,CAAc8gB,cAApB,EAAoC;AACzCC,kBAAQ,MADiC;AAEzCC,gBAAMniB;AAFmC,SAApC,EAIJ/D,IAJI,CAIC,oBAAY;AAChB,cAAI,CAACsD,SAAS6iB,EAAd,EAAkB;AAChBjnB,mBAAOqD,aAAP,CAAqBtB,IAArB;AACA,kBAAM,IAAIsC,KAAJ,0BAAiCD,SAASE,MAA1C,CAAN;AACD;AACDtE,iBAAOqD,aAAP,CAAqBtB,IAArB;AACA/B,iBAAOwB,mBAAP,CAA2BxB,OAAOqB,GAAP,CAAW6lB,yBAAtC,EAAiEpmB,IAAjE,CAAsE,UAACmc,MAAD,EAAY;AAChFhY,iBAAKzC,KAAL,CAAW,oBAAX,EAAiC,CAAjC,EAAoC0C,KAApC;AACAD,iBAAKzC,KAAL,CAAW,gBAAX,EAA6B,CAA7B,EAAgC0C,KAAhC;AACAlF,mBAAOgF,kBAAP;AACD,WAJD;AAMD,SAhBI,EAgBFR,KAhBE,CAgBI,iBAAS;AAChBxE,iBAAOqD,aAAP,CAAqBtB,IAArB;AACA/B,iBAAOiB,YAAP,CAAuBjB,OAAOqB,GAAP,CAAW8lB,8BAAlC,SAAoEhkB,KAApE,EAA6EhC,OAAO,OAApF;AACD,SAnBI,CAAP;AAoBD,OAzBD;AA0BAulB,aAAOU,aAAP,CAAqBb,IAArB;AACD,KAnmEkC;AAqmEnCc,oBArmEmC,4BAqmElBvhB,GArmEkB,EAqmEb;AACpB,UAAIsK,WAAWnL,KAAKzC,KAAL,CAAW,iBAAX,EAA8B,CAA9B,CAAf;AACA,UAAI+jB,OAAOzgB,IAAIvC,MAAJ,CAAWijB,KAAX,CAAiB,CAAjB,CAAX;AACA,UAAIE,SAAS,IAAIC,UAAJ,EAAb;;AAEAD,aAAOG,SAAP,GAAmB,YAAY;AAC7BzW,iBAASzJ,SAAT,GAAqB,EAArB;AACAyJ,iBAASE,KAAT,CAAeC,eAAf,GAAiC,SAASmW,OAAOzJ,MAAhB,GAAyB,GAA1D;AACA7M,iBAASE,KAAT,CAAegX,cAAf,GAAgC,SAAhC;AACAlX,iBAASE,KAAT,CAAeiX,gBAAf,GAAkC,WAAlC;AACAnX,iBAASE,KAAT,CAAekX,kBAAf,GAAoC,QAApC;AACD,OAND;;AAQA,UAAIjB,IAAJ,EAAU;AACRG,eAAOU,aAAP,CAAqBb,IAArB;AACD,OAFD,MAEO;AACLnW,iBAASzJ,SAAT,GAAqB,2CAArB;AACD;AACF,KAvnEkC;AAwnEnC8gB,2BAxnEmC,mCAwnEX3hB,GAxnEW,EAwnEN;AAC3B,UAAIA,IAAI4hB,OAAJ,KAAgB,EAApB,EAAwB;AACtB,YAAI5hB,IAAIvC,MAAJ,CAAW2F,KAAX,IAAoB,EAAxB,EAA4B;AAC1B,cAAI,SAASlJ,OAAOd,aAApB,EAAmC;AACjC,mBAAOc,OAAOd,aAAP,CAAqB,KAArB,CAAP;AACD;AACF,SAJD,MAIO;AACLc,iBAAOd,aAAP,CAAqB,KAArB,IAA8B4G,IAAIvC,MAAJ,CAAW2F,KAAzC;AACD;AACDjE,aAAKzC,KAAL,CAAW,oBAAX,EAAiC,CAAjC,EAAoC0C,KAApC;AACD;AACF,KAnoEkC;AAqoEnCyiB,iBAroEmC,yBAqoErB7hB,GAroEqB,EAqoEhB;AACjB,UAAI8hB,cAAc9hB,IAAI2B,aAAJ,CAAkBC,OAAlB,CAA0BmgB,GAA5C;AACA/hB,UAAI2B,aAAJ,CAAkBC,OAAlB,CAA0BmgB,GAA1B,GAAgCD,YAAYtV,QAAZ,CAAqB,GAArB,IAA4BsV,YAAY5W,OAAZ,CAAoB,GAApB,EAAyB,EAAzB,CAA5B,SAA+D4W,WAA/F;AACA5nB,aAAOd,aAAP,CAAqB,UAArB,IAAmC4G,IAAI2B,aAAJ,CAAkBC,OAAlB,CAA0BmgB,GAA7D;AACA5iB,WAAKzC,KAAL,CAAW,oBAAX,EAAiC,CAAjC,EAAoC0C,KAApC;AACD,KA1oEkC;AA4oEnC4iB,UA5oEmC,oBA4oE1B;AACPjoB,cAAQC,GAAR,CAAY,6BAAZ;AACA;AACA;AACA;AACA;;AAEA,WAAKmR,cAAL;;AAEAhM,WAAKzC,KAAL,CAAW,gBAAX,EAA6ByE,EAA7B,CAAgC,OAAhC,EAAyC,KAAKC,aAA9C;AACAjC,WAAKzC,KAAL,CAAW,aAAX,EAA0ByE,EAA1B,CAA6B,OAA7B,EAAsC,KAAKpB,eAA3C;AACAZ,WAAKzC,KAAL,CAAW,eAAX,EAA4ByE,EAA5B,CAA+B,OAA/B,EAAwC,KAAKiJ,YAA7C;AACAjL,WAAKzC,KAAL,CAAW,oBAAX,EAAiCyE,EAAjC,CAAoC,OAApC,EAA6C,KAAKiJ,YAAlD;AACA;AACAjL,WAAKzC,KAAL,CAAW,gBAAX,EAA6ByE,EAA7B,CAAgC,OAAhC,EAAyC,KAAKgC,uBAA9C;;AAEA;AACAhE,WAAKzC,KAAL,CAAW,kBAAX,EAA+ByE,EAA/B,CAAkC,OAAlC,EAA2C,KAAKwL,aAAhD;;AAEAxN,WAAKzC,KAAL,CAAW,UAAX,EAAuByE,EAAvB,CAA0B,OAA1B,EAAmC,KAAKkN,6BAAxC;AACAlP,WAAKzC,KAAL,CAAW,mBAAX,EAAgCyE,EAAhC,CAAmC,OAAnC,EAA4C,KAAK8L,0BAAjD;AACA9N,WAAKzC,KAAL,CAAW,eAAX,EAA4ByE,EAA5B,CAA+B,OAA/B,EAAwC,KAAKsY,yBAA7C;AACAta,WAAKzC,KAAL,CAAW,cAAX,EAA2ByE,EAA3B,CAA8B,OAA9B,EAAuC,KAAK4F,iBAA5C;AACA5H,WAAKzC,KAAL,CAAW,eAAX,EAA4ByE,EAA5B,CAA+B,OAA/B,EAAwC,KAAKyY,6BAA7C;AACAza,WAAKzC,KAAL,CAAW,eAAX,EAA4ByE,EAA5B,CAA+B,OAA/B,EAAwC,KAAK6Y,4BAA7C;AACA7a,WAAKzC,KAAL,CAAW,eAAX,EAA4ByE,EAA5B,CAA+B,OAA/B,EAAwC,KAAKua,4BAA7C;AACAvc,WAAKzC,KAAL,CAAW,eAAX,EAA4ByE,EAA5B,CAA+B,OAA/B,EAAwC,KAAKib,0BAA7C;AACAjd,WAAKzC,KAAL,CAAW,cAAX,EAA2ByE,EAA3B,CAA8B,OAA9B,EAAuC,KAAKyd,mBAA5C;AACAzf,WAAKzC,KAAL,CAAW,cAAX,EAA2ByE,EAA3B,CAA8B,QAA9B,EAAwC,KAAKogB,gBAA7C;AACApiB,WAAKzC,KAAL,CAAW,kBAAX,EAA+ByE,EAA/B,CAAkC,OAAlC,EAA2C,KAAKqf,gBAAhD;AACArhB,WAAKzC,KAAL,CAAW,cAAX,EAA2ByE,EAA3B,CAA8B,OAA9B,EAAuC,KAAKwgB,uBAA5C;AACAxiB,WAAKzC,KAAL,CAAW,kBAAX,EAA+ByE,EAA/B,CAAkC,OAAlC,EAA2C,KAAK0gB,aAAhD;AACA;AACA,WAAK3iB,kBAAL;;AAEAhF,aAAOY,GAAP,CAAWoH,QAAX,CAAoBzK,8BAApB;AACA;AACAyC,aAAOhB,WAAP,GAAqB,IAAI5H,IAAJ,CAAS4I,OAAOY,GAAhB,CAArB;AACAZ,aAAOY,GAAP,CAAWqG,EAAX,CAAc,OAAd,EAAuBjH,OAAOqc,iCAA9B;AACArc,aAAOhB,WAAP,CAAmBiI,EAAnB,CAAsB,YAAtB,EAAoC,UAAUnB,GAAV,EAAe;AACjD,YAAIA,IAAI2e,IAAJ,CAASsD,UAAb,EAAyB;AACvB/nB,iBAAOY,GAAP,CAAWkR,oBAAX,CAAgC,IAAhC;AACA;AACD;AACF,OALD;AAMD;AAzrEkC;;AA4rEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhtEa,G","file":"Widget.js","sourcesContent":["import declare from 'dojo/_base/declare';\r\nimport BaseWidget from 'jimu/BaseWidget';\r\nimport _WidgetsInTemplateMixin from 'dijit/_WidgetsInTemplateMixin';\r\nimport Draw from \"esri/toolbars/draw\";\r\nimport Edit from \"esri/toolbars/edit\";\r\nimport Graphic from \"esri/graphic\";\r\nimport SimpleFillSymbol from \"esri/symbols/SimpleFillSymbol\";\r\nimport SimpleMarkerSymbol from \"esri/symbols/SimpleMarkerSymbol\";\r\nimport SimpleLineSymbol from \"esri/symbols/SimpleLineSymbol\";\r\nimport Color from 'dojo/_base/Color';\r\nimport GraphicsLayer from \"esri/layers/GraphicsLayer\"\r\nimport Point from \"esri/geometry/Point\"\r\nimport LayerInfos from \"jimu/LayerInfos/LayerInfos\";\r\nimport lang from \"dojo/_base/lang\";\r\nimport FeatureLayer from \"esri/layers/FeatureLayer\";\r\nimport QueryTask from \"esri/tasks/QueryTask\";\r\nimport Query from \"esri/tasks/query\";\r\nimport WidgetManager from \"jimu/WidgetManager\"\r\nimport geometryEngine from \"esri/geometry/geometryEngine\";\r\nimport Polyline from \"esri/geometry/Polyline\";\r\nimport Polygon from \"esri/geometry/Polygon\";\r\nimport webMercatorUtils from \"esri/geometry/webMercatorUtils\";\r\nimport Geoprocessor from \"esri/tasks/Geoprocessor\";\r\nimport BusyIndicator from 'esri/dijit/util/busyIndicator';\r\nimport Message from \"jimu/dijit/Message\";\r\nimport turf from \"https://unpkg.com/@turf/turf@6/turf.min.js\"\r\nimport XLSX from \"https://unpkg.com/xlsx@0.17.2/dist/xlsx.full.min.js\"\r\nimport Deferred from \"dojo/Deferred\";\r\nimport TextSymbol from \"esri/symbols/TextSymbol\";\r\nimport Font from \"esri/symbols/Font\";\r\nimport CaseInfo from './CaseInfo';\r\nimport StatisticDefinition from \"esri/tasks/StatisticDefinition\"\r\nimport esriRequest from \"esri/request\"\r\nimport SubDivision from './case/Subdivision';\r\nimport Acumulation from './case/Acumulation';\r\nimport Independence from './case/Independence';\r\nimport Deactivate from './case/Deactivate';\r\nimport LandAssignment from './components/LandAssignment';\r\nimport LandProcess from './components/LandProcess';\r\nimport LandMatrix from './components/LandMatrix';\r\nimport UtilityCase from './case/UtilityCase';\r\n\r\n\r\n\r\nconst requestToAttendState = \"por_atender\"\r\nconst requestsObservedState = \"observado\"\r\nconst requestsAttendState = \"atendido\"\r\n\r\n\r\n// Layers ids\r\nconst idLyrCatastroFiscal = \"CARTO_FISCAL_6806\"\r\nconst idLyrCfPredios = \"CARTO_FISCAL_6806_0\"\r\nconst idLyrCfLotesPun = \"CARTO_FISCAL_6806_1\"\r\nconst idLyrCfEje_vial = \"CARTO_FISCAL_6806_2\"\r\nconst idLyrCfNumeracion = \"CARTO_FISCAL_6806_3\"\r\nconst idLyrCfArancel = \"CARTO_FISCAL_6806_4\"\r\nconst idLyrCfLotes = \"CARTO_FISCAL_6806_5\"\r\nconst idLyrCfUnidadesurbanas = \"CARTO_FISCAL_6806_6\"\r\nconst idLyrCfParques = \"CARTO_FISCAL_6806_7\"\r\nconst idLyrCfManzana = \"CARTO_FISCAL_6806_8\"\r\nconst idLyrCfManzanaUrb = \"CARTO_FISCAL_6806_9\"\r\nconst idLyrCfSector = \"CARTO_FISCAL_6806_9\"\r\n// const idLyrActpuntoimg = \"ACTUALIZACION_DE_PUNTO_IMG_1890\"\r\nconst idLyrDistricts = \"limites_nacional_1821_2\"\r\n\r\nconst iconByState = {\r\n  \"por_atender\": { 'icon': 'fas fa-pencil-alt', 'id': 'editRequestsCm', 'desc': \"Por atender\" },\r\n  \"observado\": { 'icon': 'fas fa-pause', 'id': 'obsRequestsCm', 'desc': \"Observado\" },\r\n  \"atendido\": { 'icon': 'fas fa-check', 'id': 'goodRequestsCm', 'desc': \"Atendido\" },\r\n}\r\n\r\n// Fields \r\nconst _UBIGEO_FIELD = \"UBIGEO\"\r\nconst _ID_LOTE_P_FIELD = \"ID_LOTE_P\"\r\nconst _COD_MZN_FIELD = \"COD_MZN\"\r\nconst _F_MZN_FIELD = \"F_MZN\"\r\nconst _COD_SECT_FIELD = \"COD_SECT\"\r\nconst _COD_PRE_FIELD = \"COD_PRE\"\r\nconst _COD_LOTE_FIELD = \"COD_LOTE\"\r\n\r\n\r\nlet toolbarCm\r\n\r\nconst params = new URLSearchParams(window.location.search)\r\nconst paramsApp = {}\r\n\r\nfor (let key of params.keys()) {\r\n  paramsApp[key] = params.get(key)\r\n}\r\n\r\n// Styles\r\nconst symbolPuntoLote = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_SQUARE,\r\n  20,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0]), 2),\r\n  new Color([0, 92, 230, 1]\r\n  )\r\n)\r\n\r\nconst symbolFusionLote = new SimpleFillSymbol(\r\n  SimpleFillSymbol.STYLE_SOLID,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0]),\r\n    2\r\n  ),\r\n  new Color([255, 255, 0, 0.25])\r\n)\r\n\r\nconst symbolEliminarLote = new SimpleFillSymbol(\r\n  SimpleFillSymbol.STYLE_DIAGONAL_CROSS,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([100, 100, 100]),\r\n    2\r\n  ),\r\n  new Color([229, 229, 229, 0.9])\r\n)\r\n\r\nconst symbolLoteSelected = new SimpleFillSymbol(\r\n  SimpleFillSymbol.STYLE_SOLID,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0, 0.75]),\r\n    4\r\n  ),\r\n  new Color([0, 255, 0, 0])\r\n)\r\n\r\nconst symbolDivisionLote = new SimpleLineSymbol(\r\n  SimpleLineSymbol.STYLE_DASH,\r\n  new Color([255, 0, 0]),\r\n  2\r\n)\r\n\r\nconst symbolPredio = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_SQUARE,\r\n  20,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0]), 2),\r\n  new Color([235, 69, 95, 1]\r\n  )\r\n)\r\n\r\nconst symbolPredioSelected = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_SQUARE, 20,\r\n  new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0]), 4),\r\n  new Color([0, 255, 0, 0])\r\n);\r\n\r\nconst symbolPredioSelected2 = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_SQUARE,\r\n  30,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([0, 183, 205]), 2),\r\n  new Color([0, 255, 255]\r\n  )\r\n);\r\n\r\nconst symbolSnapPointCm = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_CROSS,\r\n  20,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0]),\r\n    2\r\n  ),\r\n  new Color([0, 255, 0, 0.25])\r\n)\r\n\r\n\r\n// Identificadores de graficos\r\nconst idGraphicPredioCm = \"graphicPredioCm2\"\r\nconst idGraphicPredioByDivison = \"graphicPredioByDivison\"\r\n// const idGraphicLandsByIndependence = \"graphicLandsByIndependence\"\r\nconst idGraphicPredioSelectedCm = \"graphicPredioSelected\"\r\nconst idGraphicLoteCm = \"graphicLoteCm\"\r\nconst idGraphicLoteSelectedCm = \"graphicLoteSelectedCm\"\r\nconst idGraphicPuntoLote = \"graphicPuntoLote\"\r\nconst idGraphicFrenteLote = \"graphicFrenteLote\"\r\nconst idGraphicLineaDivision = \"graphicLineaDivision\"\r\nconst idGraphicLoteDeleteCm = \"graphicLoteDeleteCm\"\r\nconst idGraphicLabelLineaDivision = \"graphicLabelLineaDivision\"\r\nconst idGraphicLabelCodLote = \"graphicLabelCodLoteDivision\"\r\n\r\n// symbol by case\r\nconst symbolByCase = {\r\n  \"1\": { \"symbol\": symbolPredio },\r\n  \"2\": { \"symbol\": symbolPredio },\r\n  \"3\": { \"symbol\": symbolPredio },\r\n}\r\n\r\n// graphicsLayer main\r\nlet graphicLayerLineaDivision = new GraphicsLayer({\r\n  id: idGraphicLineaDivision,\r\n});\r\n\r\nlet graphicLayerLabelLineaDivision = new GraphicsLayer({\r\n  id: idGraphicLabelLineaDivision,\r\n});\r\n\r\n// let graphicLayerLabelCodLoteDivision = new GraphicsLayer({\r\n//   id: idGraphicLabelCodLote,\r\n// });\r\n\r\nlet graphicLayerPredioByDivison = new GraphicsLayer({\r\n  id: idGraphicPredioByDivison,\r\n});\r\n\r\n// const graphicLayerLandsByIndependence = new GraphicsLayer({\r\n//   id: idGraphicLandsByIndependence,\r\n// });\r\n\r\nlet fontAwesome = document.createElement('script');\r\nfontAwesome.src = 'https://use.fontawesome.com/releases/v5.3.1/js/all.js';\r\ndocument.head.appendChild(fontAwesome);\r\n\r\n// To create a widget, you need to derive from BaseWidget.\r\nexport default declare([BaseWidget], {\r\n\r\n  // Custom widget code goes here\r\n\r\n  baseClass: 'carto-maintenance-wgt',\r\n  codRequestsCm: null,\r\n  currentTabActive: null,\r\n  layersMap: [],\r\n  queryUbigeo: paramsApp['ubigeo'] ? `${_UBIGEO_FIELD} = '${paramsApp['ubigeo']}'` : \"1=1\",\r\n  case: 0,\r\n  caseDescription: '',\r\n  lotesQuery: null,\r\n  idlotes: null,\r\n  arancel: null,\r\n  codigosPredios: null,\r\n  xy: [],\r\n  idxLines: 0,\r\n  cpmPredioDivision: '',\r\n  idPredioDivision: '',\r\n  cpmAcumulacion: '',\r\n  idAcumulacion: '',\r\n  editToolbar: null,\r\n  idButtonDrawActive: '',\r\n  queryRequests: {\r\n    ubigeo: paramsApp['ubigeo'],\r\n    limit: 1000000,\r\n    ordering: \"date\"\r\n  },\r\n\r\n  responseRequests: null,\r\n  currentLotsRows: null,\r\n  currentLandRows: null,\r\n  currentPoinLotsRows: null,\r\n  // currentLotsRowsAsPolygons: null,\r\n\r\n  // add additional properties here\r\n\r\n  // methods to communication with app container:\r\n  postCreate() {\r\n    this.inherited(arguments);\r\n    console.log('CartoMaintenanceWgt::postCreate');\r\n    this._getAllLayers();\r\n    selfCm = this;\r\n    this._filterByDistrictCm();\r\n    this._startExtentByDistrictCm();\r\n    esri.bundle.toolbars.draw.addPoint = esri.bundle.toolbars.draw.addPoint + \"<br/>Pulsar <strong>CTRL</strong> para activar la alineación\";\r\n    esri.bundle.toolbars.draw.addShape = esri.bundle.toolbars.draw.addShape + \"<br/>Pulsar <strong>CTRL</strong> para activar la alineación\";\r\n    esri.bundle.toolbars.draw.resume = esri.bundle.toolbars.draw.resume + \"<br/>Pulsar <strong>CTRL</strong> para activar la alineación\";\r\n    esri.bundle.toolbars.draw.start = esri.bundle.toolbars.draw.start + \"<br/>Pulsar <strong>CTRL</strong> para activar la alineación\";\r\n  },\r\n  _getAllLayers() {\r\n    LayerInfos.getInstance(this.map, this.map.itemInfo).then(lang.hitch(this, function (layerInfosObj) {\r\n      this.layersMap = layerInfosObj;\r\n    }));\r\n  },\r\n\r\n  _showMessage(message, type = 'message') {\r\n    let title = `${this.nls._widgetLabel}: ${type}`\r\n    switch (type) {\r\n      case 'error':\r\n        new Message({\r\n          type: type,\r\n          titleLabel: title,\r\n          message: message,\r\n        });\r\n        break;\r\n      default:\r\n        new Message({\r\n          type: type,\r\n          titleLabel: title,\r\n          message: message,\r\n        });\r\n        break;\r\n    }\r\n\r\n  },\r\n\r\n  _showMessagePromise(messagetext) {\r\n    let deferred = new Deferred();\r\n    let message = new Message({\r\n      message: messagetext,\r\n      buttons: [{\r\n        label: \"Ok\",\r\n        onClick: function () {\r\n          deferred.resolve(true);\r\n          message.hide();\r\n        }\r\n      }]\r\n    });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _showMessageConfirm() {\r\n    let deferred = new Deferred();\r\n    let mensaje = new Message({\r\n      message: selfCm.nls.quesstionContinue,\r\n      type: \"question\",\r\n      buttons: [{\r\n        label: \"Sí\",\r\n        onClick: function () {\r\n          deferred.resolve(true);\r\n          mensaje.hide();\r\n        }\r\n      }, {\r\n        label: \"No\",\r\n        onClick: function () {\r\n          deferred.resolve(false);\r\n          mensaje.hide();\r\n        }\r\n      }]\r\n    });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _filterByDistrictCm() {\r\n    let queryPredios = selfCm.layersMap.getLayerInfoById(idLyrCfPredios).getFilter()\r\n    queryPredios = queryPredios ? queryPredios + \" AND \" + selfCm.queryUbigeo : selfCm.queryUbigeo\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfPredios).setFilter(queryPredios)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfLotesPun).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfEje_vial).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfNumeracion).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfArancel).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfLotes).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfUnidadesurbanas).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfParques).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfManzana).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfSector).setFilter(selfCm.queryUbigeo)\r\n    // selfCm.layersMap.getLayerInfoById(idLyrActpuntoimg).setFilter(selfCm.queryUbigeo)\r\n  },\r\n\r\n  _startExtentByDistrictCm() {\r\n    const query = new Query()\r\n    query.where = selfCm.queryUbigeo\r\n\r\n    const qTask = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrDistricts).getUrl())\r\n\r\n    qTask.executeForExtent(query, function (results) {\r\n      selfCm.map.setExtent(results.extent).then(function () {\r\n        // get the next scale value from the current scale\r\n        const homeWidget = WidgetManager.getInstance().getWidgetsByName(\"HomeButton\");\r\n        homeWidget[0].homeDijit.extent = selfCm.map.extent;\r\n      })\r\n    }, function (error) {\r\n      console.log(error)\r\n    })\r\n  },\r\n\r\n  startup() {\r\n    this.inherited(arguments);\r\n    console.log('CartoMaintenanceWgt::startup');\r\n\r\n    this.busyIndicator = BusyIndicator.create({\r\n      target: this.domNode.parentNode.parentNode,\r\n      backgroundOpacity: 0\r\n    });\r\n  },\r\n\r\n  _callApiRestServices(baseUrl, params) {\r\n    const url = new URL(baseUrl);\r\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\r\n\r\n    return fetch(url)\r\n      .then(response => {\r\n        if (!response) {\r\n          selfCm.busyIndicator.hide();\r\n          throw new Error(\"HTTP error \" + response.status);\r\n        }\r\n        return response.json();\r\n      })\r\n      .catch(function (err) {\r\n        selfCm.busyIndicator.hide();\r\n        console.log(\"An error occurred while fetching the data.\");\r\n      });\r\n  },\r\n\r\n  _getRequestsTrayDataCm(responseData, state) {\r\n    // Reemplazar todo el metodo para capturar datos de servicio\r\n    const data = responseData.filter((i) => i.status == state);\r\n    return data\r\n  },\r\n\r\n  _loadIniRequestsCm() {\r\n    dojo.query(`#${requestToAttendState}`)[0].click()\r\n  },\r\n\r\n  _parseDateStringtoFormat(dateString) {\r\n    const date = new Date(dateString)\r\n    const day = date.getDate()\r\n    const month = date.getMonth() + 1\r\n    const year = date.getFullYear()\r\n    return `${day}/${month}/${year}`\r\n  },\r\n\r\n  // _loadDocSupportCm() {\r\n  //   const urlStatusRequest = `${selfCm.config.applicationListUrl}/${selfCm.codRequestsCm}`\r\n  //   selfCm._callApiRestServices(urlStatusRequest, {}).then(function (result) {\r\n  //     try {\r\n  //       dojo.query(\"#showInfoDocCm\")[0].value = result.support\r\n  //     } catch (error) {\r\n  //       selfCm.busyIndicator.hide();\r\n  //       selfCm._showMessage(error.message, type = \"error\")\r\n  //     }\r\n\r\n  //   })\r\n  // },\r\n\r\n  _loadRequestsCm(evt) {\r\n    selfCm.busyIndicator.show();\r\n    selfCm._callApiRestServices(selfCm.config.applicationListUrl, selfCm.queryRequests).then(response => {\r\n      response = response['results']\r\n      // modificar el servicio para devolver los CPU\r\n      selfCm.currentTabActive = evt.target.id;\r\n      const estado = iconByState[evt.target.id].desc;\r\n      const data = selfCm._getRequestsTrayDataCm(response, estado);\r\n      const dataHtml = data.map((i) => `<tr>\r\n                                        <td>${i.id}</td>\r\n                                        <td>${i.type}</td>\r\n                                        <td>${i.lands.map(lnd => lnd['cup']).join(',')}</td>\r\n                                        <td>${selfCm._parseDateStringtoFormat(i.date)}</td>\r\n                                        <td>\r\n                                          <button id=\"${iconByState[evt.target.id].id}\" value=\"${i.idType}\" class=\"stateRequestClsCm\">\r\n                                            <i class=\"${iconByState[evt.target.id].icon}\"></i>\r\n                                          </button>\r\n                                        </td>\r\n                                      </tr>`\r\n      )\r\n      const tbody = dojo.create('tbody', { innerHTML: dataHtml.join('') });\r\n      const tb = dojo.query(\".tableRequestClsCm\")[0]\r\n      if (tb.getElementsByTagName(\"tbody\").length > 0) {\r\n        selfCm.tableRequestApCm.removeChild(tb.getElementsByTagName(\"tbody\")[0])\r\n      }\r\n      selfCm.tableRequestApCm.appendChild(tbody);\r\n      if (evt.target.id == requestToAttendState) {\r\n        dojo.query(\".stateRequestClsCm\").on('click', selfCm._openFormCase);\r\n      }\r\n      if (evt.target.id == requestsAttendState) {\r\n        dojo.query(\".stateRequestClsCm\").on('click', selfCm._openFormResult);\r\n      }\r\n\r\n      dojo.query(\".tablinksCm\").removeClass(\"active\");\r\n      evt.target.classList.add(\"active\");\r\n      selfCm.busyIndicator.hide();\r\n    })\r\n  },\r\n\r\n  _zoomToPredSelectedEvt(evt) {\r\n    // @cpu\r\n    const cup = evt.currentTarget.dataset.cup\r\n    return selfCm._zoomToPredSelected(cup)\r\n  },\r\n\r\n  _handleFeatureSelected(feature) {\r\n    const featureSelected = new GraphicsLayer({\r\n      id: idGraphicPredioSelectedCm\r\n    });\r\n    feature[0].setSymbol(symbolPredioSelected);\r\n    featureSelected.add(feature[0]);\r\n    selfCm.map.addLayer(featureSelected);\r\n    selfCm.map.centerAt(feature[0].geometry);\r\n\r\n    setTimeout(function () {\r\n      // clearInterval(interval);\r\n      selfCm._removeLayerGraphic(idGraphicPredioSelectedCm);\r\n    }, 1000);\r\n  },\r\n\r\n  _zoomToPredSelected(cup) {\r\n    selfCm.busyIndicator.show();\r\n    const deferred = new Deferred();\r\n    const LandCls = new UtilityCase.Land();\r\n    selfCm._removeLayerGraphic(idGraphicPredioSelectedCm);\r\n    const prediosLayer = selfCm.layersMap.getLayerInfoById(idLyrCfPredios);\r\n    const propertyLayer = new FeatureLayer(prediosLayer.getUrl(), {\r\n      mode: FeatureLayer.MODE_ONDEMAND,\r\n      outFields: [\"*\"]\r\n    });\r\n    // crear una consulta para seleccionar la fila deseada\r\n    const query = new Query();\r\n    // @cpu\r\n    query.where = `${_UBIGEO_FIELD} = '${paramsApp['ubigeo']}' and ${LandCls.codCpu} = '${cup}'`\r\n\r\n    // seleccionar la fila\r\n    propertyLayer.selectFeatures(query, FeatureLayer.SELECTION_NEW)\r\n      .then(\r\n        results => {\r\n          if (results.length == 0) {\r\n            throw new Error(selfCm.nls.emptyLandSelected)\r\n          }\r\n          selfCm._handleFeatureSelected(results)\r\n          selfCm.busyIndicator.hide();\r\n          return deferred.resolve(results)\r\n        }\r\n      )\r\n      .catch(error => {\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(error.message, type = \"error\")\r\n        deferred.reject(error)\r\n      })\r\n    return deferred.promise;\r\n  },\r\n\r\n  _openSupportingDocument(evt) {\r\n    // check if value is empty\r\n    if (!evt.currentTarget.value) {\r\n      selfCm._showMessage(selfCm.nls.emptyDocSupport, type = \"error\")\r\n      return\r\n    }\r\n    window.open(evt.currentTarget.value, '_blank').focus();\r\n  },\r\n\r\n  executeQueryTask(url, query, type = 'query') {\r\n    return new Promise((resolve, reject) => {\r\n      const qTask = new QueryTask(url);\r\n      switch (type) {\r\n        case 'query':\r\n          qTask.execute(query, resolve, reject);\r\n          break;\r\n        case 'queryForExtent':\r\n          qTask.executeForExtent(query, resolve, reject);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  },\r\n\r\n  _getLandsOriginals() {\r\n    const self = this;\r\n    const deferred = new Deferred();\r\n    const LandCls = new UtilityCase.Land();\r\n    const LotCls = new UtilityCase.Lot();\r\n    const queryLands = new Query();\r\n    // @cpu\r\n    const cpuOriginal = self.currentLandTabRows.map(i => i.cup);\r\n    queryLands.where = `${UtilityCase.ubigeoFieldName} = '${paramsApp['ubigeo']}' and ${LandCls.codCpu} in ('${cpuOriginal.join(\"', '\")}')`;\r\n    queryLands.returnGeometry = true;\r\n    queryLands.outFields = [\"*\"];\r\n    const urlLands = self.layersMap.getLayerInfoById(idLyrCfPredios).getUrl();\r\n    self.executeQueryTask(urlLands, queryLands)\r\n      .then(results => {\r\n        if (results.features.length == 0) {\r\n          throw new Error(self.nls.errorGetLand);\r\n        }\r\n        self.currentLandRows = results.features;\r\n        const idLots = self.currentLandRows.map((i) => i.attributes[LotCls.idLotP]);\r\n        deferred.resolve(idLots);\r\n      })\r\n      .catch(error => {\r\n        deferred.reject(error);\r\n      });\r\n    return deferred.promise;\r\n  },\r\n  _getLotsOriginals(idLots) {\r\n    const self = this;\r\n    const LotCls = new UtilityCase.Lot()\r\n    const deferred = new Deferred();\r\n    const queryLots = new Query();\r\n    queryLots.where = `${LotCls.idLotP} in (${idLots.join(\",\")}) and (${UtilityCase.ubigeoFieldName} = ${paramsApp['ubigeo']})`;\r\n    self.lotesQuery = queryLots.where;\r\n    queryLots.returnGeometry = true;\r\n    queryLots.outFields = [\"*\"];\r\n    const urlLots = self.layersMap.getLayerInfoById(idLyrCfLotes).getUrl();\r\n    self.executeQueryTask(urlLots, queryLots)\r\n      .then(results => {\r\n        if (results.features.length == 0) {\r\n          throw new Error(self.nls.emptyLotRequests);\r\n        }\r\n        self.currentLotsRows = results.features;\r\n        const codMznValues = self.currentLotsRows.map((i) => i.attributes[_COD_MZN_FIELD]).join(\",\")\r\n        const codSectValues = self.currentLotsRows.map((i) => i.attributes[_COD_SECT_FIELD]).join(\",\")\r\n        self.arancel = `(${UtilityCase.ubigeoFieldName} = ${paramsApp['ubigeo']}) and ${_COD_MZN_FIELD} in (${codMznValues}) and ${_COD_SECT_FIELD} in (${codSectValues})`;\r\n        deferred.resolve(idLots);\r\n      })\r\n      .catch(error => {\r\n        deferred.reject(error);\r\n      });\r\n    return deferred.promise;\r\n  },\r\n  _getPointLotsOriginals(idLots) {\r\n    const self = this;\r\n    const LotCls = new UtilityCase.Lot()\r\n    const deferred = new Deferred();\r\n    const queryPointLots = new Query();\r\n    queryPointLots.where = `${LotCls.idLotP} in (${idLots.join(\",\")}) and (${UtilityCase.ubigeoFieldName} = ${paramsApp['ubigeo']})`;\r\n    queryPointLots.returnGeometry = true;\r\n    queryPointLots.outFields = [\"*\"];\r\n    const urlPointLots = self.layersMap.getLayerInfoById(idLyrCfLotesPun).getUrl();\r\n    self.executeQueryTask(urlPointLots, queryPointLots)\r\n      .then(results => {\r\n        if (results.features.length == 0) {\r\n          throw new Error(self.nls.emptyPointLotRequests);\r\n        }\r\n        self.currentPoinLotsRows = results.features;\r\n        deferred.resolve(idLots);\r\n      })\r\n      .catch(error => {\r\n        deferred.reject(error);\r\n      });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _getLandsOriginalsTab(idSolicitud) {\r\n    const self = this;\r\n    const deferred = new Deferred();\r\n    const urlOriginal = `${self.config.landsByApplicationUrl}/${idSolicitud}`;\r\n    fetch(urlOriginal)\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        if (response.length == 0) {\r\n          throw new Error(self.nls.errorGetLand);\r\n        }\r\n        self.currentLandTabRows = response.results;\r\n        deferred.resolve(self.currentLandTabRows);\r\n      })\r\n      .catch(error => {\r\n        deferred.reject(error);\r\n      });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _getOriginalData(idSolicitud) {\r\n    return this._getLandsOriginalsTab(idSolicitud)\r\n      .then(landsTab => this._getLandsOriginals())\r\n      .then(idLots => this._getPointLotsOriginals(idLots))\r\n      .then(idLots => this._getLotsOriginals(idLots))\r\n      .then((idLots) => {\r\n        return idLots;\r\n      })\r\n      .catch(error => {\r\n        selfCm._showMessage(error.message, type = \"error\");\r\n        // throw error;\r\n      });\r\n  },\r\n\r\n  _zoomExtentToLote() {\r\n    const unionPredios = this._unionFeatures(this.currentLotsRows.map((i) => i.geometry))\r\n    this.map.setExtent(unionPredios.getExtent().expand(2))\r\n\r\n  },\r\n\r\n  _zoomExtentToLoteRefactor(cod_pre) {\r\n    const query = new Query()\r\n\r\n    query.where = `${_UBIGEO_FIELD} = '${paramsApp['ubigeo']}' and ${_COD_PRE_FIELD} in ('${(cod_pre.split(',')).join(\"', '\")}')`\r\n    // fields return\r\n    query.outFields = [_ID_LOTE_P_FIELD, _COD_MZN_FIELD, _COD_SECT_FIELD]\r\n    query.returnGeometry = false\r\n\r\n    // Return distinct values\r\n    query.returnDistinctValues = true\r\n\r\n    // let qTask = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrCfPredios).getUrl())\r\n    const urlPredios = selfCm.layersMap.getLayerInfoById(idLyrCfPredios).getUrl();\r\n\r\n    return selfCm.executeQueryTask(urlPredios, query)\r\n      .then(results => {\r\n        const idLote = results.features.map((i) => i.attributes[_ID_LOTE_P_FIELD]);\r\n        // selfCm.idlotes = idLote;\r\n        const idmanzana = results.features.map((i) => i.attributes[_COD_MZN_FIELD]);\r\n        const idsector = results.features.map((i) => i.attributes[_COD_SECT_FIELD]);\r\n        const queryLote = new Query();\r\n        queryLote.where = `${_ID_LOTE_P_FIELD} in (${idLote.join(\",\")}) and (${_UBIGEO_FIELD} = ${paramsApp['ubigeo']})`;\r\n        selfCm.lotesQuery = queryLote.where;\r\n        selfCm.arancel = `${_UBIGEO_FIELD} = '${paramsApp.ubigeo}' and (${_COD_MZN_FIELD} in (${idmanzana.join(\",\")})) and (${_COD_SECT_FIELD} IN (${idsector.join(\",\")}))`;\r\n        queryLote.returnGeometry = true;\r\n        const urlLotes = selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl();\r\n        selfCm.busyIndicator.hide();\r\n        return selfCm.executeQueryTask(urlLotes, queryLote)\r\n      })\r\n      .then(results => {\r\n        if (results.features.length == 0) {\r\n          // execute error for catch\r\n          throw new Error(selfCm.nls.emptyLotSelected)\r\n        }\r\n        const unionPredios = selfCm._unionFeatures(results.features.map((i) => i.geometry))\r\n\r\n        selfCm.map.setExtent(unionPredios.getExtent().expand(2))\r\n\r\n        const graphic = new Graphic(unionPredios, symbolLoteSelected);\r\n        const featureSelected = new GraphicsLayer({\r\n          id: idGraphicLoteSelectedCm\r\n        });\r\n        featureSelected.add(graphic);\r\n        selfCm.map.addLayer(featureSelected);\r\n\r\n        // Parpadeo de seleccion\r\n        let interval = setInterval(function () {\r\n          let graphic = featureSelected.graphics[0];\r\n          graphic.setSymbol(graphic.symbol === symbolLoteSelected ? null : symbolLoteSelected);\r\n        }, 200);\r\n\r\n        setTimeout(function () {\r\n          clearInterval(interval);\r\n          selfCm._removeLayerGraphic(idGraphicLoteSelectedCm);\r\n        }, 2000);\r\n        selfCm.busyIndicator.hide();\r\n        return selfCm.map.setExtent(unionPredios.getExtent().expand(2))\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n        selfCm.busyIndicator.hide();\r\n        throw error;\r\n      })\r\n  },\r\n\r\n  _zoomHomeRequests() {\r\n    return selfCm._zoomExtentToLote()\r\n  },\r\n\r\n  _toggleBodyCaseInfo(evt) {\r\n    this.closest('.caseInfoClsCm').querySelector('.bodyPredInfoClsCm').classList.toggle('active')\r\n  },\r\n\r\n  _requestCaseInfo() {\r\n    selfCm.busyIndicator.show();\r\n    // const urlOriginal = `${selfCm.config.landsByApplicationUrl}/${idSolicitud}`\r\n    const urlResults = `${selfCm.config.resultsByApplication}/${selfCm.codRequestsCm}`\r\n    const urlDocSupport = `${selfCm.config.applicationListUrl}/${selfCm.codRequestsCm}`\r\n\r\n    Promise.all([\r\n      // fetch(urlOriginal).then(response => response.json()),\r\n      selfCm._getOriginalData(selfCm.codRequestsCm),\r\n      fetch(urlResults).then(response => response.json()),\r\n      fetch(urlDocSupport).then(response => response.json()),\r\n    ]).then(function ([_, responseResults, responseDocSupport]) {\r\n      console.log(selfCm.currentLandTabRows);\r\n      console.log(responseResults);\r\n      console.log(responseDocSupport);\r\n      const rows = selfCm.currentLandTabRows.map((i, idx) => {\r\n        return CaseInfo.contentCard(i, 'original', i.cup, active = selfCm.case != 2 ? true : false);\r\n      });\r\n\r\n      if (selfCm.case != 4) {\r\n        if (responseResults.results.length == 0) {\r\n          selfCm._showMessage(`${selfCm.nls.empyLandResultsRequests} ${selfCm.codRequestsCm}`, type = \"error\");\r\n          selfCm.busyIndicator.hide();\r\n          return\r\n        }\r\n      }\r\n\r\n      dojo.query(\"#showInfoDocCm\")[0].value = responseDocSupport.support\r\n      dojo.query('.CtnOriginalClsCm')[0].innerHTML = rows.join('');\r\n      dojo.query(\".zoomPredInfoClsCm\").on('click', selfCm._zoomToPredSelectedEvt);\r\n\r\n      if (selfCm.case != 4) {\r\n        const rowsResults = responseResults.results.map((i, idx) => {\r\n          // const otherAttributes = selfCm.case === \"5\" ? true : false;\r\n          // console.log(otherAttributes, '.....')\r\n          return CaseInfo.contentCard(i, 'result', idx + 1, false, true);\r\n        });\r\n        dojo.query('.CtnResultClsCm')[0].innerHTML = rowsResults.join('');\r\n        dojo.query('.lblResultsClsCm').addClass('active');\r\n      } else {\r\n        dojo.query('.CtnResultClsCm')[0].innerHTML = '';\r\n        dojo.query('.lblResultsClsCm').removeClass('active');\r\n      }\r\n\r\n      dojo.query(\".colapsePredInfoClsCm\").on('click', selfCm._toggleBodyCaseInfo);\r\n\r\n      // @cpu\r\n      selfCm.uniqueCodeLands = selfCm.currentLandTabRows.map((i) => i.cup).join(',');\r\n      selfCm.responseRequests = responseResults['results']\r\n\r\n    })\r\n      .then(function () {\r\n        switch (selfCm.case) {\r\n          case \"1\":\r\n            selfCm.reasignarApCm.classList.toggle('active')\r\n            break;\r\n          case \"2\":\r\n            selfCm.fusionApCm.classList.toggle('active')\r\n            break\r\n          case \"3\":\r\n            selfCm.divisionApCm.classList.toggle('active')\r\n            break\r\n          case \"4\":\r\n            selfCm.eliminacionApCm.classList.toggle('active')\r\n            break\r\n          case \"5\":\r\n            selfCm.independenceApCm.classList.toggle('active')\r\n            selfCm.independenceApCm.innerHTML = ''\r\n            LandAssignment.title = \"Independización\";\r\n            LandAssignment.lands = selfCm.responseRequests;\r\n            LandAssignment.pointLots = selfCm.currentPoinLotsRows;\r\n            LandAssignment.map = selfCm.map;\r\n            LandAssignment.landsSymbol = symbolPredio;\r\n            LandAssignment.landsSymbolSelected = symbolPredioSelected2;\r\n            LandAssignment.removeAllGraphics();\r\n            selfCm.independenceApCm.appendChild(LandAssignment.renderTableLandAssignment());\r\n\r\n            LandProcess.title = \"Enviar datos\";\r\n            LandProcess.type = \"independence\";\r\n            selfCm.independenceApCm.appendChild(LandProcess.renderButtonProcess());\r\n            dojo.query(`#${LandProcess.id}`).on('click', selfCm._executeIndependenceLands);\r\n            dojo.query(\".pointLotSelectionCm\").on('change', LandAssignment.selectedPointLots.bind(LandAssignment));\r\n            dojo.query('.tableClsCm tr').on('mouseover', LandAssignment.highlightLand.bind(LandAssignment));\r\n            dojo.query('.tableClsCm tr').on('mouseout', LandAssignment.reestartSymbolLand.bind(LandAssignment));\r\n            break\r\n          default:\r\n            break;\r\n        }\r\n\r\n        selfCm.resultCtnApCm.classList.remove('active')\r\n        selfCm.obsCtnApCm.classList.remove('active')\r\n        selfCm.requestTrayApCm.classList.remove('active')\r\n        selfCm.casesCtnApCm.classList.toggle('active')\r\n        selfCm._zoomExtentToLote()\r\n        selfCm.busyIndicator.hide();\r\n      })\r\n      .catch(function (error) {\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(error.message, type = \"error\");\r\n        console.log(error)\r\n      })\r\n\r\n  },\r\n\r\n  _openFormCase(evt) {\r\n    if (evt.currentTarget.id == \"editRequestsCm\") {\r\n      const row = dojo.query(evt.currentTarget).closest(\"tr\")[0];\r\n      const rowList = dojo.query(\"td\", row).map(td => td.innerHTML);\r\n      selfCm.codRequestsCm = rowList[0]\r\n      selfCm.caseDescription = rowList[1]\r\n      dojo.query('#titleCaseCm')[0].innerHTML = `<span>${selfCm.caseDescription} <span class=\"fa fa-search\" style=\"font-size: 15px\"></span></span>`\r\n\r\n      selfCm.case = evt.currentTarget.value\r\n      selfCm._requestCaseInfo();\r\n\r\n    } else if (evt.currentTarget.id == 'backTrayCm' || evt.currentTarget.id == 'backTrayResultCm') {\r\n      // desactivar el toolbarCm de edicion si esta activado\r\n      toolbarCm.deactivate();\r\n\r\n      // deshabilitar snapping\r\n      selfCm.map.disableSnapping()\r\n      selfCm.bodyTbLinesDvApCm.innerHTML = ''\r\n      selfCm.bodyTbPrediosDvApCm.innerHTML = ''\r\n\r\n      dojo.query(\".caseClsCm\").removeClass(\"active\")\r\n      // remove all graphics layer if exist\r\n      selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n      selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n      selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n      selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n      selfCm._removeLayerGraphic(idGraphicPredioSelectedCm);\r\n      selfCm._removeLayerGraphic(idGraphicLabelCodLote)\r\n      selfCm.bodyTbDatosLoteDvApCm.innerHTML = ''\r\n\r\n      graphicLayerLineaDivision.clear();\r\n      graphicLayerLabelLineaDivision.clear();\r\n      graphicLayerPredioByDivison.clear();\r\n\r\n      selfCm.lotesQuery = null\r\n      selfCm.arancel = null\r\n      selfCm.xy = []\r\n\r\n      selfCm.casesCtnApCm.classList.remove('active')\r\n      selfCm.resultCtnApCm.classList.remove('active')\r\n      selfCm.obsCtnApCm.classList.remove('active')\r\n      selfCm.requestTrayApCm.classList.toggle('active')\r\n      selfCm._removeClassActiveButton()\r\n      selfCm._loadIniRequestsCm();\r\n    }\r\n\r\n  },\r\n  _openFormObs() {\r\n    selfCm.textAreaObsApCm.value = ''\r\n    const imageDiv = dojo.query(\".thumbnailClsCm\")[0];\r\n    selfCm.imgUploadApCm.value = ''\r\n    imageDiv.style.backgroundImage = \"none\";\r\n    imageDiv.innerHTML = \"<span class=alignVCenter><i class='far fa-image'></i></span>\";\r\n    dojo.query('#headeRequestsCtnCm')[0].innerHTML = `<span class=\"alignVCenter\">Solicitud: ${selfCm.codRequestsCm}</span>`\r\n    selfCm.casesCtnApCm.classList.toggle(\"active\");\r\n    selfCm.obsCtnApCm.classList.toggle('active')\r\n  },\r\n\r\n  _FormResult(id_solicitud, caseCm) {\r\n    const urlPredioResults = `${selfCm.config.resultsByApplication}/${id_solicitud}`\r\n    selfCm._callApiRestServices(urlPredioResults, {}).then(function (response) {\r\n      console.log(response);\r\n      try {\r\n        selfCm.bodyTbResultsApCm.innerHTML = ''\r\n        dojo.query(\"#titleCaseResult\")[0].innerHTML = `<span>Solicitud ${id_solicitud}: ${caseCm}</span>`\r\n\r\n        const rows = response.results.map((predio, index) => {\r\n          return `<tr><td class=\"center-aligned\">${index + 1}</td>\r\n                  <td>${predio['cup']}</td>\r\n                  <td>${predio['address']}</td>\r\n                  <td class=\"center-aligned\">\r\n                    <span id=\"${predio['cup']}_search\" class=\"zoomPredioResultClsCm\"><i class=\"fas fa-search\"></i></span>\r\n                  </td></tr>`\r\n        })\r\n        selfCm.bodyTbResultsApCm.innerHTML = rows.join('')\r\n        dojo.query('.zoomPredioResultClsCm').on('click', selfCm._centerAtPredioResult)\r\n        selfCm.casesCtnApCm.classList.remove(\"active\");\r\n        selfCm.obsCtnApCm.classList.remove('active')\r\n        selfCm.requestTrayApCm.classList.remove('active')\r\n        selfCm.resultCtnApCm.classList.toggle('active')\r\n        selfCm.busyIndicator.hide()\r\n      }\r\n      catch (error) {\r\n        console.log(error)\r\n      }\r\n    })\r\n  },\r\n\r\n  _centerAtPredioResult(evt) {\r\n    const cup = evt.currentTarget.id.replace('_search', '')\r\n    selfCm._zoomToPredSelected(cup)\r\n  },\r\n\r\n  _openFormResult(evt) {\r\n    const row = dojo.query(evt.currentTarget).closest(\"tr\")[0];\r\n    const rowList = dojo.query(\"td\", row).map(td => td.innerHTML);\r\n    selfCm.codRequestsCm = rowList[0]\r\n    selfCm.caseDescription = rowList[1]\r\n    selfCm._FormResult(selfCm.codRequestsCm, selfCm.caseDescription)\r\n  },\r\n\r\n  // Toolbar function\r\n  _createToolbar() {\r\n    toolbarCm = new Draw(selfCm.map);\r\n    toolbarCm.on(\"draw-end\", selfCm._addToMap);\r\n  },\r\n\r\n  _addToMap(evt) {\r\n    if (evt.geometry.type === \"point\") {\r\n      const screenPoint = selfCm.map.toScreen(evt.geometry)\r\n      const deferred = selfCm.map.snappingManager.getSnappingPoint(screenPoint);\r\n      deferred.then(function (value) {\r\n        if (value !== undefined) {\r\n          const point_g = webMercatorUtils.webMercatorToGeographic(new Point(value));\r\n          const graphic = new Graphic(point_g, symbolByCase[selfCm.case].symbol);\r\n          // si es el caso reasignacion de predio\r\n          if (selfCm.case == 1 || selfCm.case == 2) {\r\n\r\n            const graphicLayer = new GraphicsLayer({\r\n              id: idGraphicPredioCm,\r\n            });\r\n            graphicLayer.add(graphic);\r\n            selfCm.map.addLayer(graphicLayer);\r\n            selfCm.xy = [point_g.x, point_g.y]\r\n          }\r\n          else if (selfCm.case == 3) {\r\n            graphic['attributes'] = {\r\n              cpm: selfCm.cpmPredioDivision,\r\n              id: selfCm.idPredioDivision\r\n            }\r\n            graphicLayerPredioByDivison.add(graphic);\r\n          }\r\n          selfCm.map.setInfoWindowOnClick(true);\r\n          toolbarCm.deactivate();\r\n          selfCm._removeClassActiveButton()\r\n        } else {\r\n          alert(selfCm.nls.errorSnapingLocate);\r\n        }\r\n      }, function (error) {\r\n        console.log(error);\r\n      });\r\n    } else if (evt.geometry.type === \"polyline\") {\r\n      selfCm.idxLines = selfCm.idxLines + 1\r\n      const nameIdLine = `Polyline_${selfCm.idxLines}`\r\n      const graphic = new Graphic(evt.geometry, symbolDivisionLote, { id: nameIdLine });\r\n      graphicLayerLineaDivision.add(graphic);\r\n      selfCm._populateTableDrawLine(nameIdLine)\r\n      selfCm._addNameToLine(nameIdLine, evt.geometry)\r\n      selfCm.map.addLayer(graphicLayerLineaDivision);\r\n      selfCm.map.setInfoWindowOnClick(true);\r\n      toolbarCm.deactivate();\r\n      selfCm._removeClassActiveButton()\r\n      // desactiva el boton luego de dibujar\r\n    }\r\n    // check exist activeButton class in button\r\n\r\n  },\r\n\r\n  _removeClassActiveButton() {\r\n    if (dojo.query(`#${selfCm.idButtonDrawActive}`).length > 0) {\r\n      dojo.query(`#${selfCm.idButtonDrawActive}`)[0].classList.remove('activeButton')\r\n    }\r\n  },\r\n\r\n  _removeLayerGraphic(layerId) {\r\n    if (selfCm.map.graphicsLayerIds.includes(layerId)) {\r\n      selfCm.map.removeLayer(selfCm.map.getLayer(layerId));\r\n    }\r\n  },\r\n\r\n  _activateTool(evt) {\r\n    selfCm._removeClassActiveButton()\r\n    selfCm.idButtonDrawActive = evt.currentTarget.id\r\n    dojo.query(`#${selfCm.idButtonDrawActive}`)[0].classList.add('activeButton')\r\n    selfCm._activateSnappingByReasignar();\r\n    selfCm.map.setInfoWindowOnClick(false);\r\n    selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n    toolbarCm.activate(Draw[\"POINT\"]);\r\n  },\r\n\r\n  _activateToolAcumulacion(evt) {\r\n    selfCm._removeClassActiveButton()\r\n    selfCm.idButtonDrawActive = evt.currentTarget.id;\r\n    selfCm.cpmAcumulacion = evt.currentTarget.dataset.cpm;\r\n    selfCm.idAcumulacion = evt.currentTarget.parentElement.parentElement.id.split('_')[1];\r\n    dojo.query(`#${selfCm.idButtonDrawActive}`)[0].classList.add('activeButton')\r\n    selfCm.map.setInfoWindowOnClick(false);\r\n    selfCm._activateSnappingByAcumulacion();\r\n    selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n    toolbarCm.activate(Draw[\"POINT\"]);\r\n  },\r\n\r\n  _activateToolLinesDivision(evt) {\r\n    selfCm._removeClassActiveButton()\r\n    selfCm.idButtonDrawActive = evt.currentTarget.id\r\n    dojo.query(`#${selfCm.idButtonDrawActive}`)[0].classList.add('activeButton')\r\n    selfCm.map.setInfoWindowOnClick(false);\r\n    selfCm._activateSnappingByDivision();\r\n    selfCm._removeLayerGraphic(idGraphicLoteCm)\r\n    selfCm._removeLayerGraphic(idGraphicPuntoLote)\r\n    selfCm._removeLayerGraphic(idGraphicFrenteLote)\r\n    selfCm._removeLayerGraphic(idGraphicLabelCodLote)\r\n    selfCm.bodyTbDatosLoteDvApCm.innerHTML = ''\r\n    // selfCm.bodyTbPrediosDvApCm.innerHTML = ''\r\n    graphicLayerPredioByDivison.clear()\r\n    toolbarCm.activate(Draw[\"POLYLINE\"]);\r\n  },\r\n\r\n  _activateSnappingByReasignar() {\r\n    const cflayer = selfCm.layersMap.getLayerInfoById(idLyrCfLotesPun)\r\n    const propertyLayer = new FeatureLayer(cflayer.getUrl(), {\r\n      mode: FeatureLayer.MODE_ONDEMAND,\r\n      outFields: [\"*\"]\r\n    });\r\n    const snapManager = selfCm.map.enableSnapping({\r\n      // alwaysSnap: true,\r\n      // snapKey: keys.CTRL,\r\n      snapPointSymbol: symbolSnapPointCm,\r\n      tolerance: 5,\r\n    });\r\n    // get layerinfo by id of layer to snap\r\n    const layerInfos = [{\r\n      layer: propertyLayer\r\n    }];\r\n\r\n    snapManager.setLayerInfos(layerInfos);\r\n  },\r\n\r\n  _activateSnappingByAcumulacion() {\r\n    let graphicLayerPuntoLote = selfCm.map.getLayer(idGraphicPuntoLote)\r\n    let graphicsLayerInfo = new esri.layers.LayerInfo({\r\n      id: graphicLayerPuntoLote.id, // El id del `GraphicsLayer`\r\n      name: graphicLayerPuntoLote.name, // El nombre del `GraphicsLayer`\r\n      layer: graphicLayerPuntoLote // El `GraphicsLayer` a utilizar\r\n    });\r\n\r\n    // Agregar el `LayerInfo` al mapa y habilitar el snapping\r\n    selfCm.map.enableSnapping({\r\n      layerInfos: [graphicsLayerInfo], // Agregar el `LayerInfo` al mapa\r\n      // alwaysSnap: true,\r\n      snapPointSymbol: symbolSnapPointCm,\r\n      tolerance: 5,\r\n    });\r\n  },\r\n\r\n  _activateSnappingByDivision() {\r\n    let graphicsLayerInfo = new esri.layers.LayerInfo({\r\n      id: graphicLayerLineaDivision.id, // El id del `GraphicsLayer`\r\n      name: graphicLayerLineaDivision.name, // El nombre del `GraphicsLayer`\r\n      layer: graphicLayerLineaDivision // El `GraphicsLayer` a utilizar\r\n    });\r\n\r\n    let cflayer = selfCm.layersMap.getLayerInfoById(idLyrCfLotes)\r\n    let propertyLayer = new FeatureLayer(cflayer.getUrl(), {\r\n      mode: FeatureLayer.MODE_ONDEMAND,\r\n      outFields: [\"*\"]\r\n    });\r\n\r\n    let layerInfos = [{\r\n      layer: propertyLayer\r\n    }, graphicsLayerInfo];\r\n\r\n    // Agregar el `LayerInfo` al mapa y habilitar el snapping\r\n    selfCm.map.enableSnapping({\r\n      layerInfos: layerInfos, // Agregar el `LayerInfo` al mapa\r\n      // alwaysSnap: true,\r\n      snapPointSymbol: symbolSnapPointCm,\r\n      tolerance: 5,\r\n    });\r\n  },\r\n\r\n  // crear una funcion que permita dos poligonos aceptando dos poligonos json como parametros\r\n  // la funcion debe retornar un poligono json\r\n  _unionFeatures(arr) {\r\n    let union = geometryEngine.union(arr);\r\n    return union;\r\n  },\r\n\r\n  _unionFeaturesAcumulation() {\r\n    // Creamos grafico de lote fusionado\r\n    const graphicLayerLoteFusion = new GraphicsLayer({\r\n      id: idGraphicLoteCm\r\n    });\r\n    // let arr = []\r\n    // const polygonGeometry = selfCm.currentLotsRows[0].geometry;\r\n    const arr = selfCm.currentLotsRows.map((i) => i.geometry);\r\n    // for (let i of selfCm.currentLotsRows) {\r\n    //   arr.push(i.geometry)\r\n    // }\r\n    const response = selfCm._unionFeatures(arr);\r\n    const graphic = new Graphic(response, symbolFusionLote);\r\n\r\n    graphicLayerLoteFusion.add(graphic);\r\n    selfCm.map.addLayer(graphicLayerLoteFusion);\r\n    selfCm.map.setExtent(graphic._extent.expand(1.5), true);\r\n    return [response];\r\n  },\r\n\r\n  _ApplyAcumulationLotsRefactor() {\r\n    selfCm.busyIndicator.show();\r\n    selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n    selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n    selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n    selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n    selfCm._removeLayerGraphic(idGraphicLoteDeleteCm);\r\n    selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n\r\n    if (!selfCm.lotesQuery) {\r\n      selfCm._showMessage(selfCm.nls.errorGetLand, 'warning');\r\n      selfCm.busyIndicator.hide();\r\n      return\r\n    }\r\n\r\n    return selfCm._getOriginalLots(selfCm.lotesQuery)\r\n      .then(originLots => {\r\n        const geomLoteAcumulation = selfCm._unionFeaturesAcumulation();\r\n        return selfCm._getMaxCodLot(geomLoteAcumulation);\r\n      })\r\n      .then(proprsLot => {\r\n        selfCm._ordenarPoligonosNorteSur(\r\n          proprsLot.polygons,\r\n          parseInt(proprsLot.maxCodLote),\r\n          selfCm.bodyTbDatosLoteFsApCm\r\n        );\r\n        selfCm.map.setExtent(proprsLot.polygons[0].getExtent().expand(1.5), true);\r\n        return selfCm._addGraphicsPointLotsAndArancel();\r\n      })\r\n      .then(() => {\r\n        selfCm._populateTablePredio(selfCm.bodyTbPrediosFsApCm, selfCm._activateToolAcumulacion)\r\n        selfCm.busyIndicator.hide();\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(error.message, type = \"error\")\r\n      })\r\n  },\r\n\r\n  _getMidpoint(polyline) {\r\n    let length = geometryEngine.geodesicLength(polyline, \"meters\");\r\n    let midpoint = geometryEngine.geodesicDensify(polyline, length / 2, \"meters\").getPoint(0, 0);\r\n    return midpoint;\r\n  },\r\n\r\n  _findMidpoint(polyline) {\r\n    let lengthPolylineChunk = geometryEngine.geodesicLength(polyline, \"meters\")\r\n    let line = turf.lineString(polyline.paths[0]);\r\n    let options = { units: 'meters' };\r\n    let along = turf.along(line, lengthPolylineChunk / 2, options);\r\n    return along\r\n  },\r\n\r\n  // funcion que recibe una polilinea con muchas partes y retorna la parte mas larga como una polilinea\r\n  _getLongestPolyline(polyline) {\r\n    let paths = polyline.paths\r\n    let longestPath = 0\r\n    let response = null;\r\n    for (let path of paths) {\r\n      let polylineChunk = new Polyline({\r\n        paths: [path],\r\n        spatialReference: { wkid: 4326 }\r\n      });\r\n      let lengthPolylineChunk = geometryEngine.geodesicLength(polylineChunk, \"meters\")\r\n      if (lengthPolylineChunk > longestPath) {\r\n        longestPath = lengthPolylineChunk\r\n        response = polylineChunk\r\n      }\r\n    }\r\n    return response\r\n  },\r\n\r\n  // --------------------------------------------------------------\r\n  // SUBDIVISION DE LOTES\r\n  // function that allows dividing a polygon from cutting lines, the parameters will be a polygon and several lines in json format\r\n  // the function must return a polygon json\r\n  // --------------------------------------------------------------\r\n  _dividePolygon(poly, lines) {\r\n    const divide = geometryEngine.cut(poly, lines);\r\n    const response = [];\r\n    for (let item of divide) {\r\n      item.rings.map((i) => {\r\n        const simplePolygon = new Polygon({\r\n          rings: [i],\r\n          spatialReference: item.spatialReference\r\n        });\r\n        response.push(simplePolygon);\r\n      });\r\n    };\r\n    return response;\r\n  },\r\n\r\n  _populateTableDrawLine(idLine) {\r\n    let row = `<td class=\"center-aligned\">${selfCm.idxLines}</td>\r\n              <td contenteditable=\"true\" id=\"${idLine}_name\">${idLine}</td>\r\n              <td class=\"center-aligned\">\r\n                <span id=\"${idLine}_ext\"><i class=\"fas fa-search\"></i></span>\r\n              </td>\r\n              <td class=\"center-aligned\">\r\n                <span id=\"${idLine}_del\" style=\"color: #FF5722;\"><i class=\"far fa-trash-alt\"></i></span>\r\n              </td>`\r\n    let tr = dojo.create('tr');\r\n    tr.id = idLine;\r\n    tr.innerHTML = row;\r\n    tr.style.cursor = \"pointer\";\r\n    selfCm.bodyTbLinesDvApCm.appendChild(tr)\r\n    dojo.query(`#${idLine}_del`).on('click', selfCm._deleteRowLine);\r\n    dojo.query(`#${idLine}_ext`).on('click', selfCm._zoonToLineDivision);\r\n    dojo.query(`#${idLine}_name`).on('input', selfCm._editaNameLineDivision);\r\n  },\r\n\r\n  _deleteRowLine(evt) {\r\n    let id = evt.currentTarget.id.replace('_del', '');\r\n    let elem = dojo.query(`#${id}`);\r\n    let graphic = graphicLayerLineaDivision.graphics.filter(item => item.attributes.id == id);\r\n    graphicLayerLineaDivision.remove(graphic[0])\r\n    let graphicLabel = graphicLayerLabelLineaDivision.graphics.filter(item => item.attributes.id == id);\r\n    graphicLayerLabelLineaDivision.remove(graphicLabel[0])\r\n    selfCm._removeLayerGraphic(idGraphicLoteCm)\r\n    selfCm._removeLayerGraphic(idGraphicPuntoLote)\r\n    selfCm._removeLayerGraphic(idGraphicFrenteLote)\r\n    selfCm._removeLayerGraphic(idGraphicLabelCodLote)\r\n    graphicLayerPredioByDivison.clear()\r\n    elem[0].parentNode.removeChild(elem[0]);\r\n  },\r\n\r\n  _addNameToLine(name, polylineGeom) {\r\n    let polylineGeomUtm = webMercatorUtils.webMercatorToGeographic(polylineGeom)\r\n    let midPoint = selfCm._findMidpoint(polylineGeomUtm)\r\n\r\n    let pointLabel = new Point({\r\n      x: midPoint.geometry.coordinates[0],\r\n      y: midPoint.geometry.coordinates[1],\r\n      spatialReference: { wkid: 4326 }\r\n    })\r\n\r\n    let font = new Font(\"15px\", Font.STYLE_NORMAL, Font.VARIANT_NORMAL, Font.WEIGHT_BOLD, \"Arial\");\r\n    let txtSym = new TextSymbol(name, font, new Color([250, 0, 0, 0.9]));\r\n    txtSym.setOffset(15, 15).setAlign(TextSymbol.ALIGN_END)\r\n    txtSym.setHaloColor(new Color([255, 255, 255]));\r\n    txtSym.setHaloSize(1.5);\r\n    let graphicLabel = new Graphic(pointLabel, txtSym, { id: name });\r\n\r\n    // graphicLayer.add(graphic);\r\n    graphicLayerLabelLineaDivision.add(graphicLabel);\r\n  },\r\n\r\n  _zoonToLineDivision(evt) {\r\n    let id = evt.currentTarget.id.replace('_ext', '');\r\n    let graphic = graphicLayerLabelLineaDivision.graphics.filter(item => item.attributes.id == id);\r\n    selfCm.map.setExtent(graphic[0]._extent, true);\r\n  },\r\n\r\n  _editaNameLineDivision(evt) {\r\n    let id = evt.currentTarget.id.replace('_name', '');\r\n    let graphic = graphicLayerLabelLineaDivision.graphics.filter(item => item.attributes.id == id)\r\n    graphic[0].symbol.text = evt.currentTarget.innerText;\r\n    graphicLayerLabelLineaDivision.refresh()\r\n  },\r\n\r\n  _populateTablePredio(bodyTable, drawFunction) {\r\n    bodyTable.innerHTML = ''\r\n    selfCm.responseRequests.forEach((predio, idx) => {\r\n      const tr = dojo.create('tr');\r\n      tr.id = `predio_${predio['id']}`;\r\n      const row = `<td class=\"center-aligned\">${idx + 1}</td>\r\n                  <td>${predio['address']}</td>\r\n                  <td class=\"center-aligned\">\r\n                   <span id=\"${tr.id}_draw\" data-cpm=${predio['cpm']}><i class=\"fas fa-map-marker-alt\"></i></span>\r\n                  </td>`\r\n      tr.innerHTML = row;\r\n      tr.style.cursor = \"pointer\";\r\n      bodyTable.appendChild(tr)\r\n      dojo.query(`#${tr.id}_draw`).on('click', drawFunction)\r\n    });\r\n  },\r\n\r\n  _activateSnappingPrediosByDivision(graphiclayer) {\r\n    let graphicsLayerInfo = new esri.layers.LayerInfo({\r\n      id: graphiclayer.id, // El id del `GraphicsLayer`\r\n      name: graphiclayer.name, // El nombre del `GraphicsLayer`\r\n      layer: graphiclayer // El `GraphicsLayer` a utilizar\r\n    });\r\n\r\n    // Agregar el `LayerInfo` al mapa y habilitar el snapping\r\n    selfCm.map.enableSnapping({\r\n      layerInfos: [graphicsLayerInfo], // Agregar el `LayerInfo` al mapa\r\n      // alwaysSnap: true,\r\n      snapPointSymbol: symbolSnapPointCm,\r\n      tolerance: 5,\r\n    });\r\n  },\r\n\r\n  _activateToolPrediosByDivision(evt) {\r\n    selfCm._removeClassActiveButton()\r\n    selfCm.idButtonDrawActive = evt.currentTarget.id\r\n    dojo.query(`#${selfCm.idButtonDrawActive}`)[0].classList.add('activeButton')\r\n    // const id = evt.currentTarget.id\r\n    selfCm.cpmPredioDivision = evt.currentTarget.dataset.cpm;\r\n    selfCm.idPredioDivision = evt.currentTarget.parentElement.parentElement.id;\r\n    // console.log(selfCm.idPredioDivision);\r\n    const graphic = graphicLayerPredioByDivison.graphics.filter(item => item.attributes.id === selfCm.idPredioDivision);\r\n    graphicLayerPredioByDivison.remove(graphic[0])\r\n    selfCm.map.setInfoWindowOnClick(false);\r\n    const graphicLayerPuntoLote = selfCm.map.getLayer(idGraphicPuntoLote)\r\n    selfCm._activateSnappingPrediosByDivision(graphicLayerPuntoLote);\r\n    toolbarCm.activate(Draw[\"POINT\"]);\r\n  },\r\n\r\n  _changeValueCodLote(evt) {\r\n    const selectedValue = evt.target.value;\r\n    const currentSelectId = evt.target.id;\r\n    const id = evt.target.id.split('_')[1]\r\n    // const idx = evt.target.selectedIndex\r\n    // const cod_lote = evt.target.value\r\n    const lyr = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n    const graphicSelected = lyr.graphics.filter(item => item.attributes.id == `label_${id}`)\r\n    graphicSelected[0].symbol.text = selectedValue\r\n    const selects = dojo.query('.codLoteSelectDvCls');\r\n    selects.forEach(select => {\r\n      if (select.id !== currentSelectId && select.value === selectedValue) {\r\n        select.value = '';\r\n        const graphicNotSelected = lyr.graphics.filter(item => item.attributes.id == `label_${select.id.split('_')[1]}`)\r\n        graphicNotSelected[0].symbol.text = ''\r\n      }\r\n      lyr.refresh()\r\n    });\r\n  },\r\n\r\n  _changeLotUrb(evt) {\r\n    const selectedValue = evt.target.value;\r\n    const currentSelectId = evt.target.id;\r\n    const selects = dojo.query('.loteUrbSelectDvCls');\r\n    const lyr = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n    // const graphicSelected = lyr.graphics.filter(item => item.attributes.id == `label_${id}`)\r\n    selects.forEach(select => {\r\n      if (select.id !== currentSelectId && select.value === selectedValue) {\r\n        select.value = '';\r\n        const graphicNotSelected = lyr.graphics.filter(item => item.attributes.id == `label_${select.id.split('_')[1]}`)\r\n        graphicNotSelected[0].attributes.lot_urb = ''\r\n      }\r\n    });\r\n  },\r\n\r\n  _centerAtLabelCodLoteDivision(evt) {\r\n    let id = evt.currentTarget.id\r\n    let lyr = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n    let graphicSelected = lyr.graphics.filter(item => item.attributes.id == id)\r\n    console.log(graphicSelected[0].geometry)\r\n    selfCm.map.centerAndZoom(graphicSelected[0].geometry)\r\n  },\r\n\r\n  _editLoteUrbanoDivision(evt) {\r\n    const id = evt.target.id.replace('loteUrbanoDv_', '');\r\n    const lyr = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n    const graphic = lyr.graphics.filter(item => item.attributes.id == `label_${id}`)\r\n    graphic[0].attributes.lot_urb = evt.target.selectedOptions[0].value\r\n    lyr.refresh()\r\n  },\r\n\r\n  _buildDataLoteTable(tableBody, predios) {\r\n    tableBody.innerHTML = ''\r\n    predios.forEach((predio, index) => {\r\n      const row = document.createElement('tr');\r\n\r\n      // celda de índice\r\n      const indexCell = document.createElement('td');\r\n      indexCell.className = \"center-aligned\"\r\n      indexCell.textContent = predio.num;\r\n      row.appendChild(indexCell);\r\n\r\n      // celda de codigo de predio\r\n      const codigoCell = document.createElement('td');\r\n      const select = document.createElement('select');\r\n      select.className = \"codLoteSelectDvCls\"\r\n      select.id = `codLoteSelectDv_${predio.num}`\r\n\r\n      const optionDisabled = document.createElement('option');\r\n      optionDisabled.value = '';\r\n      optionDisabled.textContent = '---';\r\n      optionDisabled.disabled = true;\r\n      select.appendChild(optionDisabled);\r\n      predios.forEach(p => {\r\n        const option = document.createElement('option');\r\n        option.value = p.cod_lote;\r\n        option.textContent = p.cod_lote;\r\n        if (p.cod_lote === predio.cod_lote) {\r\n          option.selected = true;\r\n        }\r\n        select.appendChild(option);\r\n      });\r\n\r\n      codigoCell.appendChild(select);\r\n      row.appendChild(codigoCell);\r\n\r\n\r\n      const loteUrbCell = document.createElement('td');\r\n      const loteUrbSelect = document.createElement('select');\r\n      loteUrbSelect.className = \"loteUrbSelectDvCls\"\r\n      loteUrbSelect.id = `loteUrbanoDv_${predio.num}`\r\n\r\n      const optionDisabledLotUrb = optionDisabled.cloneNode(true)\r\n      loteUrbSelect.appendChild(optionDisabledLotUrb);\r\n\r\n      selfCm.responseRequests.forEach((request, idx) => {\r\n        const option = document.createElement('option');\r\n        option.value = request.urbanLotNumber;\r\n        option.textContent = request.urbanLotNumber;\r\n        loteUrbSelect.appendChild(option);\r\n        if (predio.num == idx + 1) {\r\n          option.selected = true;\r\n        }\r\n        // selected option by index predio.num\r\n      })\r\n      loteUrbCell.appendChild(loteUrbSelect);\r\n      loteUrbCell.className = \"loteUrbanoDvCls\"\r\n      row.appendChild(loteUrbCell);\r\n\r\n      const locationMarker = document.createElement('td');\r\n      locationMarker.id = predio.id\r\n      locationMarker.className = \"center-aligned\"\r\n      locationMarker.innerHTML = `<span class=\"locationLabelLoteDvCls\" id=\"${predio.id}\"><i class=\"fas fa-search\"></i></span>`\r\n      row.appendChild(locationMarker);\r\n      tableBody.appendChild(row);\r\n      // dojo.query(`#${predio.id}`).on('click', selfCm._centerAtLabelCodLoteDivision)\r\n\r\n    });\r\n    dojo.query('.codLoteSelectDvCls').on('change', selfCm._changeValueCodLote)\r\n    dojo.query('.loteUrbSelectDvCls').on('change', selfCm._changeLotUrb)\r\n    dojo.query('.locationLabelLoteDvCls').on('click', selfCm._centerAtLabelCodLoteDivision)\r\n    dojo.query('.loteUrbanoDvCls').on('change', selfCm._editLoteUrbanoDivision);\r\n\r\n  },\r\n\r\n  _ordenarPoligonosNorteSur(poligonos, idx, bodyTable) {\r\n    // Obtener la coordenada más al norte de cada polígono\r\n    const coordenadasNorte = poligonos.map(poligono => {\r\n      const extent = poligono.getExtent();\r\n      return extent.ymax;\r\n    });\r\n\r\n    // Ordenar los polígonos en base a la coordenada más al norte\r\n    const poligonosOrdenados = poligonos.slice().sort((a, b) => {\r\n      const coordenadaNorteA = coordenadasNorte[poligonos.indexOf(a)];\r\n      const coordenadaNorteB = coordenadasNorte[poligonos.indexOf(b)];\r\n      return coordenadaNorteB - coordenadaNorteA; // Ordenar de norte a sur\r\n    });\r\n\r\n    const graphicLayerLabelCodLoteDivision = new GraphicsLayer({\r\n      id: idGraphicLabelCodLote,\r\n    });\r\n\r\n    const font = new Font(\"20px\", Font.STYLE_NORMAL, Font.VARIANT_NORMAL, Font.WEIGHT_BOLD, \"Arial\");\r\n\r\n    const dataLoteTable = []\r\n\r\n    // Paso 5: Agregar número de polígono a propiedad \"order\"\r\n    poligonosOrdenados.forEach((poligono, index) => {\r\n\r\n      const polygon = turf.polygon(poligono.rings);\r\n      let center = turf.pointOnFeature(polygon);\r\n\r\n      const pointLabel = new Point({\r\n        x: center.geometry.coordinates[0],\r\n        y: center.geometry.coordinates[1],\r\n        spatialReference: { wkid: 4326 }\r\n      })\r\n      const cod_lote = selfCm._zfill(idx + 1, 3)\r\n      const txtSym = new TextSymbol(cod_lote, font, new Color([250, 0, 0, 1]));\r\n      txtSym.setColor(new esri.Color([0, 0, 0, 1])); // color blanco\r\n      txtSym.setSize(\"12pt\");\r\n      txtSym.setHaloColor(new esri.Color([255, 255, 255, 1]));\r\n      txtSym.setHaloSize(2);\r\n      const idGraphic = `label_${index + 1}`\r\n      const graphicLabel = new Graphic(\r\n        pointLabel,\r\n        txtSym,\r\n        {\r\n          id: idGraphic,\r\n          lot_urb: selfCm.responseRequests[index].urbanLotNumber,\r\n          clase: 'labelCodLoteDivision'\r\n        });\r\n      graphicLayerLabelCodLoteDivision.add(graphicLabel);\r\n      dataLoteTable.push({ num: index + 1, id: idGraphic, cod_lote: cod_lote })\r\n      idx = idx + 1\r\n      // editToolbar.activate(Edit.MOVE, graphicLabel, {allowAddVertices: false, allowDeleteVertices: false});\r\n    });\r\n\r\n\r\n    // Completar table\r\n    selfCm._buildDataLoteTable(bodyTable, dataLoteTable)\r\n    selfCm.map.addLayer(graphicLayerLabelCodLoteDivision)\r\n  },\r\n\r\n  _enableEditingLabelsLotesDivision(evt) {\r\n    if (evt && evt.graphic && evt.graphic.attributes && evt.graphic.attributes.clase == 'labelCodLoteDivision') {\r\n      selfCm.map.setInfoWindowOnClick(false)\r\n      selfCm.editToolbar.activate(Edit.MOVE, evt.graphic);\r\n    } else {\r\n      selfCm.editToolbar.deactivate()\r\n    }\r\n  },\r\n\r\n  _zfill(num, len) {\r\n    return (Array(len).fill('0').join('') + num).slice(-len);\r\n  },\r\n\r\n  _getMaxCodLot(polygonos) {\r\n    const deferred = new Deferred();\r\n    const estadisticaDef = new StatisticDefinition();\r\n    estadisticaDef.statisticType = 'max';\r\n    estadisticaDef.onStatisticField = _COD_LOTE_FIELD;\r\n    estadisticaDef.outStatisticFieldName = \"resultado\";\r\n\r\n    const query = new Query();\r\n    query.where = selfCm.arancel;\r\n    query.outFields = [_COD_LOTE_FIELD];\r\n    query.returnGeometry = false;\r\n    query.outStatistics = [estadisticaDef];\r\n\r\n    const queryTask = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl());\r\n    queryTask.execute(query)\r\n      .then(result => {\r\n        if (result.features.length > 0) {\r\n          const maxCodLote = result.features[0].attributes.resultado;\r\n          return deferred.resolve({\r\n            maxCodLote: maxCodLote,\r\n            polygons: polygonos\r\n          });\r\n        } else {\r\n          return deferred.reject('No se encontraron lotes');\r\n        }\r\n      });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _getOriginalLots(query) {\r\n    const selfCm = this;\r\n    const deferred = new Deferred();\r\n    const params = {\r\n      where: query,\r\n      returnGeometry: true,\r\n      outFields: \"*\",\r\n      outSR: 4326,\r\n      f: \"json\"\r\n    };\r\n\r\n    const requestOptions = {\r\n      url: `${selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl()}/query`,\r\n      content: params,\r\n      handleAs: \"json\",\r\n      callbackParamName: \"callback\"\r\n    };\r\n\r\n    esriRequest(requestOptions, { usePost: true })\r\n      .then((response) => {\r\n        selfCm.currentLotsRows = response.features;\r\n        selfCm.currentLotsRows.forEach(row => {\r\n          row.geometry = new Polygon({\r\n            rings: row.geometry.rings,\r\n            spatialReference: { wkid: 4326 }\r\n          });\r\n        });\r\n        return deferred.resolve(selfCm.currentLotsRows);\r\n      })\r\n      .catch(err => deferred.reject(err));\r\n\r\n    return deferred.promise;\r\n  },\r\n\r\n  _getPolylinesDrawn() {\r\n    const arr = []\r\n    for (let i of graphicLayerLineaDivision.graphics) {\r\n      arr.push(i.geometry);\r\n    }\r\n    const unionGraphicLayerLineaDivision = selfCm._unionFeatures(arr);\r\n\r\n    let lineGeometry = new Polyline({\r\n      paths: unionGraphicLayerLineaDivision.paths,\r\n      spatialReference: { wkid: 102100 }\r\n    });\r\n    lineGeometry = esri.geometry.webMercatorToGeographic(lineGeometry);\r\n    return lineGeometry;\r\n  },\r\n\r\n  _divideLotsByLines() {\r\n    // const geomLote = results.features[0].geometry\r\n    if (selfCm.currentLotsRows.length == 0) {\r\n      selfCm._showMessage(selfCm.nls.errorLotQuery, 'warning');\r\n      return;\r\n    }\r\n    const lineGeometry = selfCm._getPolylinesDrawn();\r\n\r\n    const polygonGeometry = selfCm.currentLotsRows[0].geometry;\r\n\r\n    const geomLoteDivided = selfCm._dividePolygon(polygonGeometry, lineGeometry)\r\n\r\n    if (geomLoteDivided.length == 0) {\r\n      //  genera un mensage show indicando que no se encontro el lote\r\n      throw new Error(selfCm.nls.errorDivideLot);\r\n      // selfCm._showMessage(selfCm.nls.errorDivideLot, type = 'error');\r\n      // return;\r\n    }\r\n\r\n    if (geomLoteDivided.length != selfCm.responseRequests.length) {\r\n      throw new Error(`No se puede proceder con la operación\\nLa cantidad de lotes generados (${geomLoteDivided.length}) es diferente a lo solicitado (${selfCm.responseRequests.length})`);\r\n      // selfCm._showMessage(`No se puede proceder con la operación\\nSe han generado más lotes (${geomLoteDivided.length}) de los solicitados (${selfCm.responseRequests.length})`, type = 'error');\r\n      // return;\r\n    }\r\n\r\n    // Creamos grafico de lote fusionado\r\n    const graphicLayerLoteDivision = new GraphicsLayer({\r\n      id: idGraphicLoteCm\r\n    });\r\n\r\n    // iterar sobre los graficos de la capa de division y agregar cada uno a graphicLayerLoteDivision\r\n    for (let i of geomLoteDivided) {\r\n      const lote = new Graphic(i, symbolFusionLote)\r\n\r\n      // agregar el grafico directo al mapa\r\n      graphicLayerLoteDivision.add(lote);\r\n    }\r\n    selfCm.map.addLayer(graphicLayerLoteDivision);\r\n    return geomLoteDivided;\r\n  },\r\n\r\n  _addGraphicsPointLotsAndArancel() {\r\n    const deferred = new Deferred();\r\n    const query = new Query();\r\n    query.where = selfCm.arancel\r\n    // especificar los campos devueltos\r\n    query.outFields = [_UBIGEO_FIELD, _F_MZN_FIELD];\r\n    query.returnGeometry = true\r\n    // query with order by fields\r\n    query.orderByFields = [_F_MZN_FIELD];\r\n    const qTask = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrCfArancel).getUrl());\r\n    qTask.execute(query, function (results) {\r\n      // Creamos grafico de punto lote\r\n      const graphicLayerPuntoLote = new GraphicsLayer({\r\n        id: idGraphicPuntoLote\r\n      });\r\n      // creamos grafico de frente de lote\r\n      const graphicLayerFrenteLote = new GraphicsLayer({\r\n        id: idGraphicFrenteLote\r\n      });\r\n      // let graphicLayerPredio = new GraphicsLayer({\r\n      //   id: idGraphicPredioCm\r\n      // });\r\n      const graphicLoteDivision = selfCm.map.getLayer(idGraphicLoteCm)\r\n      if (!graphicLoteDivision) {\r\n        return;\r\n      }\r\n      const frentes = {}\r\n      for (let row of results.features) {\r\n        for (let graphic of graphicLoteDivision.graphics) {\r\n          const isItc = geometryEngine.intersects(row.geometry, graphic.geometry)\r\n          if (!isItc) {\r\n            continue\r\n          }\r\n          // saber si un key esta dentro del objeto frentes\r\n          if (!frentes.hasOwnProperty(row.attributes[_F_MZN_FIELD])) {\r\n            frentes[row.attributes[_F_MZN_FIELD]] = row.geometry;\r\n          }\r\n          else {\r\n            // check if row.geometry share a commin coordinate with frentes\r\n            const unionFrentes = geometryEngine.union([frentes[row.attributes[_F_MZN_FIELD]], row.geometry])\r\n            frentes[row.attributes[_F_MZN_FIELD]] = unionFrentes;\r\n          }\r\n        }\r\n      }\r\n\r\n      for (let lote of graphicLoteDivision.graphics) {\r\n        for (let idx in frentes) {\r\n          const idItcFrentesByLotes = geometryEngine.intersects(lote.geometry, frentes[idx])\r\n          if (!idItcFrentesByLotes) {\r\n            continue\r\n          }\r\n          const itcFrentesByLotes = geometryEngine.intersect(frentes[idx], lote.geometry)\r\n          console.log(itcFrentesByLotes)\r\n          for (let row of itcFrentesByLotes.paths) {\r\n            const polylineChunk = new Polyline({\r\n              paths: [row],\r\n              spatialReference: itcFrentesByLotes.spatialReference\r\n            });\r\n            // add frentes to graphicLayerFrenteLote\r\n            const symbolFrenteLote = new SimpleLineSymbol(\r\n              SimpleLineSymbol.STYLE_SOLID,\r\n              new Color(\r\n                [\r\n                  Math.floor(Math.random() * 255),\r\n                  Math.floor(Math.random() * 255),\r\n                  Math.floor(Math.random() * 255)]),\r\n              5\r\n            )\r\n            const frente = new Graphic(polylineChunk, symbolFrenteLote)\r\n            graphicLayerFrenteLote.add(frente);\r\n\r\n            const puntoLoteTurf = selfCm._findMidpoint(polylineChunk)\r\n\r\n            // crear un punto en el mapa\r\n            const puntoLote = new Point({\r\n              x: puntoLoteTurf.geometry.coordinates[0],\r\n              y: puntoLoteTurf.geometry.coordinates[1],\r\n              spatialReference: { wkid: 4326 }\r\n            })\r\n\r\n            // Agregar el punto p al mapa          \r\n            const puntoLoteGraphic = new Graphic(puntoLote, symbolPuntoLote)\r\n            graphicLayerPuntoLote.add(puntoLoteGraphic)\r\n          };\r\n        }\r\n      }\r\n      selfCm.map.addLayer(graphicLayerFrenteLote);\r\n      selfCm.map.addLayer(graphicLayerPuntoLote);\r\n      selfCm._removeLayerGraphic(idGraphicPredioByDivison);\r\n      selfCm.map.addLayer(graphicLayerPredioByDivison)\r\n      return deferred.resolve();\r\n    });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _ApplyDivideLotesRefactor() {\r\n    selfCm.busyIndicator.show();\r\n    selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n    selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n    selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n    selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n    selfCm._removeLayerGraphic(idGraphicLoteDeleteCm);\r\n    selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n\r\n    // Union all graphics of graphicslayer\r\n    if (graphicLayerLineaDivision.graphics.length == 0) {\r\n      selfCm._showMessage(selfCm.nls.emptyLineSubdivision, 'warning');\r\n      selfCm.busyIndicator.hide();\r\n      return\r\n    }\r\n    if (!selfCm.lotesQuery) {\r\n      selfCm._showMessage(selfCm.nls.errorGetLand, 'warning');\r\n      selfCm.busyIndicator.hide();\r\n      return\r\n    }\r\n    return selfCm._getOriginalLots(selfCm.lotesQuery)\r\n      .then(originLots => {\r\n        const geomLoteDivided = selfCm._divideLotsByLines();\r\n        return selfCm._getMaxCodLot(geomLoteDivided);\r\n      })\r\n      .then(proprsLot => {\r\n        selfCm._ordenarPoligonosNorteSur(\r\n          proprsLot.polygons,\r\n          parseInt(proprsLot.maxCodLote),\r\n          selfCm.bodyTbDatosLoteDvApCm\r\n        )\r\n        selfCm.map.reorderLayer(selfCm.map.getLayer(idGraphicLoteCm), selfCm.map.graphicsLayerIds.indexOf(graphicLayerLabelLineaDivision.id));\r\n        selfCm.map.setExtent(selfCm.currentLotsRows[0].geometry.getExtent().expand(1.5), true);\r\n        return selfCm._addGraphicsPointLotsAndArancel();\r\n      })\r\n      .then(() => {\r\n        selfCm._populateTablePredio(selfCm.bodyTbPrediosDvApCm, selfCm._activateToolPrediosByDivision)\r\n        selfCm.busyIndicator.hide();\r\n      })\r\n      .catch(error => {\r\n        // console.log(error)\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(error.message, type = \"error\")\r\n      })\r\n  },\r\n\r\n  // ----------------------------------------------------------------------------------------------\r\n  // GeoprocessingServices\r\n  // ----------------------------------------------------------------------------------------------\r\n  _executeReasignacionGpService(evt) {\r\n    if (!selfCm.xy.length) {\r\n      selfCm._showMessage(selfCm.nls.emptyNewLocation, type = \"error\")\r\n      return\r\n    }\r\n    selfCm._showMessageConfirm().then(function (result) {\r\n      if (result) {\r\n        let params = {\r\n          \"cod_pred\": selfCm.uniqueCodeLands,\r\n          \"ubigeo\": paramsApp['ubigeo'],\r\n          \"geometry\": selfCm.xy,\r\n          \"user\": paramsApp['username'],\r\n          \"id_solicitud\": selfCm.codRequestsCm\r\n        }\r\n\r\n        // revisar si alguna propiedad tiene valor nulo o indefinido\r\n        for (let key in params) {\r\n          if (params[key] == null || params[key] == undefined) {\r\n            selfCm._showMessage(`Debe especificar el valor de ${key}`, type = \"error\");\r\n            return\r\n          }\r\n        }\r\n        selfCm._executeGPService(selfCm.config.reasignacionUrl, params)\r\n      }\r\n      else {\r\n        return\r\n      }\r\n    })\r\n  },\r\n\r\n  _executeAcumulacionGpService(evt) {\r\n    if (!selfCm.lotesQuery) {\r\n      selfCm._showMessage(selfCm.nls.errorGetLand, 'warning');\r\n      selfCm.busyIndicator.hide();\r\n      return\r\n    }\r\n    if (!selfCm.map.getLayer(idGraphicLoteCm)) {\r\n      selfCm._showMessage(selfCm.nls.emptyPreviewAccumulation, type = \"error\")\r\n      return\r\n    }\r\n\r\n    if (!selfCm.xy.length) {\r\n      selfCm._showMessage(selfCm.nls.emptyNewLand, type = \"error\")\r\n      return\r\n    }\r\n    const labelCodLotesLayer = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n\r\n    selfCm._showMessageConfirm().then(function (result) {\r\n      selfCm.busyIndicator.show();\r\n      selfCm._addWarningMessageExecute()\r\n      if (result) {\r\n        const labelCodLotesLayerGraphic = labelCodLotesLayer.graphics;\r\n\r\n        Acumulation.codRequests = selfCm.codRequestsCm;\r\n        Acumulation.currentLotsRows = selfCm.currentLotsRows;\r\n\r\n        Acumulation.attributes = labelCodLotesLayerGraphic.map((i) => {\r\n          return {\r\n            codLot: i.symbol.text,\r\n            lotUrb: i.attributes.lot_urb,\r\n            coords: [\r\n              i.geometry.x,\r\n              i.geometry.y\r\n            ]\r\n          }\r\n        });\r\n\r\n        Acumulation.newPointLotsGraphics = selfCm.map.getLayer(idGraphicPuntoLote).graphics;\r\n        Acumulation.newLandsGraphics = selfCm.map.getLayer(idGraphicPredioCm).graphics;\r\n        Acumulation.newLandsGraphics[0]['codPre'] = selfCm.cpmAcumulacion;\r\n        Acumulation.newLandsGraphics[0]['id'] = selfCm.idAcumulacion;\r\n        Acumulation.landUrl = selfCm.layersMap.getLayerInfoById(idLyrCfPredios).getUrl();\r\n        Acumulation.pointLotUrl = selfCm.layersMap.getLayerInfoById(idLyrCfLotesPun).getUrl();\r\n        Acumulation.lotUrl = selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl();\r\n        Acumulation.arancelUrl = selfCm.layersMap.getLayerInfoById(idLyrCfArancel).getUrl();\r\n        Acumulation.blockUrl = selfCm.layersMap.getLayerInfoById(idLyrCfManzanaUrb).getUrl();\r\n        Acumulation.cadastralBlockUrl = selfCm.layersMap.getLayerInfoById(idLyrCfManzana).getUrl();\r\n        Acumulation.config = selfCm.config;\r\n        Acumulation.lotGraphic = selfCm.map.getLayer(idGraphicLoteCm).graphics;\r\n        Acumulation.ubigeo = paramsApp['ubigeo'];\r\n        Acumulation.user = paramsApp['username'];\r\n        Acumulation.caseRequest = selfCm.case;\r\n        Acumulation.queryBlock = selfCm.arancel;\r\n\r\n\r\n        Acumulation.executeAcumulation()\r\n          .then(response => {\r\n            selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n            selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n            selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n            selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n            selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n            selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(false)\r\n            selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(true)\r\n            selfCm._FormResult(selfCm.codRequestsCm, selfCm.caseDescription);\r\n            selfCm.busyIndicator.hide();\r\n            selfCm._removeWarningMessageExecute()\r\n            selfCm._showMessage(selfCm.nls.successProcess, type = \"success\");\r\n          })\r\n          .catch(error => {\r\n            console.log(error)\r\n            selfCm._removeWarningMessageExecute()\r\n            selfCm._showMessage(error, type = \"error\");\r\n            selfCm.busyIndicator.hide();\r\n          })\r\n      }\r\n      else {\r\n        selfCm.busyIndicator.hide();\r\n        return\r\n      }\r\n    })\r\n  },\r\n\r\n  _executeSubdivisionGpService(evt) {\r\n\r\n    const layerLote = selfCm.map.getLayer(idGraphicLoteCm)\r\n\r\n    if (!selfCm.lotesQuery) {\r\n      selfCm._showMessage(selfCm.nls.errorGetLand, 'warning');\r\n      selfCm.busyIndicator.hide();\r\n      return\r\n    }\r\n\r\n    if (!layerLote) {\r\n      selfCm._showMessage(selfCm.nls.emptyPreviewSubdivision, type = \"error\")\r\n      return\r\n    }\r\n\r\n    // Check if all labels have a value\r\n    const labelCodLotesLayer = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n    for (let pred of labelCodLotesLayer.graphics) {\r\n      if (!pred.symbol.text) {\r\n        selfCm._showMessage(selfCm.nls.emptyLotCodeSubdivision, type = \"error\")\r\n        return\r\n      }\r\n      if (!pred.attributes.lot_urb || pred.attributes.lot_urb === \"...\") {\r\n        selfCm._showMessage(selfCm.nls.emptyUrbanLotSubdivision, type = \"error\")\r\n        return\r\n      }\r\n    }\r\n\r\n    if (graphicLayerPredioByDivison.graphics.length != layerLote.graphics.length) {\r\n      selfCm._showMessage(selfCm.nls.emptyGraphicLandSubdivision, type = \"error\")\r\n      return\r\n    }\r\n    // Check if all lots have a land\r\n    const checkLotsWithinLands = UtilityCase.checkLotsWithinLands(layerLote.graphics, graphicLayerPredioByDivison.graphics)\r\n    if (!checkLotsWithinLands) {\r\n      selfCm._showMessage(selfCm.nls.emptyLandResultSubdivision, type = \"error\")\r\n      return\r\n    }\r\n\r\n    selfCm._showMessageConfirm().then(function (result) {\r\n      if (result) {\r\n        selfCm.busyIndicator.show();\r\n        selfCm._addWarningMessageExecute();\r\n        const labelCodLotesLayerGraphic = labelCodLotesLayer.graphics;\r\n\r\n        SubDivision.blockUrl = selfCm.layersMap.getLayerInfoById(idLyrCfManzanaUrb).getUrl();\r\n        SubDivision.lotUrl = selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl();\r\n        SubDivision.pointLotUrl = selfCm.layersMap.getLayerInfoById(idLyrCfLotesPun).getUrl();\r\n        SubDivision.arancelUrl = selfCm.layersMap.getLayerInfoById(idLyrCfArancel).getUrl();\r\n        SubDivision.landUrl = selfCm.layersMap.getLayerInfoById(idLyrCfPredios).getUrl();\r\n        SubDivision.cadastralBlockUrl = selfCm.layersMap.getLayerInfoById(idLyrCfManzana).getUrl();\r\n        SubDivision.currentLotsRows = selfCm.currentLotsRows;\r\n        SubDivision.newPointLotsGraphics = selfCm.map.getLayer(idGraphicPuntoLote).graphics;\r\n        SubDivision.newLandsGraphics = graphicLayerPredioByDivison.graphics;\r\n        SubDivision.queryBlock = selfCm.arancel;\r\n        SubDivision.newLandsGraphics.forEach((i) => {\r\n          i['id'] = i.attributes.id.split('_')[1],\r\n            i['codPre'] = i.attributes.cpm\r\n        });\r\n        SubDivision.lotGraphic = layerLote.graphics;\r\n\r\n        SubDivision.attributes = labelCodLotesLayerGraphic.map((i) => {\r\n          return {\r\n            codLot: i.symbol.text,\r\n            lotUrb: i.attributes.lot_urb,\r\n            coords: [\r\n              i.geometry.x,\r\n              i.geometry.y\r\n            ]\r\n          }\r\n        });\r\n\r\n        SubDivision.config = selfCm.config;\r\n        SubDivision.ubigeo = paramsApp['ubigeo'];\r\n        SubDivision.user = paramsApp['username'];\r\n        SubDivision.caseRequest = selfCm.case;\r\n        SubDivision.codRequests = selfCm.codRequestsCm;\r\n\r\n        SubDivision.executeSubdivision()\r\n          .then(response => {\r\n            graphicLayerPredioByDivison.clear();\r\n            graphicLayerLineaDivision.clear();\r\n            graphicLayerLabelLineaDivision.clear();\r\n            selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n            selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n            selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n            selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n            selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(false)\r\n            selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(true)\r\n            selfCm._FormResult(selfCm.codRequestsCm, selfCm.caseDescription);\r\n            selfCm.busyIndicator.hide();\r\n            selfCm._removeWarningMessageExecute()\r\n            selfCm._showMessage(selfCm.nls.successProcess, type = \"success\");\r\n          })\r\n          .catch(error => {\r\n            // console.log(error)\r\n            selfCm._removeWarningMessageExecute()\r\n            selfCm._showMessage(error, type = \"error\");\r\n            selfCm.busyIndicator.hide();\r\n          })\r\n      }\r\n      else {\r\n        return\r\n      }\r\n    })\r\n  },\r\n\r\n  _executeInactivarGpService(evt) {\r\n    selfCm._showMessageConfirm().then(function (result) {\r\n      if (result) {\r\n        selfCm.busyIndicator.show();\r\n        selfCm._addWarningMessageExecute();\r\n        Deactivate.caseRequest = selfCm.case;\r\n        Deactivate.codRequest = selfCm.codRequestsCm;\r\n        Deactivate.user = paramsApp['username'];\r\n        Deactivate.ubigeo = paramsApp['ubigeo'];\r\n        Deactivate.config = selfCm.config;\r\n        Deactivate.landUrl = selfCm.layersMap.getLayerInfoById(idLyrCfPredios).getUrl();\r\n        Deactivate.cpu = selfCm.uniqueCodeLands;\r\n        Deactivate.currentLotsRows = selfCm.currentLotsRows;\r\n\r\n        Deactivate.executeDeactivate()\r\n          .then(response => {\r\n            selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(false)\r\n            selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(true)\r\n            selfCm._removeWarningMessageExecute()\r\n            selfCm._loadIniRequestsCm()\r\n            dojo.query(\".backTrayClsCm\")[0].click()\r\n            selfCm.busyIndicator.hide();\r\n            selfCm._showMessage(selfCm.nls.successProcess, type = \"success\");\r\n          })\r\n          .catch(error => {\r\n            selfCm._removeWarningMessageExecute()\r\n            selfCm._showMessage(error, type = \"error\");\r\n            selfCm.busyIndicator.hide();\r\n          })\r\n      }\r\n      else {\r\n        return\r\n      }\r\n    })\r\n  },\r\n\r\n  _addWarningMessageExecute() {\r\n    const self = this;\r\n    const buzyElm = dojo.query(\"#dojox_widget_Standby_0\")[0]\r\n    const imgElm = buzyElm.querySelector(\"img\")\r\n    const loadingText = document.createElement('div');\r\n    loadingText.id = 'loadingTextCustom';\r\n    loadingText.style.position = 'absolute';\r\n    const topMessage = parseFloat(imgElm.style.top) + 80;\r\n    loadingText.style.top = `${topMessage}px`;\r\n    const leftImg = parseFloat(imgElm.style.left) + imgElm.width / 2;\r\n    loadingText.style.left = `${leftImg}px`;\r\n    loadingText.style.transform = 'translate(-50%, -50%)';\r\n    loadingText.style.background = 'white';\r\n    loadingText.style.zIndex = '1000';\r\n    loadingText.innerHTML = self.nls.warningExecute;\r\n\r\n    dojo.query(\"#dojox_widget_Standby_0\")[0].appendChild(loadingText);\r\n  },\r\n\r\n  _removeWarningMessageExecute() {\r\n    dojo.query(\"#loadingTextCustom\")[0].remove();\r\n  },\r\n\r\n  _executeIndependenceLands(evt) {\r\n    if (!LandAssignment.checkPointLotsSelected()) {\r\n      selfCm._showMessage(selfCm.nls.emptyWaySelectedIndependence, type = \"error\")\r\n      return\r\n    }\r\n    selfCm._showMessageConfirm().then(function (result) {\r\n      if (result) {\r\n        selfCm.busyIndicator.show();\r\n        selfCm._addWarningMessageExecute();\r\n        Independence.codRequest = selfCm.codRequestsCm;\r\n        Independence.cadastralBlockUrl = selfCm.layersMap.getLayerInfoById(idLyrCfManzana).getUrl();\r\n        Independence.ubigeo = paramsApp['ubigeo'];\r\n        Independence.user = paramsApp['username'];\r\n        Independence.newLands = LandAssignment.lands;\r\n        Independence.urlLands = selfCm.layersMap.getLayerInfoById(idLyrCfPredios).getUrl();\r\n        Independence.matrixLand = selfCm.currentLandTabRows;\r\n        Independence.config = selfCm.config;\r\n        Independence.currentLotsRows = selfCm.currentLotsRows;\r\n        Independence.caseRequest = selfCm.case;\r\n\r\n        Independence.executeIndependence()\r\n          .then(response => {\r\n            LandAssignment.removeAllGraphics();\r\n            selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(false)\r\n            selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(true)\r\n            selfCm._FormResult(selfCm.codRequestsCm, selfCm.caseDescription);\r\n            selfCm.busyIndicator.hide();\r\n            selfCm._removeWarningMessageExecute();\r\n            selfCm._showMessage(selfCm.nls.successProcess, type = \"success\");\r\n          })\r\n          .catch(error => {\r\n            selfCm._removeWarningMessageExecute();\r\n            selfCm._showMessage(error, type = \"error\");\r\n            selfCm.busyIndicator.hide();\r\n          })\r\n      }\r\n      else {\r\n        return\r\n      }\r\n    })\r\n  },\r\n\r\n  _executeGPService(url, params) {\r\n    let urlStatusRequest = `${selfCm.config.applicationListUrl}/${selfCm.codRequestsCm}`\r\n    selfCm._callApiRestServices(urlStatusRequest, {}).then(function (result) {\r\n      try {\r\n        if (result.idStatus != 1) {\r\n          throw new Error(`Esta solicitud (${selfCm.codRequestsCm}) ya fue procesada con anterioridad: ${result.date}`)\r\n        }\r\n        selfCm.busyIndicator.show();\r\n        // Agregar un elemento de texto debajo del BusyIndicator\r\n        let buzyElm = dojo.query(\"#dojox_widget_Standby_0\")[0]\r\n        let imgElm = buzyElm.querySelector(\"img\")\r\n        let loadingText = document.createElement('div');\r\n        loadingText.id = 'loadingTextCustom';\r\n        loadingText.style.position = 'absolute';\r\n        let topMessage = parseFloat(imgElm.style.top) + 80;\r\n        loadingText.style.top = `${topMessage}px`;\r\n        let leftImg = parseFloat(imgElm.style.left) + imgElm.width / 2;\r\n        loadingText.style.left = `${leftImg}px`;\r\n        loadingText.style.transform = 'translate(-50%, -50%)';\r\n        loadingText.style.background = 'white';\r\n        loadingText.style.zIndex = '1000';\r\n\r\n        dojo.query(\"#dojox_widget_Standby_0\")[0].appendChild(loadingText);\r\n        // selfCm._FormResult(selfCm.codRequestsCm, selfCm.caseDescription);\r\n        selfCm.gp = new Geoprocessor(url);\r\n        selfCm.gp.submitJob(params, selfCm._completeCallback, selfCm._statusCallback);\r\n      } catch (error) {\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(error.message, type = \"error\")\r\n      }\r\n\r\n    })\r\n  },\r\n\r\n  _statusCallback(JobInfo) {\r\n    selfCm.jobId = JobInfo.jobId\r\n    let textMessage = JobInfo.messages.map((message) => { return message.description })\r\n    try {\r\n      dojo.query(\"#loadingTextCustom\")[0].textContent = textMessage.slice(-1)[0] ? textMessage.slice(-1)[0] : ''\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  },\r\n  _completeCallback(JobInfo) {\r\n    switch (JobInfo.jobStatus) {\r\n      case \"esriJobSubmitted\":\r\n        // El trabajo se ha enviado al servidor y está esperando en la cola.\r\n        console.log(\"El trabajo se ha enviado y está esperando en la cola.\");\r\n        break;\r\n      case \"esriJobExecuting\":\r\n        // El trabajo se está ejecutando actualmente en el servidor.\r\n        console.log(\"El trabajo se está ejecutando en el servidor.\");\r\n        break;\r\n      case \"esriJobSucceeded\":\r\n        // El trabajo se ha completado satisfactoriamente y los resultados están disponibles.\r\n        selfCm.gp.getResultData(JobInfo.jobId, \"response\", function (result) {\r\n          if (!result.value.status) {\r\n            selfCm.busyIndicator.hide();\r\n            selfCm._showMessage(result.value.message, type = \"error\");\r\n            return\r\n          }\r\n\r\n          selfCm._sendDataToPlatform(result.value.response)\r\n\r\n\r\n          switch (selfCm.case) {\r\n            case \"1\":\r\n              selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n              break;\r\n            case \"2\":\r\n              selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n              selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n              selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n              selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n              selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n              break\r\n            case \"3\":\r\n              graphicLayerPredioByDivison.clear();\r\n              graphicLayerLineaDivision.clear();\r\n              graphicLayerLabelLineaDivision.clear();\r\n              // selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n              selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n              selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n              selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n              selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n              break\r\n            case \"4\":\r\n              // dojo.query(\".tablinksCm.active\")[0].click();\r\n              selfCm._loadIniRequestsCm()\r\n              break\r\n            default:\r\n              break;\r\n          }\r\n          selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(false)\r\n          selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(true)\r\n          if (selfCm.case == \"4\") {\r\n            dojo.query(\".backTrayClsCm\")[0].click()\r\n          } else {\r\n            selfCm._FormResult(selfCm.codRequestsCm, selfCm.caseDescription);\r\n          }\r\n          // Codigo para mostrar la ventana de resultados\r\n\r\n\r\n        })\r\n        break;\r\n      case \"esriJobFailed\":\r\n        // El trabajo ha fallado y no se han podido generar los resultados.\r\n        selfCm._showMessage(\"El proceso ha fallado y no se han podido generar los resultados.\", type = \"error\");\r\n        break;\r\n      case \"esriJobCancelled\":\r\n        // El trabajo ha sido cancelado por el usuario.\r\n        selfCm._showMessage(\"El proceso ha sido cancelado por el usuario.\");\r\n        break;\r\n      case \"esriJobTimedOut\":\r\n        // El trabajo ha expirado debido a un tiempo de espera.\r\n        selfCm._showMessage(\"El proceso ha superado el tiempo de espera necesario para su ejecución.\", type = \"error\");\r\n        break;\r\n      default:\r\n        // El estado del trabajo no se reconoce.\r\n        selfCm._showMessage(\"El estado del proceso no se reconoce.\");\r\n        break;\r\n    }\r\n    selfCm.busyIndicator.hide();\r\n    // remove 'loadingTextCustom'\r\n    dojo.query(\"#loadingTextCustom\")[0].remove();\r\n  },\r\n  _cancelProcess(evt) {\r\n    selfCm.gp.cancelJob(selfCm.jobId, function (info) {\r\n      console.log(info.jobStatus)\r\n    });\r\n  },\r\n\r\n  // _sendDataToPlatform(data) {\r\n  //   for (let predio of data.results) {\r\n  //     predio['ubigeo'] = paramsApp.ubigeo;\r\n  //   }\r\n\r\n  //   data['idType'] = parseInt(selfCm.case)\r\n  //   fetch(selfCm.config.updateStatusApplication, {\r\n  //     method: 'POST', // o 'PUT'\r\n  //     body: JSON.stringify(data), // los datos pueden ser de tipo 'string' o {object}\r\n  //     headers: {\r\n  //       'Content-Type': 'application/json'\r\n  //     }\r\n  //   }).then(res => res.json())\r\n  //     .then(response => selfCm._showMessage('El proceso se completó satisfactoriamente.'))\r\n  //     // .catch(error => console.error('Error:', error));\r\n  //     .catch(error => selfCm._showMessage(error, type = \"error\"));\r\n  // },\r\n\r\n  _exportTableToExcel(evt) {\r\n    // Obtén la tabla HTML\r\n    const table = dojo.query(\"#tableRequestCm\")[0]\r\n    let headerRow = table.querySelector(\"tr\");\r\n    let rows = table.querySelectorAll(\"tr\")\r\n\r\n    let headers = [];\r\n    let headerCols = headerRow.querySelectorAll(\"th\");\r\n    for (let h = 0; h < headerCols.length - 1; h++) {\r\n      headers.push(headerCols[h].innerText);\r\n    }\r\n\r\n    let data = [];\r\n\r\n    // Recorre las filas (ignora la primera fila que contiene los encabezados)\r\n    for (let i = 0; i < rows.length; i++) {\r\n      if (i == 0) continue;\r\n      let row = {}, cols = rows[i].querySelectorAll(\"td\");\r\n\r\n      // Recorre las columnas\r\n      for (let j = 0; j < cols.length - 1; j++) {\r\n        // Usa el texto del encabezado como clave y el texto de la celda como valor\r\n        row[headers[j]] = cols[j].innerText;\r\n      }\r\n\r\n      data.push(row);\r\n    }\r\n\r\n\r\n\r\n    // Convierte el array de objetos en una cadena JSON\r\n    let wb = XLSX.utils.book_new();\r\n\r\n    // Crear una hoja de cálculo a partir de los datos JSON\r\n    let ws = XLSX.utils.json_to_sheet(data);\r\n    let sheetName = selfCm.currentTabActive.replace(\"_\", \" \");\r\n    XLSX.utils.book_append_sheet(wb, ws, sheetName);\r\n\r\n    // Escribir el libro de trabajo y forzar una descarga\r\n    XLSX.writeFile(wb, `reporte_solicitudes_${selfCm.currentTabActive}.xlsx`);\r\n  },\r\n\r\n  _dataURItoBlob(dataURI) {\r\n    var byteString = atob(dataURI.split(',')[1]);\r\n    var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n    var buffer = new ArrayBuffer(byteString.length);\r\n    var dataView = new Uint8Array(buffer);\r\n    for (var i = 0; i < byteString.length; i++) {\r\n      dataView[i] = byteString.charCodeAt(i);\r\n    }\r\n    return new Blob([buffer], { type: mimeString });\r\n  },\r\n\r\n  _sendObservation(evt) {\r\n    selfCm.busyIndicator.show();\r\n    let file = selfCm.imgUploadApCm.files[0];\r\n    if (file == undefined) {\r\n      selfCm.busyIndicator.hide();\r\n      selfCm._showMessage(selfCm.nls.emptyImageSupport, type = \"error\");\r\n      return\r\n    }\r\n    let reader = new FileReader();\r\n    let data = new FormData();\r\n    reader.onloadend = function () {\r\n      data.append('application_id', selfCm.codRequestsCm);\r\n      data.append('description', selfCm.textAreaObsApCm.value);\r\n      data.append('img', selfCm.imgUploadApCm.files[0]);\r\n\r\n      return fetch(selfCm.config.observationUrl, {\r\n        method: 'POST',\r\n        body: data\r\n      })\r\n        .then(response => {\r\n          if (!response.ok) {\r\n            selfCm.busyIndicator.hide();\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n          }\r\n          selfCm.busyIndicator.hide();\r\n          selfCm._showMessagePromise(selfCm.nls.successRequestObservation).then((result) => {\r\n            dojo.query(\".backRequestsClsCm\")[0].click();\r\n            dojo.query(\".backTrayClsCm\")[0].click();\r\n            selfCm._loadIniRequestsCm();\r\n          })\r\n\r\n        }).catch(error => {\r\n          selfCm.busyIndicator.hide();\r\n          selfCm._showMessage(`${selfCm.nls.errorProcessRequestObservation} ${error}`, type = \"error\")\r\n        });\r\n    }\r\n    reader.readAsDataURL(file);\r\n  },\r\n\r\n  _uploadImagenObs(evt) {\r\n    let imageDiv = dojo.query(\".thumbnailClsCm\")[0];\r\n    let file = evt.target.files[0];\r\n    let reader = new FileReader();\r\n\r\n    reader.onloadend = function () {\r\n      imageDiv.innerHTML = \"\";\r\n      imageDiv.style.backgroundImage = 'url(' + reader.result + ')';\r\n      imageDiv.style.backgroundSize = 'contain';\r\n      imageDiv.style.backgroundRepeat = 'no-repeat';\r\n      imageDiv.style.backgroundPosition = 'center';\r\n    }\r\n\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n      imageDiv.innerHTML = \"<span><i class='far fa-image'></i></span>\";\r\n    }\r\n  },\r\n  _searchRequestByCodPred(evt) {\r\n    if (evt.keyCode === 13) {\r\n      if (evt.target.value == '') {\r\n        if ('cpm' in selfCm.queryRequests) {\r\n          delete selfCm.queryRequests['cpm'];\r\n        }\r\n      } else {\r\n        selfCm.queryRequests['cpm'] = evt.target.value;\r\n      }\r\n      dojo.query(\".tablinksCm.active\")[0].click();\r\n    }\r\n  },\r\n\r\n  _sortedByDate(evt) {\r\n    let columnOrder = evt.currentTarget.dataset.val\r\n    evt.currentTarget.dataset.val = columnOrder.includes('-') ? columnOrder.replace('-', '') : `-${columnOrder}`\r\n    selfCm.queryRequests['ordering'] = evt.currentTarget.dataset.val;\r\n    dojo.query(\".tablinksCm.active\")[0].click();\r\n  },\r\n\r\n  onOpen() {\r\n    console.log('CartoMaintenanceWgt::onOpen');\r\n    // let panel = this.getPanel();\r\n    // panel.position.height = 700;\r\n    // panel.setPosition(panel.position);\r\n    // panel.panelManager.normalizePanel(panel);\r\n\r\n    this._createToolbar();\r\n\r\n    dojo.query(\".backTrayClsCm\").on('click', this._openFormCase);\r\n    dojo.query(\".tablinksCm\").on('click', this._loadRequestsCm);\r\n    dojo.query(\"#btnObsCaseCm\").on('click', this._openFormObs);\r\n    dojo.query(\".backRequestsClsCm\").on('click', this._openFormObs);\r\n    // dojo.query(\"#goodRequestsCm\").on('click', this._openFormResult);\r\n    dojo.query(\"#showInfoDocCm\").on('click', this._openSupportingDocument)\r\n\r\n    // Reasignacion\r\n    dojo.query(\"#btnDrawMarkerCm\").on('click', this._activateTool);\r\n\r\n    dojo.query(\"#btnFsCm\").on('click', this._ApplyAcumulationLotsRefactor)\r\n    dojo.query(\"#btnDrawLinesDvCm\").on('click', this._activateToolLinesDivision)\r\n    dojo.query(\"#btnApplyDvCm\").on('click', this._ApplyDivideLotesRefactor)\r\n    dojo.query(\"#titleCaseCm\").on('click', this._zoomHomeRequests)\r\n    dojo.query(\"#sendDataRsCm\").on('click', this._executeReasignacionGpService)\r\n    dojo.query('#sendDataFsCm').on('click', this._executeAcumulacionGpService)\r\n    dojo.query('#sendDataDvCm').on('click', this._executeSubdivisionGpService)\r\n    dojo.query('#sendDataDtCm').on('click', this._executeInactivarGpService)\r\n    dojo.query('#btnReportCm').on('click', this._exportTableToExcel)\r\n    dojo.query('#imgUploadCm').on('change', this._uploadImagenObs)\r\n    dojo.query('#sendDataObsGrCm').on('click', this._sendObservation)\r\n    dojo.query('#searchTbxCm').on(\"keyup\", this._searchRequestByCodPred)\r\n    dojo.query('.columnDateClsCm').on(\"click\", this._sortedByDate)\r\n    // dojo.query('.columnCaseClsCm').on(\"click\", this._sortedByDate)\r\n    this._loadIniRequestsCm()\r\n\r\n    selfCm.map.addLayer(graphicLayerLabelLineaDivision)\r\n    // selfCm.map.addLayer(graphicLayerLandsByIndependence)\r\n    selfCm.editToolbar = new Edit(selfCm.map);\r\n    selfCm.map.on(\"click\", selfCm._enableEditingLabelsLotesDivision);\r\n    selfCm.editToolbar.on(\"deactivate\", function (evt) {\r\n      if (evt.info.isModified) {\r\n        selfCm.map.setInfoWindowOnClick(true)\r\n        // firePerimeterFL.applyEdits(null, [evt.graphic], null);\r\n      }\r\n    });\r\n  },\r\n\r\n\r\n  // onClose(){\r\n  //   console.log('CartoMaintenanceWgt::onClose');\r\n  // },\r\n  // onMinimize(){\r\n  //   console.log('CartoMaintenanceWgt::onMinimize');\r\n  // },\r\n  // onMaximize(){\r\n  //   console.log('CartoMaintenanceWgt::onMaximize');\r\n  // },\r\n  // onSignIn(credential){\r\n  //   console.log('CartoMaintenanceWgt::onSignIn', credential);\r\n  // },\r\n  // onSignOut(){\r\n  //   console.log('CartoMaintenanceWgt::onSignOut');\r\n  // }\r\n  // onPositionChange(){\r\n  //   console.log('CartoMaintenanceWgt::onPositionChange');\r\n  // },\r\n  // resize(){\r\n  //   console.log('CartoMaintenanceWgt::resize');\r\n  // }\r\n});\r\n"]}