{"version":3,"sources":["../../../widgets/CartoMaintenanceWgt/Widget.js"],"names":["declare","BaseWidget","_WidgetsInTemplateMixin","Draw","Edit","Graphic","SimpleFillSymbol","SimpleMarkerSymbol","SimpleLineSymbol","Color","GraphicsLayer","Point","LayerInfos","lang","FeatureLayer","QueryTask","Query","WidgetManager","geometryEngine","Polyline","webMercatorUtils","Geoprocessor","BusyIndicator","Message","turf","XLSX","Deferred","TextSymbol","Font","requestToAttendState","requestsObservedState","requestsAttendState","idLyrCatastroFiscal","idLyrCfPredios","idLyrCfLotes_pun","idLyrCfEje_vial","idLyrCfNumeracion","idLyrCfArancel","idLyrCfLotes","idLyrCfUnidadesurbanas","idLyrCfParques","idLyrCfManzana","idLyrCfSector","idLyrActpuntoimg","idLyrDistricts","iconByState","_UBIGEO_FIELD","_ID_LOTE_P_FIELD","_COD_MZN_FIELD","_F_MZN_FIELD","_COD_SECT_FIELD","_COD_PRE_FIELD","_COD_LOTE_FIELD","toolbarCm","params","URLSearchParams","window","location","search","paramsApp","keys","key","get","symbolPuntoLote","STYLE_SQUARE","STYLE_SOLID","symbolFusionLote","symbolEliminarLote","STYLE_DIAGONAL_CROSS","symbolLoteSelected","symbolDivisionLote","STYLE_DASH","symbolPredio","symbolPredioSelected","symbolSnapPointCm","STYLE_CROSS","idGraphicPredioCm","idGraphicPredioByDivison","idGraphicPredioSelectedCm","idGraphicLoteCm","idGraphicLoteSelectedCm","idGraphicPuntoLote","idGraphicFrenteLote","idGraphicLineaDivision","idGraphicLoteDeleteCm","idGraphicLabelLineaDivision","idGraphicLabelCodLote","symbolByCase","graphicLayerLineaDivision","id","graphicLayerLabelLineaDivision","graphicLayerPredioByDivison","baseClass","codRequestsCm","currentTabActive","layersMap","queryUbigeo","case","caseDescription","lotesQuery","idlotes","arancel","codigosPredios","xy","idxLines","idPredioDivision","idPredioAcumulacion","editToolbar","queryRequests","ubigeo","limit","postCreate","inherited","arguments","console","log","_getAllLayers","selfCm","_filterByDistrictCm","_startExtentByDistrictCm","esri","bundle","toolbars","draw","addPoint","addShape","resume","start","getInstance","map","itemInfo","then","hitch","layerInfosObj","_showMessage","message","type","title","nls","_widgetLabel","titleLabel","_showMessagePromise","messagetext","deferred","buttons","label","onClick","resolve","hide","promise","_showMessageConfirm","mensaje","queryPredios","getLayerInfoById","getFilter","setFilter","query","where","qTask","getUrl","executeForExtent","results","setExtent","extent","homeWidget","getWidgetsByName","homeDijit","error","startup","busyIndicator","create","target","domNode","parentNode","backgroundOpacity","_callApiRestServices","baseUrl","url","URL","Object","forEach","searchParams","append","fetch","response","Error","status","json","catch","err","_getRequestsTrayDataCm","responseData","state","data","filter","i","_loadIniRequestsCm","dojo","click","_parseDateStringtoFormat","dateString","date","Date","day","getDate","month","getMonth","year","getFullYear","_loadRequestsByEventCm","evt","_loadRequestsCm","_loadDocSupportCm","urlStatusRequest","config","applicationListUrl","result","value","support","show","slice","estado","desc","dataHtml","lands","lnd","join","idType","icon","tbody","innerHTML","tb","getElementsByTagName","length","tableRequestApCm","removeChild","appendChild","on","_openFormCase","_openFormResult","removeClass","classList","add","_zoomToPredSelectedEvt","cod_pred","currentTarget","children","split","_zoomToPredSelected","_removeLayerGraphic","prediosLayer","propertyLayer","mode","MODE_ONDEMAND","outFields","selectFeatures","SELECTION_NEW","featureSelected","addLayer","centerAt","geometry","interval","setInterval","graphics","symbol","setSymbol","setTimeout","clearInterval","_openSupportingDocument","open","focus","_zoomExtentToLote","cod_pre","returnGeometry","returnDistinctValues","execute","idLote","features","attributes","idmanzana","idsector","queryLote","qTaskLote","expand","arr","push","_unionFeatures","graphic","_zoomHomeRequests","_populateFormsByPredio","id_solicitud","landsByApplicationUrl","rows","cpm","streetName","row","closest","rowList","td","reasignarApCm","toggle","fusionApCm","divisionApCm","actGeomApCm","eliminacionApCm","resultCtnApCm","remove","obsCtnApCm","requestTrayApCm","casesCtnApCm","deactivate","disableSnapping","bodyTbLinesDvApCm","bodyTbPrediosDvApCm","bodyTbDatosLoteDvApCm","clear","_openFormObs","textAreaObsApCm","imageDiv","style","backgroundImage","_FormResult","caseCm","urlPredioResults","resultsByApplication","bodyTbResultsApCm","predio","index","_centerAtPredioResult","replace","_createToolbar","_addToMap","screenPoint","toScreen","snappingManager","getSnappingPoint","undefined","point_g","webMercatorToGeographic","graphicLayer","x","y","setInfoWindowOnClick","alert","errorSnapingLocate","nameIdLine","_populateTableDrawLine","_addNameToLine","layerId","graphicsLayerIds","includes","removeLayer","getLayer","_activateTool","_activateSnappingByReasignar","activate","_activateToolAcumulacion","_activateSnappingByAcumulacion","_activateToolLinesDivision","_activateSnappingByDivision","cflayer","snapManager","enableSnapping","snapPointSymbol","tolerance","layerInfos","layer","setLayerInfos","graphicLayerPuntoLote","graphicsLayerInfo","layers","LayerInfo","name","union","_ApplyAcumulacionLotes","graphicLayerLoteFusion","_extent","urlLotes","_etiquetasCodLote","bodyTbDatosLoteFsApCm","orderByFields","graphicLayerFrenteLote","graphicFusion","frentes","isItc","intersects","hasOwnProperty","unionFrentes","idx","itcFrentesByLotes","intersect","polyline","paths","spatialReference","wkid","polylineOne","_getLongestPolyline","puntoLoteTurf","_findMidpoint","puntoLote","coordinates","puntoLoteGraphic","symbolFrenteLote","Math","floor","random","frente","_populateTablePredio","bodyTbPrediosFsApCm","_getMidpoint","geodesicLength","midpoint","geodesicDensify","getPoint","lengthPolylineChunk","line","lineString","options","units","along","longestPath","path","polylineChunk","_dividePolygon","poly","lines","divide","cut","idLine","tr","cursor","_deleteRowLine","_zoonToLineDivision","_editaNameLineDivision","elem","item","graphicLabel","polylineGeom","polylineGeomUtm","midPoint","pointLabel","font","STYLE_NORMAL","VARIANT_NORMAL","WEIGHT_BOLD","txtSym","setOffset","setAlign","ALIGN_END","setHaloColor","setHaloSize","text","innerText","refresh","bodyTable","drawFunction","_activateSnappingPrediosByDivision","graphiclayer","_activateToolPrediosByDivision","_changeValueCodLote","selectedIndex","cod_lote","lyr","graphicSelected","_centerAtLabelCodLoteDivision","_editLoteUrbanoDivision","lot_urb","textContent","_buildDataLoteTable","tableBody","predios","document","createElement","indexCell","className","num","codigoCell","select","option","p","selected","loteUrbCell","contentEditable","locationMarker","_ordenarPoligonosNorteSur","poligonos","coordenadasNorte","poligono","getExtent","ymax","poligonosOrdenados","sort","a","b","coordenadaNorteA","indexOf","coordenadaNorteB","graphicLayerLabelCodLoteDivision","dataLoteTable","polygon","rings","center","pointOnFeature","_zfill","setColor","setSize","idGraphic","clase","_enableEditingLabelsLotesDivision","MOVE","len","Array","fill","campo","queryWhere","tipoEstadistica","polygonos","estadisticaDef","tasks","StatisticDefinition","statisticType","onStatisticField","outStatisticFieldName","outStatistics","queryTask","resultado","parseInt","_ApplyDivideLotes","graphicLayerLoteDivision","unionGraphicLayerLineaDivision","lineGeometry","geomLote","geomLoteDivided","lote","reorderLayer","graphicLoteDivision","idItcFrentesByLotes","_executeReasignacionGpService","_executeGPService","reasignacionUrl","_executeAcumulacionGpService","labelCodLotesLayer","JSON","stringify","toJson","acumulacionUrl","_executeSubdivisionGpService","pred","subdivisionUrl","_executeInactivarGpService","inactivacionUrl","idStatus","buzyElm","imgElm","querySelector","loadingText","position","topMessage","parseFloat","top","leftImg","left","width","transform","background","zIndex","gp","submitJob","_completeCallback","_statusCallback","JobInfo","jobId","textMessage","messages","description","jobStatus","getResultData","_sendDataToPlatform","setVisibility","_cancelProcess","cancelJob","info","updateStatusApplication","method","body","headers","res","_exportTableToExcel","table","headerRow","querySelectorAll","headerCols","h","cols","j","wb","utils","book_new","ws","json_to_sheet","sheetName","book_append_sheet","writeFile","_dataURItoBlob","dataURI","byteString","atob","mimeString","buffer","ArrayBuffer","dataView","Uint8Array","charCodeAt","Blob","_sendObservation","file","imgUploadApCm","files","reader","FileReader","FormData","onloadend","observationUrl","ok","readAsDataURL","_uploadImagenObs","backgroundSize","backgroundRepeat","backgroundPosition","_searchRequestByCodPred","keyCode","onOpen","panel","getPanel","height","setPosition","panelManager","normalizePanel","isModified"],"mappings":"QAAoB,oB,EACG,iB,EACa,+B,EACnB,oB,EACA,oB,EACG,c,EACS,+B,EACE,iC,EACF,+B,EACX,kB,EACQ,2B,EACR,qB,EACK,4B,EACN,iB,EACQ,0B,EACH,sB,EACJ,kB,EACQ,oB,EACC,8B,EACN,wB,EACQ,gC,EACJ,yB,EACC,+B,EACN,oB,EACH,M,EACA,M,EACI,e,EACE,yB,EACN,mB,aA5BVA,O,EACAC,U,EACAC,uB,EACAC,I,EACAC,I,EACAC,O,EACAC,gB,EACAC,kB,EACAC,gB,EACAC,K,EACAC,a,EACAC,K,EACAC,U,EACAC,I,EACAC,Y,EACAC,S,EACAC,K,EACAC,a,EACAC,c,EACAC,Q,EACAC,gB,EACAC,Y,EACAC,a,EACAC,O,EACAC,I,EACAC,I,EACAC,Q,EACAC,U,EACAC,I;AACP;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,MAAMC,uBAAuB,aAA7B;AACA,MAAMC,wBAAwB,WAA9B;AACA,MAAMC,sBAAsB,UAA5B;;AAGA;AACA,MAAMC,sBAAsB,mBAA5B;AACA,MAAMC,iBAAiB,qBAAvB;AACA,MAAMC,mBAAmB,qBAAzB;AACA,MAAMC,kBAAkB,qBAAxB;AACA,MAAMC,oBAAoB,qBAA1B;AACA,MAAMC,iBAAiB,qBAAvB;AACA,MAAMC,eAAe,qBAArB;AACA,MAAMC,yBAAyB,qBAA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","file":"Widget.js","sourcesContent":["import declare from 'dojo/_base/declare';\r\nimport BaseWidget from 'jimu/BaseWidget';\r\nimport _WidgetsInTemplateMixin from 'dijit/_WidgetsInTemplateMixin';\r\nimport Draw from \"esri/toolbars/draw\";\r\nimport Edit from \"esri/toolbars/edit\";\r\nimport Graphic from \"esri/graphic\";\r\nimport SimpleFillSymbol from \"esri/symbols/SimpleFillSymbol\";\r\nimport SimpleMarkerSymbol from \"esri/symbols/SimpleMarkerSymbol\";\r\nimport SimpleLineSymbol from \"esri/symbols/SimpleLineSymbol\";\r\nimport Color from 'dojo/_base/Color';\r\nimport GraphicsLayer from \"esri/layers/GraphicsLayer\"\r\nimport Point from \"esri/geometry/Point\"\r\nimport LayerInfos from \"jimu/LayerInfos/LayerInfos\";\r\nimport lang from \"dojo/_base/lang\";\r\nimport FeatureLayer from \"esri/layers/FeatureLayer\";\r\nimport QueryTask from \"esri/tasks/QueryTask\";\r\nimport Query from \"esri/tasks/query\";\r\nimport WidgetManager from \"jimu/WidgetManager\"\r\nimport geometryEngine from \"esri/geometry/geometryEngine\";\r\nimport Polyline from \"esri/geometry/Polyline\";\r\nimport webMercatorUtils from \"esri/geometry/webMercatorUtils\";\r\nimport Geoprocessor from \"esri/tasks/Geoprocessor\";\r\nimport BusyIndicator from 'esri/dijit/util/busyIndicator';\r\nimport Message from \"jimu/dijit/Message\";\r\nimport turf from \"turf\";\r\nimport XLSX from \"xlsx\";\r\nimport Deferred from \"dojo/Deferred\";\r\nimport TextSymbol from \"esri/symbols/TextSymbol\";\r\nimport Font from \"esri/symbols/Font\";\r\n// import 'core-js/stable'\r\n// import 'regenerator-runtime/runtime'\r\n\r\n\r\n// const dataRequestsToAttendCm = [\r\n//   {\"case\":\"Reasignar\",\"caseId\":1,\"cod_pre\":\"01-34-0017\",\"estado\":\"por_atender\",\"fec_solicitud\":\"10/11/2022\", \"id_solicitud\":1},\r\n//   {\"case\":\"Acumulación\",\"caseId\":2,\"cod_pre\":\"01-34-0011,01-34-0012\",\"estado\":\"por_atender\",\"fec_solicitud\":\"10/11/2022\",\"id_solicitud\":2},\r\n//   {\"case\":\"División\",\"caseId\":3,\"cod_pre\":\"01-34-0010\",\"estado\":\"por_atender\",\"fec_solicitud\":\"10/11/2022\",\"id_solicitud\":3},\r\n//   {\"case\":\"Inactivar\",\"caseId\":5,\"cod_pre\":\"01-23-0036\",\"estado\":\"por_atender\",\"fec_solicitud\":\"10/11/2022\",\"id_solicitud\":5},\r\n//   {\"case\":\"Reasignar\",\"caseId\":1,\"cod_pre\":\"01-38-0010\",\"estado\":\"por_atender\",\"fec_solicitud\":\"10/11/2022\",\"id_solicitud\":6},\r\n//   {\"case\":\"Acumulación\",\"caseId\":2,\"cod_pre\":\"01-58-0004,01-58-0003\",\"estado\":\"por_atender\",\"fec_solicitud\":\"10/11/2022\",\"id_solicitud\":7},\r\n//   {\"case\":\"División\",\"caseId\":3,\"cod_pre\":\"01-12-0028\",\"estado\":\"por_atender\",\"fec_solicitud\":\"10/11/2022\",\"id_solicitud\":11},\r\n//   {\"case\":\"Fusión\",\"caseId\":2,\"cod_pre\":\"1376\",\"estado\":\"obaservado\",\"fec_solicitud\":\"10/11/2022\",\"id_solicitud\":8},\r\n//   {\"case\":\"División\",\"caseId\":3,\"cod_pre\":\"1376\",\"estado\":\"observado\",\"fec_solicitud\":\"10/11/2022\",\"id_solicitud\":9},\r\n//   {\"case\":\"Inactivar\",\"caseId\":4,\"cod_pre\":\"1376\",\"estado\":\"atendido\",\"fec_solicitud\":\"10/11/2022\",\"id_solicitud\":10}\r\n//   ]\r\n\r\n// const dataRequestsToAttendCm2 = {\r\n// \t\"count\":1,\r\n// \t\"next\":null,\r\n// \t\"previous\":null,\r\n// \t\"results\":[\r\n// \t\t{\"type\":\"Reasignar\",\"idType\":1,\"lands\":[{\"cup\":\"01-34-0017\"}],\"status\":\"Por atender\",\"idStatus\":1,\"date\":\"2023-05-14T22:38:35.742809\",\"id\":1},\r\n// \t\t{\"type\":\"Acumulación\",\"idType\":2,\"lands\":[{\"cup\":\"01-34-0011\"},{\"cup\":\"01-34-0012\"}],\"status\":\"Por atender\",\"idStatus\":1,\"date\":\"2023-05-14T22:38:35.742809\",\"id\":2},\r\n// \t\t{\"type\":\"División\",\"idType\":3,\"lands\":[{\"cup\":\"01-34-0010\"}],\"status\":\"Por atender\",\"idStatus\":1,\"date\":\"2023-05-14T22:38:35.742809\",\"id\":3},\r\n// \t\t{\"type\":\"Inactivar\",\"idType\":5,\"lands\":[{\"cup\":\"01-23-0036\"}],\"status\":\"Por atender\",\"idStatus\":1,\"date\":\"2023-05-14T22:38:35.742809\",\"id\":5},\r\n// \t\t{\"type\":\"Reasignar\",\"idType\":1,\"lands\":[{\"cup\":\"01-38-0010\"}],\"status\":\"Por atender\",\"idStatus\":1,\"date\":\"2023-05-14T22:38:35.742809\",\"id\":6},\r\n// \t\t{\"type\":\"Acumulación\",\"idType\":2,\"lands\":[{\"cup\":\"01-58-0004\"},{\"cup\":\"01-58-0003\"}],\"status\":\"Por atender\",\"idStatus\":1,\"date\":\"2023-05-14T22:38:35.742809\",\"id\":7},\r\n// \t\t{\"type\":\"División\",\"idType\":3,\"lands\":[{\"cup\":\"01-12-0028\"}],\"status\":\"Por atender\",\"idStatus\":1,\"date\":\"2023-05-14T22:38:35.742809\",\"id\":11},\r\n// \t\t{\"type\":\"Fusión\",\"idType\":2,\"lands\":[{\"cup\":\"1376\"}],\"status\":\"Observado\",\"idStatus\":3,\"date\":\"2023-05-14T22:38:35.742809\",\"id\":8},\r\n// \t\t{\"type\":\"División\",\"idType\":3,\"lands\":[{\"cup\":\"1376\"}],\"status\":\"Observado\",\"idStatus\":3,\"date\":\"2023-05-14T22:38:35.742809\",\"id\":9},\r\n// \t\t{\"type\":\"Inactivar\",\"idType\":4,\"lands\":[{\"cup\":\"1376\"}],\"status\":\"Atendido\",\"idStatus\":2,\"date\":\"2023-05-14T22:38:35.742809\",\"id\":10}\r\n// \t]\r\n// }\r\n\r\n\r\n// const dataByRequest = {\r\n//   \"1\": [{\"cod_pre\": \"01-34-0017\", \"x\": -79.739827, \"y\": -6.643564, \"direccion\": \"Av. Los Jazmines 123\", \"num_alt\": 567, \"sec_eje\": \"Sección 1\", \"cod_cuc\": \"ABC123\"}],\r\n//   \"2\": [\r\n//     {\"cod_pre\": \"01-34-0011\",\"x\": -67.89,\"y\": -12,\"direccion\": \"Calle Las Rosas 456\",\"num_alt\": 789,\"sec_eje\": \"Sección 2\",\"cod_cuc\": \"DEF456\"}, \r\n//     { \"cod_pre\": \"01-34-0012\", \"x\": 345.67, \"y\": 89.01, \"direccion\": \"Jr. Los Girasoles 789\", \"num_alt\": 234, \"sec_eje\": \"Sección 3\", \"cod_cuc\": \"GHI789\"},\r\n//   ],\r\n//   \"3\": [{\"cod_pre\": \"01-34-0010\",\"x\": -67.89,\"y\": -12,\"direccion\": \"Calle Las Rosas 456\",\"num_alt\": 789,\"sec_eje\": \"Sección 2\", \"cod_cuc\": \"DEF456\"}],\r\n//   \"5\": [{\"cod_pre\": \"01-23-0036\",\"x\": -67.89,\"y\": -12,\"direccion\": \"Jr. Los Girasoles 789\",\"num_alt\": 234,\"sec_eje\": \"Sección 3\",\"cod_cuc\": \"GHI789\"}],\r\n//   \"6\": [{\"cod_pre\": \"01-38-0010\", \"x\": -79.739827, \"y\": -6.643564, \"direccion\": \"Av. Los Jazmines 123\", \"num_alt\": 567, \"sec_eje\": \"Sección 1\", \"cod_cuc\": \"ABC123\"}],\r\n//   \"7\": [\r\n//     {\"cod_pre\": \"01-58-0004\",\"x\": -67.89,\"y\": -12,\"direccion\": \"Calle Las Rosas 456\",\"num_alt\": 789,\"sec_eje\": \"Sección 2\",\"cod_cuc\": \"DEF456\"}, \r\n//     { \"cod_pre\": \"01-58-0003\", \"x\": 345.67, \"y\": 89.01, \"direccion\": \"Jr. Los Girasoles 789\", \"num_alt\": 234, \"sec_eje\": \"Sección 3\", \"cod_cuc\": \"GHI789\"},\r\n//   ],\r\n//   \"11\": [{\"cod_pre\": \"01-12-0028\",\"x\": -67.89,\"y\": -12,\"direccion\": \"Calle Las Rosas 456\",\"num_alt\": 789,\"sec_eje\": \"Sección 2\", \"cod_cuc\": \"DEF456\"}],\r\n// }\r\n\r\n// const dataByRequest2 = {\r\n//   \"1\": [\r\n//   \t{\"cpm\": \"01-34-0017\", \"streetName\": \"Av. Los Jazmines 123\", \"streetNameAlt\": 567, \"secEjec\": \"Sección 1\", \"codCuc\": \"ABC123\"}\r\n//   ],\r\n//   \"2\": [\r\n//     {\"cpm\": \"01-34-0011\", \"streetName\": \"Calle Las Rosas 456\",\"streetNameAlt\": 789,\"secEjec\": \"Sección 2\",\"codCuc\": \"DEF456\"}, \r\n//     { \"cpm\": \"01-34-0012\", \"streetName\": \"Jr. Los Girasoles 789\", \"streetNameAlt\": 234, \"secEjec\": \"Sección 3\", \"codCuc\": \"GHI789\"},\r\n//   ],\r\n//   \"3\": [\r\n//   \t{\"cpm\": \"01-34-0010\", \"streetName\": \"Calle Las Rosas 456\",\"streetNameAlt\": 789,\"secEjec\": \"Sección 2\", \"codCuc\": \"DEF456\"}\r\n//   ],\r\n//   \"5\": [\r\n//   \t{\"cpm\": \"01-23-0036\", \"streetName\": \"Jr. Los Girasoles 789\",\"streetNameAlt\": 234,\"secEjec\": \"Sección 3\",\"codCuc\": \"GHI789\"}\r\n//   ],\r\n//   \"6\": [\r\n//   \t{\"cpm\": \"01-38-0010\", \"streetName\": \"Av. Los Jazmines 123\", \"streetNameAlt\": 567, \"secEjec\": \"Sección 1\", \"codCuc\": \"ABC123\"}\r\n//   ],\r\n//   \"7\": [\r\n//     {\"cpm\": \"01-58-0004\", \"streetName\": \"Calle Las Rosas 456\",\"streetNameAlt\": 789,\"secEjec\": \"Sección 2\",\"codCuc\": \"DEF456\"}, \r\n//     { \"cpm\": \"01-58-0003\", \"streetName\": \"Jr. Los Girasoles 789\", \"streetNameAlt\": 234, \"secEjec\": \"Sección 3\", \"codCuc\": \"GHI789\"},\r\n//   ],\r\n//   \"11\": [\r\n//   \t{\"cpm\": \"01-12-0028\", \"streetName\": \"Calle Las Rosas 456\",\"streetNameAlt\": 789,\"secEjec\": \"Sección 2\", \"codCuc\": \"DEF456\"}\r\n//   ],\r\n// }\r\n\r\n// const responseDivision = {\r\n//   \"6\": [\r\n//     {\"cod_pre\": \"prueba-69\", \"direccion\": \"Calle Las Rosas 456 con av. Argentina 123\"},\r\n//     {\"cod_pre\": \"prueba-70\", \"direccion\": \"Calle Las Rosas 457 con av. Argentina 123\"},\r\n//   ],\r\n//   \"11\": [\r\n//     {\"cod_pre\": \"prueba-71\", \"direccion\": \"Calle Las Rosas 456 con av. Argentina 123\"},\r\n//     {\"cod_pre\": \"prueba-72\", \"direccion\": \"Calle Las Rosas 457 con av. Argentina 123\"},\r\n//   ],\r\n//   \"2\": [\r\n//     {\"cod_pre\": \"prueba-73\", \"direccion\": \"Calle Las Rosas 456 con av. Argentina 123\"},\r\n//   ],\r\n//   \"1\": [\r\n//     {\"cod_pre\": \"01-34-0017\", \"direccion\": \"Calle Las Rosas 456 con av. Argentina 123\"},\r\n//   ],\r\n//   \"5\":[\r\n//     {\"cod_pre\": \"01-23-0036\", \"direccion\": \"Calle Las Rosas 456 con av. Argentina 123\"},\r\n//   ]\r\n// }\r\n\r\n\r\nconst requestToAttendState = \"por_atender\"\r\nconst requestsObservedState = \"observado\"\r\nconst requestsAttendState = \"atendido\"\r\n\r\n\r\n// Layers ids\r\nconst idLyrCatastroFiscal = \"CARTO_FISCAL_6806\"\r\nconst idLyrCfPredios = \"CARTO_FISCAL_6806_0\"\r\nconst idLyrCfLotes_pun = \"CARTO_FISCAL_6806_1\"\r\nconst idLyrCfEje_vial = \"CARTO_FISCAL_6806_2\"\r\nconst idLyrCfNumeracion = \"CARTO_FISCAL_6806_3\"\r\nconst idLyrCfArancel = \"CARTO_FISCAL_6806_4\"\r\nconst idLyrCfLotes = \"CARTO_FISCAL_6806_5\"\r\nconst idLyrCfUnidadesurbanas = \"CARTO_FISCAL_6806_6\"\r\nconst idLyrCfParques = \"CARTO_FISCAL_6806_7\"\r\nconst idLyrCfManzana = \"CARTO_FISCAL_6806_8\"\r\nconst idLyrCfSector= \"CARTO_FISCAL_6806_9\"\r\nconst idLyrActpuntoimg = \"ACTUALIZACION_DE_PUNTO_IMG_1890\"\r\nconst idLyrDistricts = \"limites_nacional_1821_2\"\r\n\r\nconst iconByState = {\r\n  \"por_atender\": {'icon': 'fas fa-pencil-alt', 'id': 'editRequestsCm', 'desc': \"Por atender\"},\r\n  \"observado\": {'icon': 'fas fa-pause', 'id': 'obsRequestsCm', 'desc': \"Observado\"},\r\n  \"atendido\": {'icon': 'fas fa-check', 'id': 'goodRequestsCm', 'desc': \"Atendido\"},\r\n}\r\n\r\n// Fields \r\nconst _UBIGEO_FIELD = \"UBIGEO\"\r\nconst _ID_LOTE_P_FIELD = \"ID_LOTE_P\"\r\nconst _COD_MZN_FIELD = \"COD_MZN\"\r\nconst _F_MZN_FIELD = \"F_MZN\"\r\nconst _COD_SECT_FIELD = \"COD_SECT\"\r\nconst _COD_PRE_FIELD = \"COD_PRE\"\r\nconst _COD_LOTE_FIELD = \"COD_LOTE\"\r\n\r\n\r\n// const samplePdf = \"https://www.africau.edu/images/default/sample.pdf\"\r\n\r\nlet toolbarCm\r\n\r\nconst params = new URLSearchParams(window.location.search)\r\nconst paramsApp = {}\r\n\r\nfor (let key of params.keys()) {\r\n  paramsApp[key] = params.get(key)\r\n}\r\n\r\n// console.log(paramsApp)\r\n// Styles\r\nconst symbolPuntoLote = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_SQUARE, \r\n  20, \r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID, \r\n    new Color([255, 0, 0]), 2), \r\n    new Color([0, 92, 230, 1]\r\n  )\r\n)\r\n\r\nconst symbolFusionLote = new SimpleFillSymbol(\r\n  SimpleFillSymbol.STYLE_SOLID,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0]),\r\n    2\r\n  ),\r\n  new Color([255, 255, 0, 0.25])\r\n)\r\n\r\nconst symbolEliminarLote = new SimpleFillSymbol(\r\n  SimpleFillSymbol.STYLE_DIAGONAL_CROSS,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([100, 100, 100]),\r\n    2\r\n  ),\r\n  new Color([229, 229, 229, 0.9])\r\n)\r\n\r\nconst symbolLoteSelected = new SimpleFillSymbol(\r\n  SimpleFillSymbol.STYLE_SOLID,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0, 0.75]),\r\n    4\r\n  ),\r\n  new Color([0, 255, 0, 0])\r\n)\r\n\r\nconst symbolDivisionLote = new SimpleLineSymbol(\r\n  SimpleLineSymbol.STYLE_DASH,\r\n  new Color([255, 0, 0]),\r\n  2\r\n)\r\n\r\nconst symbolPredio = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_SQUARE, \r\n  20, \r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID, \r\n    new Color([255, 0, 0]), 2), \r\n    new Color([235, 69, 95, 1]\r\n  )\r\n)\r\n\r\nconst symbolPredioSelected = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_SQUARE, 20,\r\n  new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID, \r\n  new Color([255, 0, 0]), 4),\r\n  new Color([0, 255, 0, 0])\r\n);\r\n\r\nconst symbolSnapPointCm = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_CROSS,\r\n  20,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0]),\r\n    2\r\n  ),\r\n  new Color([0, 255, 0, 0.25])\r\n)\r\n\r\n\r\n// Identificadores de graficos\r\nconst idGraphicPredioCm = \"graphicPredioCm2\"\r\nconst idGraphicPredioByDivison = \"graphicPredioByDivison\"\r\nconst idGraphicPredioSelectedCm = \"graphicPredioSelected\"\r\nconst idGraphicLoteCm = \"graphicLoteCm\"\r\nconst idGraphicLoteSelectedCm = \"graphicLoteSelectedCm\"\r\nconst idGraphicPuntoLote = \"graphicPuntoLote\"\r\nconst idGraphicFrenteLote = \"graphicFrenteLote\"\r\nconst idGraphicLineaDivision = \"graphicLineaDivision\"\r\nconst idGraphicLoteDeleteCm = \"graphicLoteDeleteCm\"\r\nconst idGraphicLabelLineaDivision = \"graphicLabelLineaDivision\"\r\nconst idGraphicLabelCodLote = \"graphicLabelCodLoteDivision\"\r\n\r\n// symbol by case\r\nconst symbolByCase = {\r\n  \"1\": {\"symbol\": symbolPredio},\r\n  \"2\": {\"symbol\": symbolPredio},\r\n  \"3\": {\"symbol\": symbolPredio},\r\n}\r\n\r\n// graphicsLayer main\r\nlet graphicLayerLineaDivision = new GraphicsLayer({\r\n  id: idGraphicLineaDivision,\r\n});\r\n\r\nlet graphicLayerLabelLineaDivision = new GraphicsLayer({\r\n  id: idGraphicLabelLineaDivision,\r\n});\r\n\r\n// let graphicLayerLabelCodLoteDivision = new GraphicsLayer({\r\n//   id: idGraphicLabelCodLote,\r\n// });\r\n\r\nlet graphicLayerPredioByDivison = new GraphicsLayer({\r\n  id: idGraphicPredioByDivison,\r\n});\r\n\r\n// To create a widget, you need to derive from BaseWidget.\r\nexport default declare([BaseWidget], {\r\n\r\n  // Custom widget code goes here\r\n\r\n  baseClass: 'carto-maintenance-wgt',\r\n  codRequestsCm: null,\r\n  currentTabActive: null,\r\n  layersMap: [],\r\n  queryUbigeo: paramsApp['ubigeo'] ? `${_UBIGEO_FIELD} = '${paramsApp['ubigeo']}'` : \"1=1\",\r\n  case: 0,\r\n  caseDescription: '',\r\n  lotesQuery: null,\r\n  idlotes: null,\r\n  arancel: null,\r\n  codigosPredios: null,\r\n  xy: [],\r\n  idxLines: 0,\r\n  idPredioDivision: '',\r\n  idPredioAcumulacion: '',\r\n  editToolbar: null,\r\n  queryRequests: {\r\n    ubigeo: paramsApp['ubigeo'],\r\n    limit: 1000\r\n  },\r\n\r\n  // add additional properties here\r\n\r\n  // methods to communication with app container:\r\n  postCreate () {\r\n    this.inherited(arguments);\r\n    console.log('CartoMaintenanceWgt::postCreate');\r\n    this._getAllLayers();\r\n    selfCm = this;\r\n    this._filterByDistrictCm();\r\n    this._startExtentByDistrictCm();\r\n    esri.bundle.toolbars.draw.addPoint = esri.bundle.toolbars.draw.addPoint + \"<br/>Pulsar <strong>CTRL</strong> para activar la alineación\";\r\n    esri.bundle.toolbars.draw.addShape = esri.bundle.toolbars.draw.addShape + \"<br/>Pulsar <strong>CTRL</strong> para activar la alineación\";\r\n    esri.bundle.toolbars.draw.resume = esri.bundle.toolbars.draw.resume + \"<br/>Pulsar <strong>CTRL</strong> para activar la alineación\";\r\n    esri.bundle.toolbars.draw.start = esri.bundle.toolbars.draw.start + \"<br/>Pulsar <strong>CTRL</strong> para activar la alineación\";\r\n  },\r\n  _getAllLayers() {\r\n    LayerInfos.getInstance(this.map, this.map.itemInfo).then(lang.hitch(this, function (layerInfosObj) {\r\n      this.layersMap = layerInfosObj;\r\n    }));\r\n  },\r\n\r\n  _showMessage(message, type = 'message') {\r\n    let title = `${this.nls._widgetLabel}: ${type}`\r\n    switch (type) {\r\n        case 'error':\r\n            new Message({\r\n                type: type,\r\n                titleLabel: title,\r\n                message: message,\r\n            });\r\n            break;\r\n        default:\r\n            new Message({\r\n                type: type,\r\n                titleLabel: title,\r\n                message: message,\r\n            });\r\n            break;\r\n    }\r\n\r\n  },\r\n\r\n  _showMessagePromise(messagetext) {\r\n    let deferred = new Deferred();\r\n    let message = new Message({\r\n        message: messagetext,\r\n        buttons: [{\r\n            label: \"Ok\",\r\n            onClick: function () {\r\n                deferred.resolve(true);\r\n                message.hide();\r\n            }\r\n        }]\r\n    });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _showMessageConfirm(){\r\n    let deferred = new Deferred();\r\n    let mensaje = new Message({\r\n      message: \"¿Estás seguro de que deseas continuar?\",\r\n      type: \"question\",\r\n      buttons: [{\r\n        label: \"Sí\",\r\n        onClick: function() {\r\n          deferred.resolve(true);\r\n          mensaje.hide();\r\n        }\r\n      }, {\r\n        label: \"No\",\r\n        onClick: function() {\r\n          deferred.resolve(false);\r\n          mensaje.hide();\r\n        }\r\n      }]\r\n    });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _filterByDistrictCm(){\r\n    // let queryUbigeo = `${_UBIGEO_FIELD} = '${paramsApp['ubigeo']}'`\r\n    let queryPredios = selfCm.layersMap.getLayerInfoById(idLyrCfPredios).getFilter()\r\n    queryPredios = queryPredios ? queryPredios + \" AND \" + selfCm.queryUbigeo : selfCm.queryUbigeo\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfPredios).setFilter(queryPredios)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfLotes_pun).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfEje_vial).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfNumeracion).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfArancel).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfLotes).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfUnidadesurbanas).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfParques).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfManzana).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfSector).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrActpuntoimg).setFilter(selfCm.queryUbigeo)\r\n  },\r\n\r\n  _startExtentByDistrictCm(){\r\n    let query = new Query()\r\n    query.where = selfCm.queryUbigeo\r\n\r\n    let qTask = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrDistricts).getUrl())\r\n\r\n    qTask.executeForExtent(query, function(results){\r\n      selfCm.map.setExtent(results.extent).then(function(){\r\n        // get the next scale value from the current scale\r\n        let homeWidget = WidgetManager.getInstance().getWidgetsByName(\"HomeButton\");\r\n        homeWidget[0].homeDijit.extent = selfCm.map.extent;\r\n      })       \r\n    }, function(error){\r\n      console.log(error)\r\n    })\r\n  },\r\n\r\n  startup() {\r\n    this.inherited(arguments);\r\n    console.log('CartoMaintenanceWgt::startup');\r\n\r\n    this.busyIndicator = BusyIndicator.create({\r\n      target: this.domNode.parentNode.parentNode,\r\n      backgroundOpacity: 0\r\n    });\r\n  },\r\n\r\n  _callApiRestServices(baseUrl, params){\r\n    let url = new URL(baseUrl);\r\n    Object.keys(params).forEach(key => url.searchParams.append(key,params[key]));\r\n\r\n    return fetch(url)\r\n      .then(response => {\r\n        if (!response) {\r\n          selfCm.busyIndicator.hide();\r\n          throw new Error(\"HTTP error \" + response.status);\r\n        }\r\n        return response.json();\r\n      })\r\n      .catch(function(err) {\r\n        selfCm.busyIndicator.hide();\r\n        console.log(\"An error occurred while fetching the data.\");\r\n      });    \r\n  },\r\n\r\n  _getRequestsTrayDataCm(responseData, state){\r\n    // Reemplazar todo el metodo para capturar datos de servicio\r\n    // let response = selfCm._fetchServices(selfCm.config.applicationListUrl, {'ubigeo': paramsApp['ubigeo']})\r\n    // let response = selfCm._fetchServices(selfCm.config.applicationListUrl, {userId: 1})\r\n    // console.log(response)\r\n    let data = responseData.filter((i) => i.status == state);\r\n    return data\r\n  },\r\n\r\n  _loadIniRequestsCm(){\r\n    dojo.query(`#${requestToAttendState}`)[0].click()\r\n  },\r\n\r\n  _parseDateStringtoFormat(dateString){\r\n    let date = new Date(dateString)\r\n    let day = date.getDate()\r\n    let month = date.getMonth() + 1\r\n    let year = date.getFullYear()\r\n    return `${day}/${month}/${year}`\r\n  },\r\n\r\n  _loadRequestsByEventCm(evt){\r\n    let params = {\r\n      ubigeo : paramsApp['ubigeo'],\r\n    }\r\n    let target = evt.target\r\n    selfCm._loadRequestsCm(params, target)\r\n  },\r\n\r\n  _loadDocSupportCm(){\r\n    let urlStatusRequest = `${selfCm.config.applicationListUrl}/${selfCm.codRequestsCm}`\r\n    selfCm._callApiRestServices(urlStatusRequest, {}).then(function (result) {\r\n      try {\r\n        dojo.query(\"#showInfoDocCm\")[0].value = result.support     \r\n      } catch (error) {\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(error.message, type=\"error\")\r\n      }\r\n\r\n    })\r\n  },\r\n\r\n  _loadRequestsCm(evt){\r\n    selfCm.busyIndicator.show();\r\n    selfCm._callApiRestServices(selfCm.config.applicationListUrl, selfCm.queryRequests).then(response => {\r\n      // ----------------------------------------------\r\n      // comentar esta linea cuando se pase a produccion\r\n      // response = dataRequestsToAttendCm2\r\n      // ----------------------------------------------\r\n      response = response['results'].slice(20)\r\n      console.log(response)\r\n      selfCm.currentTabActive = evt.target.id;\r\n      let estado = iconByState[evt.target.id].desc;\r\n      let data = selfCm._getRequestsTrayDataCm(response, estado);\r\n      let dataHtml = data.map((i) => `<tr>\r\n                                        <td>${i.id}</td>\r\n                                        <td>${i.type}</td>\r\n                                        <td>${i.lands.map(lnd => lnd['cpm']).join(',')}</td>\r\n                                        <td>${selfCm._parseDateStringtoFormat(i.date)}</td>\r\n                                        <td>\r\n                                          <button id=\"${iconByState[evt.target.id].id}\" value=\"${i.idType}\" class=\"stateRequestClsCm\">\r\n                                            <i class=\"${iconByState[evt.target.id].icon}\"></i>\r\n                                          </button>\r\n                                        </td>\r\n                                      </tr>`\r\n                                      )\r\n      let tbody = dojo.create('tbody', {innerHTML: dataHtml.join('')});\r\n      let tb = dojo.query(\".tableRequestClsCm\")[0]\r\n      if (tb.getElementsByTagName(\"tbody\").length > 0){\r\n        selfCm.tableRequestApCm.removeChild(tb.getElementsByTagName(\"tbody\")[0])\r\n      }\r\n      selfCm.tableRequestApCm.appendChild(tbody);\r\n      if(evt.target.id == requestToAttendState){\r\n        dojo.query(\".stateRequestClsCm\").on('click', selfCm._openFormCase);\r\n      }\r\n      if(evt.target.id == requestsAttendState){\r\n        dojo.query(\".stateRequestClsCm\").on('click', selfCm._openFormResult);\r\n      }\r\n\r\n      dojo.query(\".tablinksCm\").removeClass(\"active\");\r\n      evt.target.classList.add(\"active\");\r\n      selfCm.busyIndicator.hide();\r\n    })\r\n  },\r\n\r\n  _zoomToPredSelectedEvt(evt){\r\n    let cod_pred = evt.currentTarget.children[0].innerHTML.split(': ')[1]\r\n    selfCm._zoomToPredSelected(cod_pred)\r\n  },\r\n\r\n  _zoomToPredSelected(cod_pred){\r\n    selfCm._removeLayerGraphic(idGraphicPredioSelectedCm);\r\n    // let cod_pred = evt.currentTarget.children[0].innerHTML.split(': ')[1]\r\n    let prediosLayer = selfCm.layersMap.getLayerInfoById(idLyrCfPredios);\r\n    let propertyLayer = new FeatureLayer(prediosLayer.getUrl(), {\r\n      mode: FeatureLayer.MODE_ONDEMAND,\r\n      outFields: [\"*\"]\r\n    });\r\n    // crear una consulta para seleccionar la fila deseada\r\n    let query = new Query();\r\n    query.where = `${_UBIGEO_FIELD} = '${paramsApp['ubigeo']}' and ${_COD_PRE_FIELD} = '${cod_pred}'`\r\n    // console.log(query.where)\r\n    \r\n    // propertyLayer.setSelectionSymbol(symbolPredioSelected);\r\n    // seleccionar la fila\r\n    propertyLayer.selectFeatures(query, FeatureLayer.SELECTION_NEW, function(results){\r\n      let featureSelected = new GraphicsLayer({\r\n        id: idGraphicPredioSelectedCm\r\n      });\r\n      featureSelected.add(results[0]);\r\n      selfCm.map.addLayer(featureSelected);\r\n      selfCm.map.centerAt(results[0].geometry);\r\n\r\n      // Parpadeo de seleccion\r\n      let interval = setInterval(function() {\r\n        if (featureSelected.graphics[0].symbol === symbolPredioSelected) {\r\n          featureSelected.graphics[0].setSymbol(null);\r\n        } else {\r\n          featureSelected.graphics[0].setSymbol(symbolPredioSelected);\r\n        }\r\n      }, 200);\r\n      setTimeout(function(){\r\n        clearInterval(interval);\r\n        selfCm._removeLayerGraphic(idGraphicPredioSelectedCm);\r\n      }, 2000);\r\n      \r\n    });\r\n\r\n\r\n  },\r\n  \r\n  _openSupportingDocument(evt){\r\n    window.open(evt.currentTarget.value, '_blank').focus();\r\n  },\r\n\r\n  _zoomExtentToLote(cod_pre){\r\n    let query = new Query()\r\n\r\n    query.where = `${_UBIGEO_FIELD} = '${paramsApp['ubigeo']}' and ${_COD_PRE_FIELD} in ('${(cod_pre.split(',')).join(\"', '\")}')`\r\n    // console.log(query.where)\r\n    // fields return\r\n    query.outFields = [_ID_LOTE_P_FIELD, _COD_MZN_FIELD, _COD_SECT_FIELD]\r\n    query.returnGeometry = false\r\n    // Return distinct values\r\n    query.returnDistinctValues = true\r\n\r\n    let qTask = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrCfPredios).getUrl())\r\n\r\n    qTask.execute(query, function(results){\r\n      let idLote = results.features.map((i) => i.attributes[_ID_LOTE_P_FIELD])\r\n      selfCm.idlotes = idLote\r\n      let idmanzana = results.features.map((i) => i.attributes[_COD_MZN_FIELD])\r\n      let idsector = results.features.map((i) => i.attributes[_COD_SECT_FIELD])\r\n      let queryLote = new Query()\r\n      queryLote.where = `${_ID_LOTE_P_FIELD} in (${idLote.join(\",\")}) and (${_UBIGEO_FIELD} = ${paramsApp['ubigeo']})`\r\n      selfCm.lotesQuery = queryLote.where\r\n      selfCm.arancel = `${_UBIGEO_FIELD} = '${paramsApp.ubigeo}' and (${_COD_MZN_FIELD} in (${idmanzana.join(\",\")})) and (${_COD_SECT_FIELD} IN (${idsector.join(\",\")}))`\r\n      queryLote.returnGeometry = true\r\n      let qTaskLote = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl())\r\n      qTaskLote.executeForExtent(queryLote, function(results){\r\n        selfCm.map.setExtent(results.extent.expand(2)).then(function(){\r\n          qTaskLote.execute(queryLote, function(results){\r\n            let arr = []\r\n            for (let i of results.features) {\r\n              arr.push(i.geometry)\r\n            }\r\n            let response = selfCm._unionFeatures(arr)\r\n            let graphic = new Graphic(response, symbolLoteSelected);\r\n            let featureSelected = new GraphicsLayer({\r\n              id: idGraphicLoteSelectedCm\r\n            });\r\n            featureSelected.add(graphic);\r\n            selfCm.map.addLayer(featureSelected);\r\n            \r\n            // Parpadeo de seleccion\r\n            let interval = setInterval(function() {\r\n              if (featureSelected.graphics[0].symbol === symbolLoteSelected) {\r\n                featureSelected.graphics[0].setSymbol(null);\r\n              } else {\r\n                featureSelected.graphics[0].setSymbol(symbolLoteSelected);\r\n              }\r\n            }, 200);\r\n            setTimeout(function(){\r\n              clearInterval(interval);\r\n              selfCm._removeLayerGraphic(idGraphicLoteSelectedCm);\r\n            }, 2000);\r\n            \r\n          })\r\n        })\r\n      })\r\n    })\r\n  },\r\n  _zoomHomeRequests(){\r\n    selfCm._zoomExtentToLote(selfCm.codigosPredios)\r\n  },\r\n\r\n  // _getDataPredioByRequests(id_solicitud){\r\n  //   // get data predio by id_solicitud\r\n  //   let data = dataByRequest2[id_solicitud];\r\n  //   // console.log(data)\r\n  //   return data\r\n  // },\r\n\r\n  _populateFormsByPredio(id_solicitud){\r\n    let url = `${selfCm.config.landsByApplicationUrl}/${id_solicitud}`\r\n    selfCm._callApiRestServices(url, {}).then(response => {\r\n      // -----------------------------------------------\r\n      // Eliminar la siguiente linea cuando existan casos de prueba\r\n      // response['results'] = selfCm._getDataPredioByRequests(id_solicitud)\r\n      // -----------------------------------------------\r\n      if (response.results.length == 0) {\r\n        // Escribir mensaje de error\r\n        selfCm._showMessage(`No existe registro de los predios asociados a esta solicitud: ${id_solicitud}`, type=\"error\");\r\n        return\r\n      }\r\n      let rows = response['results'].map((i) => {\r\n        return `<div class=\"caseInfoClsCm\">\r\n          <div class=\"headPredInfoClsCm\">\r\n            <span class=\"alignVCenter\">Predio: ${i.cpm}</span>\r\n          </div>\r\n          <div class=\"bodyPredInfoClsCm\">\r\n            <label for=\"direccion\">Dirección:</label>\r\n            <input type=\"text\" id=\"direccion\" name=\"direccion\" value=\"${i.streetName}\" readonly>\r\n  \r\n          </div>\r\n        </div>`\r\n      })\r\n\r\n      dojo.query('.CtnPredInfoClsCm')[0].innerHTML = rows.join('')\r\n      dojo.query(\".headPredInfoClsCm\").on('click', selfCm._zoomToPredSelectedEvt)\r\n      selfCm.codigosPredios = response['results'].map((i) => i.cpm).join(',')\r\n      // console.log(selfCm.codigosPredios)\r\n      selfCm._zoomExtentToLote(selfCm.codigosPredios)\r\n      // selfCm._zoomHomeRequests()\r\n    })\r\n  },\r\n\r\n  _openFormCase(evt){\r\n    if (evt.currentTarget.id == \"editRequestsCm\"){\r\n      let row = dojo.query(evt.currentTarget).closest(\"tr\")[0];\r\n      let rowList = dojo.query(\"td\", row).map(td => td.innerHTML);\r\n      selfCm.codRequestsCm = rowList[0]\r\n      selfCm.caseDescription = rowList[1]\r\n      dojo.query('#titleCaseCm')[0].innerHTML = `<span>${selfCm.caseDescription} <span class=\"fa fa-search\" style=\"font-size: 15px\"></span></span>`\r\n      selfCm._populateFormsByPredio(selfCm.codRequestsCm)\r\n      // dojo.query('.codPredClsCm')[0].innerHTML = `<span class=\"alignVCenter\">Predios: ${rowList[2]}</span>`\r\n      // dojo.query('.headPredInfoClsCm')[0].innerHTML = `<span class=\"alignVCenter\">Predio: ${rowList[2]}</span>`\r\n\r\n      selfCm.case = evt.currentTarget.value\r\n      switch (selfCm.case) {\r\n        case \"1\":\r\n          selfCm.reasignarApCm.classList.toggle('active')\r\n          break;\r\n        case \"2\":\r\n          selfCm.fusionApCm.classList.toggle('active')\r\n          break\r\n        case \"3\":\r\n          selfCm.divisionApCm.classList.toggle('active')\r\n          break\r\n        case \"4\":\r\n          selfCm.actGeomApCm.classList.toggle('active')\r\n          break\r\n        case \"5\":\r\n          selfCm.eliminacionApCm.classList.toggle('active')\r\n          break\r\n        default:\r\n          break;\r\n      }\r\n\r\n      // selfCm.codigosPredios = rowList[2]\r\n      // selfCm._zoomHomeRequests()\r\n      selfCm.resultCtnApCm.classList.remove('active')\r\n      selfCm.obsCtnApCm.classList.remove('active')\r\n      selfCm.requestTrayApCm.classList.remove('active')\r\n      selfCm.casesCtnApCm.classList.toggle('active')\r\n      selfCm._loadDocSupportCm()\r\n\r\n    } else if (evt.currentTarget.id == 'backTrayCm' || evt.currentTarget.id == 'backTrayResultCm') {\r\n      // desactivar el toolbarCm de edicion si esta activado\r\n      // toolbarCm.deactivate()\r\n      toolbarCm.deactivate();\r\n\r\n      // deshabilitar snapping\r\n      selfCm.map.disableSnapping()\r\n      selfCm.bodyTbLinesDvApCm.innerHTML = ''\r\n      // selfCm.CtnPrediosDvApCm.style.display = 'none'\r\n      selfCm.bodyTbPrediosDvApCm.innerHTML = ''\r\n      // selfCm.map.enableSnapping({\r\n      //   snapPoint: false,\r\n      //   snapLine: false,\r\n      //   snapPolygon: false\r\n      // });\r\n\r\n      dojo.query(\".caseClsCm\").removeClass(\"active\")\r\n      // remove all graphics layer if exist\r\n      selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n      selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n      selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n      selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n      selfCm._removeLayerGraphic(idGraphicPredioSelectedCm);\r\n      selfCm._removeLayerGraphic(idGraphicLabelCodLote)\r\n      selfCm.bodyTbDatosLoteDvApCm.innerHTML = ''\r\n\r\n      // selfCm._removeLayerGraphic(idGraphicLineaDivision)\r\n      graphicLayerLineaDivision.clear();\r\n      graphicLayerLabelLineaDivision.clear();\r\n      graphicLayerPredioByDivison.clear();\r\n\r\n      selfCm.lotesQuery = null\r\n      selfCm.arancel = null\r\n      selfCm.xy = null\r\n\r\n      selfCm.casesCtnApCm.classList.remove('active')\r\n      selfCm.resultCtnApCm.classList.remove('active')\r\n      selfCm.obsCtnApCm.classList.remove('active')\r\n      selfCm.requestTrayApCm.classList.toggle('active')\r\n      selfCm._loadIniRequestsCm();\r\n    }\r\n    \r\n    // selfCm.casesCtnApCm.classList.remove('active')\r\n    // selfCm.resultCtnApCm.classList.remove('active')\r\n    // selfCm.obsCtnApCm.classList.remove('active')\r\n    // selfCm.requestTrayApCm.classList.toggle('active')\r\n  },\r\n  _openFormObs(){\r\n    // console.log('aqui')\r\n    selfCm.textAreaObsApCm.value = ''\r\n    let imageDiv = dojo.query(\".thumbnailClsCm\")[0];\r\n    imageDiv.style.backgroundImage = \"none\";\r\n    imageDiv.innerHTML = \"<span><i class='far fa-image'></i></span>\";\r\n    dojo.query('#headeRequestsCtnCm')[0].innerHTML = `<span class=\"alignVCenter\">Solicitud: ${selfCm.codRequestsCm}</span>`\r\n    selfCm.casesCtnApCm.classList.toggle(\"active\");\r\n    selfCm.obsCtnApCm.classList.toggle('active')\r\n  },\r\n\r\n  _FormResult(id_solicitud, caseCm){\r\n    let urlPredioResults = `${selfCm.config.resultsByApplication}/${id_solicitud}`\r\n    selfCm._callApiRestServices(urlPredioResults, {}).then(function (response) {\r\n      try {\r\n        // ----------------------------------------------------\r\n        // Comentar esta linea cuando se consuma el servicio\r\n        // response = responseDivision[id_solicitud]\r\n        // ----------------------------------------------------\r\n        selfCm.bodyTbResultsApCm.innerHTML = ''\r\n        dojo.query(\"#titleCaseResult\")[0].innerHTML = `<span>Solicitud ${id_solicitud}: ${caseCm}</span>`\r\n\r\n        let rows = response.results.map((predio, index) => {\r\n          return `<tr><td class=\"center-aligned\">${index + 1}</td>\r\n                  <td>${predio['cpm']}</td>\r\n                  <td>${predio['address']}</td>\r\n                  <td class=\"center-aligned\">\r\n                    <span id=\"${predio['cpm']}_search\" class=\"zoomPredioResultClsCm\"><i class=\"fas fa-search\"></i></span>\r\n                  </td></tr>`        \r\n        })\r\n        selfCm.bodyTbResultsApCm.innerHTML = rows.join('')\r\n        dojo.query('.zoomPredioResultClsCm').on('click', selfCm._centerAtPredioResult)\r\n        selfCm.casesCtnApCm.classList.remove(\"active\");\r\n        selfCm.obsCtnApCm.classList.remove('active')\r\n        selfCm.requestTrayApCm.classList.remove('active')\r\n        selfCm.resultCtnApCm.classList.toggle('active')\r\n        selfCm.busyIndicator.hide()\r\n      }\r\n      catch (error) {\r\n        console.log(error)\r\n      }\r\n    })\r\n  },\r\n\r\n  _centerAtPredioResult(evt){\r\n    let cod_pre = evt.currentTarget.id.replace('_search', '')\r\n    selfCm._zoomToPredSelected(cod_pre)\r\n  },\r\n\r\n  _openFormResult(evt){\r\n    let row = dojo.query(evt.currentTarget).closest(\"tr\")[0];\r\n    let rowList = dojo.query(\"td\", row).map(td => td.innerHTML);\r\n    selfCm.codRequestsCm = rowList[0]\r\n    selfCm.caseDescription = rowList[1]\r\n    selfCm._FormResult(selfCm.codRequestsCm, selfCm.caseDescription)\r\n  },\r\n\r\n  // Toolbar function\r\n  _createToolbar() {\r\n    toolbarCm = new Draw(selfCm.map);\r\n    toolbarCm.on(\"draw-end\", selfCm._addToMap);\r\n  },\r\n\r\n  _addToMap(evt) {\r\n    if (evt.geometry.type === \"point\") {\r\n      let screenPoint = selfCm.map.toScreen(evt.geometry)\r\n      let deferred = selfCm.map.snappingManager.getSnappingPoint(screenPoint);\r\n      deferred.then(function(value){\r\n        if(value !== undefined){\r\n          let point_g = webMercatorUtils.webMercatorToGeographic(new Point(value));\r\n          let graphic = new Graphic(point_g, symbolByCase[selfCm.case].symbol);\r\n          // si es el caso reasignacion de predio\r\n          if (selfCm.case == 1 || selfCm.case == 2) {\r\n            \r\n            let graphicLayer = new GraphicsLayer({\r\n              id: idGraphicPredioCm,\r\n            });\r\n            graphicLayer.add(graphic);\r\n            selfCm.map.addLayer(graphicLayer);\r\n            selfCm.xy = [point_g.x, point_g.y]\r\n          }\r\n          else if (selfCm.case == 3){\r\n            graphic['attributes'] = {id: selfCm.idPredioDivision}\r\n            graphicLayerPredioByDivison.add(graphic);\r\n          }\r\n          selfCm.map.setInfoWindowOnClick(true);\r\n          toolbarCm.deactivate();\r\n        } else {\r\n          alert(selfCm.nls.errorSnapingLocate);\r\n        }\r\n      }, function(error){\r\n        console.log(error);\r\n      });\r\n    } else if (evt.geometry.type === \"polyline\") {\r\n      selfCm.idxLines = selfCm.idxLines + 1\r\n      let nameIdLine = `Polyline_${selfCm.idxLines}`\r\n      let graphic = new Graphic(evt.geometry, symbolDivisionLote, {id: nameIdLine});\r\n      graphicLayerLineaDivision.add(graphic);\r\n      selfCm._populateTableDrawLine(nameIdLine)\r\n      selfCm._addNameToLine(nameIdLine, evt.geometry)\r\n      selfCm.map.addLayer(graphicLayerLineaDivision);\r\n      selfCm.map.setInfoWindowOnClick(true);\r\n      toolbarCm.deactivate();\r\n    }\r\n  },\r\n\r\n  _removeLayerGraphic(layerId){\r\n    if (selfCm.map.graphicsLayerIds.includes(layerId)) {\r\n      selfCm.map.removeLayer(selfCm.map.getLayer(layerId));\r\n    }\r\n  },\r\n\r\n  _activateTool() {\r\n    selfCm._activateSnappingByReasignar();\r\n    selfCm.map.setInfoWindowOnClick(false);\r\n    selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n    toolbarCm.activate(Draw[\"POINT\"]);\r\n  },\r\n\r\n  _activateToolAcumulacion(evt){\r\n    let id = evt.currentTarget.id\r\n    selfCm.idPredioAcumulacion = id\r\n    selfCm.map.setInfoWindowOnClick(false);\r\n    selfCm._activateSnappingByAcumulacion();\r\n    selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n    toolbarCm.activate(Draw[\"POINT\"]);\r\n  },\r\n\r\n  _activateToolLinesDivision(){\r\n    selfCm.map.setInfoWindowOnClick(false);\r\n    selfCm._activateSnappingByDivision();\r\n    selfCm._removeLayerGraphic(idGraphicLoteCm)\r\n    selfCm._removeLayerGraphic(idGraphicPuntoLote)\r\n    selfCm._removeLayerGraphic(idGraphicFrenteLote)\r\n    selfCm._removeLayerGraphic(idGraphicLabelCodLote)\r\n    selfCm.bodyTbDatosLoteDvApCm.innerHTML = ''\r\n    selfCm.bodyTbPrediosDvApCm.innerHTML = ''\r\n    graphicLayerPredioByDivison.clear()\r\n    toolbarCm.activate(Draw[\"POLYLINE\"]);\r\n  },\r\n\r\n  _activateSnappingByReasignar() {\r\n    let cflayer = selfCm.layersMap.getLayerInfoById(idLyrCfLotes_pun)\r\n    let propertyLayer = new FeatureLayer(cflayer.getUrl(), {\r\n      mode: FeatureLayer.MODE_ONDEMAND,\r\n      outFields: [\"*\"]\r\n    });\r\n    let snapManager = selfCm.map.enableSnapping({\r\n      // alwaysSnap: true,\r\n      // snapKey: keys.CTRL,\r\n      snapPointSymbol: symbolSnapPointCm,\r\n      tolerance: 5,\r\n    });\r\n    // get layerinfo by id of layer to snap\r\n    let layerInfos = [{\r\n      layer: propertyLayer\r\n    }];\r\n    \r\n    snapManager.setLayerInfos(layerInfos);\r\n  },\r\n\r\n  _activateSnappingByAcumulacion(){\r\n    let graphicLayerPuntoLote = selfCm.map.getLayer(idGraphicPuntoLote)\r\n    let graphicsLayerInfo = new esri.layers.LayerInfo({\r\n      id: graphicLayerPuntoLote.id, // El id del `GraphicsLayer`\r\n      name: graphicLayerPuntoLote.name, // El nombre del `GraphicsLayer`\r\n      layer: graphicLayerPuntoLote // El `GraphicsLayer` a utilizar\r\n    });\r\n\r\n    // Agregar el `LayerInfo` al mapa y habilitar el snapping\r\n    selfCm.map.enableSnapping({\r\n      layerInfos: [graphicsLayerInfo], // Agregar el `LayerInfo` al mapa\r\n      // alwaysSnap: true,\r\n      snapPointSymbol: symbolSnapPointCm,\r\n      tolerance: 5,\r\n    });\r\n  },\r\n\r\n  _activateSnappingByDivision(){\r\n    let graphicsLayerInfo = new esri.layers.LayerInfo({\r\n      id: graphicLayerLineaDivision.id, // El id del `GraphicsLayer`\r\n      name: graphicLayerLineaDivision.name, // El nombre del `GraphicsLayer`\r\n      layer: graphicLayerLineaDivision // El `GraphicsLayer` a utilizar\r\n    });\r\n\r\n    let cflayer = selfCm.layersMap.getLayerInfoById(idLyrCfLotes)\r\n    let propertyLayer = new FeatureLayer(cflayer.getUrl(), {\r\n      mode: FeatureLayer.MODE_ONDEMAND,\r\n      outFields: [\"*\"]\r\n    });\r\n\r\n    let layerInfos = [{\r\n      layer: propertyLayer\r\n    }, graphicsLayerInfo];\r\n\r\n    // Agregar el `LayerInfo` al mapa y habilitar el snapping\r\n    selfCm.map.enableSnapping({\r\n      layerInfos: layerInfos, // Agregar el `LayerInfo` al mapa\r\n      // alwaysSnap: true,\r\n      snapPointSymbol: symbolSnapPointCm,\r\n      tolerance: 5,\r\n    });\r\n  },\r\n\r\n  // crear una funcion que permita dos poligonos aceptando dos poligonos json como parametros\r\n  // la funcion debe retornar un poligono json\r\n  _unionFeatures(arr) {  \r\n    let union = geometryEngine.union(arr);\r\n    return union;\r\n  },\r\n\r\n  // Generate function of create graphic by query polygon featurelayer\r\n  _ApplyAcumulacionLotes() {\r\n    selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n    selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n    selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n    selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n    selfCm._removeLayerGraphic(idGraphicLoteDeleteCm);\r\n\r\n    // Creamos grafico de lote fusionado\r\n    let graphicLayerLoteFusion = new GraphicsLayer({\r\n      id: idGraphicLoteCm\r\n    });\r\n\r\n    let query = new Query();\r\n    query.where = selfCm.lotesQuery\r\n    query.outFields = [\"*\"];\r\n    query.returnGeometry = true\r\n    let qTask = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl());\r\n    qTask.execute(query, function (results) {\r\n      let arr = []\r\n      for (let i of results.features) {\r\n        arr.push(i.geometry)\r\n      }\r\n      let response = selfCm._unionFeatures(arr)\r\n      let graphic = new Graphic(response, symbolFusionLote);\r\n\r\n      graphicLayerLoteFusion.add(graphic);\r\n      selfCm.map.addLayer(graphicLayerLoteFusion);\r\n      selfCm.map.setExtent(graphic._extent.expand(1.5), true);\r\n      let urlLotes = selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl()\r\n      selfCm._etiquetasCodLote(urlLotes, _COD_LOTE_FIELD, selfCm.arancel, \"max\", [response], selfCm.bodyTbDatosLoteFsApCm)\r\n    }).then(function () {\r\n      let query = new Query();\r\n      query.where = selfCm.arancel\r\n      // especificar los campos devueltos\r\n      query.outFields = [_UBIGEO_FIELD, _F_MZN_FIELD];\r\n      query.returnGeometry = true\r\n      // query with order by fields\r\n      query.orderByFields = [_F_MZN_FIELD];\r\n      let qTask = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrCfArancel).getUrl());\r\n      qTask.execute(query, function (results) {\r\n        // Creamos grafico de punto lote\r\n        let graphicLayerPuntoLote = new GraphicsLayer({\r\n          id: idGraphicPuntoLote\r\n        });\r\n        // creamos grafico de frente de lote\r\n        let graphicLayerFrenteLote = new GraphicsLayer({\r\n          id: idGraphicFrenteLote\r\n        });\r\n        let graphicFusion = selfCm.map.getLayer(idGraphicLoteCm)\r\n        let frentes = {}\r\n        for (let row of results.features){\r\n          let isItc = geometryEngine.intersects(row.geometry, graphicFusion.graphics[0].geometry)\r\n          if (!isItc){\r\n            continue\r\n          }\r\n          // saber si un key esta dentro del objeto frentes\r\n          if (!frentes.hasOwnProperty(row.attributes[_F_MZN_FIELD])){\r\n            frentes[row.attributes[_F_MZN_FIELD]] = row.geometry;\r\n          }\r\n          else{\r\n            let unionFrentes = geometryEngine.union([frentes[row.attributes[_F_MZN_FIELD]], row.geometry])\r\n            frentes[row.attributes[_F_MZN_FIELD]] = unionFrentes;\r\n          }\r\n        }\r\n        for (let idx in frentes){\r\n          // interseccion entre frentes y lote\r\n          let itcFrentesByLotes = geometryEngine.intersect(frentes[idx], graphicFusion.graphics[0].geometry)\r\n          // Generate symbol by line with random colors\r\n\r\n          // polilinea de frentes resultantes\r\n          let polyline = new Polyline({\r\n            paths: itcFrentesByLotes.paths,\r\n            spatialReference: {wkid: 4326}\r\n          });\r\n          \r\n          let polylineOne = null;\r\n          if (polyline.paths.length > 1){\r\n            polylineOne = selfCm._getLongestPolyline(polyline)\r\n            \r\n          }else{\r\n            polylineOne = polyline\r\n          }\r\n\r\n          // calculamos el punto medio de la polilinea\r\n          let puntoLoteTurf = selfCm._findMidpoint(polylineOne)\r\n\r\n          // crear un punto en el mapa\r\n          let puntoLote = new Point({\r\n            x: puntoLoteTurf.geometry.coordinates[0],\r\n            y: puntoLoteTurf.geometry.coordinates[1],\r\n            spatialReference: {wkid: 4326}\r\n          })\r\n\r\n          // Agregar el punto p al mapa          \r\n          let puntoLoteGraphic = new Graphic(puntoLote, symbolPuntoLote)\r\n          graphicLayerPuntoLote.add(puntoLoteGraphic)\r\n\r\n          // console.log(point)\r\n          const symbolFrenteLote = new SimpleLineSymbol(\r\n            SimpleLineSymbol.STYLE_SOLID,\r\n            new Color(\r\n              [\r\n                Math.floor(Math.random() * 255), \r\n                Math.floor(Math.random() * 255), \r\n                Math.floor(Math.random() * 255)]),\r\n            5\r\n          )\r\n          let frente = new Graphic(polyline, symbolFrenteLote);\r\n          graphicLayerFrenteLote.add(frente);\r\n        }\r\n        \r\n        selfCm.map.addLayer(graphicLayerFrenteLote);\r\n        selfCm.map.addLayer(graphicLayerPuntoLote);\r\n        selfCm._populateTablePredio(selfCm.bodyTbPrediosFsApCm, selfCm._activateToolAcumulacion)\r\n      })\r\n    });\r\n  },\r\n\r\n  _getMidpoint(polyline) {\r\n    let length = geometryEngine.geodesicLength(polyline, \"meters\");\r\n    let midpoint = geometryEngine.geodesicDensify(polyline, length/2, \"meters\").getPoint(0, 0);\r\n    return midpoint;\r\n  },\r\n\r\n  _findMidpoint(polyline) {\r\n    let lengthPolylineChunk = geometryEngine.geodesicLength(polyline, \"meters\")\r\n    let line = turf.lineString(polyline.paths[0]);\r\n    let options = {units: 'meters'};\r\n    let along = turf.along(line, lengthPolylineChunk/2, options);\r\n    return along\r\n  },\r\n\r\n  // funcion que recibe una polilinea con muchas partes y retorna la parte mas larga como una polilinea\r\n  _getLongestPolyline(polyline){\r\n    let paths = polyline.paths\r\n    let longestPath = 0\r\n    let response = null;\r\n    for (let path of paths){\r\n      let polylineChunk = new Polyline({\r\n        paths: [path],\r\n        spatialReference: {wkid: 4326}\r\n      });\r\n      let lengthPolylineChunk = geometryEngine.geodesicLength(polylineChunk, \"meters\")\r\n      if (lengthPolylineChunk > longestPath){ \r\n        longestPath = lengthPolylineChunk\r\n        response = polylineChunk\r\n      }\r\n    }\r\n    return response\r\n  },\r\n\r\n  // --------------------------------------------------------------\r\n  // SUBDIVISION DE LOTES\r\n  // function that allows dividing a polygon from cutting lines, the parameters will be a polygon and several lines in json format\r\n  // the function must return a polygon json\r\n  // --------------------------------------------------------------\r\n  _dividePolygon(poly, lines) {\r\n    let divide = geometryEngine.cut(poly, lines);\r\n    return divide;\r\n  },\r\n\r\n  _populateTableDrawLine(idLine){\r\n    let row = `<td class=\"center-aligned\">${selfCm.idxLines}</td>\r\n              <td contenteditable=\"true\" id=\"${idLine}_name\">${idLine}</td>\r\n              <td class=\"center-aligned\">\r\n                <span id=\"${idLine}_ext\"><i class=\"fas fa-search\"></i></span>\r\n              </td>\r\n              <td class=\"center-aligned\">\r\n                <span id=\"${idLine}_del\" style=\"color: #FF5722;\"><i class=\"far fa-trash-alt\"></i></span>\r\n              </td>`\r\n    let tr = dojo.create('tr');\r\n    tr.id = idLine;\r\n    tr.innerHTML = row;\r\n    tr.style.cursor = \"pointer\";\r\n    selfCm.bodyTbLinesDvApCm.appendChild(tr)\r\n    dojo.query(`#${idLine}_del`).on('click', selfCm._deleteRowLine);\r\n    dojo.query(`#${idLine}_ext`).on('click', selfCm._zoonToLineDivision);\r\n    dojo.query(`#${idLine}_name`).on('input', selfCm._editaNameLineDivision);\r\n  },\r\n\r\n  _deleteRowLine(evt) {\r\n    let id = evt.currentTarget.id.replace('_del', '');\r\n    let elem = dojo.query(`#${id}`);\r\n    let graphic = graphicLayerLineaDivision.graphics.filter(item => item.attributes.id == id);\r\n    graphicLayerLineaDivision.remove(graphic[0])\r\n    let graphicLabel = graphicLayerLabelLineaDivision.graphics.filter(item => item.attributes.id == id);\r\n    graphicLayerLabelLineaDivision.remove(graphicLabel[0])\r\n    // graphicLayerLineaDivision.graphics = graphics;\r\n    // selfCm.map.removeLayer(self_lw.map.getLayer(id));\r\n    elem[0].parentNode.removeChild(elem[0]);\r\n  },\r\n\r\n  _addNameToLine(name, polylineGeom){\r\n    let polylineGeomUtm = webMercatorUtils.webMercatorToGeographic(polylineGeom)\r\n    let midPoint = selfCm._findMidpoint(polylineGeomUtm)\r\n\r\n    let pointLabel = new Point({\r\n      x: midPoint.geometry.coordinates[0],\r\n      y: midPoint.geometry.coordinates[1],\r\n      spatialReference: {wkid: 4326}\r\n    })\r\n\r\n    let font = new Font(\"15px\", Font.STYLE_NORMAL, Font.VARIANT_NORMAL, Font.WEIGHT_BOLD, \"Arial\");\r\n    let txtSym = new TextSymbol(name, font, new Color([250, 0, 0, 0.9]));\r\n    txtSym.setOffset(15, 15).setAlign(TextSymbol.ALIGN_END)\r\n    txtSym.setHaloColor(new Color([255, 255, 255]));\r\n    txtSym.setHaloSize(1.5);\r\n    let graphicLabel = new Graphic(pointLabel, txtSym, {id: name});\r\n\r\n    // graphicLayer.add(graphic);\r\n    graphicLayerLabelLineaDivision.add(graphicLabel);\r\n  },\r\n\r\n  _zoonToLineDivision(evt) {\r\n    let id = evt.currentTarget.id.replace('_ext', '');\r\n    let graphic = graphicLayerLabelLineaDivision.graphics.filter(item => item.attributes.id == id);\r\n    selfCm.map.setExtent(graphic[0]._extent, true);\r\n  },\r\n\r\n  _editaNameLineDivision(evt) {\r\n    let id = evt.currentTarget.id.replace('_name', '');\r\n    let graphic = graphicLayerLabelLineaDivision.graphics.filter(item => item.attributes.id == id)\r\n    graphic[0].symbol.text = evt.currentTarget.innerText;\r\n    graphicLayerLabelLineaDivision.refresh()\r\n        // console.log(evt.currentTarget.innerText);\r\n  },\r\n\r\n  _populateTablePredio(bodyTable, drawFunction){\r\n    // obtener del servicio los predios resultantes de la solicitud\r\n    let urlPredioResults = `${selfCm.config.resultsByApplication}/${selfCm.codRequestsCm}`\r\n    selfCm._callApiRestServices(urlPredioResults, {}).then(response => {\r\n      try {\r\n        // --------------------------------------------------------------\r\n        // Comentar lineas cuando se tenga el servicio\r\n        // response = responseDivision[selfCm.codRequestsCm]\r\n        // --------------------------------------------------------------\r\n        let idx = 1\r\n        bodyTable.innerHTML = ''\r\n        for (let predio of response.results){\r\n          let tr = dojo.create('tr');\r\n          tr.id = `predio_${idx}_${predio['cpm']}`;\r\n          let row = `<td class=\"center-aligned\">${idx}</td>\r\n                     <td>${predio['cpm']}</td>\r\n                     <td>${predio['address']}</td>\r\n                     <td class=\"center-aligned\">\r\n                      <span id=\"${tr.id}_draw\"><i class=\"fas fa-map-marker-alt\"></i></span>\r\n                     </td>`\r\n          tr.innerHTML = row;\r\n          tr.style.cursor = \"pointer\";\r\n          bodyTable.appendChild(tr)\r\n          dojo.query(`#${tr.id}_draw`).on('click', drawFunction)\r\n          idx = idx + 1      \r\n        }\r\n      } catch (error) {\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(error.message, type=\"error\")\r\n      }     \r\n    })\r\n  },\r\n\r\n  _activateSnappingPrediosByDivision(graphiclayer){\r\n    let graphicsLayerInfo = new esri.layers.LayerInfo({\r\n      id: graphiclayer.id, // El id del `GraphicsLayer`\r\n      name: graphiclayer.name, // El nombre del `GraphicsLayer`\r\n      layer: graphiclayer // El `GraphicsLayer` a utilizar\r\n    });\r\n\r\n    // Agregar el `LayerInfo` al mapa y habilitar el snapping\r\n    selfCm.map.enableSnapping({\r\n      layerInfos: [graphicsLayerInfo], // Agregar el `LayerInfo` al mapa\r\n      // alwaysSnap: true,\r\n      snapPointSymbol: symbolSnapPointCm,\r\n      tolerance: 5,\r\n    });\r\n  },\r\n\r\n  _activateToolPrediosByDivision(evt){\r\n    let id = evt.currentTarget.id\r\n    selfCm.idPredioDivision = id\r\n    let graphic = graphicLayerPredioByDivison.graphics.filter(item => item.attributes.id == id);\r\n    graphicLayerPredioByDivison.remove(graphic[0])\r\n    selfCm.map.setInfoWindowOnClick(false);\r\n    let graphicLayerPuntoLote = selfCm.map.getLayer(idGraphicPuntoLote)\r\n    selfCm._activateSnappingPrediosByDivision(graphicLayerPuntoLote);\r\n    toolbarCm.activate(Draw[\"POINT\"]);\r\n  },\r\n\r\n  _changeValueCodLote(evt){\r\n    let id = evt.target.id.split('_')[1]\r\n    let idx = evt.target.selectedIndex\r\n    let cod_lote = evt.target.options[idx].value\r\n    let lyr = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n    let graphicSelected = lyr.graphics.filter(item => item.attributes.id == `label_${id}`)\r\n    graphicSelected[0].symbol.text = cod_lote\r\n    lyr.refresh()\r\n  },\r\n  \r\n  _centerAtLabelCodLoteDivision(evt){\r\n    let id = evt.currentTarget.id\r\n    let lyr = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n    let graphicSelected = lyr.graphics.filter(item => item.attributes.id == id)\r\n    selfCm.map.centerAt(graphicSelected[0].geometry)\r\n  },\r\n\r\n  _editLoteUrbanoDivision(evt) {\r\n    let id = evt.currentTarget.id.replace('loteUrbanoDv_', '');\r\n    let lyr = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n    let graphic = lyr.graphics.filter(item => item.attributes.id == `label_${id}`)\r\n    graphic[0].attributes.lot_urb = evt.currentTarget.textContent\r\n    lyr.refresh()\r\n  },\r\n\r\n  _buildDataLoteTable(tableBody, predios) {\r\n    tableBody.innerHTML = ''\r\n    // const tableBody = document.getElementById(tableBodyId);\r\n    predios.forEach((predio, index) => {\r\n        const row = document.createElement('tr');\r\n\r\n        // celda de índice\r\n        const indexCell = document.createElement('td');\r\n        indexCell.className = \"center-aligned\"\r\n        indexCell.textContent = predio.num;\r\n        row.appendChild(indexCell);\r\n\r\n        // celda de codigo de predio\r\n        const codigoCell = document.createElement('td');\r\n        const select = document.createElement('select');\r\n        select.className = \"codLoteSelectDvCls\"\r\n        select.id = `codLoteSelectDv_${predio.num}`\r\n        predios.forEach(p => {\r\n            const option = document.createElement('option');\r\n            option.value = p.cod_lote;\r\n            option.textContent = p.cod_lote;\r\n            if (p.cod_lote === predio.cod_lote) {\r\n                option.selected = true;\r\n            }\r\n            select.appendChild(option);\r\n        });\r\n        codigoCell.appendChild(select);\r\n        row.appendChild(codigoCell);\r\n\r\n        // celda de lote urbano\r\n        const loteUrbCell = document.createElement('td');\r\n        loteUrbCell.contentEditable = true\r\n        loteUrbCell.textContent = '...';\r\n        loteUrbCell.id = `loteUrbanoDv_${predio.num}`\r\n        loteUrbCell.className = \"loteUrbanoDvCls\"\r\n        row.appendChild(loteUrbCell);\r\n\r\n        const locationMarker = document.createElement('td');\r\n        locationMarker.id = predio.id\r\n        locationMarker.className = \"center-aligned\"\r\n        locationMarker.innerHTML = `<span class=\"locationLabelLoteDvCls\" id=\"${predio.id}\"><i class=\"fas fa-search\"></i></span>`\r\n        row.appendChild(locationMarker);\r\n        tableBody.appendChild(row);\r\n        // dojo.query(`#${predio.id}`).on('click', selfCm._centerAtLabelCodLoteDivision)\r\n        \r\n    });\r\n    dojo.query('.codLoteSelectDvCls').on('change', selfCm._changeValueCodLote)\r\n    dojo.query('.locationLabelLoteDvCls').on('click', selfCm._centerAtLabelCodLoteDivision)\r\n    dojo.query('.loteUrbanoDvCls').on('input', selfCm._editLoteUrbanoDivision);\r\n    \r\n  },\r\n\r\n  _ordenarPoligonosNorteSur(poligonos, idx, bodyTable) {\r\n    // Obtener la coordenada más al norte de cada polígono\r\n    let coordenadasNorte = poligonos.map(poligono => {\r\n      let extent = poligono.getExtent();\r\n      return extent.ymax;\r\n    });\r\n    \r\n    // Ordenar los polígonos en base a la coordenada más al norte\r\n    let poligonosOrdenados = poligonos.slice().sort((a, b) => {\r\n      let coordenadaNorteA = coordenadasNorte[poligonos.indexOf(a)];\r\n      let coordenadaNorteB = coordenadasNorte[poligonos.indexOf(b)];\r\n      return coordenadaNorteB - coordenadaNorteA; // Ordenar de norte a sur\r\n    });\r\n\r\n    let graphicLayerLabelCodLoteDivision = new GraphicsLayer({\r\n      id: idGraphicLabelCodLote,\r\n    });\r\n\r\n    let font = new Font(\"20px\", Font.STYLE_NORMAL, Font.VARIANT_NORMAL, Font.WEIGHT_BOLD, \"Arial\");\r\n\r\n    let dataLoteTable = []\r\n    // Paso 5: Agregar número de polígono a propiedad \"order\"\r\n    poligonosOrdenados.forEach((poligono, index) => {\r\n\r\n      let polygon = turf.polygon(poligono.rings);\r\n      let center = turf.pointOnFeature(polygon);\r\n\r\n      let pointLabel = new Point({\r\n        x: center.geometry.coordinates[0],\r\n        y: center.geometry.coordinates[1],\r\n        spatialReference: {wkid: 4326}\r\n      })\r\n      let cod_lote = selfCm._zfill(idx + 1, 3)\r\n      let txtSym = new TextSymbol(cod_lote, font, new Color([250, 0, 0, 1]));\r\n      txtSym.setColor(new esri.Color([0, 0, 0, 1])); // color blanco\r\n      txtSym.setSize(\"12pt\");\r\n      txtSym.setHaloColor(new esri.Color([255, 255, 255, 1]));\r\n      txtSym.setHaloSize(2);\r\n      let idGraphic = `label_${index + 1}`\r\n      let graphicLabel = new Graphic(pointLabel, txtSym, {id: idGraphic, lot_urb: '', clase: 'labelCodLoteDivision'});\r\n      graphicLayerLabelCodLoteDivision.add(graphicLabel);\r\n      dataLoteTable.push({num: index + 1, id: idGraphic, cod_lote: cod_lote})\r\n      idx = idx + 1\r\n      // editToolbar.activate(Edit.MOVE, graphicLabel, {allowAddVertices: false, allowDeleteVertices: false});\r\n    });\r\n    \r\n\r\n    // Completar table\r\n    selfCm._buildDataLoteTable(bodyTable, dataLoteTable)\r\n    selfCm.map.addLayer(graphicLayerLabelCodLoteDivision)\r\n  },\r\n\r\n  _enableEditingLabelsLotesDivision(evt){\r\n    if (evt && evt.graphic && evt.graphic.attributes && evt.graphic.attributes.clase == 'labelCodLoteDivision'){\r\n      selfCm.map.setInfoWindowOnClick(false)\r\n      selfCm.editToolbar.activate(Edit.MOVE, evt.graphic);\r\n    } else {\r\n      selfCm.editToolbar.deactivate()\r\n    }\r\n  },\r\n\r\n  _zfill(num, len) {\r\n    return (Array(len).fill('0').join('') + num).slice(-len);\r\n  },\r\n\r\n  _etiquetasCodLote(url, campo, queryWhere, tipoEstadistica, polygonos, bodyTable) {\r\n    var estadisticaDef = new esri.tasks.StatisticDefinition();\r\n    estadisticaDef.statisticType = tipoEstadistica;\r\n    estadisticaDef.onStatisticField = campo;\r\n    estadisticaDef.outStatisticFieldName = \"resultado\";\r\n  \r\n    var query = new esri.tasks.Query();\r\n    query.where = queryWhere;\r\n    query.outFields = [campo];\r\n    query.returnGeometry = false;\r\n    query.outStatistics = [estadisticaDef];\r\n  \r\n    var queryTask = new esri.tasks.QueryTask(url);\r\n    queryTask.execute(query, function(result) {\r\n      if(result.features.length > 0) {\r\n        let resultado = result.features[0].attributes.resultado;\r\n        selfCm._ordenarPoligonosNorteSur(polygonos, parseInt(resultado), bodyTable)\r\n      } else {\r\n        return 0;\r\n      }\r\n    }, function(error) {\r\n      console.log(\"Error al ejecutar la consulta: \", error);\r\n    });\r\n  },\r\n\r\n  // Funciones para casuistica de division de lotes\r\n  _ApplyDivideLotes() {\r\n    selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n    selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n    selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n    selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n    selfCm._removeLayerGraphic(idGraphicLoteDeleteCm);\r\n    selfCm._removeLayerGraphic(idGraphicLabelCodLote)\r\n\r\n    // Creamos grafico de lote fusionado\r\n    let graphicLayerLoteDivision = new GraphicsLayer({\r\n      id: idGraphicLoteCm\r\n    });\r\n    \r\n    // Union all graphics of grpahicslayer\r\n    // let graphicLayerLineaDivision = selfCm.map.getLayer(idGraphicLineaDivision);\r\n    if (graphicLayerLineaDivision.graphics.length == 0) {\r\n      selfCm._showMessage('No se ha dibujado ninguna linea de division', 'warning');\r\n      return  \r\n    }\r\n\r\n    let arr = []\r\n    for (let i of graphicLayerLineaDivision.graphics) {\r\n      arr.push(i.geometry)\r\n    }\r\n    let unionGraphicLayerLineaDivision = selfCm._unionFeatures(arr)\r\n\r\n    let lineGeometry = new Polyline({\r\n      paths: unionGraphicLayerLineaDivision.paths,\r\n      spatialReference: { wkid: 102100 }\r\n    });\r\n    lineGeometry = esri.geometry.webMercatorToGeographic(lineGeometry)\r\n\r\n    let query = new Query();\r\n    // query.where = `(${_UBIGEO_FIELD} = '${paramsApp.ubigeo}') and (${_ID_LOTE_P_FIELD} in (49))`\r\n    query.where = selfCm.lotesQuery\r\n    query.outFields = [\"*\"];\r\n    query.returnGeometry = true\r\n    let qTask = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl());\r\n    qTask.execute(query, function (results) {\r\n      let geomLote = results.features[0].geometry\r\n      let geomLoteDivided = selfCm._dividePolygon(geomLote, lineGeometry)\r\n\r\n      if (geomLoteDivided.length == 0) {\r\n        //  genera un mensage show indicando que no se encontro el lote\r\n        selfCm._showMessage('Las lineas de corte ingresadas no generan la división del lote.\\nLas lineas deben iniciar y finalizar en el perimetro del lote.', type = 'error');\r\n        return false;\r\n      }\r\n\r\n      // console.log(geomLoteDivided)\r\n      // iterar sobre los graficos de la capa de division y agregar cada uno a graphicLayerLoteDivision\r\n      for (let i of geomLoteDivided) {\r\n        let lote = new Graphic(i, symbolFusionLote)\r\n\r\n        // agregar el grafico directo al mapa\r\n        graphicLayerLoteDivision.add(lote);\r\n      }\r\n      selfCm.map.addLayer(graphicLayerLoteDivision);\r\n\r\n      let urlLotes = selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl()\r\n      selfCm._etiquetasCodLote(urlLotes, _COD_LOTE_FIELD, selfCm.arancel, \"max\", geomLoteDivided, selfCm.bodyTbDatosLoteDvApCm)\r\n\r\n      // console.log(graphicLayerLoteDivision._extent)\r\n      selfCm.map.reorderLayer(graphicLayerLoteDivision, selfCm.map.graphicsLayerIds.indexOf(graphicLayerLabelLineaDivision.id));\r\n      selfCm.map.setExtent(results.features[0].geometry.getExtent().expand(1.5), true);\r\n    }).then(function () {\r\n      let query = new Query();\r\n      query.where = selfCm.arancel\r\n      // especificar los campos devueltos\r\n      query.outFields = [_UBIGEO_FIELD, _F_MZN_FIELD];\r\n      query.returnGeometry = true\r\n      // query with order by fields\r\n      query.orderByFields = [_F_MZN_FIELD];\r\n      let qTask = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrCfArancel).getUrl());\r\n      qTask.execute(query, function (results) {\r\n        // Creamos grafico de punto lote\r\n        let graphicLayerPuntoLote = new GraphicsLayer({\r\n          id: idGraphicPuntoLote\r\n        });\r\n        // creamos grafico de frente de lote\r\n        let graphicLayerFrenteLote = new GraphicsLayer({\r\n          id: idGraphicFrenteLote\r\n        });\r\n        // let graphicLayerPredio = new GraphicsLayer({\r\n        //   id: idGraphicPredioCm\r\n        // });\r\n        let graphicLoteDivision = selfCm.map.getLayer(idGraphicLoteCm)\r\n        if (!graphicLoteDivision) {\r\n          return;\r\n        }\r\n        let frentes = {}\r\n        for (let row of results.features){\r\n          for (let graphic of graphicLoteDivision.graphics){\r\n            let isItc = geometryEngine.intersects(row.geometry, graphic.geometry)\r\n            if (!isItc){\r\n              continue\r\n            }\r\n            // saber si un key esta dentro del objeot frentes\r\n            if (!frentes.hasOwnProperty(row.attributes[_F_MZN_FIELD])){\r\n              frentes[row.attributes[_F_MZN_FIELD]] = row.geometry;\r\n            }\r\n            else{\r\n              let unionFrentes = geometryEngine.union([frentes[row.attributes[_F_MZN_FIELD]], row.geometry])\r\n              frentes[row.attributes[_F_MZN_FIELD]] = unionFrentes;\r\n            }\r\n          }\r\n        }\r\n        for (let lote of graphicLoteDivision.graphics){\r\n          for (let idx in frentes){\r\n            let idItcFrentesByLotes = geometryEngine.intersects(lote.geometry, frentes[idx])\r\n            if (!idItcFrentesByLotes){\r\n              continue\r\n            }\r\n            let itcFrentesByLotes = geometryEngine.intersect(frentes[idx], lote.geometry)\r\n            // add frentes to graphicLayerFrenteLote\r\n            const symbolFrenteLote = new SimpleLineSymbol(\r\n              SimpleLineSymbol.STYLE_SOLID,\r\n              new Color(\r\n                [\r\n                  Math.floor(Math.random() * 255), \r\n                  Math.floor(Math.random() * 255), \r\n                  Math.floor(Math.random() * 255)]),\r\n              5\r\n            )\r\n            let frente = new Graphic(itcFrentesByLotes, symbolFrenteLote)\r\n            graphicLayerFrenteLote.add(frente);\r\n\r\n            // polilinea de frentes resultantes\r\n            let polyline = new Polyline({\r\n              paths: itcFrentesByLotes.paths,\r\n              spatialReference: {wkid: 4326}\r\n            });\r\n\r\n            let puntoLoteTurf = selfCm._findMidpoint(polyline)\r\n\r\n            // crear un punto en el mapa\r\n            let puntoLote = new Point({\r\n              x: puntoLoteTurf.geometry.coordinates[0],\r\n              y: puntoLoteTurf.geometry.coordinates[1],\r\n              spatialReference: {wkid: 4326}\r\n            })\r\n\r\n            // Agregar el punto p al mapa          \r\n            let puntoLoteGraphic = new Graphic(puntoLote, symbolPuntoLote)\r\n            graphicLayerPuntoLote.add(puntoLoteGraphic)\r\n\r\n          }\r\n        }\r\n        selfCm.map.addLayer(graphicLayerFrenteLote);\r\n        selfCm.map.addLayer(graphicLayerPuntoLote);\r\n        selfCm._removeLayerGraphic(idGraphicPredioByDivison);\r\n        selfCm.map.addLayer(graphicLayerPredioByDivison)\r\n        \r\n        selfCm._populateTablePredio(selfCm.bodyTbPrediosDvApCm, selfCm._activateToolPrediosByDivision)\r\n\r\n      })\r\n    }, function (err) {\r\n      console.log(err)\r\n    })   \r\n  },\r\n\r\n  // ----------------------------------------------------------------------------------------------\r\n  // GeoprocessingServices\r\n  // ----------------------------------------------------------------------------------------------\r\n  _executeReasignacionGpService(evt){\r\n    selfCm._showMessageConfirm().then(function (result) {\r\n      if (result){\r\n        let params = {\r\n          \"cod_pred\": selfCm.codigosPredios,\r\n          \"ubigeo\": paramsApp['ubigeo'],\r\n          \"geometry\": selfCm.xy,\r\n          \"user\": paramsApp['username'],\r\n          \"id_solicitud\": selfCm.codRequestsCm\r\n        }\r\n        console.log(params)\r\n    \r\n        // revisar si alguna propiedad tiene valor nulo o indefinido\r\n        for (let key in params){\r\n          if (params[key] == null || params[key] == undefined){\r\n            selfCm._showMessage(`Debe especificar el valor de ${key}`, type=\"error\");\r\n            return\r\n          }\r\n        }\r\n        selfCm._executeGPService(selfCm.config.reasignacionUrl, params)\r\n      }\r\n      else {\r\n        return\r\n      }\r\n    })\r\n  },\r\n\r\n  _executeAcumulacionGpService(evt){\r\n    selfCm._showMessageConfirm().then(function (result) {\r\n      if (result){\r\n        let labelCodLotesLayer = selfCm.map.getLayer(idGraphicLabelCodLote).graphics[0]\r\n        let params = {\r\n          \"lotes_orig\": selfCm.idlotes, \r\n          \"ubigeo\": paramsApp['ubigeo'], \r\n          \"lote_geom\": JSON.stringify(selfCm.map.getLayer(\"graphicLoteCm\").graphics[0].geometry.toJson()), \r\n          \"lote_pun_geom\": JSON.stringify(selfCm.map.getLayer(idGraphicPuntoLote).graphics.map((i) => {return [i.geometry.x, i.geometry.y]})), \r\n          \"predio_geom\": JSON.stringify({'cod_pre': selfCm.idPredioAcumulacion.split(\"_\")[2], 'coords': selfCm.xy}),\r\n          \"atributos\": JSON.stringify({'cod_lote': labelCodLotesLayer.symbol.text, 'lot_urb': labelCodLotesLayer.attributes.lot_urb}),\r\n          \"user\": paramsApp['username'], \r\n          \"id_solicitud\": selfCm.codRequestsCm\r\n        }\r\n        \r\n        console.log(params)\r\n        // revisar si alguna propiedad tiene valor nulo o indefinido\r\n        for (let key in params){\r\n          if (params[key] == null || params[key] == undefined){\r\n            selfCm._showMessage(`Debe especificar el valor de ${key}`, type=\"error\");\r\n            return\r\n          }\r\n        }\r\n        selfCm._executeGPService(selfCm.config.acumulacionUrl, params)\r\n      }\r\n      else {\r\n        return\r\n      }\r\n    })\r\n  },\r\n\r\n  _executeSubdivisionGpService(evt){\r\n    selfCm._showMessageConfirm().then(function (result) {\r\n      if (!selfCm.map.getLayer(idGraphicLoteCm)){\r\n        selfCm._showMessage(\"La solicitud no se puede realizar porque no se ha previsualizado la división\", type=\"error\")\r\n        return\r\n      }\r\n\r\n      if (graphicLayerPredioByDivison.graphics.length == 0){\r\n        selfCm._showMessage(\"La solicitud no se puede realizar porque no se graficaron los predios resultantes\", type=\"error\")\r\n        return\r\n      }\r\n      let labelCodLotesLayer = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n      for (let pred of labelCodLotesLayer.graphics){\r\n        if (!pred.attributes.lot_urb || pred.attributes.lot_urb === \"...\") {\r\n          selfCm._showMessage(\"Debe especificar los valores de Lote Urbano\", type=\"error\")\r\n          return\r\n        }\r\n      }\r\n\r\n      if (result){\r\n        \r\n        let params = {\r\n          \"lote_orig\": selfCm.idlotes[0], \r\n          \"ubigeo\": paramsApp['ubigeo'], \r\n          \"lotes_geom\": JSON.stringify(selfCm.map.getLayer(idGraphicLoteCm).graphics.map((i) => {return i.geometry.toJson()})), \r\n          \"lotes_pun_geom\": JSON.stringify(selfCm.map.getLayer(idGraphicPuntoLote).graphics.map((i) => {return [i.geometry.x, i.geometry.y]})), \r\n          \"predios_geom\": JSON.stringify(graphicLayerPredioByDivison.graphics.map((i) => {return {'cod_pre': i.attributes.id.split(\"_\")[2], 'coords': [i.geometry.x, i.geometry.y]}})),\r\n          \"atributos\": JSON.stringify(labelCodLotesLayer.graphics.map((i) => {return {'cod_lote': i.symbol.text, 'lot_urb': i.attributes.lot_urb, 'coords': [i.geometry.x, i.geometry.y]}})),\r\n          \"user\": paramsApp['username'], \r\n          \"id_solicitud\": selfCm.codRequestsCm\r\n        }\r\n        console.log(params)\r\n        // revisar si alguna propiedad tiene valor nulo o indefinido\r\n        for (let key in params){\r\n          if (params[key] == null || params[key] == undefined){\r\n            selfCm._showMessage(`Debe especificar el valor de ${key}`, type=\"error\");\r\n            return\r\n          }\r\n        }\r\n        selfCm._executeGPService(selfCm.config.subdivisionUrl, params)\r\n      }\r\n      else {\r\n        return\r\n      }\r\n    })\r\n  },\r\n\r\n  _executeInactivarGpService(evt){\r\n    selfCm._showMessageConfirm().then(function (result) {\r\n      if (result){\r\n        // let labelCodLotesLayer = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n        let params = {\r\n          \"ubigeo\": paramsApp['ubigeo'], \r\n          \"cod_pred\": selfCm.codigosPredios,\r\n          \"user\": paramsApp['username'], \r\n          \"id_solicitud\": selfCm.codRequestsCm\r\n        }\r\n        console.log(params)\r\n        // revisar si alguna propiedad tiene valor nulo o indefinido\r\n        for (let key in params){\r\n          if (params[key] == null || params[key] == undefined){\r\n            selfCm._showMessage(`Debe especificar el valor de ${key}`, type=\"error\");\r\n            return\r\n          }\r\n        }\r\n        selfCm._executeGPService(selfCm.config.inactivacionUrl, params)\r\n      }\r\n      else {\r\n        return\r\n      }\r\n    })    \r\n  },\r\n\r\n  _executeGPService(url, params){\r\n    let urlStatusRequest = `${selfCm.config.applicationListUrl}/${selfCm.codRequestsCm}`\r\n    selfCm._callApiRestServices(urlStatusRequest, {}).then(function (result) {\r\n      try {\r\n        if (result.idStatus != 1){\r\n          throw new Error(`Esta solicitud (${selfCm.codRequestsCm}) ya fue procesada con anterioridad: ${result.date}`)\r\n        }\r\n        selfCm.busyIndicator.show();\r\n        // Agregar un elemento de texto debajo del BusyIndicator\r\n        let buzyElm = dojo.query(\"#dojox_widget_Standby_0\")[0]\r\n        let imgElm = buzyElm.querySelector(\"img\")\r\n        let loadingText = document.createElement('div');\r\n        loadingText.id = 'loadingTextCustom';\r\n        loadingText.style.position = 'absolute';\r\n        let topMessage = parseFloat(imgElm.style.top) + 80;\r\n        loadingText.style.top = `${topMessage}px`;\r\n        let leftImg = parseFloat(imgElm.style.left) + imgElm.width/2;\r\n        loadingText.style.left = `${leftImg}px`;\r\n        loadingText.style.transform = 'translate(-50%, -50%)';\r\n        loadingText.style.background = 'white';\r\n        loadingText.style.zIndex = '1000';\r\n    \r\n        dojo.query(\"#dojox_widget_Standby_0\")[0].appendChild(loadingText);\r\n        // selfCm._FormResult(selfCm.codRequestsCm, selfCm.caseDescription);\r\n        selfCm.gp = new Geoprocessor(url);\r\n        selfCm.gp.submitJob(params, selfCm._completeCallback, selfCm._statusCallback);        \r\n      } catch (error) {\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(error.message, type=\"error\")\r\n      }\r\n\r\n    })\r\n  },\r\n\r\n  _statusCallback(JobInfo) {\r\n    // console.log(JobInfo)\r\n    selfCm.jobId = JobInfo.jobId\r\n    // get last item of JobInfo.messages\r\n    // console.log(JobInfo.jobStatus)\r\n    let textMessage = JobInfo.messages.map((message) => message.description)\r\n    // console.log(textMessage.slice(-1)[0] ? textMessage.slice(-1)[0] : '')\r\n    try {\r\n      dojo.query(\"#loadingTextCustom\")[0].textContent = textMessage.slice(-1)[0] ? textMessage.slice(-1)[0] : ''\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  },\r\n  _completeCallback(JobInfo) {\r\n    switch (JobInfo.jobStatus) {\r\n      case \"esriJobSubmitted\":\r\n        // El trabajo se ha enviado al servidor y está esperando en la cola.\r\n        console.log(\"El trabajo se ha enviado y está esperando en la cola.\");\r\n        break;\r\n      case \"esriJobExecuting\":\r\n        // El trabajo se está ejecutando actualmente en el servidor.\r\n        console.log(\"El trabajo se está ejecutando en el servidor.\");\r\n        break;\r\n      case \"esriJobSucceeded\":\r\n        // El trabajo se ha completado satisfactoriamente y los resultados están disponibles.\r\n        selfCm.gp.getResultData(JobInfo.jobId, \"response\", function (result) {\r\n          console.log(result)\r\n          if (!result.value.status){\r\n            selfCm.busyIndicator.hide();\r\n            selfCm._showMessage(result.value.message, type=\"error\");\r\n            return\r\n          }\r\n\r\n          selfCm._sendDataToPlatform(result.value.response)\r\n          \r\n\r\n          switch (selfCm.case) {\r\n            case \"1\":\r\n              selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n              break;\r\n            case \"2\":\r\n              selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n              selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n              selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n              selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n              selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n            case \"3\":\r\n              graphicLayerPredioByDivison.clear();\r\n              graphicLayerLineaDivision.clear();\r\n              graphicLayerLabelLineaDivision.clear();\r\n              // selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n              selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n              selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n              selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n              selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n            default:\r\n              break;\r\n          }\r\n          selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(false)\r\n          selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(true)\r\n          selfCm._FormResult(selfCm.codRequestsCm, selfCm.caseDescription);\r\n          // Codigo para mostrar la ventana de resultados\r\n\r\n\r\n        })\r\n        break;\r\n      case \"esriJobFailed\":\r\n        // El trabajo ha fallado y no se han podido generar los resultados.\r\n        selfCm._showMessage(\"El proceso ha fallado y no se han podido generar los resultados.\", type=\"error\");\r\n        break;\r\n      case \"esriJobCancelled\":\r\n        // El trabajo ha sido cancelado por el usuario.\r\n        selfCm._showMessage(\"El proceso ha sido cancelado por el usuario.\");\r\n        break;\r\n      case \"esriJobTimedOut\":\r\n        // El trabajo ha expirado debido a un tiempo de espera.\r\n        selfCm._showMessage(\"El proceso ha superado el tiempo de espera necesario para su ejecución.\", type=\"error\");\r\n        break;\r\n      default:\r\n        // El estado del trabajo no se reconoce.\r\n        selfCm._showMessage(\"El estado del proceso no se reconoce.\");\r\n        break;\r\n    }\r\n    selfCm.busyIndicator.hide();\r\n    // remove 'loadingTextCustom'\r\n    dojo.query(\"#loadingTextCustom\")[0].remove();\r\n  },\r\n  _cancelProcess(evt){\r\n    selfCm.gp.cancelJob(selfCm.jobId, function (info) {\r\n      console.log(info.jobStatus)\r\n    });\r\n  },\r\n\r\n  _sendDataToPlatform(data){\r\n    for (let predio of data.results) {\r\n      predio['ubigeo'] = paramsApp.ubigeo;\r\n    }\r\n    fetch(selfCm.config.updateStatusApplication, {\r\n      method: 'POST', // o 'PUT'\r\n      body: JSON.stringify(data), // los datos pueden ser de tipo 'string' o {object}\r\n      headers:{\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n    .then(response => console.log('Éxito:', JSON.stringify(response)))\r\n    .catch(error => console.error('Error:', error));\r\n  },\r\n\r\n  _exportTableToExcel(evt) {\r\n    // Obtén la tabla HTML\r\n    const table = dojo.query(\"#tableRequestCm\")[0]\r\n    let headerRow = table.querySelector(\"tr\");\r\n    let rows = table.querySelectorAll(\"tr\")\r\n\r\n    let headers = [];\r\n    let headerCols = headerRow.querySelectorAll(\"th\");\r\n    for (let h = 0; h < headerCols.length - 1; h++) {\r\n        headers.push(headerCols[h].innerText);\r\n    }\r\n\r\n    let data = [];\r\n\r\n    // Recorre las filas (ignora la primera fila que contiene los encabezados)\r\n    for (let i = 0; i < rows.length; i++) {\r\n      if (i == 0) continue;\r\n      let row = {}, cols = rows[i].querySelectorAll(\"td\");\r\n\r\n      // Recorre las columnas\r\n      for (let j = 0; j < cols.length - 1; j++) {\r\n          // Usa el texto del encabezado como clave y el texto de la celda como valor\r\n          row[headers[j]] = cols[j].innerText;\r\n      }\r\n\r\n      data.push(row);\r\n    }\r\n\r\n    // Convierte el array de objetos en una cadena JSON\r\n    let wb = XLSX.utils.book_new();\r\n\r\n    // Crear una hoja de cálculo a partir de los datos JSON\r\n    let ws = XLSX.utils.json_to_sheet(data);\r\n    let sheetName = selfCm.currentTabActive.replace(\"_\", \" \");\r\n    XLSX.utils.book_append_sheet(wb, ws, sheetName);\r\n\r\n    // Escribir el libro de trabajo y forzar una descarga\r\n    XLSX.writeFile(wb, `reporte_solicitudes_${selfCm.currentTabActive}.xlsx`);\r\n  },\r\n\r\n  _dataURItoBlob(dataURI) {\r\n    var byteString = atob(dataURI.split(',')[1]);\r\n    var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n    var buffer = new ArrayBuffer(byteString.length);\r\n    var dataView = new Uint8Array(buffer);\r\n    for (var i = 0; i < byteString.length; i++) {\r\n        dataView[i] = byteString.charCodeAt(i);\r\n    }\r\n    return new Blob([buffer], {type: mimeString});\r\n  },\r\n\r\n  _sendObservation(evt) {\r\n    selfCm.busyIndicator.show();\r\n    let file = selfCm.imgUploadApCm.files[0];\r\n    if (file == undefined){\r\n      selfCm.busyIndicator.hide();\r\n      selfCm._showMessage(\"Debe enviar una imagen como elemento de sustento\", type=\"error\");\r\n      return\r\n    }\r\n    let reader = new FileReader();\r\n    let data = new FormData();\r\n    reader.onloadend = function() {\r\n      data.append('application_id', selfCm.codRequestsCm);\r\n      data.append('description', selfCm.textAreaObsApCm.value);\r\n      data.append('img', selfCm.imgUploadApCm.files[0]);\r\n  \r\n      return fetch(selfCm.config.observationUrl, {\r\n          method: 'POST', \r\n          body: data\r\n      })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          selfCm.busyIndicator.hide();\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessagePromise(\"Se envió la solucitud satisfactoriamente.\").then((result) => {\r\n          dojo.query(\".backRequestsClsCm\")[0].click();\r\n          dojo.query(\".backTrayClsCm\")[0].click();\r\n          selfCm._loadIniRequestsCm();\r\n        })\r\n\r\n      }).catch(error => {\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(`Ocurrio un problema al procesar su solicitud: ${error}`, type=\"error\")\r\n      });\r\n    }\r\n    reader.readAsDataURL(file);\r\n  },\r\n\r\n  _uploadImagenObs(evt) {\r\n    let imageDiv = dojo.query(\".thumbnailClsCm\")[0];\r\n    let file = evt.target.files[0];\r\n    let reader = new FileReader();\r\n\r\n    reader.onloadend = function() {\r\n      imageDiv.innerHTML = \"\";\r\n      imageDiv.style.backgroundImage = 'url(' + reader.result + ')';\r\n      imageDiv.style.backgroundSize = 'contain';\r\n      imageDiv.style.backgroundRepeat = 'no-repeat';\r\n      imageDiv.style.backgroundPosition = 'center';\r\n    }\r\n\r\n    if (file) {\r\n        reader.readAsDataURL(file);\r\n    } else {\r\n        imageDiv.innerHTML = \"<span><i class='far fa-image'></i></span>\";\r\n    }\r\n  },\r\n  _searchRequestByCodPred(evt) {\r\n    if (evt.keyCode === 13) {\r\n        if (evt.target.value == '') {\r\n          if ('cpm' in selfCm.queryRequests){\r\n            delete selfCm.queryRequests['cpm'];\r\n          }\r\n        } else {\r\n          selfCm.queryRequests['cpm'] = evt.target.value;\r\n        }\r\n        dojo.query(\".tablinksCm\")[0].click(); \r\n    }\r\n  },\r\n   \r\n  onOpen() {\r\n    console.log('CartoMaintenanceWgt::onOpen');\r\n    let panel = this.getPanel();\r\n    panel.position.height = 750;\r\n    panel.setPosition(panel.position);        \r\n    panel.panelManager.normalizePanel(panel);  \r\n\r\n    this._createToolbar();\r\n\r\n    dojo.query(\".backTrayClsCm\").on('click', this._openFormCase);\r\n    dojo.query(\".tablinksCm\").on('click', this._loadRequestsCm);\r\n    dojo.query(\"#btnObsCaseCm\").on('click', this._openFormObs);\r\n    dojo.query(\".backRequestsClsCm\").on('click', this._openFormObs);\r\n    // dojo.query(\"#goodRequestsCm\").on('click', this._openFormResult);\r\n    dojo.query(\"#showInfoDocCm\").on('click', this._openSupportingDocument)\r\n\r\n    // Reasignacion\r\n    dojo.query(\"#btnDrawMarkerCm\").on('click', this._activateTool);\r\n\r\n    dojo.query(\"#btnFsCm\").on('click', this._ApplyAcumulacionLotes)\r\n    dojo.query(\"#btnDrawLinesDvCm\").on('click', this._activateToolLinesDivision)\r\n    dojo.query(\"#btnApplyDvCm\").on('click', this._ApplyDivideLotes)\r\n    dojo.query(\"#titleCaseCm\").on('click', this._zoomHomeRequests)\r\n    dojo.query(\"#sendDataRsCm\").on('click', this._executeReasignacionGpService)\r\n    dojo.query('#sendDataFsCm').on('click', this._executeAcumulacionGpService)\r\n    dojo.query('#sendDataDvCm').on('click', this._executeSubdivisionGpService)\r\n    dojo.query('#sendDataDtCm').on('click', this._executeInactivarGpService)\r\n    dojo.query('#btnReportCm').on('click', this._exportTableToExcel)\r\n    dojo.query('#imgUploadCm').on('change', this._uploadImagenObs)\r\n    dojo.query('#sendDataObsGrCm').on('click', this._sendObservation)\r\n    dojo.query('#searchTbxCm').on(\"keyup\", this._searchRequestByCodPred)\r\n    this._loadIniRequestsCm()\r\n\r\n    selfCm.map.addLayer(graphicLayerLabelLineaDivision)\r\n    selfCm.editToolbar = new Edit(selfCm.map);\r\n    selfCm.map.on(\"click\", selfCm._enableEditingLabelsLotesDivision);\r\n    selfCm.editToolbar.on(\"deactivate\", function(evt) {\r\n      if(evt.info.isModified){\r\n        selfCm.map.setInfoWindowOnClick(true)\r\n        // firePerimeterFL.applyEdits(null, [evt.graphic], null);\r\n      }\r\n    });\r\n  },\r\n\r\n\r\n  // onClose(){\r\n  //   console.log('CartoMaintenanceWgt::onClose');\r\n  // },\r\n  // onMinimize(){\r\n  //   console.log('CartoMaintenanceWgt::onMinimize');\r\n  // },\r\n  // onMaximize(){\r\n  //   console.log('CartoMaintenanceWgt::onMaximize');\r\n  // },\r\n  // onSignIn(credential){\r\n  //   console.log('CartoMaintenanceWgt::onSignIn', credential);\r\n  // },\r\n  // onSignOut(){\r\n  //   console.log('CartoMaintenanceWgt::onSignOut');\r\n  // }\r\n  // onPositionChange(){\r\n  //   console.log('CartoMaintenanceWgt::onPositionChange');\r\n  // },\r\n  // resize(){\r\n  //   console.log('CartoMaintenanceWgt::resize');\r\n  // }\r\n});\r\n"]}