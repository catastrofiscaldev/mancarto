{"version":3,"sources":["../../../widgets/CartoMaintenanceWgt/Widget.js"],"names":["declare","BaseWidget","_WidgetsInTemplateMixin","Draw","Edit","Graphic","SimpleFillSymbol","SimpleMarkerSymbol","SimpleLineSymbol","Color","GraphicsLayer","Point","Polygon","LayerInfos","lang","FeatureLayer","QueryTask","Query","WidgetManager","geometryEngine","Polyline","webMercatorUtils","Geoprocessor","BusyIndicator","Message","turf","XLSX","Deferred","TextSymbol","Font","all","esriRequest","requestToAttendState","requestsObservedState","requestsAttendState","idLyrCatastroFiscal","idLyrCfPredios","idLyrCfLotes_pun","idLyrCfEje_vial","idLyrCfNumeracion","idLyrCfArancel","idLyrCfLotes","idLyrCfUnidadesurbanas","idLyrCfParques","idLyrCfManzana","idLyrCfManzanaUrb","idLyrCfSector","idLyrDistricts","iconByState","_UBIGEO_FIELD","_ID_LOTE_P_FIELD","_COD_MZN_FIELD","_F_MZN_FIELD","_COD_SECT_FIELD","_COD_PRE_FIELD","_COD_LOTE_FIELD","toolbarCm","params","URLSearchParams","window","location","search","paramsApp","keys","key","get","symbolPuntoLote","STYLE_SQUARE","STYLE_SOLID","symbolFusionLote","symbolEliminarLote","STYLE_DIAGONAL_CROSS","symbolLoteSelected","symbolDivisionLote","STYLE_DASH","symbolPredio","symbolPredioSelected","symbolSnapPointCm","STYLE_CROSS","idGraphicPredioCm","idGraphicPredioByDivison","idGraphicPredioSelectedCm","idGraphicLoteCm","idGraphicLoteSelectedCm","idGraphicPuntoLote","idGraphicFrenteLote","idGraphicLineaDivision","idGraphicLoteDeleteCm","idGraphicLabelLineaDivision","idGraphicLabelCodLote","symbolByCase","graphicLayerLineaDivision","id","graphicLayerLabelLineaDivision","graphicLayerPredioByDivison","fontAwesome","document","createElement","src","head","appendChild","baseClass","codRequestsCm","currentTabActive","layersMap","queryUbigeo","case","caseDescription","lotesQuery","idlotes","arancel","codigosPredios","xy","idxLines","idPredioDivision","idPredioAcumulacion","editToolbar","idButtonDrawActive","queryRequests","ubigeo","limit","ordering","postCreate","inherited","arguments","console","log","_getAllLayers","selfCm","_filterByDistrictCm","_startExtentByDistrictCm","esri","bundle","toolbars","draw","addPoint","addShape","resume","start","getInstance","map","itemInfo","then","hitch","layerInfosObj","_showMessage","message","type","title","nls","_widgetLabel","titleLabel","_showMessagePromise","messagetext","deferred","buttons","label","onClick","resolve","hide","promise","_showMessageConfirm","mensaje","queryPredios","getLayerInfoById","getFilter","setFilter","query","where","qTask","getUrl","executeForExtent","results","setExtent","extent","homeWidget","getWidgetsByName","homeDijit","error","startup","busyIndicator","create","target","domNode","parentNode","backgroundOpacity","_callApiRestServices","baseUrl","url","URL","Object","forEach","searchParams","append","fetch","response","Error","status","json","catch","err","_getRequestsTrayDataCm","responseData","state","data","filter","i","_loadIniRequestsCm","dojo","click","_parseDateStringtoFormat","dateString","date","Date","day","getDate","month","getMonth","year","getFullYear","_loadRequestsByEventCm","evt","_loadRequestsCm","_loadDocSupportCm","urlStatusRequest","config","applicationListUrl","result","value","support","show","estado","desc","dataHtml","lands","lnd","join","idType","icon","tbody","innerHTML","tb","getElementsByTagName","length","tableRequestApCm","removeChild","on","_openFormCase","_openFormResult","removeClass","classList","add","_zoomToPredSelectedEvt","cod_pred","currentTarget","children","split","_zoomToPredSelected","_removeLayerGraphic","prediosLayer","propertyLayer","mode","MODE_ONDEMAND","outFields","selectFeatures","SELECTION_NEW","featureSelected","addLayer","centerAt","geometry","interval","setInterval","graphics","symbol","setSymbol","setTimeout","clearInterval","_openSupportingDocument","open","focus","_zoomExtentToLote","cod_pre","returnGeometry","returnDistinctValues","execute","idLote","features","attributes","idmanzana","idsector","queryLote","qTaskLote","expand","arr","push","_unionFeatures","graphic","_zoomHomeRequests","_populateFormsByPredio","id_solicitud","landsByApplicationUrl","rows","cpm","streetName","row","closest","rowList","td","reasignarApCm","toggle","fusionApCm","divisionApCm","eliminacionApCm","resultCtnApCm","remove","obsCtnApCm","requestTrayApCm","casesCtnApCm","deactivate","disableSnapping","bodyTbLinesDvApCm","bodyTbPrediosDvApCm","bodyTbDatosLoteDvApCm","clear","_removeClassActiveButton","_openFormObs","textAreaObsApCm","imageDiv","style","backgroundImage","_FormResult","caseCm","urlPredioResults","resultsByApplication","bodyTbResultsApCm","predio","index","_centerAtPredioResult","replace","_createToolbar","_addToMap","screenPoint","toScreen","snappingManager","getSnappingPoint","undefined","point_g","webMercatorToGeographic","graphicLayer","x","y","setInfoWindowOnClick","alert","errorSnapingLocate","nameIdLine","_populateTableDrawLine","_addNameToLine","layerId","graphicsLayerIds","includes","removeLayer","getLayer","_activateTool","_activateSnappingByReasignar","activate","_activateToolAcumulacion","_activateSnappingByAcumulacion","_activateToolLinesDivision","_activateSnappingByDivision","cflayer","snapManager","enableSnapping","snapPointSymbol","tolerance","layerInfos","layer","setLayerInfos","graphicLayerPuntoLote","graphicsLayerInfo","layers","LayerInfo","name","union","_ApplyAcumulacionLotes","graphicLayerLoteFusion","_extent","urlLotes","_etiquetasCodLote","bodyTbDatosLoteFsApCm","orderByFields","graphicLayerFrenteLote","graphicFusion","frentes","isItc","intersects","hasOwnProperty","unionFrentes","idx","itcFrentesByLotes","intersect","polyline","paths","spatialReference","wkid","polylineOne","_getLongestPolyline","puntoLoteTurf","_findMidpoint","puntoLote","coordinates","puntoLoteGraphic","symbolFrenteLote","Math","floor","random","frente","_populateTablePredio","bodyTbPrediosFsApCm","_getMidpoint","geodesicLength","midpoint","geodesicDensify","getPoint","lengthPolylineChunk","line","lineString","options","units","along","longestPath","path","polylineChunk","_dividePolygon","poly","lines","divide","cut","idLine","tr","cursor","_deleteRowLine","_zoonToLineDivision","_editaNameLineDivision","elem","item","graphicLabel","polylineGeom","polylineGeomUtm","midPoint","pointLabel","font","STYLE_NORMAL","VARIANT_NORMAL","WEIGHT_BOLD","txtSym","setOffset","setAlign","ALIGN_END","setHaloColor","setHaloSize","text","innerText","refresh","bodyTable","drawFunction","_activateSnappingPrediosByDivision","graphiclayer","_activateToolPrediosByDivision","_changeValueCodLote","selectedIndex","cod_lote","lyr","graphicSelected","_centerAtLabelCodLoteDivision","_editLoteUrbanoDivision","lot_urb","textContent","_buildDataLoteTable","tableBody","predios","indexCell","className","num","codigoCell","select","option","p","selected","loteUrbCell","contentEditable","locationMarker","_ordenarPoligonosNorteSur","poligonos","coordenadasNorte","poligono","getExtent","ymax","poligonosOrdenados","slice","sort","a","b","coordenadaNorteA","indexOf","coordenadaNorteB","graphicLayerLabelCodLoteDivision","dataLoteTable","polygon","rings","center","pointOnFeature","_zfill","setColor","setSize","idGraphic","clase","_enableEditingLabelsLotesDivision","MOVE","len","Array","fill","campo","queryWhere","tipoEstadistica","polygonos","estadisticaDef","tasks","StatisticDefinition","statisticType","onStatisticField","outStatisticFieldName","outStatistics","queryTask","resultado","parseInt","_ApplyDivideLotes","graphicLayerLoteDivision","unionGraphicLayerLineaDivision","lineGeometry","geomLote","geomLoteDivided","lote","reorderLayer","graphicLoteDivision","idItcFrentesByLotes","_executeReasignacionGpService","_executeGPService","reasignacionUrl","_executeAcumulacionGpService","labelCodLotesLayer","pred","labelCodLotesLayerGraphic","JSON","stringify","toJson","_executeGeoprocessingApi","_executeSubdivisionGpService","subdivisionUrl","_executeInactivarGpService","inactivacionUrl","idStatus","buzyElm","imgElm","querySelector","loadingText","position","topMessage","parseFloat","top","leftImg","left","width","transform","background","zIndex","gp","submitJob","_completeCallback","_statusCallback","JobInfo","jobId","textMessage","messages","description","jobStatus","getResultData","_sendDataToPlatform","setVisibility","_cancelProcess","cancelJob","info","updateStatusApplication","method","body","headers","res","_exportTableToExcel","table","headerRow","querySelectorAll","headerCols","h","cols","j","wb","utils","book_new","ws","json_to_sheet","sheetName","book_append_sheet","writeFile","_dataURItoBlob","dataURI","byteString","atob","mimeString","buffer","ArrayBuffer","dataView","Uint8Array","charCodeAt","Blob","_sendObservation","file","imgUploadApCm","files","reader","FileReader","FormData","onloadend","observationUrl","ok","readAsDataURL","_uploadImagenObs","backgroundSize","backgroundRepeat","backgroundPosition","_searchRequestByCodPred","keyCode","_sortedByDate","columnOrder","dataset","val","_executeAccumulation","loteResult","lotePunResult","predioResult","_getManzanaByLote","lote_geom","manzana","_translateFieldsManzanaToLote","_translateFieldsArancelToLote","predio_geom","_calculateFieldsOfLote","atributos","_calculateTipLot","lotes_orig","_translateFieldsLoteToPuntoLote","lote_pun_geom","lotePun","_getArancelByPuntoLote","_translateFieldsArancelToLotePunto","_translateFieldsPuntoLoteToPredio","_translateFieldsArancelToPredio","_calculateFieldsOfPredio","_getLoteOrig","_lotesToHis","data2","_deleteLotesOrig","_addLotesNew","_getLotesPuntosOrig","lotesPunOrig","_lotesPuntosToHis","data3","_deleteLotesPuntosOrig","_addLotesPuntosNew","_getPrediosOrig","prediosOrig","_prediosToHis","data4","_deletePrediosOrig","_addPrediosNew","_updateStatusRequests","otherwise","_atributeTransfer","obj1","obj2","propsUse","propsOmit","fieldMatch","props1","props2","prop","urlManzanaUrb","parse","geometryType","reject","_FIELDS_USE_MZ","urlArancel","predioPoint","coords","_FIELDS_USE_ARC","statDefIdLoteP","statDefRanCpu","lote_orig","tipLot","Set","TIP_LOT","urlLotesPun","_FIELDS_OMIT_LOT_P_LOT","lotePunArray","lotePunIdx","clone","promises","zipped","element","_FIELD_USER_LOT_P_ARC","statDef","secuen","SECUEN_MAX","predioGeom","urlPredios","_FIELDS_USE_PREDIO_LOT_P","_getValueCodVer","ran_cpu","cod_ui","_FACTOR","cod_ver_concatenate","toString","cod_ver","reverse","digit","reduce","id_pred","featureLayer","graphicsParse","applyEdits","update","del","deleteParams","OBJECTID","f","requestOptions","content","handleAs","callbackParamName","usePost","deleteResults","adds","urlLotesPuntos","lotePunOrig","lotesPun","predioOrig","addFeatureUrl","addResults","_FIELDS_RESPONSE","predioResult2","predio2","field","onOpen","panel","getPanel","height","setPosition","panelManager","normalizePanel","isModified"],"mappings":"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","file":"Widget.js","sourcesContent":["import declare from 'dojo/_base/declare';\r\nimport BaseWidget from 'jimu/BaseWidget';\r\nimport _WidgetsInTemplateMixin from 'dijit/_WidgetsInTemplateMixin';\r\nimport Draw from \"esri/toolbars/draw\";\r\nimport Edit from \"esri/toolbars/edit\";\r\nimport Graphic from \"esri/graphic\";\r\nimport SimpleFillSymbol from \"esri/symbols/SimpleFillSymbol\";\r\nimport SimpleMarkerSymbol from \"esri/symbols/SimpleMarkerSymbol\";\r\nimport SimpleLineSymbol from \"esri/symbols/SimpleLineSymbol\";\r\nimport Color from 'dojo/_base/Color';\r\nimport GraphicsLayer from \"esri/layers/GraphicsLayer\"\r\nimport Point from \"esri/geometry/Point\"\r\nimport Polygon from \"esri/geometry/Polygon\"\r\nimport LayerInfos from \"jimu/LayerInfos/LayerInfos\";\r\nimport lang from \"dojo/_base/lang\";\r\nimport FeatureLayer from \"esri/layers/FeatureLayer\";\r\nimport QueryTask from \"esri/tasks/QueryTask\";\r\nimport Query from \"esri/tasks/query\";\r\nimport WidgetManager from \"jimu/WidgetManager\"\r\nimport geometryEngine from \"esri/geometry/geometryEngine\";\r\nimport Polyline from \"esri/geometry/Polyline\";\r\nimport webMercatorUtils from \"esri/geometry/webMercatorUtils\";\r\nimport Geoprocessor from \"esri/tasks/Geoprocessor\";\r\nimport BusyIndicator from 'esri/dijit/util/busyIndicator';\r\nimport Message from \"jimu/dijit/Message\";\r\nimport turf from \"https://unpkg.com/@turf/turf@6/turf.min.js\"\r\nimport XLSX from \"https://unpkg.com/xlsx@0.17.2/dist/xlsx.full.min.js\"\r\nimport Deferred from \"dojo/Deferred\";\r\nimport TextSymbol from \"esri/symbols/TextSymbol\";\r\nimport Font from \"esri/symbols/Font\";\r\nimport all from \"dojo/promise/all\";\r\nimport esriRequest from \"esri/request\";\r\n\r\n\r\nconst requestToAttendState = \"por_atender\"\r\nconst requestsObservedState = \"observado\"\r\nconst requestsAttendState = \"atendido\"\r\n\r\n\r\n// Layers ids\r\nconst idLyrCatastroFiscal = \"CARTO_FISCAL_6806\"\r\nconst idLyrCfPredios = \"CARTO_FISCAL_6806_0\"\r\nconst idLyrCfLotes_pun = \"CARTO_FISCAL_6806_1\"\r\nconst idLyrCfEje_vial = \"CARTO_FISCAL_6806_2\"\r\nconst idLyrCfNumeracion = \"CARTO_FISCAL_6806_3\"\r\nconst idLyrCfArancel = \"CARTO_FISCAL_6806_4\"\r\nconst idLyrCfLotes = \"CARTO_FISCAL_6806_5\"\r\nconst idLyrCfUnidadesurbanas = \"CARTO_FISCAL_6806_6\"\r\nconst idLyrCfParques = \"CARTO_FISCAL_6806_7\"\r\nconst idLyrCfManzana = \"CARTO_FISCAL_6806_8\"\r\nconst idLyrCfManzanaUrb = \"CARTO_FISCAL_6806_9\"\r\nconst idLyrCfSector= \"CARTO_FISCAL_6806_10\"\r\n// const idLyrActpuntoimg = \"ACTUALIZACION_DE_PUNTO_IMG_1890\"\r\nconst idLyrDistricts = \"limites_nacional_1821_2\"\r\n\r\nconst iconByState = {\r\n  \"por_atender\": {'icon': 'fas fa-pencil-alt', 'id': 'editRequestsCm', 'desc': \"Por atender\"},\r\n  \"observado\": {'icon': 'fas fa-pause', 'id': 'obsRequestsCm', 'desc': \"Observado\"},\r\n  \"atendido\": {'icon': 'fas fa-check', 'id': 'goodRequestsCm', 'desc': \"Atendido\"},\r\n}\r\n\r\n// Fields \r\nconst _UBIGEO_FIELD = \"UBIGEO\"\r\nconst _ID_LOTE_P_FIELD = \"ID_LOTE_P\"\r\nconst _COD_MZN_FIELD = \"COD_MZN\"\r\nconst _F_MZN_FIELD = \"F_MZN\"\r\nconst _COD_SECT_FIELD = \"COD_SECT\"\r\nconst _COD_PRE_FIELD = \"COD_PRE\"\r\nconst _COD_LOTE_FIELD = \"COD_LOTE\"\r\n\r\n\r\nlet toolbarCm\r\n\r\nconst params = new URLSearchParams(window.location.search)\r\nconst paramsApp = {}\r\n\r\nfor (let key of params.keys()) {\r\n  paramsApp[key] = params.get(key)\r\n}\r\n\r\n// Styles\r\nconst symbolPuntoLote = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_SQUARE, \r\n  20, \r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID, \r\n    new Color([255, 0, 0]), 2), \r\n    new Color([0, 92, 230, 1]\r\n  )\r\n)\r\n\r\nconst symbolFusionLote = new SimpleFillSymbol(\r\n  SimpleFillSymbol.STYLE_SOLID,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0]),\r\n    2\r\n  ),\r\n  new Color([255, 255, 0, 0.25])\r\n)\r\n\r\nconst symbolEliminarLote = new SimpleFillSymbol(\r\n  SimpleFillSymbol.STYLE_DIAGONAL_CROSS,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([100, 100, 100]),\r\n    2\r\n  ),\r\n  new Color([229, 229, 229, 0.9])\r\n)\r\n\r\nconst symbolLoteSelected = new SimpleFillSymbol(\r\n  SimpleFillSymbol.STYLE_SOLID,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0, 0.75]),\r\n    4\r\n  ),\r\n  new Color([0, 255, 0, 0])\r\n)\r\n\r\nconst symbolDivisionLote = new SimpleLineSymbol(\r\n  SimpleLineSymbol.STYLE_DASH,\r\n  new Color([255, 0, 0]),\r\n  2\r\n)\r\n\r\nconst symbolPredio = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_SQUARE, \r\n  20, \r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID, \r\n    new Color([255, 0, 0]), 2), \r\n    new Color([235, 69, 95, 1]\r\n  )\r\n)\r\n\r\nconst symbolPredioSelected = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_SQUARE, 20,\r\n  new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID, \r\n  new Color([255, 0, 0]), 4),\r\n  new Color([0, 255, 0, 0])\r\n);\r\n\r\nconst symbolSnapPointCm = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_CROSS,\r\n  20,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0]),\r\n    2\r\n  ),\r\n  new Color([0, 255, 0, 0.25])\r\n)\r\n\r\n\r\n// Identificadores de graficos\r\nconst idGraphicPredioCm = \"graphicPredioCm2\"\r\nconst idGraphicPredioByDivison = \"graphicPredioByDivison\"\r\nconst idGraphicPredioSelectedCm = \"graphicPredioSelected\"\r\nconst idGraphicLoteCm = \"graphicLoteCm\"\r\nconst idGraphicLoteSelectedCm = \"graphicLoteSelectedCm\"\r\nconst idGraphicPuntoLote = \"graphicPuntoLote\"\r\nconst idGraphicFrenteLote = \"graphicFrenteLote\"\r\nconst idGraphicLineaDivision = \"graphicLineaDivision\"\r\nconst idGraphicLoteDeleteCm = \"graphicLoteDeleteCm\"\r\nconst idGraphicLabelLineaDivision = \"graphicLabelLineaDivision\"\r\nconst idGraphicLabelCodLote = \"graphicLabelCodLoteDivision\"\r\n\r\n// symbol by case\r\nconst symbolByCase = {\r\n  \"1\": {\"symbol\": symbolPredio},\r\n  \"2\": {\"symbol\": symbolPredio},\r\n  \"3\": {\"symbol\": symbolPredio},\r\n}\r\n\r\n// graphicsLayer main\r\nlet graphicLayerLineaDivision = new GraphicsLayer({\r\n  id: idGraphicLineaDivision,\r\n});\r\n\r\nlet graphicLayerLabelLineaDivision = new GraphicsLayer({\r\n  id: idGraphicLabelLineaDivision,\r\n});\r\n\r\n// let graphicLayerLabelCodLoteDivision = new GraphicsLayer({\r\n//   id: idGraphicLabelCodLote,\r\n// });\r\n\r\nlet graphicLayerPredioByDivison = new GraphicsLayer({\r\n  id: idGraphicPredioByDivison,\r\n});\r\n\r\nlet fontAwesome = document.createElement('script');\r\nfontAwesome.src = 'https://use.fontawesome.com/releases/v5.3.1/js/all.js';\r\ndocument.head.appendChild(fontAwesome);\r\n\r\n// To create a widget, you need to derive from BaseWidget.\r\nexport default declare([BaseWidget], {\r\n\r\n  // Custom widget code goes here\r\n\r\n  baseClass: 'carto-maintenance-wgt',\r\n  codRequestsCm: null,\r\n  currentTabActive: null,\r\n  layersMap: [],\r\n  queryUbigeo: paramsApp['ubigeo'] ? `${_UBIGEO_FIELD} = '${paramsApp['ubigeo']}'` : \"1=1\",\r\n  case: 0,\r\n  caseDescription: '',\r\n  lotesQuery: null,\r\n  idlotes: null,\r\n  arancel: null,\r\n  codigosPredios: null,\r\n  xy: [],\r\n  idxLines: 0,\r\n  idPredioDivision: '',\r\n  idPredioAcumulacion: '',\r\n  editToolbar: null,\r\n  idButtonDrawActive: '',\r\n  queryRequests: {\r\n    ubigeo: paramsApp['ubigeo'],\r\n    limit: 1000000,\r\n    ordering:\"-date\"\r\n  },\r\n\r\n  // add additional properties here\r\n\r\n  // methods to communication with app container:\r\n  postCreate () {\r\n    this.inherited(arguments);\r\n    console.log('CartoMaintenanceWgt::postCreate');\r\n    this._getAllLayers();\r\n    selfCm = this;\r\n    this._filterByDistrictCm();\r\n    this._startExtentByDistrictCm();\r\n    esri.bundle.toolbars.draw.addPoint = esri.bundle.toolbars.draw.addPoint + \"<br/>Pulsar <strong>CTRL</strong> para activar la alineación\";\r\n    esri.bundle.toolbars.draw.addShape = esri.bundle.toolbars.draw.addShape + \"<br/>Pulsar <strong>CTRL</strong> para activar la alineación\";\r\n    esri.bundle.toolbars.draw.resume = esri.bundle.toolbars.draw.resume + \"<br/>Pulsar <strong>CTRL</strong> para activar la alineación\";\r\n    esri.bundle.toolbars.draw.start = esri.bundle.toolbars.draw.start + \"<br/>Pulsar <strong>CTRL</strong> para activar la alineación\";\r\n  },\r\n  _getAllLayers() {\r\n    LayerInfos.getInstance(this.map, this.map.itemInfo).then(lang.hitch(this, function (layerInfosObj) {\r\n      this.layersMap = layerInfosObj;\r\n    }));\r\n  },\r\n\r\n  _showMessage(message, type = 'message') {\r\n    let title = `${this.nls._widgetLabel}: ${type}`\r\n    switch (type) {\r\n        case 'error':\r\n            new Message({\r\n                type: type,\r\n                titleLabel: title,\r\n                message: message,\r\n            });\r\n            break;\r\n        default:\r\n            new Message({\r\n                type: type,\r\n                titleLabel: title,\r\n                message: message,\r\n            });\r\n            break;\r\n    }\r\n\r\n  },\r\n\r\n  _showMessagePromise(messagetext) {\r\n    let deferred = new Deferred();\r\n    let message = new Message({\r\n        message: messagetext,\r\n        buttons: [{\r\n            label: \"Ok\",\r\n            onClick: function () {\r\n                deferred.resolve(true);\r\n                message.hide();\r\n            }\r\n        }]\r\n    });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _showMessageConfirm(){\r\n    let deferred = new Deferred();\r\n    let mensaje = new Message({\r\n      message: \"¿Estás seguro de que deseas continuar?\",\r\n      type: \"question\",\r\n      buttons: [{\r\n        label: \"Sí\",\r\n        onClick: function() {\r\n          deferred.resolve(true);\r\n          mensaje.hide();\r\n        }\r\n      }, {\r\n        label: \"No\",\r\n        onClick: function() {\r\n          deferred.resolve(false);\r\n          mensaje.hide();\r\n        }\r\n      }]\r\n    });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _filterByDistrictCm(){\r\n    let queryPredios = selfCm.layersMap.getLayerInfoById(idLyrCfPredios).getFilter()\r\n    queryPredios = queryPredios ? queryPredios + \" AND \" + selfCm.queryUbigeo : selfCm.queryUbigeo\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfPredios).setFilter(queryPredios)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfLotes_pun).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfEje_vial).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfNumeracion).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfArancel).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfLotes).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfUnidadesurbanas).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfParques).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfManzana).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfManzanaUrb).setFilter(selfCm.queryUbigeo)\r\n    selfCm.layersMap.getLayerInfoById(idLyrCfSector).setFilter(selfCm.queryUbigeo)\r\n    // selfCm.layersMap.getLayerInfoById(idLyrActpuntoimg).setFilter(selfCm.queryUbigeo)\r\n  },\r\n\r\n  _startExtentByDistrictCm(){\r\n    let query = new Query()\r\n    query.where = selfCm.queryUbigeo\r\n\r\n    let qTask = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrDistricts).getUrl())\r\n\r\n    qTask.executeForExtent(query, function(results){\r\n      selfCm.map.setExtent(results.extent).then(function(){\r\n        // get the next scale value from the current scale\r\n        let homeWidget = WidgetManager.getInstance().getWidgetsByName(\"HomeButton\");\r\n        homeWidget[0].homeDijit.extent = selfCm.map.extent;\r\n      })       \r\n    }, function(error){\r\n      console.log(error)\r\n    })\r\n  },\r\n\r\n  startup() {\r\n    this.inherited(arguments);\r\n    console.log('CartoMaintenanceWgt::startup');\r\n\r\n    this.busyIndicator = BusyIndicator.create({\r\n      target: this.domNode.parentNode.parentNode,\r\n      backgroundOpacity: 0\r\n    });\r\n  },\r\n\r\n  _callApiRestServices(baseUrl, params){\r\n    let url = new URL(baseUrl);\r\n    Object.keys(params).forEach(key => url.searchParams.append(key,params[key]));\r\n\r\n    return fetch(url)\r\n      .then(response => {\r\n        if (!response) {\r\n          selfCm.busyIndicator.hide();\r\n          throw new Error(\"HTTP error \" + response.status);\r\n        }\r\n        return response.json();\r\n      })\r\n      .catch(function(err) {\r\n        selfCm.busyIndicator.hide();\r\n        console.log(\"An error occurred while fetching the data.\");\r\n      });    \r\n  },\r\n\r\n  _getRequestsTrayDataCm(responseData, state){\r\n    // Reemplazar todo el metodo para capturar datos de servicio\r\n    let data = responseData.filter((i) => i.status == state);\r\n    return data\r\n  },\r\n\r\n  _loadIniRequestsCm(){\r\n    dojo.query(`#${requestToAttendState}`)[0].click()\r\n  },\r\n\r\n  _parseDateStringtoFormat(dateString){\r\n    let date = new Date(dateString)\r\n    let day = date.getDate()\r\n    let month = date.getMonth() + 1\r\n    let year = date.getFullYear()\r\n    return `${day}/${month}/${year}`\r\n  },\r\n\r\n  _loadRequestsByEventCm(evt){\r\n    let params = {\r\n      ubigeo : paramsApp['ubigeo'],\r\n    }\r\n    let target = evt.target\r\n    selfCm._loadRequestsCm(params, target)\r\n  },\r\n\r\n  _loadDocSupportCm(){\r\n    let urlStatusRequest = `${selfCm.config.applicationListUrl}/${selfCm.codRequestsCm}`\r\n    selfCm._callApiRestServices(urlStatusRequest, {}).then(function (result) {\r\n      try {\r\n        dojo.query(\"#showInfoDocCm\")[0].value = result.support     \r\n      } catch (error) {\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(error.message, type=\"error\")\r\n      }\r\n\r\n    })\r\n  },\r\n\r\n  _loadRequestsCm(evt){\r\n    selfCm.busyIndicator.show();\r\n    selfCm._callApiRestServices(selfCm.config.applicationListUrl, selfCm.queryRequests).then(response => {\r\n      // ----------------------------------------------\r\n      // comentar esta linea cuando se pase a produccion\r\n      // response = dataRequestsToAttendCm2\r\n      // ----------------------------------------------\r\n      response = response['results']\r\n      selfCm.currentTabActive = evt.target.id;\r\n      let estado = iconByState[evt.target.id].desc;\r\n      let data = selfCm._getRequestsTrayDataCm(response, estado);\r\n      let dataHtml = data.map((i) => `<tr>\r\n                                        <td>${i.id}</td>\r\n                                        <td>${i.type}</td>\r\n                                        <td>${i.lands.map(lnd => lnd['cpm']).join(',')}</td>\r\n                                        <td>${selfCm._parseDateStringtoFormat(i.date)}</td>\r\n                                        <td>\r\n                                          <button id=\"${iconByState[evt.target.id].id}\" value=\"${i.idType}\" class=\"stateRequestClsCm\">\r\n                                            <i class=\"${iconByState[evt.target.id].icon}\"></i>\r\n                                          </button>\r\n                                        </td>\r\n                                      </tr>`\r\n                                      )\r\n      let tbody = dojo.create('tbody', {innerHTML: dataHtml.join('')});\r\n      let tb = dojo.query(\".tableRequestClsCm\")[0]\r\n      if (tb.getElementsByTagName(\"tbody\").length > 0){\r\n        selfCm.tableRequestApCm.removeChild(tb.getElementsByTagName(\"tbody\")[0])\r\n      }\r\n      selfCm.tableRequestApCm.appendChild(tbody);\r\n      if(evt.target.id == requestToAttendState){\r\n        dojo.query(\".stateRequestClsCm\").on('click', selfCm._openFormCase);\r\n      }\r\n      if(evt.target.id == requestsAttendState){\r\n        dojo.query(\".stateRequestClsCm\").on('click', selfCm._openFormResult);\r\n      }\r\n\r\n      dojo.query(\".tablinksCm\").removeClass(\"active\");\r\n      evt.target.classList.add(\"active\");\r\n      selfCm.busyIndicator.hide();\r\n    })\r\n  },\r\n\r\n  _zoomToPredSelectedEvt(evt){\r\n    let cod_pred = evt.currentTarget.children[0].innerHTML.split(': ')[1]\r\n    selfCm._zoomToPredSelected(cod_pred)\r\n  },\r\n\r\n  _zoomToPredSelected(cod_pred){\r\n    selfCm._removeLayerGraphic(idGraphicPredioSelectedCm);\r\n    let prediosLayer = selfCm.layersMap.getLayerInfoById(idLyrCfPredios);\r\n    let propertyLayer = new FeatureLayer(prediosLayer.getUrl(), {\r\n      mode: FeatureLayer.MODE_ONDEMAND,\r\n      outFields: [\"*\"]\r\n    });\r\n    // crear una consulta para seleccionar la fila deseada\r\n    let query = new Query();\r\n    query.where = `${_UBIGEO_FIELD} = '${paramsApp['ubigeo']}' and ${_COD_PRE_FIELD} = '${cod_pred}'`\r\n    \r\n    // seleccionar la fila\r\n    propertyLayer.selectFeatures(query, FeatureLayer.SELECTION_NEW, function(results){\r\n      if (results.length == 0){\r\n        selfCm._showMessage(\"No se encontró el predio seleccionado\", type=\"error\")\r\n        return\r\n      }\r\n      let featureSelected = new GraphicsLayer({\r\n        id: idGraphicPredioSelectedCm\r\n      });\r\n      featureSelected.add(results[0]);\r\n      selfCm.map.addLayer(featureSelected);\r\n      selfCm.map.centerAt(results[0].geometry);\r\n\r\n      // Parpadeo de seleccion\r\n      let interval = setInterval(function() {\r\n        if (featureSelected.graphics[0].symbol === symbolPredioSelected) {\r\n          featureSelected.graphics[0].setSymbol(null);\r\n        } else {\r\n          featureSelected.graphics[0].setSymbol(symbolPredioSelected);\r\n        }\r\n      }, 200);\r\n      setTimeout(function(){\r\n        clearInterval(interval);\r\n        selfCm._removeLayerGraphic(idGraphicPredioSelectedCm);\r\n      }, 2000);\r\n      \r\n    });\r\n  },\r\n  \r\n  _openSupportingDocument(evt){\r\n    window.open(evt.currentTarget.value, '_blank').focus();\r\n  },\r\n\r\n  _zoomExtentToLote(cod_pre){\r\n    let query = new Query()\r\n\r\n    query.where = `${_UBIGEO_FIELD} = '${paramsApp['ubigeo']}' and ${_COD_PRE_FIELD} in ('${(cod_pre.split(',')).join(\"', '\")}')`\r\n    // fields return\r\n    query.outFields = [_ID_LOTE_P_FIELD, _COD_MZN_FIELD, _COD_SECT_FIELD]\r\n    query.returnGeometry = false\r\n    // Return distinct values\r\n    query.returnDistinctValues = true\r\n\r\n    let qTask = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrCfPredios).getUrl())\r\n\r\n    qTask.execute(query, function(results){\r\n      let idLote = results.features.map((i) => i.attributes[_ID_LOTE_P_FIELD])\r\n      selfCm.idlotes = idLote\r\n      let idmanzana = results.features.map((i) => i.attributes[_COD_MZN_FIELD])\r\n      let idsector = results.features.map((i) => i.attributes[_COD_SECT_FIELD])\r\n      let queryLote = new Query()\r\n      queryLote.where = `${_ID_LOTE_P_FIELD} in (${idLote.join(\",\")}) and (${_UBIGEO_FIELD} = ${paramsApp['ubigeo']})`\r\n      selfCm.lotesQuery = queryLote.where\r\n      selfCm.arancel = `${_UBIGEO_FIELD} = '${paramsApp.ubigeo}' and (${_COD_MZN_FIELD} in (${idmanzana.join(\",\")})) and (${_COD_SECT_FIELD} IN (${idsector.join(\",\")}))`\r\n      queryLote.returnGeometry = true\r\n      let qTaskLote = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl())\r\n      qTaskLote.executeForExtent(queryLote, function(results){\r\n        selfCm.map.setExtent(results.extent.expand(2)).then(function(){\r\n          qTaskLote.execute(queryLote, function(results){\r\n            let arr = []\r\n            for (let i of results.features) {\r\n              arr.push(i.geometry)\r\n            }\r\n            let response = selfCm._unionFeatures(arr)\r\n            let graphic = new Graphic(response, symbolLoteSelected);\r\n            let featureSelected = new GraphicsLayer({\r\n              id: idGraphicLoteSelectedCm\r\n            });\r\n            featureSelected.add(graphic);\r\n            selfCm.map.addLayer(featureSelected);\r\n            \r\n            // Parpadeo de seleccion\r\n            let interval = setInterval(function() {\r\n              if (featureSelected.graphics[0].symbol === symbolLoteSelected) {\r\n                featureSelected.graphics[0].setSymbol(null);\r\n              } else {\r\n                featureSelected.graphics[0].setSymbol(symbolLoteSelected);\r\n              }\r\n            }, 200);\r\n            setTimeout(function(){\r\n              clearInterval(interval);\r\n              selfCm._removeLayerGraphic(idGraphicLoteSelectedCm);\r\n            }, 2000);\r\n            \r\n          })\r\n        })\r\n      })\r\n    })\r\n  },\r\n  _zoomHomeRequests(){\r\n    selfCm._zoomExtentToLote(selfCm.codigosPredios)\r\n  },\r\n\r\n  _populateFormsByPredio(id_solicitud){\r\n    let url = `${selfCm.config.landsByApplicationUrl}/${id_solicitud}`\r\n    selfCm._callApiRestServices(url, {}).then(response => {\r\n      // -----------------------------------------------\r\n      // Eliminar la siguiente linea cuando existan casos de prueba\r\n      // response['results'] = selfCm._getDataPredioByRequests(id_solicitud)\r\n      // -----------------------------------------------\r\n      if (response.results.length == 0) {\r\n        // Escribir mensaje de error\r\n        selfCm._showMessage(`No existe registro de los predios asociados a esta solicitud: ${id_solicitud}`, type=\"error\");\r\n        return\r\n      }\r\n      let rows = response['results'].map((i) => {\r\n        return `<div class=\"caseInfoClsCm\">\r\n          <div class=\"headPredInfoClsCm\">\r\n            <span class=\"alignVCenter\">Predio: ${i.cpm}</span>\r\n          </div>\r\n          <div class=\"bodyPredInfoClsCm\">\r\n            <label for=\"direccion\">Dirección:</label>\r\n            <input type=\"text\" id=\"direccion\" name=\"direccion\" value=\"${i.streetName}\" readonly>\r\n  \r\n          </div>\r\n        </div>`\r\n      })\r\n\r\n      dojo.query('.CtnPredInfoClsCm')[0].innerHTML = rows.join('')\r\n      dojo.query(\".headPredInfoClsCm\").on('click', selfCm._zoomToPredSelectedEvt)\r\n      selfCm.codigosPredios = response['results'].map((i) => i.cpm).join(',')\r\n      selfCm._zoomExtentToLote(selfCm.codigosPredios)\r\n    })\r\n  },\r\n\r\n  _openFormCase(evt){\r\n    if (evt.currentTarget.id == \"editRequestsCm\"){\r\n      let row = dojo.query(evt.currentTarget).closest(\"tr\")[0];\r\n      let rowList = dojo.query(\"td\", row).map(td => td.innerHTML);\r\n      selfCm.codRequestsCm = rowList[0]\r\n      selfCm.caseDescription = rowList[1]\r\n      dojo.query('#titleCaseCm')[0].innerHTML = `<span>${selfCm.caseDescription} <span class=\"fa fa-search\" style=\"font-size: 15px\"></span></span>`\r\n      selfCm._populateFormsByPredio(selfCm.codRequestsCm)\r\n\r\n      selfCm.case = evt.currentTarget.value\r\n      switch (selfCm.case) {\r\n        case \"1\":\r\n          selfCm.reasignarApCm.classList.toggle('active')\r\n          break;\r\n        case \"2\":\r\n          selfCm.fusionApCm.classList.toggle('active')\r\n          break\r\n        case \"3\":\r\n          selfCm.divisionApCm.classList.toggle('active')\r\n          break\r\n        case \"4\":\r\n          selfCm.eliminacionApCm.classList.toggle('active')\r\n          break\r\n        default:\r\n          break;\r\n      }\r\n\r\n      // selfCm.codigosPredios = rowList[2]\r\n      // selfCm._zoomHomeRequests()\r\n      selfCm.resultCtnApCm.classList.remove('active')\r\n      selfCm.obsCtnApCm.classList.remove('active')\r\n      selfCm.requestTrayApCm.classList.remove('active')\r\n      selfCm.casesCtnApCm.classList.toggle('active')\r\n      selfCm._loadDocSupportCm()\r\n\r\n    } else if (evt.currentTarget.id == 'backTrayCm' || evt.currentTarget.id == 'backTrayResultCm') {\r\n      // desactivar el toolbarCm de edicion si esta activado\r\n      // toolbarCm.deactivate()\r\n      toolbarCm.deactivate();\r\n\r\n      // deshabilitar snapping\r\n      selfCm.map.disableSnapping()\r\n      selfCm.bodyTbLinesDvApCm.innerHTML = ''\r\n      // selfCm.CtnPrediosDvApCm.style.display = 'none'\r\n      selfCm.bodyTbPrediosDvApCm.innerHTML = ''\r\n\r\n      dojo.query(\".caseClsCm\").removeClass(\"active\")\r\n      // remove all graphics layer if exist\r\n      selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n      selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n      selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n      selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n      selfCm._removeLayerGraphic(idGraphicPredioSelectedCm);\r\n      selfCm._removeLayerGraphic(idGraphicLabelCodLote)\r\n      selfCm.bodyTbDatosLoteDvApCm.innerHTML = ''\r\n\r\n      graphicLayerLineaDivision.clear();\r\n      graphicLayerLabelLineaDivision.clear();\r\n      graphicLayerPredioByDivison.clear();\r\n\r\n      selfCm.lotesQuery = null\r\n      selfCm.arancel = null\r\n      selfCm.xy = []\r\n\r\n      selfCm.casesCtnApCm.classList.remove('active')\r\n      selfCm.resultCtnApCm.classList.remove('active')\r\n      selfCm.obsCtnApCm.classList.remove('active')\r\n      selfCm.requestTrayApCm.classList.toggle('active')\r\n      selfCm._removeClassActiveButton()\r\n      selfCm._loadIniRequestsCm();\r\n    }\r\n    \r\n  },\r\n  _openFormObs(){\r\n    selfCm.textAreaObsApCm.value = ''\r\n    let imageDiv = dojo.query(\".thumbnailClsCm\")[0];\r\n    imageDiv.style.backgroundImage = \"none\";\r\n    imageDiv.innerHTML = \"<span><i class='far fa-image'></i></span>\";\r\n    dojo.query('#headeRequestsCtnCm')[0].innerHTML = `<span class=\"alignVCenter\">Solicitud: ${selfCm.codRequestsCm}</span>`\r\n    selfCm.casesCtnApCm.classList.toggle(\"active\");\r\n    selfCm.obsCtnApCm.classList.toggle('active')\r\n  },\r\n  \r\n  _FormResult(id_solicitud, caseCm){\r\n    let urlPredioResults = `${selfCm.config.resultsByApplication}/${id_solicitud}`\r\n    selfCm._callApiRestServices(urlPredioResults, {}).then(function (response) {\r\n      try {\r\n        // ----------------------------------------------------\r\n        // Comentar esta linea cuando se consuma el servicio\r\n        // response = responseDivision[id_solicitud]\r\n        // ----------------------------------------------------\r\n        selfCm.bodyTbResultsApCm.innerHTML = ''\r\n        dojo.query(\"#titleCaseResult\")[0].innerHTML = `<span>Solicitud ${id_solicitud}: ${caseCm}</span>`\r\n\r\n        let rows = response.results.map((predio, index) => {\r\n          return `<tr><td class=\"center-aligned\">${index + 1}</td>\r\n                  <td>${predio['cpm']}</td>\r\n                  <td>${predio['address']}</td>\r\n                  <td class=\"center-aligned\">\r\n                    <span id=\"${predio['cpm']}_search\" class=\"zoomPredioResultClsCm\"><i class=\"fas fa-search\"></i></span>\r\n                  </td></tr>`        \r\n        })\r\n        selfCm.bodyTbResultsApCm.innerHTML = rows.join('')\r\n        dojo.query('.zoomPredioResultClsCm').on('click', selfCm._centerAtPredioResult)\r\n        selfCm.casesCtnApCm.classList.remove(\"active\");\r\n        selfCm.obsCtnApCm.classList.remove('active')\r\n        selfCm.requestTrayApCm.classList.remove('active')\r\n        selfCm.resultCtnApCm.classList.toggle('active')\r\n        selfCm.busyIndicator.hide()\r\n      }\r\n      catch (error) {\r\n        console.log(error)\r\n      }\r\n    })\r\n  },\r\n\r\n  _centerAtPredioResult(evt){\r\n    let cod_pre = evt.currentTarget.id.replace('_search', '')\r\n    selfCm._zoomToPredSelected(cod_pre)\r\n  },\r\n\r\n  _openFormResult(evt){\r\n    let row = dojo.query(evt.currentTarget).closest(\"tr\")[0];\r\n    let rowList = dojo.query(\"td\", row).map(td => td.innerHTML);\r\n    selfCm.codRequestsCm = rowList[0]\r\n    selfCm.caseDescription = rowList[1]\r\n    selfCm._FormResult(selfCm.codRequestsCm, selfCm.caseDescription)\r\n  },\r\n\r\n  // Toolbar function\r\n  _createToolbar() {\r\n    toolbarCm = new Draw(selfCm.map);\r\n    toolbarCm.on(\"draw-end\", selfCm._addToMap);\r\n  },\r\n\r\n  _addToMap(evt) {\r\n    if (evt.geometry.type === \"point\") {\r\n      let screenPoint = selfCm.map.toScreen(evt.geometry)\r\n      let deferred = selfCm.map.snappingManager.getSnappingPoint(screenPoint);\r\n      deferred.then(function(value){\r\n        if(value !== undefined){\r\n          let point_g = webMercatorUtils.webMercatorToGeographic(new Point(value));\r\n          let graphic = new Graphic(point_g, symbolByCase[selfCm.case].symbol);\r\n          // si es el caso reasignacion de predio\r\n          if (selfCm.case == 1 || selfCm.case == 2) {\r\n            \r\n            let graphicLayer = new GraphicsLayer({\r\n              id: idGraphicPredioCm,\r\n            });\r\n            graphicLayer.add(graphic);\r\n            selfCm.map.addLayer(graphicLayer);\r\n            selfCm.xy = [point_g.x, point_g.y]\r\n          }\r\n          else if (selfCm.case == 3){\r\n            graphic['attributes'] = {id: selfCm.idPredioDivision}\r\n            graphicLayerPredioByDivison.add(graphic);\r\n          }\r\n          selfCm.map.setInfoWindowOnClick(true);\r\n          toolbarCm.deactivate();\r\n          selfCm._removeClassActiveButton()\r\n        } else {\r\n          alert(selfCm.nls.errorSnapingLocate);\r\n        }\r\n      }, function(error){\r\n        console.log(error);\r\n      });\r\n    } else if (evt.geometry.type === \"polyline\") {\r\n      selfCm.idxLines = selfCm.idxLines + 1\r\n      let nameIdLine = `Polyline_${selfCm.idxLines}`\r\n      let graphic = new Graphic(evt.geometry, symbolDivisionLote, {id: nameIdLine});\r\n      graphicLayerLineaDivision.add(graphic);\r\n      selfCm._populateTableDrawLine(nameIdLine)\r\n      selfCm._addNameToLine(nameIdLine, evt.geometry)\r\n      selfCm.map.addLayer(graphicLayerLineaDivision);\r\n      selfCm.map.setInfoWindowOnClick(true);\r\n      toolbarCm.deactivate();\r\n      selfCm._removeClassActiveButton()\r\n      // desactiva el boton luego de dibujar\r\n    }\r\n    // check exist activeButton class in button\r\n    \r\n  },\r\n\r\n  _removeClassActiveButton(){\r\n    if (dojo.query(`#${selfCm.idButtonDrawActive}`).length > 0) {\r\n      dojo.query(`#${selfCm.idButtonDrawActive}`)[0].classList.remove('activeButton')\r\n    }\r\n  },\r\n\r\n  _removeLayerGraphic(layerId){\r\n    if (selfCm.map.graphicsLayerIds.includes(layerId)) {\r\n      selfCm.map.removeLayer(selfCm.map.getLayer(layerId));\r\n    }\r\n  },\r\n\r\n  _activateTool(evt) {\r\n    selfCm._removeClassActiveButton()\r\n    selfCm.idButtonDrawActive = evt.currentTarget.id\r\n    dojo.query(`#${selfCm.idButtonDrawActive}`)[0].classList.add('activeButton')\r\n    selfCm._activateSnappingByReasignar();\r\n    selfCm.map.setInfoWindowOnClick(false);\r\n    selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n    toolbarCm.activate(Draw[\"POINT\"]);\r\n  },\r\n\r\n  _activateToolAcumulacion(evt){\r\n    selfCm._removeClassActiveButton()\r\n    let id = evt.currentTarget.id\r\n    selfCm.idPredioAcumulacion = id\r\n    selfCm.idButtonDrawActive = id\r\n    dojo.query(`#${selfCm.idButtonDrawActive}`)[0].classList.add('activeButton')\r\n    selfCm.map.setInfoWindowOnClick(false);\r\n    selfCm._activateSnappingByAcumulacion();\r\n    selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n    toolbarCm.activate(Draw[\"POINT\"]);\r\n  },\r\n\r\n  _activateToolLinesDivision(evt){\r\n    selfCm._removeClassActiveButton()\r\n    selfCm.idButtonDrawActive = evt.currentTarget.id\r\n    dojo.query(`#${selfCm.idButtonDrawActive}`)[0].classList.add('activeButton')\r\n    selfCm.map.setInfoWindowOnClick(false);\r\n    selfCm._activateSnappingByDivision();\r\n    selfCm._removeLayerGraphic(idGraphicLoteCm)\r\n    selfCm._removeLayerGraphic(idGraphicPuntoLote)\r\n    selfCm._removeLayerGraphic(idGraphicFrenteLote)\r\n    selfCm._removeLayerGraphic(idGraphicLabelCodLote)\r\n    selfCm.bodyTbDatosLoteDvApCm.innerHTML = ''\r\n    selfCm.bodyTbPrediosDvApCm.innerHTML = ''\r\n    graphicLayerPredioByDivison.clear()\r\n    toolbarCm.activate(Draw[\"POLYLINE\"]);\r\n  },\r\n\r\n  _activateSnappingByReasignar() {\r\n    let cflayer = selfCm.layersMap.getLayerInfoById(idLyrCfLotes_pun)\r\n    let propertyLayer = new FeatureLayer(cflayer.getUrl(), {\r\n      mode: FeatureLayer.MODE_ONDEMAND,\r\n      outFields: [\"*\"]\r\n    });\r\n    let snapManager = selfCm.map.enableSnapping({\r\n      // alwaysSnap: true,\r\n      // snapKey: keys.CTRL,\r\n      snapPointSymbol: symbolSnapPointCm,\r\n      tolerance: 5,\r\n    });\r\n    // get layerinfo by id of layer to snap\r\n    let layerInfos = [{\r\n      layer: propertyLayer\r\n    }];\r\n    \r\n    snapManager.setLayerInfos(layerInfos);\r\n  },\r\n\r\n  _activateSnappingByAcumulacion(){\r\n    let graphicLayerPuntoLote = selfCm.map.getLayer(idGraphicPuntoLote)\r\n    let graphicsLayerInfo = new esri.layers.LayerInfo({\r\n      id: graphicLayerPuntoLote.id, // El id del `GraphicsLayer`\r\n      name: graphicLayerPuntoLote.name, // El nombre del `GraphicsLayer`\r\n      layer: graphicLayerPuntoLote // El `GraphicsLayer` a utilizar\r\n    });\r\n\r\n    // Agregar el `LayerInfo` al mapa y habilitar el snapping\r\n    selfCm.map.enableSnapping({\r\n      layerInfos: [graphicsLayerInfo], // Agregar el `LayerInfo` al mapa\r\n      // alwaysSnap: true,\r\n      snapPointSymbol: symbolSnapPointCm,\r\n      tolerance: 5,\r\n    });\r\n  },\r\n\r\n  _activateSnappingByDivision(){\r\n    let graphicsLayerInfo = new esri.layers.LayerInfo({\r\n      id: graphicLayerLineaDivision.id, // El id del `GraphicsLayer`\r\n      name: graphicLayerLineaDivision.name, // El nombre del `GraphicsLayer`\r\n      layer: graphicLayerLineaDivision // El `GraphicsLayer` a utilizar\r\n    });\r\n\r\n    let cflayer = selfCm.layersMap.getLayerInfoById(idLyrCfLotes)\r\n    let propertyLayer = new FeatureLayer(cflayer.getUrl(), {\r\n      mode: FeatureLayer.MODE_ONDEMAND,\r\n      outFields: [\"*\"]\r\n    });\r\n\r\n    let layerInfos = [{\r\n      layer: propertyLayer\r\n    }, graphicsLayerInfo];\r\n\r\n    // Agregar el `LayerInfo` al mapa y habilitar el snapping\r\n    selfCm.map.enableSnapping({\r\n      layerInfos: layerInfos, // Agregar el `LayerInfo` al mapa\r\n      // alwaysSnap: true,\r\n      snapPointSymbol: symbolSnapPointCm,\r\n      tolerance: 5,\r\n    });\r\n  },\r\n\r\n  // crear una funcion que permita dos poligonos aceptando dos poligonos json como parametros\r\n  // la funcion debe retornar un poligono json\r\n  _unionFeatures(arr) {  \r\n    let union = geometryEngine.union(arr);\r\n    return union;\r\n  },\r\n\r\n  // Generate function of create graphic by query polygon featurelayer\r\n  _ApplyAcumulacionLotes() {\r\n    selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n    selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n    selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n    selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n    selfCm._removeLayerGraphic(idGraphicLoteDeleteCm);\r\n\r\n    // Creamos grafico de lote fusionado\r\n    let graphicLayerLoteFusion = new GraphicsLayer({\r\n      id: idGraphicLoteCm\r\n    });\r\n\r\n    let query = new Query();\r\n    query.where = selfCm.lotesQuery\r\n    query.outFields = [\"*\"];\r\n    query.returnGeometry = true\r\n    let qTask = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl());\r\n    qTask.execute(query, function (results) {\r\n      let arr = []\r\n      for (let i of results.features) {\r\n        arr.push(i.geometry)\r\n      }\r\n      let response = selfCm._unionFeatures(arr)\r\n      let graphic = new Graphic(response, symbolFusionLote);\r\n\r\n      graphicLayerLoteFusion.add(graphic);\r\n      selfCm.map.addLayer(graphicLayerLoteFusion);\r\n      selfCm.map.setExtent(graphic._extent.expand(1.5), true);\r\n      let urlLotes = selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl()\r\n      selfCm._etiquetasCodLote(urlLotes, _COD_LOTE_FIELD, selfCm.arancel, \"max\", [response], selfCm.bodyTbDatosLoteFsApCm)\r\n    }).then(function () {\r\n      let query = new Query();\r\n      query.where = selfCm.arancel\r\n      // especificar los campos devueltos\r\n      query.outFields = [_UBIGEO_FIELD, _F_MZN_FIELD];\r\n      query.returnGeometry = true\r\n      // query with order by fields\r\n      query.orderByFields = [_F_MZN_FIELD];\r\n      let qTask = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrCfArancel).getUrl());\r\n      qTask.execute(query, function (results) {\r\n        // Creamos grafico de punto lote\r\n        let graphicLayerPuntoLote = new GraphicsLayer({\r\n          id: idGraphicPuntoLote\r\n        });\r\n        // creamos grafico de frente de lote\r\n        let graphicLayerFrenteLote = new GraphicsLayer({\r\n          id: idGraphicFrenteLote\r\n        });\r\n        let graphicFusion = selfCm.map.getLayer(idGraphicLoteCm)\r\n        let frentes = {}\r\n        for (let row of results.features){\r\n          let isItc = geometryEngine.intersects(row.geometry, graphicFusion.graphics[0].geometry)\r\n          if (!isItc){\r\n            continue\r\n          }\r\n          // saber si un key esta dentro del objeto frentes\r\n          if (!frentes.hasOwnProperty(row.attributes[_F_MZN_FIELD])){\r\n            frentes[row.attributes[_F_MZN_FIELD]] = row.geometry;\r\n          }\r\n          else{\r\n            let unionFrentes = geometryEngine.union([frentes[row.attributes[_F_MZN_FIELD]], row.geometry])\r\n            frentes[row.attributes[_F_MZN_FIELD]] = unionFrentes;\r\n          }\r\n        }\r\n        for (let idx in frentes){\r\n          // interseccion entre frentes y lote\r\n          let itcFrentesByLotes = geometryEngine.intersect(frentes[idx], graphicFusion.graphics[0].geometry)\r\n          // Generate symbol by line with random colors\r\n\r\n          // polilinea de frentes resultantes\r\n          let polyline = new Polyline({\r\n            paths: itcFrentesByLotes.paths,\r\n            spatialReference: {wkid: 4326}\r\n          });\r\n          \r\n          let polylineOne = null;\r\n          if (polyline.paths.length > 1){\r\n            polylineOne = selfCm._getLongestPolyline(polyline)\r\n            \r\n          }else{\r\n            polylineOne = polyline\r\n          }\r\n\r\n          // calculamos el punto medio de la polilinea\r\n          let puntoLoteTurf = selfCm._findMidpoint(polylineOne)\r\n\r\n          // crear un punto en el mapa\r\n          let puntoLote = new Point({\r\n            x: puntoLoteTurf.geometry.coordinates[0],\r\n            y: puntoLoteTurf.geometry.coordinates[1],\r\n            spatialReference: {wkid: 4326}\r\n          })\r\n\r\n          // Agregar el punto p al mapa          \r\n          let puntoLoteGraphic = new Graphic(puntoLote, symbolPuntoLote)\r\n          graphicLayerPuntoLote.add(puntoLoteGraphic)\r\n\r\n          // console.log(point)\r\n          const symbolFrenteLote = new SimpleLineSymbol(\r\n            SimpleLineSymbol.STYLE_SOLID,\r\n            new Color(\r\n              [\r\n                Math.floor(Math.random() * 255), \r\n                Math.floor(Math.random() * 255), \r\n                Math.floor(Math.random() * 255)]),\r\n            5\r\n          )\r\n          let frente = new Graphic(polyline, symbolFrenteLote);\r\n          graphicLayerFrenteLote.add(frente);\r\n        }\r\n        \r\n        selfCm.map.addLayer(graphicLayerFrenteLote);\r\n        selfCm.map.addLayer(graphicLayerPuntoLote);\r\n        selfCm._populateTablePredio(selfCm.bodyTbPrediosFsApCm, selfCm._activateToolAcumulacion)\r\n      })\r\n    });\r\n  },\r\n\r\n  _getMidpoint(polyline) {\r\n    let length = geometryEngine.geodesicLength(polyline, \"meters\");\r\n    let midpoint = geometryEngine.geodesicDensify(polyline, length/2, \"meters\").getPoint(0, 0);\r\n    return midpoint;\r\n  },\r\n\r\n  _findMidpoint(polyline) {\r\n    let lengthPolylineChunk = geometryEngine.geodesicLength(polyline, \"meters\")\r\n    let line = turf.lineString(polyline.paths[0]);\r\n    let options = {units: 'meters'};\r\n    let along = turf.along(line, lengthPolylineChunk/2, options);\r\n    return along\r\n  },\r\n\r\n  // funcion que recibe una polilinea con muchas partes y retorna la parte mas larga como una polilinea\r\n  _getLongestPolyline(polyline){\r\n    let paths = polyline.paths\r\n    let longestPath = 0\r\n    let response = null;\r\n    for (let path of paths){\r\n      let polylineChunk = new Polyline({\r\n        paths: [path],\r\n        spatialReference: {wkid: 4326}\r\n      });\r\n      let lengthPolylineChunk = geometryEngine.geodesicLength(polylineChunk, \"meters\")\r\n      if (lengthPolylineChunk > longestPath){ \r\n        longestPath = lengthPolylineChunk\r\n        response = polylineChunk\r\n      }\r\n    }\r\n    return response\r\n  },\r\n\r\n  // --------------------------------------------------------------\r\n  // SUBDIVISION DE LOTES\r\n  // function that allows dividing a polygon from cutting lines, the parameters will be a polygon and several lines in json format\r\n  // the function must return a polygon json\r\n  // --------------------------------------------------------------\r\n  _dividePolygon(poly, lines) {\r\n    let divide = geometryEngine.cut(poly, lines);\r\n    return divide;\r\n  },\r\n\r\n  _populateTableDrawLine(idLine){\r\n    let row = `<td class=\"center-aligned\">${selfCm.idxLines}</td>\r\n              <td contenteditable=\"true\" id=\"${idLine}_name\">${idLine}</td>\r\n              <td class=\"center-aligned\">\r\n                <span id=\"${idLine}_ext\"><i class=\"fas fa-search\"></i></span>\r\n              </td>\r\n              <td class=\"center-aligned\">\r\n                <span id=\"${idLine}_del\" style=\"color: #FF5722;\"><i class=\"far fa-trash-alt\"></i></span>\r\n              </td>`\r\n    let tr = dojo.create('tr');\r\n    tr.id = idLine;\r\n    tr.innerHTML = row;\r\n    tr.style.cursor = \"pointer\";\r\n    selfCm.bodyTbLinesDvApCm.appendChild(tr)\r\n    dojo.query(`#${idLine}_del`).on('click', selfCm._deleteRowLine);\r\n    dojo.query(`#${idLine}_ext`).on('click', selfCm._zoonToLineDivision);\r\n    dojo.query(`#${idLine}_name`).on('input', selfCm._editaNameLineDivision);\r\n  },\r\n\r\n  _deleteRowLine(evt) {\r\n    let id = evt.currentTarget.id.replace('_del', '');\r\n    let elem = dojo.query(`#${id}`);\r\n    let graphic = graphicLayerLineaDivision.graphics.filter(item => item.attributes.id == id);\r\n    graphicLayerLineaDivision.remove(graphic[0])\r\n    let graphicLabel = graphicLayerLabelLineaDivision.graphics.filter(item => item.attributes.id == id);\r\n    graphicLayerLabelLineaDivision.remove(graphicLabel[0])\r\n    // graphicLayerLineaDivision.graphics = graphics;\r\n    // selfCm.map.removeLayer(self_lw.map.getLayer(id));\r\n    elem[0].parentNode.removeChild(elem[0]);\r\n  },\r\n\r\n  _addNameToLine(name, polylineGeom){\r\n    let polylineGeomUtm = webMercatorUtils.webMercatorToGeographic(polylineGeom)\r\n    let midPoint = selfCm._findMidpoint(polylineGeomUtm)\r\n\r\n    let pointLabel = new Point({\r\n      x: midPoint.geometry.coordinates[0],\r\n      y: midPoint.geometry.coordinates[1],\r\n      spatialReference: {wkid: 4326}\r\n    })\r\n\r\n    let font = new Font(\"15px\", Font.STYLE_NORMAL, Font.VARIANT_NORMAL, Font.WEIGHT_BOLD, \"Arial\");\r\n    let txtSym = new TextSymbol(name, font, new Color([250, 0, 0, 0.9]));\r\n    txtSym.setOffset(15, 15).setAlign(TextSymbol.ALIGN_END)\r\n    txtSym.setHaloColor(new Color([255, 255, 255]));\r\n    txtSym.setHaloSize(1.5);\r\n    let graphicLabel = new Graphic(pointLabel, txtSym, {id: name});\r\n\r\n    // graphicLayer.add(graphic);\r\n    graphicLayerLabelLineaDivision.add(graphicLabel);\r\n  },\r\n\r\n  _zoonToLineDivision(evt) {\r\n    let id = evt.currentTarget.id.replace('_ext', '');\r\n    let graphic = graphicLayerLabelLineaDivision.graphics.filter(item => item.attributes.id == id);\r\n    selfCm.map.setExtent(graphic[0]._extent, true);\r\n  },\r\n\r\n  _editaNameLineDivision(evt) {\r\n    let id = evt.currentTarget.id.replace('_name', '');\r\n    let graphic = graphicLayerLabelLineaDivision.graphics.filter(item => item.attributes.id == id)\r\n    graphic[0].symbol.text = evt.currentTarget.innerText;\r\n    graphicLayerLabelLineaDivision.refresh()\r\n  },\r\n\r\n  _populateTablePredio(bodyTable, drawFunction){\r\n    // obtener del servicio los predios resultantes de la solicitud\r\n    let urlPredioResults = `${selfCm.config.resultsByApplication}/${selfCm.codRequestsCm}`\r\n    selfCm._callApiRestServices(urlPredioResults, {}).then(response => {\r\n      try {\r\n        // --------------------------------------------------------------\r\n        // Comentar lineas cuando se tenga el servicio\r\n        // response = responseDivision[selfCm.codRequestsCm]\r\n        // --------------------------------------------------------------\r\n        let idx = 1\r\n        bodyTable.innerHTML = ''\r\n        for (let predio of response.results){\r\n          let tr = dojo.create('tr');\r\n          tr.id = `predio_${idx}_${predio['cpm']}`;\r\n          let row = `<td class=\"center-aligned\">${idx}</td>\r\n                     <td>${predio['cpm']}</td>\r\n                     <td>${predio['address']}</td>\r\n                     <td class=\"center-aligned\">\r\n                      <span id=\"${tr.id}_draw\"><i class=\"fas fa-map-marker-alt\"></i></span>\r\n                     </td>`\r\n          tr.innerHTML = row;\r\n          tr.style.cursor = \"pointer\";\r\n          bodyTable.appendChild(tr)\r\n          dojo.query(`#${tr.id}_draw`).on('click', drawFunction)\r\n          idx = idx + 1      \r\n        }\r\n      } catch (error) {\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(error.message, type=\"error\")\r\n      }     \r\n    })\r\n  },\r\n\r\n  _activateSnappingPrediosByDivision(graphiclayer){\r\n    let graphicsLayerInfo = new esri.layers.LayerInfo({\r\n      id: graphiclayer.id, // El id del `GraphicsLayer`\r\n      name: graphiclayer.name, // El nombre del `GraphicsLayer`\r\n      layer: graphiclayer // El `GraphicsLayer` a utilizar\r\n    });\r\n\r\n    // Agregar el `LayerInfo` al mapa y habilitar el snapping\r\n    selfCm.map.enableSnapping({\r\n      layerInfos: [graphicsLayerInfo], // Agregar el `LayerInfo` al mapa\r\n      // alwaysSnap: true,\r\n      snapPointSymbol: symbolSnapPointCm,\r\n      tolerance: 5,\r\n    });\r\n  },\r\n\r\n  _activateToolPrediosByDivision(evt){\r\n    selfCm._removeClassActiveButton()\r\n    selfCm.idButtonDrawActive = evt.currentTarget.id\r\n    dojo.query(`#${selfCm.idButtonDrawActive}`)[0].classList.add('activeButton')\r\n    let id = evt.currentTarget.id\r\n    selfCm.idPredioDivision = id\r\n    let graphic = graphicLayerPredioByDivison.graphics.filter(item => item.attributes.id == id);\r\n    graphicLayerPredioByDivison.remove(graphic[0])\r\n    selfCm.map.setInfoWindowOnClick(false);\r\n    let graphicLayerPuntoLote = selfCm.map.getLayer(idGraphicPuntoLote)\r\n    selfCm._activateSnappingPrediosByDivision(graphicLayerPuntoLote);\r\n    toolbarCm.activate(Draw[\"POINT\"]);\r\n  },\r\n\r\n  _changeValueCodLote(evt){\r\n    let id = evt.target.id.split('_')[1]\r\n    let idx = evt.target.selectedIndex\r\n    let cod_lote = evt.target.options[idx].value\r\n    let lyr = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n    let graphicSelected = lyr.graphics.filter(item => item.attributes.id == `label_${id}`)\r\n    graphicSelected[0].symbol.text = cod_lote\r\n    lyr.refresh()\r\n  },\r\n  \r\n  _centerAtLabelCodLoteDivision(evt){\r\n    let id = evt.currentTarget.id\r\n    let lyr = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n    let graphicSelected = lyr.graphics.filter(item => item.attributes.id == id)\r\n    selfCm.map.centerAt(graphicSelected[0].geometry)\r\n  },\r\n\r\n  _editLoteUrbanoDivision(evt) {\r\n    let id = evt.currentTarget.id.replace('loteUrbanoDv_', '');\r\n    let lyr = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n    let graphic = lyr.graphics.filter(item => item.attributes.id == `label_${id}`)\r\n    graphic[0].attributes.lot_urb = evt.currentTarget.textContent\r\n    lyr.refresh()\r\n  },\r\n\r\n  _buildDataLoteTable(tableBody, predios) {\r\n    tableBody.innerHTML = ''\r\n    // const tableBody = document.getElementById(tableBodyId);\r\n    predios.forEach((predio, index) => {\r\n        const row = document.createElement('tr');\r\n\r\n        // celda de índice\r\n        const indexCell = document.createElement('td');\r\n        indexCell.className = \"center-aligned\"\r\n        indexCell.textContent = predio.num;\r\n        row.appendChild(indexCell);\r\n\r\n        // celda de codigo de predio\r\n        const codigoCell = document.createElement('td');\r\n        const select = document.createElement('select');\r\n        select.className = \"codLoteSelectDvCls\"\r\n        select.id = `codLoteSelectDv_${predio.num}`\r\n        predios.forEach(p => {\r\n            const option = document.createElement('option');\r\n            option.value = p.cod_lote;\r\n            option.textContent = p.cod_lote;\r\n            if (p.cod_lote === predio.cod_lote) {\r\n                option.selected = true;\r\n            }\r\n            select.appendChild(option);\r\n        });\r\n        codigoCell.appendChild(select);\r\n        row.appendChild(codigoCell);\r\n\r\n        // celda de lote urbano\r\n        const loteUrbCell = document.createElement('td');\r\n        loteUrbCell.contentEditable = true\r\n        loteUrbCell.textContent = '...';\r\n        loteUrbCell.id = `loteUrbanoDv_${predio.num}`\r\n        loteUrbCell.className = \"loteUrbanoDvCls\"\r\n        row.appendChild(loteUrbCell);\r\n\r\n        const locationMarker = document.createElement('td');\r\n        locationMarker.id = predio.id\r\n        locationMarker.className = \"center-aligned\"\r\n        locationMarker.innerHTML = `<span class=\"locationLabelLoteDvCls\" id=\"${predio.id}\"><i class=\"fas fa-search\"></i></span>`\r\n        row.appendChild(locationMarker);\r\n        tableBody.appendChild(row);\r\n        // dojo.query(`#${predio.id}`).on('click', selfCm._centerAtLabelCodLoteDivision)\r\n        \r\n    });\r\n    dojo.query('.codLoteSelectDvCls').on('change', selfCm._changeValueCodLote)\r\n    dojo.query('.locationLabelLoteDvCls').on('click', selfCm._centerAtLabelCodLoteDivision)\r\n    dojo.query('.loteUrbanoDvCls').on('input', selfCm._editLoteUrbanoDivision);\r\n    \r\n  },\r\n\r\n  _ordenarPoligonosNorteSur(poligonos, idx, bodyTable) {\r\n    // Obtener la coordenada más al norte de cada polígono\r\n    let coordenadasNorte = poligonos.map(poligono => {\r\n      let extent = poligono.getExtent();\r\n      return extent.ymax;\r\n    });\r\n    \r\n    // Ordenar los polígonos en base a la coordenada más al norte\r\n    let poligonosOrdenados = poligonos.slice().sort((a, b) => {\r\n      let coordenadaNorteA = coordenadasNorte[poligonos.indexOf(a)];\r\n      let coordenadaNorteB = coordenadasNorte[poligonos.indexOf(b)];\r\n      return coordenadaNorteB - coordenadaNorteA; // Ordenar de norte a sur\r\n    });\r\n\r\n    let graphicLayerLabelCodLoteDivision = new GraphicsLayer({\r\n      id: idGraphicLabelCodLote,\r\n    });\r\n\r\n    let font = new Font(\"20px\", Font.STYLE_NORMAL, Font.VARIANT_NORMAL, Font.WEIGHT_BOLD, \"Arial\");\r\n\r\n    let dataLoteTable = []\r\n    // Paso 5: Agregar número de polígono a propiedad \"order\"\r\n    poligonosOrdenados.forEach((poligono, index) => {\r\n\r\n      let polygon = turf.polygon(poligono.rings);\r\n      let center = turf.pointOnFeature(polygon);\r\n\r\n      let pointLabel = new Point({\r\n        x: center.geometry.coordinates[0],\r\n        y: center.geometry.coordinates[1],\r\n        spatialReference: {wkid: 4326}\r\n      })\r\n      let cod_lote = selfCm._zfill(idx + 1, 3)\r\n      let txtSym = new TextSymbol(cod_lote, font, new Color([250, 0, 0, 1]));\r\n      txtSym.setColor(new esri.Color([0, 0, 0, 1])); // color blanco\r\n      txtSym.setSize(\"12pt\");\r\n      txtSym.setHaloColor(new esri.Color([255, 255, 255, 1]));\r\n      txtSym.setHaloSize(2);\r\n      let idGraphic = `label_${index + 1}`\r\n      let graphicLabel = new Graphic(pointLabel, txtSym, {id: idGraphic, lot_urb: '', clase: 'labelCodLoteDivision'});\r\n      graphicLayerLabelCodLoteDivision.add(graphicLabel);\r\n      dataLoteTable.push({num: index + 1, id: idGraphic, cod_lote: cod_lote})\r\n      idx = idx + 1\r\n      // editToolbar.activate(Edit.MOVE, graphicLabel, {allowAddVertices: false, allowDeleteVertices: false});\r\n    });\r\n    \r\n\r\n    // Completar table\r\n    selfCm._buildDataLoteTable(bodyTable, dataLoteTable)\r\n    selfCm.map.addLayer(graphicLayerLabelCodLoteDivision)\r\n  },\r\n\r\n  _enableEditingLabelsLotesDivision(evt){\r\n    if (evt && evt.graphic && evt.graphic.attributes && evt.graphic.attributes.clase == 'labelCodLoteDivision'){\r\n      selfCm.map.setInfoWindowOnClick(false)\r\n      selfCm.editToolbar.activate(Edit.MOVE, evt.graphic);\r\n    } else {\r\n      selfCm.editToolbar.deactivate()\r\n    }\r\n  },\r\n\r\n  _zfill(num, len) {\r\n    return (Array(len).fill('0').join('') + num).slice(-len);\r\n  },\r\n\r\n  _etiquetasCodLote(url, campo, queryWhere, tipoEstadistica, polygonos, bodyTable) {\r\n    var estadisticaDef = new esri.tasks.StatisticDefinition();\r\n    estadisticaDef.statisticType = tipoEstadistica;\r\n    estadisticaDef.onStatisticField = campo;\r\n    estadisticaDef.outStatisticFieldName = \"resultado\";\r\n  \r\n    var query = new esri.tasks.Query();\r\n    query.where = queryWhere;\r\n    query.outFields = [campo];\r\n    query.returnGeometry = false;\r\n    query.outStatistics = [estadisticaDef];\r\n  \r\n    var queryTask = new esri.tasks.QueryTask(url);\r\n    queryTask.execute(query, function(result) {\r\n      if(result.features.length > 0) {\r\n        let resultado = result.features[0].attributes.resultado;\r\n        selfCm._ordenarPoligonosNorteSur(polygonos, parseInt(resultado), bodyTable)\r\n      } else {\r\n        return 0;\r\n      }\r\n    }, function(error) {\r\n      console.log(\"Error al ejecutar la consulta: \", error);\r\n    });\r\n  },\r\n\r\n  // Funciones para casuistica de division de lotes\r\n  _ApplyDivideLotes() {\r\n    selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n    selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n    selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n    selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n    selfCm._removeLayerGraphic(idGraphicLoteDeleteCm);\r\n    selfCm._removeLayerGraphic(idGraphicLabelCodLote)\r\n\r\n    // Creamos grafico de lote fusionado\r\n    let graphicLayerLoteDivision = new GraphicsLayer({\r\n      id: idGraphicLoteCm\r\n    });\r\n    \r\n    // Union all graphics of grpahicslayer\r\n    // let graphicLayerLineaDivision = selfCm.map.getLayer(idGraphicLineaDivision);\r\n    if (graphicLayerLineaDivision.graphics.length == 0) {\r\n      selfCm._showMessage('No se ha dibujado ninguna linea de division', 'warning');\r\n      return  \r\n    }\r\n\r\n    let arr = []\r\n    for (let i of graphicLayerLineaDivision.graphics) {\r\n      arr.push(i.geometry)\r\n    }\r\n    let unionGraphicLayerLineaDivision = selfCm._unionFeatures(arr)\r\n\r\n    let lineGeometry = new Polyline({\r\n      paths: unionGraphicLayerLineaDivision.paths,\r\n      spatialReference: { wkid: 102100 }\r\n    });\r\n    lineGeometry = esri.geometry.webMercatorToGeographic(lineGeometry)\r\n\r\n    let query = new Query();\r\n    // query.where = `(${_UBIGEO_FIELD} = '${paramsApp.ubigeo}') and (${_ID_LOTE_P_FIELD} in (49))`\r\n    query.where = selfCm.lotesQuery\r\n    query.outFields = [\"*\"];\r\n    query.returnGeometry = true\r\n    let qTask = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl());\r\n    qTask.execute(query, function (results) {\r\n      let geomLote = results.features[0].geometry\r\n      let geomLoteDivided = selfCm._dividePolygon(geomLote, lineGeometry)\r\n\r\n      if (geomLoteDivided.length == 0) {\r\n        //  genera un mensage show indicando que no se encontro el lote\r\n        selfCm._showMessage('Las lineas de corte ingresadas no generan la división del lote.\\nLas lineas deben iniciar y finalizar en el perimetro del lote.', type = 'error');\r\n        return false;\r\n      }\r\n\r\n      // iterar sobre los graficos de la capa de division y agregar cada uno a graphicLayerLoteDivision\r\n      for (let i of geomLoteDivided) {\r\n        let lote = new Graphic(i, symbolFusionLote)\r\n\r\n        // agregar el grafico directo al mapa\r\n        graphicLayerLoteDivision.add(lote);\r\n      }\r\n      selfCm.map.addLayer(graphicLayerLoteDivision);\r\n\r\n      let urlLotes = selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl()\r\n      selfCm._etiquetasCodLote(urlLotes, _COD_LOTE_FIELD, selfCm.arancel, \"max\", geomLoteDivided, selfCm.bodyTbDatosLoteDvApCm)\r\n\r\n      selfCm.map.reorderLayer(graphicLayerLoteDivision, selfCm.map.graphicsLayerIds.indexOf(graphicLayerLabelLineaDivision.id));\r\n      selfCm.map.setExtent(results.features[0].geometry.getExtent().expand(1.5), true);\r\n    }).then(function () {\r\n      let query = new Query();\r\n      query.where = selfCm.arancel\r\n      // especificar los campos devueltos\r\n      query.outFields = [_UBIGEO_FIELD, _F_MZN_FIELD];\r\n      query.returnGeometry = true\r\n      // query with order by fields\r\n      query.orderByFields = [_F_MZN_FIELD];\r\n      let qTask = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrCfArancel).getUrl());\r\n      qTask.execute(query, function (results) {\r\n        // Creamos grafico de punto lote\r\n        let graphicLayerPuntoLote = new GraphicsLayer({\r\n          id: idGraphicPuntoLote\r\n        });\r\n        // creamos grafico de frente de lote\r\n        let graphicLayerFrenteLote = new GraphicsLayer({\r\n          id: idGraphicFrenteLote\r\n        });\r\n        // let graphicLayerPredio = new GraphicsLayer({\r\n        //   id: idGraphicPredioCm\r\n        // });\r\n        let graphicLoteDivision = selfCm.map.getLayer(idGraphicLoteCm)\r\n        if (!graphicLoteDivision) {\r\n          return;\r\n        }\r\n        let frentes = {}\r\n        for (let row of results.features){\r\n          for (let graphic of graphicLoteDivision.graphics){\r\n            let isItc = geometryEngine.intersects(row.geometry, graphic.geometry)\r\n            if (!isItc){\r\n              continue\r\n            }\r\n            // saber si un key esta dentro del objeot frentes\r\n            if (!frentes.hasOwnProperty(row.attributes[_F_MZN_FIELD])){\r\n              frentes[row.attributes[_F_MZN_FIELD]] = row.geometry;\r\n            }\r\n            else{\r\n              let unionFrentes = geometryEngine.union([frentes[row.attributes[_F_MZN_FIELD]], row.geometry])\r\n              frentes[row.attributes[_F_MZN_FIELD]] = unionFrentes;\r\n            }\r\n          }\r\n        }\r\n        for (let lote of graphicLoteDivision.graphics){\r\n          for (let idx in frentes){\r\n            let idItcFrentesByLotes = geometryEngine.intersects(lote.geometry, frentes[idx])\r\n            if (!idItcFrentesByLotes){\r\n              continue\r\n            }\r\n            let itcFrentesByLotes = geometryEngine.intersect(frentes[idx], lote.geometry)\r\n            // add frentes to graphicLayerFrenteLote\r\n            const symbolFrenteLote = new SimpleLineSymbol(\r\n              SimpleLineSymbol.STYLE_SOLID,\r\n              new Color(\r\n                [\r\n                  Math.floor(Math.random() * 255), \r\n                  Math.floor(Math.random() * 255), \r\n                  Math.floor(Math.random() * 255)]),\r\n              5\r\n            )\r\n            let frente = new Graphic(itcFrentesByLotes, symbolFrenteLote)\r\n            graphicLayerFrenteLote.add(frente);\r\n\r\n            // polilinea de frentes resultantes\r\n            let polyline = new Polyline({\r\n              paths: itcFrentesByLotes.paths,\r\n              spatialReference: {wkid: 4326}\r\n            });\r\n\r\n            let puntoLoteTurf = selfCm._findMidpoint(polyline)\r\n\r\n            // crear un punto en el mapa\r\n            let puntoLote = new Point({\r\n              x: puntoLoteTurf.geometry.coordinates[0],\r\n              y: puntoLoteTurf.geometry.coordinates[1],\r\n              spatialReference: {wkid: 4326}\r\n            })\r\n\r\n            // Agregar el punto p al mapa          \r\n            let puntoLoteGraphic = new Graphic(puntoLote, symbolPuntoLote)\r\n            graphicLayerPuntoLote.add(puntoLoteGraphic)\r\n\r\n          }\r\n        }\r\n        selfCm.map.addLayer(graphicLayerFrenteLote);\r\n        selfCm.map.addLayer(graphicLayerPuntoLote);\r\n        selfCm._removeLayerGraphic(idGraphicPredioByDivison);\r\n        selfCm.map.addLayer(graphicLayerPredioByDivison)\r\n        \r\n        selfCm._populateTablePredio(selfCm.bodyTbPrediosDvApCm, selfCm._activateToolPrediosByDivision)\r\n\r\n      })\r\n    }, function (err) {\r\n      console.log(err)\r\n    })   \r\n  },\r\n\r\n  // ----------------------------------------------------------------------------------------------\r\n  // GeoprocessingServices\r\n  // ----------------------------------------------------------------------------------------------\r\n  _executeReasignacionGpService(evt){\r\n    if (!selfCm.xy.length){\r\n      selfCm._showMessage(\"La solicitud no se puede realizar porque no se grafico la nueva ubicación del predio\", type=\"error\")\r\n      return\r\n    }\r\n    selfCm._showMessageConfirm().then(function (result) {\r\n      if (result){\r\n        let params = {\r\n          \"cod_pred\": selfCm.codigosPredios,\r\n          \"ubigeo\": paramsApp['ubigeo'],\r\n          \"geometry\": selfCm.xy,\r\n          \"user\": paramsApp['username'],\r\n          \"id_solicitud\": selfCm.codRequestsCm\r\n        }\r\n    \r\n        // revisar si alguna propiedad tiene valor nulo o indefinido\r\n        for (let key in params){\r\n          if (params[key] == null || params[key] == undefined){\r\n            selfCm._showMessage(`Debe especificar el valor de ${key}`, type=\"error\");\r\n            return\r\n          }\r\n        }\r\n        selfCm._executeGPService(selfCm.config.reasignacionUrl, params)\r\n      }\r\n      else {\r\n        return\r\n      }\r\n    })\r\n  },\r\n\r\n  _executeAcumulacionGpService(evt){\r\n    if (!selfCm.map.getLayer(idGraphicLoteCm)){\r\n      selfCm._showMessage(\"La solicitud no se puede realizar porque no se ha previsualizado la acumulación\", type=\"error\")\r\n      return\r\n    }\r\n\r\n    if (!selfCm.xy.length){\r\n      selfCm._showMessage(\"La solicitud no se puede realizar porque no se grafico el predio resultante\", type=\"error\")\r\n      return\r\n    }\r\n    let labelCodLotesLayer = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n    for (let pred of labelCodLotesLayer.graphics){\r\n      if (!pred.attributes.lot_urb || pred.attributes.lot_urb === \"...\") {\r\n        selfCm._showMessage(\"Debe especificar el valor de Lote Urbano\", type=\"error\")\r\n        return\r\n      }\r\n    }\r\n    selfCm._showMessageConfirm().then(function (result) {\r\n      if (result){\r\n        let labelCodLotesLayerGraphic = labelCodLotesLayer.graphics[0]\r\n        let params = {\r\n          \"lotes_orig\": selfCm.idlotes, \r\n          \"ubigeo\": paramsApp['ubigeo'], \r\n          \"lote_geom\": JSON.stringify(selfCm.map.getLayer(idGraphicLoteCm).graphics[0].geometry.toJson()), \r\n          \"lote_pun_geom\": JSON.stringify(selfCm.map.getLayer(idGraphicPuntoLote).graphics.map((i) => {return [i.geometry.x, i.geometry.y]})), \r\n          \"predio_geom\": JSON.stringify({'cod_pre': selfCm.idPredioAcumulacion.split(\"_\")[2], 'coords': selfCm.xy}),\r\n          \"atributos\": JSON.stringify({'cod_lote': labelCodLotesLayerGraphic.symbol.text, 'lot_urb': labelCodLotesLayerGraphic.attributes.lot_urb}),\r\n          \"user\": paramsApp['username'], \r\n          \"id_solicitud\": selfCm.codRequestsCm\r\n        }\r\n        \r\n        // revisar si alguna propiedad tiene valor nulo o indefinido\r\n        for (let key in params){\r\n          if (params[key] == null || params[key] == undefined){\r\n            selfCm._showMessage(`Debe especificar el valor de ${key}`, type=\"error\");\r\n            return\r\n          }\r\n        }\r\n        selfCm._executeGeoprocessingApi(params)\r\n        // selfCm._executeGPService(selfCm.config.acumulacionUrl, params)\r\n      }\r\n      else {\r\n        return\r\n      }\r\n    })\r\n  },\r\n\r\n  _executeSubdivisionGpService(evt){\r\n    if (!selfCm.map.getLayer(idGraphicLoteCm)){\r\n      selfCm._showMessage(\"La solicitud no se puede realizar porque no se ha previsualizado la división\", type=\"error\")\r\n      return\r\n    }\r\n    if (graphicLayerPredioByDivison.graphics.length != selfCm.map.getLayer(idGraphicLoteCm).graphics.length){\r\n      selfCm._showMessage(\"La solicitud no se puede realizar porque no se graficaron los predios resultantes\", type=\"error\")\r\n      return\r\n    }\r\n    let labelCodLotesLayer = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n    for (let pred of labelCodLotesLayer.graphics){\r\n      if (!pred.attributes.lot_urb || pred.attributes.lot_urb === \"...\") {\r\n        selfCm._showMessage(\"Debe especificar los valores de Lote Urbano\", type=\"error\")\r\n        return\r\n      }\r\n    }\r\n    selfCm._showMessageConfirm().then(function (result) {\r\n      if (result){\r\n        \r\n        let params = {\r\n          \"lote_orig\": selfCm.idlotes[0], \r\n          \"ubigeo\": paramsApp['ubigeo'], \r\n          \"lotes_geom\": JSON.stringify(selfCm.map.getLayer(idGraphicLoteCm).graphics.map((i) => {return i.geometry.toJson()})), \r\n          \"lotes_pun_geom\": JSON.stringify(selfCm.map.getLayer(idGraphicPuntoLote).graphics.map((i) => {return [i.geometry.x, i.geometry.y]})), \r\n          \"predios_geom\": JSON.stringify(graphicLayerPredioByDivison.graphics.map((i) => {return {'cod_pre': i.attributes.id.split(\"_\")[2], 'coords': [i.geometry.x, i.geometry.y]}})),\r\n          \"atributos\": JSON.stringify(labelCodLotesLayer.graphics.map((i) => {return {'cod_lote': i.symbol.text, 'lot_urb': i.attributes.lot_urb, 'coords': [i.geometry.x, i.geometry.y]}})),\r\n          \"user\": paramsApp['username'], \r\n          \"id_solicitud\": selfCm.codRequestsCm\r\n        }\r\n        // revisar si alguna propiedad tiene valor nulo o indefinido\r\n        for (let key in params){\r\n          if (params[key] == null || params[key] == undefined){\r\n            selfCm._showMessage(`Debe especificar el valor de ${key}`, type=\"error\");\r\n            return\r\n          }\r\n        }\r\n        selfCm._executeGPService(selfCm.config.subdivisionUrl, params)\r\n      }\r\n      else {\r\n        return\r\n      }\r\n    })\r\n  },\r\n\r\n  _executeInactivarGpService(evt){\r\n    selfCm._showMessageConfirm().then(function (result) {\r\n      if (result){\r\n        // let labelCodLotesLayer = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n        let params = {\r\n          \"ubigeo\": paramsApp['ubigeo'], \r\n          \"cod_pred\": selfCm.codigosPredios,\r\n          \"user\": paramsApp['username'], \r\n          \"id_solicitud\": selfCm.codRequestsCm\r\n        }\r\n        // revisar si alguna propiedad tiene valor nulo o indefinido\r\n        for (let key in params){\r\n          if (params[key] == null || params[key] == undefined){\r\n            selfCm._showMessage(`Debe especificar el valor de ${key}`, type=\"error\");\r\n            return\r\n          }\r\n        }\r\n        selfCm._executeGPService(selfCm.config.inactivacionUrl, params)\r\n      }\r\n      else {\r\n        return\r\n      }\r\n    })    \r\n  },\r\n\r\n  _executeGPService(url, params){\r\n    let urlStatusRequest = `${selfCm.config.applicationListUrl}/${selfCm.codRequestsCm}`\r\n    selfCm._callApiRestServices(urlStatusRequest, {}).then(function (result) {\r\n      try {\r\n        if (result.idStatus != 1){\r\n          throw new Error(`Esta solicitud (${selfCm.codRequestsCm}) ya fue procesada con anterioridad: ${result.date}`)\r\n        }\r\n        selfCm.busyIndicator.show();\r\n        // Agregar un elemento de texto debajo del BusyIndicator\r\n        let buzyElm = dojo.query(\"#dojox_widget_Standby_0\")[0]\r\n        let imgElm = buzyElm.querySelector(\"img\")\r\n        let loadingText = document.createElement('div');\r\n        loadingText.id = 'loadingTextCustom';\r\n        loadingText.style.position = 'absolute';\r\n        let topMessage = parseFloat(imgElm.style.top) + 80;\r\n        loadingText.style.top = `${topMessage}px`;\r\n        let leftImg = parseFloat(imgElm.style.left) + imgElm.width/2;\r\n        loadingText.style.left = `${leftImg}px`;\r\n        loadingText.style.transform = 'translate(-50%, -50%)';\r\n        loadingText.style.background = 'white';\r\n        loadingText.style.zIndex = '1000';\r\n    \r\n        dojo.query(\"#dojox_widget_Standby_0\")[0].appendChild(loadingText);\r\n        // selfCm._FormResult(selfCm.codRequestsCm, selfCm.caseDescription);\r\n        selfCm.gp = new Geoprocessor(url);\r\n        selfCm.gp.submitJob(params, selfCm._completeCallback, selfCm._statusCallback);        \r\n      } catch (error) {\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(error.message, type=\"error\")\r\n      }\r\n\r\n    })\r\n  },\r\n\r\n  _statusCallback(JobInfo) {\r\n    // console.log(JobInfo)\r\n    selfCm.jobId = JobInfo.jobId\r\n    let textMessage = JobInfo.messages.map((message) => {return message.description})\r\n    try {\r\n      dojo.query(\"#loadingTextCustom\")[0].textContent = textMessage.slice(-1)[0] ? textMessage.slice(-1)[0] : ''\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  },\r\n  _completeCallback(JobInfo) {\r\n    switch (JobInfo.jobStatus) {\r\n      case \"esriJobSubmitted\":\r\n        // El trabajo se ha enviado al servidor y está esperando en la cola.\r\n        console.log(\"El trabajo se ha enviado y está esperando en la cola.\");\r\n        break;\r\n      case \"esriJobExecuting\":\r\n        // El trabajo se está ejecutando actualmente en el servidor.\r\n        console.log(\"El trabajo se está ejecutando en el servidor.\");\r\n        break;\r\n      case \"esriJobSucceeded\":\r\n        // El trabajo se ha completado satisfactoriamente y los resultados están disponibles.\r\n        selfCm.gp.getResultData(JobInfo.jobId, \"response\", function (result) {\r\n          if (!result.value.status){\r\n            selfCm.busyIndicator.hide();\r\n            selfCm._showMessage(result.value.message, type=\"error\");\r\n            return\r\n          }\r\n\r\n          selfCm._sendDataToPlatform(result.value.response)\r\n          \r\n\r\n          switch (selfCm.case) {\r\n            case \"1\":\r\n              selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n              break;\r\n            case \"2\":\r\n              selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n              selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n              selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n              selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n              selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n              break\r\n            case \"3\":\r\n              graphicLayerPredioByDivison.clear();\r\n              graphicLayerLineaDivision.clear();\r\n              graphicLayerLabelLineaDivision.clear();\r\n              // selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n              selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n              selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n              selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n              selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n              break\r\n            case \"4\":\r\n              // dojo.query(\".tablinksCm.active\")[0].click();\r\n              // selfCm._loadIniRequestsCm()\r\n              break\r\n            default:\r\n              break;\r\n          }\r\n          selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(false)\r\n          selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(true)\r\n          if (selfCm.case == \"4\"){\r\n            dojo.query(\".backTrayClsCm\")[0].click()\r\n          } else {\r\n            selfCm._FormResult(selfCm.codRequestsCm, selfCm.caseDescription);\r\n          }\r\n          // Codigo para mostrar la ventana de resultados\r\n\r\n\r\n        })\r\n        break;\r\n      case \"esriJobFailed\":\r\n        // El trabajo ha fallado y no se han podido generar los resultados.\r\n        selfCm._showMessage(\"El proceso ha fallado y no se han podido generar los resultados.\", type=\"error\");\r\n        break;\r\n      case \"esriJobCancelled\":\r\n        // El trabajo ha sido cancelado por el usuario.\r\n        selfCm._showMessage(\"El proceso ha sido cancelado por el usuario.\");\r\n        break;\r\n      case \"esriJobTimedOut\":\r\n        // El trabajo ha expirado debido a un tiempo de espera.\r\n        selfCm._showMessage(\"El proceso ha superado el tiempo de espera necesario para su ejecución.\", type=\"error\");\r\n        break;\r\n      default:\r\n        // El estado del trabajo no se reconoce.\r\n        selfCm._showMessage(\"El estado del proceso no se reconoce.\");\r\n        break;\r\n    }\r\n    selfCm.busyIndicator.hide();\r\n    // remove 'loadingTextCustom'\r\n    dojo.query(\"#loadingTextCustom\")[0].remove();\r\n  },\r\n  _cancelProcess(evt){\r\n    selfCm.gp.cancelJob(selfCm.jobId, function (info) {\r\n      console.log(info.jobStatus)\r\n    });\r\n  },\r\n\r\n  _sendDataToPlatform(data){\r\n    for (let predio of data.results) {\r\n      predio['ubigeo'] = paramsApp.ubigeo;\r\n    }\r\n\r\n    data['idType'] = parseInt(selfCm.case)\r\n    fetch(selfCm.config.updateStatusApplication, {\r\n      method: 'POST', // o 'PUT'\r\n      body: JSON.stringify(data), // los datos pueden ser de tipo 'string' o {object}\r\n      headers:{\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(res => res.json())\r\n    .then(response => selfCm._showMessage('El proceso se completó satisfactoriamente.'))\r\n    // .catch(error => console.error('Error:', error));\r\n    .catch(error => selfCm._showMessage(error, type=\"error\"));\r\n  },\r\n\r\n  _exportTableToExcel(evt) {\r\n    // Obtén la tabla HTML\r\n    const table = dojo.query(\"#tableRequestCm\")[0]\r\n    let headerRow = table.querySelector(\"tr\");\r\n    let rows = table.querySelectorAll(\"tr\")\r\n\r\n    let headers = [];\r\n    let headerCols = headerRow.querySelectorAll(\"th\");\r\n    for (let h = 0; h < headerCols.length - 1; h++) {\r\n        headers.push(headerCols[h].innerText);\r\n    }\r\n\r\n    let data = [];\r\n\r\n    // Recorre las filas (ignora la primera fila que contiene los encabezados)\r\n    for (let i = 0; i < rows.length; i++) {\r\n      if (i == 0) continue;\r\n      let row = {}, cols = rows[i].querySelectorAll(\"td\");\r\n\r\n      // Recorre las columnas\r\n      for (let j = 0; j < cols.length - 1; j++) {\r\n          // Usa el texto del encabezado como clave y el texto de la celda como valor\r\n          row[headers[j]] = cols[j].innerText;\r\n      }\r\n\r\n      data.push(row);\r\n    }\r\n\r\n    // Convierte el array de objetos en una cadena JSON\r\n    let wb = XLSX.utils.book_new();\r\n\r\n    // Crear una hoja de cálculo a partir de los datos JSON\r\n    let ws = XLSX.utils.json_to_sheet(data);\r\n    let sheetName = selfCm.currentTabActive.replace(\"_\", \" \");\r\n    XLSX.utils.book_append_sheet(wb, ws, sheetName);\r\n\r\n    // Escribir el libro de trabajo y forzar una descarga\r\n    XLSX.writeFile(wb, `reporte_solicitudes_${selfCm.currentTabActive}.xlsx`);\r\n  },\r\n\r\n  _dataURItoBlob(dataURI) {\r\n    var byteString = atob(dataURI.split(',')[1]);\r\n    var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n    var buffer = new ArrayBuffer(byteString.length);\r\n    var dataView = new Uint8Array(buffer);\r\n    for (var i = 0; i < byteString.length; i++) {\r\n        dataView[i] = byteString.charCodeAt(i);\r\n    }\r\n    return new Blob([buffer], {type: mimeString});\r\n  },\r\n\r\n  _sendObservation(evt) {\r\n    selfCm.busyIndicator.show();\r\n    let file = selfCm.imgUploadApCm.files[0];\r\n    if (file == undefined){\r\n      selfCm.busyIndicator.hide();\r\n      selfCm._showMessage(\"Debe enviar una imagen como elemento de sustento\", type=\"error\");\r\n      return\r\n    }\r\n    let reader = new FileReader();\r\n    let data = new FormData();\r\n    reader.onloadend = function() {\r\n      data.append('application_id', selfCm.codRequestsCm);\r\n      data.append('description', selfCm.textAreaObsApCm.value);\r\n      data.append('img', selfCm.imgUploadApCm.files[0]);\r\n  \r\n      return fetch(selfCm.config.observationUrl, {\r\n          method: 'POST', \r\n          body: data\r\n      })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          selfCm.busyIndicator.hide();\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessagePromise(\"Se envió la solucitud satisfactoriamente.\").then((result) => {\r\n          dojo.query(\".backRequestsClsCm\")[0].click();\r\n          dojo.query(\".backTrayClsCm\")[0].click();\r\n          selfCm._loadIniRequestsCm();\r\n        })\r\n\r\n      }).catch(error => {\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(`Ocurrio un problema al procesar su solicitud: ${error}`, type=\"error\")\r\n      });\r\n    }\r\n    reader.readAsDataURL(file);\r\n  },\r\n\r\n  _uploadImagenObs(evt) {\r\n    let imageDiv = dojo.query(\".thumbnailClsCm\")[0];\r\n    let file = evt.target.files[0];\r\n    let reader = new FileReader();\r\n\r\n    reader.onloadend = function() {\r\n      imageDiv.innerHTML = \"\";\r\n      imageDiv.style.backgroundImage = 'url(' + reader.result + ')';\r\n      imageDiv.style.backgroundSize = 'contain';\r\n      imageDiv.style.backgroundRepeat = 'no-repeat';\r\n      imageDiv.style.backgroundPosition = 'center';\r\n    }\r\n\r\n    if (file) {\r\n        reader.readAsDataURL(file);\r\n    } else {\r\n        imageDiv.innerHTML = \"<span><i class='far fa-image'></i></span>\";\r\n    }\r\n  },\r\n  _searchRequestByCodPred(evt) {\r\n    if (evt.keyCode === 13) {\r\n        if (evt.target.value == '') {\r\n          if ('cpm' in selfCm.queryRequests){\r\n            delete selfCm.queryRequests['cpm'];\r\n          }\r\n        } else {\r\n          selfCm.queryRequests['cpm'] = evt.target.value;\r\n        }\r\n        dojo.query(\".tablinksCm.active\")[0].click(); \r\n    }\r\n  },\r\n\r\n  _sortedByDate(evt) {\r\n    let columnOrder = evt.currentTarget.dataset.val\r\n    evt.currentTarget.dataset.val = columnOrder.includes('-') ? columnOrder.replace('-', '') : `-${columnOrder}`\r\n    selfCm.queryRequests['ordering'] = evt.currentTarget.dataset.val;\r\n    dojo.query(\".tablinksCm.active\")[0].click(); \r\n  },\r\n\r\n  _executeGeoprocessingApi(params){\r\n    let urlStatusRequest = `${selfCm.config.applicationListUrl}/${selfCm.codRequestsCm}`\r\n    selfCm._callApiRestServices(urlStatusRequest, {}).then(function (result) {\r\n      try {\r\n        if (result.idStatus != 1){\r\n          throw new Error(`Esta solicitud (${selfCm.codRequestsCm}) ya fue procesada con anterioridad: ${result.date}`)\r\n        }\r\n        selfCm.busyIndicator.show();\r\n        // Agregar un elemento de texto debajo del BusyIndicator\r\n        let buzyElm = dojo.query(\"#dojox_widget_Standby_0\")[0]\r\n        let imgElm = buzyElm.querySelector(\"img\")\r\n        let loadingText = document.createElement('div');\r\n        loadingText.id = 'loadingTextCustom';\r\n        loadingText.textContent = 'Procesando solicitud de acumulación...';\r\n        loadingText.style.position = 'absolute';\r\n        let topMessage = parseFloat(imgElm.style.top) + 80;\r\n        loadingText.style.top = `${topMessage}px`;\r\n        let leftImg = parseFloat(imgElm.style.left) + imgElm.width/2;\r\n        loadingText.style.left = `${leftImg}px`;\r\n        loadingText.style.transform = 'translate(-50%, -50%)';\r\n        loadingText.style.background = 'white';\r\n        loadingText.style.zIndex = '1000';\r\n        dojo.query(\"#dojox_widget_Standby_0\")[0].appendChild(loadingText);\r\n        // dojo.query(\"#loadingTextCustom\")[0].textContent = textMessage.slice(-1)[0] ? textMessage.slice(-1)[0] : ''\r\n        selfCm._executeAccumulation(params)\r\n        // selfCm._FormResult(selfCm.codRequestsCm, selfCm.caseDescription);\r\n        // selfCm.gp = new Geoprocessor(url);\r\n        // selfCm.gp.submitJob(params, selfCm._completeCallback, selfCm._statusCallback);        \r\n      } catch (error) {\r\n        dojo.query(\"#loadingTextCustom\")[0].remove();\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(error.message, type=\"error\")\r\n      }\r\n\r\n    })\r\n  },\r\n\r\n  // ----------------------------------------------\r\n  // Optimize acumulation\r\n  // ----------------------------------------------\r\n  _executeAccumulation(params) {\r\n    let loteResult = {};\r\n    let lotePunResult = {};\r\n    let predioResult = {};\r\n    selfCm._getManzanaByLote(params.lote_geom)\r\n    .then(function(manzana){\r\n      return selfCm._translateFieldsManzanaToLote(params.lote_geom, manzana)\r\n    })\r\n    .then(function(lote){\r\n      return selfCm._translateFieldsArancelToLote(lote, params.predio_geom)\r\n    })\r\n    .then(function(lote){\r\n      return selfCm._calculateFieldsOfLote(lote, params.atributos)\r\n    })\r\n    .then(function(lote){\r\n      return selfCm._calculateTipLot(lote, params.lotes_orig)\r\n    })\r\n    .then(function(lote){\r\n      loteResult = lote;\r\n      return selfCm._translateFieldsLoteToPuntoLote(lote, params.lote_pun_geom)\r\n    })\r\n    .then(function(lotePun){\r\n      return selfCm._getArancelByPuntoLote(lotePun)\r\n    })\r\n    .then(function(data){\r\n      return selfCm._translateFieldsArancelToLotePunto(data)\r\n    })\r\n    .then(function(lotePun){\r\n      lotePunResult = lotePun;\r\n      return selfCm._translateFieldsPuntoLoteToPredio(lotePun, params.predio_geom)\r\n    })\r\n    .then(function(predio){\r\n      return selfCm._translateFieldsArancelToPredio(predio)\r\n    })\r\n    .then(function(predio){\r\n      return selfCm._calculateFieldsOfPredio(predio)\r\n    })\r\n    .then(function(predio){\r\n      predioResult = predio;\r\n      return selfCm._getLoteOrig(params.lotes_orig)\r\n    })\r\n    .then(function(lotes_orig){\r\n      return selfCm._lotesToHis(lotes_orig)\r\n    })\r\n    .then(function(data2){\r\n      return selfCm._deleteLotesOrig(data2)\r\n    })\r\n    .then(function(){\r\n      return selfCm._addLotesNew(loteResult)\r\n    })\r\n    .then(function(){\r\n      return selfCm._getLotesPuntosOrig(loteResult)\r\n    })\r\n    .then(function(lotesPunOrig){\r\n      return selfCm._lotesPuntosToHis(lotesPunOrig)\r\n    })\r\n    .then(function(data3){\r\n      return selfCm._deleteLotesPuntosOrig(data3)\r\n    })\r\n    .then(function(){\r\n      return selfCm._addLotesPuntosNew(lotePunResult)\r\n    })\r\n    .then(function(){\r\n      return selfCm._getPrediosOrig(loteResult)\r\n    })\r\n    .then(function(prediosOrig){\r\n      return selfCm._prediosToHis(prediosOrig)\r\n    })\r\n    .then(function(data4){\r\n      return selfCm._deletePrediosOrig(data4)\r\n    })\r\n    .then(function(){\r\n      return selfCm._addPrediosNew(predioResult)\r\n    })\r\n    .then(function(predioResult){\r\n      selfCm._updateStatusRequests([predioResult])\r\n      selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n      selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n      selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n      selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n      selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n      selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(false)\r\n      selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(true)\r\n      selfCm._FormResult(selfCm.codRequestsCm, selfCm.caseDescription)\r\n      dojo.query(\"#loadingTextCustom\")[0].remove();\r\n      selfCm.busyIndicator.hide();\r\n      // selfCm._showMessage(`Se ha procesado la solicitud ${selfCm.codRequestsCm} con éxito`, type=\"success\")\r\n    })\r\n    .otherwise(function(error) {\r\n      selfCm.busyIndicator.hide();\r\n      dojo.query(\"#loadingTextCustom\")[0].remove();\r\n      selfCm._showMessage(`Ocurrio un problema al procesar su solicitud: ${error}`, type=\"error\")\r\n    })\r\n  },\r\n\r\n  _atributeTransfer(obj1, obj2, propsUse=[], propsOmit=[]) {\r\n    let fieldMatch = []\r\n    if (propsUse.length > 0){\r\n      fieldMatch = propsUse\r\n    } else {\r\n      let props1 = Object.keys(obj1);\r\n      let props2 = Object.keys(obj2);\r\n      fieldMatch = props1.filter(prop => props2.includes(prop));\r\n    }\r\n    // retirar los campos omitidos\r\n    if (propsOmit.length > 0){\r\n      fieldMatch = fieldMatch.filter(prop => !propsOmit.includes(prop));\r\n    }\r\n    fieldMatch.forEach(prop => {\r\n      if (obj2.hasOwnProperty(prop)) {\r\n        obj1[prop] = obj2[prop];\r\n      }\r\n    });\r\n  },\r\n\r\n  _getManzanaByLote(lote_geom) {\r\n    let deferred = new Deferred();\r\n    const urlManzanaUrb = selfCm.layersMap.getLayerInfoById(idLyrCfManzanaUrb).getUrl()\r\n    const queryTask = new QueryTask(urlManzanaUrb);\r\n    // Construye la query\r\n    let query = new Query();\r\n    query.returnGeometry = true;\r\n    query.outFields = [\"*\"];\r\n    query.geometry = new Polygon(JSON.parse(lote_geom));\r\n    // query.geometry = JSON.parse(params.lote_geom);\r\n    query.geometryType = \"esriGeometryPolygon\";\r\n    queryTask.execute(query)\r\n    .then(function(response){\r\n      // Comprobar si se encontró alguna manzana\r\n      if (response.features.length > 0) {\r\n        // Mostrar el primer resultado en la consola\r\n        return deferred.resolve(response.features[0])\r\n      } else {\r\n        deferred.reject(\"No se encontraron manzanas\");\r\n      }\r\n    }, function(error) {\r\n      deferred.reject(error);\r\n    })\r\n    return deferred.promise;\r\n  },\r\n\r\n  _translateFieldsManzanaToLote(lote_geom, manzana){\r\n    let deferred = new Deferred();\r\n    const urlLotes = selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl()\r\n    const queryTask = new QueryTask(urlLotes);\r\n    let query = new Query();\r\n    query.where = \"1=1\";\r\n    query.returnGeometry = true;\r\n    query.outFields = [\"*\"];\r\n    query.num = 1;\r\n    queryTask.execute(query)\r\n    .then(function(response){\r\n      if (response.features.length > 0) {\r\n        // Mostrar el primer resultado en la consola\r\n        _FIELDS_USE_MZ = [\r\n          \"ZONA_UTM\",\r\n          \"UBIGEO\",\r\n          \"COD_SECT\",\r\n          \"COD_MZN\",\r\n          \"COD_UU\",\r\n          \"TIPO_UU\",\r\n          \"NOM_UU\",\r\n          \"NOM_REF\",\r\n          \"MZN_URB\",\r\n      ]\r\n        let lote = response.features[0];\r\n        delete lote.attributes[\"Shape.STArea()\"];\r\n        delete lote.attributes[\"Shape.STLength()\"];\r\n        delete lote.attributes[\"created_date\"]\r\n        delete lote.attributes[\"created_user\"]\r\n        delete lote.attributes[\"last_edited_date\"]\r\n        delete lote.attributes[\"last_edited_user\"]\r\n        delete lote.attributes[\"OBJECTID\"]\r\n        delete lote.attributes[\"GlobalID\"]\r\n        // poner en blanco los campos\r\n        for (let prop in lote.attributes) {\r\n          if (lote.attributes.hasOwnProperty(prop) && prop != \"OBJECTID\" && prop != \"SHAPE\") {\r\n            lote.attributes[prop] = null;\r\n          }\r\n        }\r\n        // transferir los campos\r\n        selfCm._atributeTransfer(lote.attributes, manzana.attributes, _FIELDS_USE_MZ);\r\n        lote.geometry = new Polygon(JSON.parse(lote_geom));\r\n        return deferred.resolve(lote)\r\n      } else {\r\n        deferred.reject(\"No se encontraron lotes\");\r\n      }\r\n    }, function(error){\r\n      deferred.reject(error);\r\n    })\r\n    return deferred.promise;\r\n  },\r\n\r\n  _translateFieldsArancelToLote(lote, predio_geom){\r\n    let deferred = new Deferred();\r\n    const urlArancel = selfCm.layersMap.getLayerInfoById(idLyrCfArancel).getUrl()\r\n    const queryTask = new QueryTask(urlArancel);\r\n    // Construye la query\r\n    let query = new Query();\r\n    query.returnGeometry = true;\r\n    query.outFields = [\"*\"];\r\n    const predioPoint = new Point({\r\n      x: JSON.parse(predio_geom).coords[0],\r\n      y: JSON.parse(predio_geom).coords[1],\r\n      spatialReference: {wkid: 4326}\r\n    })\r\n    lote.attributes[\"COORD_X\"] = JSON.parse(predio_geom).coords[0]\r\n    lote.attributes[\"COORD_Y\"] = JSON.parse(predio_geom).coords[1]\r\n    query.geometry = predioPoint;\r\n    query.geometryType = \"esriGeometryPoint\";\r\n    queryTask.execute(query)\r\n    .then(function(response){\r\n      if (response.features.length > 0) {\r\n        _FIELDS_USE_ARC = [\r\n          \"COD_VIA\",\r\n          \"TIP_VIA\",\r\n          \"NOM_VIA\",\r\n          \"CUADRA\",\r\n          \"LADO\",\r\n          \"ID_ARANC\",\r\n        ]\r\n        let arancel = response.features[0];\r\n        selfCm._atributeTransfer(lote.attributes, arancel.attributes, _FIELDS_USE_ARC);\r\n        deferred.resolve(lote)\r\n      } else {\r\n        deferred.reject(\"No se encontraron Frentes para este lote\");\r\n      }\r\n\r\n    }, function(error){\r\n      deferred.reject(error);\r\n    })\r\n    return deferred.promise;\r\n  },\r\n\r\n  _calculateFieldsOfLote(lote, atributos){\r\n    let deferred = new Deferred();\r\n    const urlLotes = selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl()\r\n    const queryTask = new QueryTask(urlLotes);\r\n    // Construye la query\r\n    let query = new Query();\r\n\r\n    let statDefIdLoteP = new esri.tasks.StatisticDefinition();\r\n    statDefIdLoteP.statisticType = \"max\";\r\n    statDefIdLoteP.onStatisticField = \"ID_LOTE_P\";\r\n    statDefIdLoteP.outStatisticFieldName = \"ID_LOTE_P_MAX\";\r\n\r\n    let statDefRanCpu = new esri.tasks.StatisticDefinition();\r\n    statDefRanCpu.statisticType = \"max\";\r\n    statDefRanCpu.onStatisticField = \"RAN_CPU\";\r\n    statDefRanCpu.outStatisticFieldName = \"RAN_CPU_MAX\";\r\n\r\n    query.returnGeometry = false;\r\n    query.outStatistics = [statDefIdLoteP, statDefRanCpu];\r\n\r\n    queryTask.execute(query)\r\n    .then(function(response){\r\n      lote.attributes[\"ID_LOTE_P\"] = response.features[0].attributes[\"ID_LOTE_P_MAX\"] + 1;\r\n      lote.attributes[\"RAN_CPU\"] = response.features[0].attributes[\"RAN_CPU_MAX\"] + 1;\r\n      lote.attributes[\"ANO_CART\"] = new Date().getFullYear()\r\n      lote.attributes[\"FUENTE\"] = selfCm.codRequestsCm\r\n      lote.attributes[\"NOM_PC\"] = 'PCF'\r\n      lote.attributes[\"NOM_USER\"] = paramsApp['username']\r\n      lote.attributes[\"COD_LOTE\"] = JSON.parse(atributos)['cod_lote']\r\n      lote.attributes[\"LOT_URB\"] = JSON.parse(atributos)[\"lot_urb\"]\r\n      return deferred.resolve(lote)\r\n    }, function(error){\r\n      deferred.reject(error);\r\n    })\r\n    return deferred.promise;\r\n  },\r\n\r\n  _calculateTipLot(lote, lote_orig){\r\n    let deferred = new Deferred();\r\n    const urlLotes = selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl()\r\n    const queryTask = new QueryTask(urlLotes);\r\n    // Construye la query\r\n    let query = new Query();\r\n    query.where = `${_ID_LOTE_P_FIELD} in (${lote_orig.join(\",\")}) and (${_UBIGEO_FIELD} = ${paramsApp['ubigeo']})`\r\n    query.returnGeometry = false;\r\n    query.outFields = [\"TIP_LOT\"];\r\n    queryTask.execute(query)\r\n    .then(function(response){\r\n      let tipLot = new Set(response.features.map((i) => i.attributes.TIP_LOT))\r\n      lote.attributes[\"TIP_LOT\"] = [...tipLot] == ['2'] ? '2' : '1'\r\n      return deferred.resolve(lote)\r\n    }, function(error){\r\n      deferred.reject(error);\r\n    })\r\n    return deferred.promise;\r\n  },\r\n\r\n  _translateFieldsLoteToPuntoLote(lote, lote_pun_geom){\r\n    let deferred = new Deferred();\r\n    const urlLotesPun = selfCm.layersMap.getLayerInfoById(idLyrCfLotes_pun).getUrl()\r\n    const queryTask = new QueryTask(urlLotesPun);\r\n    let query = new Query();\r\n    query.where = \"1=1\";\r\n    query.returnGeometry = true;\r\n    query.outFields = [\"*\"];\r\n    query.num = 1;\r\n    queryTask.execute(query)\r\n    .then(function(response){\r\n      if (response.features.length > 0) {\r\n        let lotePun = response.features[0];\r\n        delete lotePun.attributes[\"created_date\"]\r\n        delete lotePun.attributes[\"created_user\"]\r\n        delete lotePun.attributes[\"last_edited_date\"]\r\n        delete lotePun.attributes[\"last_edited_user\"]\r\n        delete lotePun.attributes[\"OBJECTID\"]\r\n        delete lotePun.attributes[\"GlobalID\"]\r\n\r\n        for (let prop in lotePun.attributes) {\r\n          if (lotePun.attributes.hasOwnProperty(prop) && prop != \"OBJECTID\" && prop != \"SHAPE\") {\r\n            lotePun.attributes[prop] = null;\r\n          }\r\n        }\r\n\r\n        _FIELDS_OMIT_LOT_P_LOT = [\r\n          \"COD_VIA\",\r\n          \"TIP_VIA\",\r\n          \"NOM_VIA\",\r\n          \"CUADRA\",\r\n          \"LADO\",\r\n          \"ID_ARANC\",\r\n          \"COORD_X\",\r\n          \"COORD_Y\",\r\n        ]\r\n\r\n        selfCm._atributeTransfer(lotePun.attributes, lote.attributes, propsUse=[], propsOmit=_FIELDS_OMIT_LOT_P_LOT);\r\n        let lotePunArray = []\r\n        lote_pun_geom = JSON.parse(lote_pun_geom)\r\n        for (let idx in lote_pun_geom){\r\n          let lotePunIdx = lotePun.clone()\r\n          let coords = lote_pun_geom[idx]\r\n          lotePunIdx.attributes[\"COORD_X\"] = coords[0]\r\n          lotePunIdx.attributes[\"COORD_Y\"] = coords[1]\r\n          lotePunIdx.geometry = new Point({x: coords[0], y: coords[1], spatialReference: {wkid: 4326}})\r\n          lotePunArray.push(lotePunIdx)\r\n        }\r\n        \r\n        return deferred.resolve(lotePunArray)\r\n      }\r\n    }, function(error){\r\n      deferred.reject(error);\r\n    })\r\n    return deferred.promise;\r\n  },\r\n\r\n  _getArancelByPuntoLote(lotePunArray){\r\n    let promises = lotePunArray.map((lotePun) => {\r\n      const urlArancel = selfCm.layersMap.getLayerInfoById(idLyrCfArancel).getUrl()\r\n      const queryTask = new QueryTask(urlArancel);\r\n      // Construye la query\r\n      let query = new Query();\r\n      query.returnGeometry = true;\r\n      query.outFields = [\"*\"];\r\n      query.geometry = lotePun.geometry;\r\n      query.geometryType = \"esriGeometryPoint\";\r\n      return queryTask.execute(query)\r\n    });\r\n    return all(promises).then(function(results) {\r\n      return {\r\n        results: results,\r\n        lotePunArray: lotePunArray\r\n      }\r\n    });\r\n  },\r\n\r\n  _translateFieldsArancelToLotePunto(data){\r\n    let deferred = new Deferred();\r\n\r\n    let zipped = data.lotePunArray.map((element, index) => [element, data.results[index]]);\r\n    _FIELD_USER_LOT_P_ARC = [\r\n      \"COD_VIA\",\r\n      \"TIP_VIA\",\r\n      \"NOM_VIA\",\r\n      \"CUADRA\",\r\n      \"LADO\",\r\n      \"ID_ARANC\",\r\n      \"VAL_ACT\",\r\n    ]\r\n    let lotePunArray = []\r\n    for (let i of zipped){\r\n      let arancel = i[1].features[0].attributes\r\n      let lotePun = i[0];\r\n      selfCm._atributeTransfer(lotePun.attributes, arancel, propsUse=_FIELD_USER_LOT_P_ARC);\r\n      lotePunArray.push(lotePun)\r\n    }\r\n\r\n    const urlLotesPun = selfCm.layersMap.getLayerInfoById(idLyrCfLotes_pun).getUrl()\r\n    const queryTask = new QueryTask(urlLotesPun);\r\n    // Construye la query\r\n    let query = new Query();\r\n\r\n    query.where = `${_UBIGEO_FIELD} = '${paramsApp['ubigeo']}'`\r\n    let statDef = new esri.tasks.StatisticDefinition();\r\n    statDef.statisticType = \"max\";\r\n    statDef.onStatisticField = \"SECUEN\";\r\n    statDef.outStatisticFieldName = \"SECUEN_MAX\";\r\n\r\n    query.returnGeometry = false;\r\n    query.outStatistics = [statDef];\r\n\r\n    queryTask.execute(query)\r\n    .then(function(response){\r\n      let secuen = response.features[0].attributes.SECUEN_MAX + 1\r\n      for (let i of lotePunArray){\r\n        i.attributes[\"SECUEN\"] = secuen\r\n        i.attributes[\"ID_LOTE\"] = `${i.attributes[\"ZONA_UTM\"]}${paramsApp['ubigeo']}${secuen}`\r\n        secuen += 1\r\n      }\r\n      return deferred.resolve(lotePunArray)\r\n    }, function(error){\r\n      deferred.reject(error);\r\n    })\r\n    return deferred.promise;\r\n  },\r\n\r\n  _translateFieldsPuntoLoteToPredio(lotePunArray, predio_geom){\r\n    let deferred = new Deferred();\r\n    predio_geom = JSON.parse(predio_geom)\r\n    let predioGeom = new Point({x: predio_geom.coords[0], y: predio_geom.coords[1], spatialReference: {wkid: 4326}})\r\n    let lotePun = null\r\n    // let bufferedPoint = geometryEngine.buffer(predioGeom, 0.5, \"meters\");\r\n    for (let i of lotePunArray){\r\n      let intersects = geometryEngine.intersects(i.geometry, predioGeom);\r\n      if (intersects){\r\n        lotePun = i\r\n        break\r\n      }\r\n    }\r\n    const urlPredios = selfCm.layersMap.getLayerInfoById(idLyrCfPredios).getUrl()\r\n    const queryTask = new QueryTask(urlPredios);\r\n    let query = new Query();\r\n    query.where = \"1=1\";\r\n    query.returnGeometry = true;\r\n    query.outFields = [\"*\"];\r\n    query.num = 1;\r\n    queryTask.execute(query)\r\n    .then(function(response){\r\n      if (response.features.length > 0) {\r\n        let predio = response.features[0];\r\n        delete predio.attributes[\"created_date\"]\r\n        delete predio.attributes[\"created_user\"]\r\n        delete predio.attributes[\"last_edited_date\"]\r\n        delete predio.attributes[\"last_edited_user\"]\r\n        delete predio.attributes[\"OBJECTID\"]\r\n        delete predio.attributes[\"GlobalID\"]\r\n\r\n        for (let prop in predio.attributes) {\r\n          if (predio.attributes.hasOwnProperty(prop) && prop != \"OBJECTID\" && prop != \"SHAPE\") {\r\n            predio.attributes[prop] = null;\r\n          }\r\n        }\r\n        _FIELDS_USE_PREDIO_LOT_P = [\r\n          \"ID_LOTE_P\",\r\n          \"ZONA_UTM\",\r\n          \"UBIGEO\",\r\n          \"ID_ARANC\",\r\n          \"ID_LOTE\",\r\n          \"COD_SECT\",\r\n          \"COD_MZN\",\r\n          \"COD_LOTE\",\r\n          \"COD_UU\",\r\n          \"COD_VIA\",\r\n          \"TIPO_UU\",\r\n          \"NOM_UU\",\r\n          \"NOM_REF\",\r\n          \"MZN_URB\",\r\n          \"LOT_URB\",\r\n          \"TIP_VIA\",\r\n          \"NOM_VIA\",\r\n          \"CUADRA\",\r\n          \"LADO\",\r\n          \"ANO_CART\",\r\n          \"FUENTE\",\r\n          \"VAL_ACT\",\r\n          \"RAN_CPU\",\r\n          \"NOM_PC\",\r\n          \"NOM_USER\"\r\n        ]\r\n        selfCm._atributeTransfer(predio.attributes, lotePun.attributes, propsUse=_FIELDS_USE_PREDIO_LOT_P);\r\n        predio.attributes[\"COD_PRE\"] = predio_geom.cod_pre\r\n        predio.attributes[\"COD_UI\"] = 1\r\n        predio.attributes[\"ESTADO\"] = 1\r\n        predio.attributes[\"COOR_X\"] = predio_geom.coords[0]\r\n        predio.attributes[\"COOR_Y\"] = predio_geom.coords[1]\r\n        predio.attributes[\"COD_VER\"] = selfCm._getValueCodVer(predio.attributes[\"RAN_CPU\"], 1)\r\n        predio.attributes[\"COD_CPU\"] = `${predio.attributes[\"RAN_CPU\"]}-0001-${predio.attributes[\"COD_VER\"]}`\r\n        predio.attributes[\"DIR_MUN\"] = `${predio.attributes[\"TIP_VIA\"]} ${predio.attributes[\"NOM_VIA\"]} ${predio.attributes[\"NUM_MUN\"]}`\r\n        predio.attributes[\"DIR_URB\"] = `${predio.attributes[\"TIP_VIA\"]} ${predio.attributes[\"NOM_VIA\"]} ${predio.attributes[\"NUM_MUN\"]}`\r\n        predio.geometry = predioGeom\r\n        return deferred.resolve(predio)\r\n      }\r\n    }, function(error){\r\n      deferred.reject(error);\r\n    })\r\n    return deferred.promise;\r\n  },\r\n\r\n  _getValueCodVer(ran_cpu, cod_ui) {\r\n    _FACTOR = [2, 3, 4, 5, 6, 7, 2, 3, 4, 5, 6, 7]\r\n    // Obteniendo código concatenado\r\n    let cod_ver_concatenate = ran_cpu.toString() + (\"0000\" + cod_ui.toString()).slice(-4);\r\n    \r\n    // Reversa de código concatenado\r\n    let cod_ver = cod_ver_concatenate.split('').reverse().join('');\r\n\r\n    // Aplicando fórmula\r\n    let response = 11 - (cod_ver.split('').map((digit, index) => \r\n                          parseInt(digit) * _FACTOR[index])\r\n                          .reduce((a, b) => a + b, 0) % 11);\r\n    \r\n    if (response > 9) {\r\n        response = 11 - response;\r\n    }\r\n    \r\n    return response\r\n  },\r\n\r\n  _translateFieldsArancelToPredio(predio){\r\n    let deferred = new Deferred();\r\n    const urlArancel = selfCm.layersMap.getLayerInfoById(idLyrCfArancel).getUrl()\r\n    const queryTask = new QueryTask(urlArancel);\r\n    // Construye la query\r\n    let query = new Query();\r\n    query.returnGeometry = true;\r\n    query.outFields = [\"SEC_EJEC\"];\r\n    query.geometry = predio.geometry;\r\n    query.geometryType = \"esriGeometryPoint\";\r\n    queryTask.execute(query)\r\n    .then(function(response){\r\n      if (response.features.length > 0) {\r\n        let arancel = response.features[0];\r\n        selfCm._atributeTransfer(predio.attributes, arancel.attributes, [\"SEC_EJEC\"]);\r\n        deferred.resolve(predio)\r\n      } else {\r\n        deferred.reject(\"No se encontraron Frentes para este lote\");\r\n      }\r\n    }, function(error){\r\n      deferred.reject(error);\r\n    })\r\n    return deferred.promise;\r\n  },\r\n\r\n  _calculateFieldsOfPredio(predio){\r\n    let deferred = new Deferred();\r\n    const urlPredios = selfCm.layersMap.getLayerInfoById(idLyrCfPredios).getUrl()\r\n    const queryTask = new QueryTask(urlPredios);\r\n    // Construye la query\r\n    let query = new Query();\r\n    query.returnGeometry = false;\r\n    query.where = `${_UBIGEO_FIELD} = '${paramsApp['ubigeo']}'`\r\n    let statDef = new esri.tasks.StatisticDefinition();\r\n    statDef.statisticType = \"max\";\r\n    statDef.onStatisticField = \"ID_PRED\";\r\n    statDef.outStatisticFieldName = \"ID_PRED_MAX\";\r\n    query.outStatistics = [statDef];\r\n    queryTask.execute(query)\r\n    .then(function(response){\r\n      if (response.features.length > 0) {\r\n        let id_pred = parseInt(response.features[0].attributes[\"ID_PRED_MAX\"]) + 1;\r\n        predio.attributes[\"ID_PRED\"] = id_pred;\r\n        deferred.resolve(predio)\r\n      } else {\r\n        deferred.reject(\"No se encontraron Predios para este lote\");\r\n      }\r\n    }, function(error){\r\n      deferred.reject(error);\r\n    });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _getLoteOrig(lotes_orig){\r\n    let deferred = new Deferred();\r\n    let urlLotes = selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl();\r\n    let queryTask = new QueryTask(urlLotes);\r\n    // Construye la query\r\n    let query = new Query();\r\n    query.returnGeometry = true;\r\n    query.outFields = [\"*\"];\r\n    query.where = `${_ID_LOTE_P_FIELD} in (${lotes_orig.join(\",\")}) and (${_UBIGEO_FIELD} = '${paramsApp['ubigeo']}')`\r\n    console.log(query.where)\r\n    queryTask.execute(query)\r\n    .then(function(response){\r\n      if (response.features.length > 0) {\r\n        deferred.resolve(response.features);\r\n      } else {\r\n        deferred.reject(\"No se encontraron Lotes para este predio\");\r\n      }\r\n    }, function(error){\r\n      deferred.reject(error);\r\n    });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _lotesToHis(lotes_orig){\r\n    let deferred = new Deferred();\r\n    const featureLayer = new FeatureLayer(\"https://ws.mineco.gob.pe/serverdf/rest/services/pruebas/CARTO_FISCAL_H/FeatureServer/2\");\r\n\r\n    let graphics = []\r\n    lotes_orig.forEach(lote_orig => {\r\n      let graphic = new Graphic();\r\n      graphic.attributes = lote_orig.attributes;\r\n      graphic.geometry = lote_orig.geometry;\r\n      graphics.push(graphic);\r\n    });\r\n\r\n    const graphicsParse = JSON.parse(JSON.stringify(graphics))\r\n    // console.log(graphicsParse.map((i) => {return i.attributes.OBJECTID}))\r\n\r\n    featureLayer.applyEdits(graphics, null, null)\r\n    .then(function(add, update, del){\r\n      deferred.resolve(graphicsParse);\r\n    }, function(err){\r\n      deferred.reject(err);\r\n    });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _deleteLotesOrig(data){\r\n    let deferred = new Deferred();\r\n    let deleteParams = {\r\n      where: `OBJECTID IN (${data.map((i) => {return i.attributes.OBJECTID})})`,\r\n      f: \"json\"\r\n    };\r\n  \r\n    let requestOptions = {\r\n      url: \"https://ws.mineco.gob.pe/serverdf/rest/services/pruebas/CARTO_FISCAL/FeatureServer/5/deleteFeatures\",\r\n      content: deleteParams,\r\n      handleAs: \"json\",\r\n      callbackParamName: \"callback\"\r\n    };\r\n\r\n    esriRequest(requestOptions, {\r\n      usePost: true\r\n    }).then(\r\n      function(response) {\r\n        deferred.resolve(response.deleteResults);\r\n      }, function(error) {\r\n        deferred.reject(error);\r\n      }\r\n    );\r\n    return deferred.promise;\r\n  },\r\n\r\n  _addLotesNew(lote){\r\n    let deferred = new Deferred();\r\n    const featureLayer = new FeatureLayer(\"https://ws.mineco.gob.pe/serverdf/rest/services/pruebas/CARTO_FISCAL/FeatureServer/5\");\r\n    let graphic = new Graphic();\r\n    graphic.attributes = lote.attributes;\r\n    graphic.geometry = lote.geometry;\r\n    featureLayer.applyEdits([graphic], null, null)\r\n    .then(function(adds){\r\n      deferred.resolve(adds);\r\n    }, function(err){\r\n      deferred.reject(err);\r\n    });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _getLotesPuntosOrig(lote){\r\n    let deferred = new Deferred();\r\n    let urlLotesPuntos = selfCm.layersMap.getLayerInfoById(idLyrCfLotes_pun).getUrl();\r\n    let queryTask = new QueryTask(urlLotesPuntos);\r\n    // Construye la query\r\n    let query = new Query();\r\n    query.returnGeometry = true;\r\n    query.outFields = [\"*\"];\r\n    query.geometry = lote.geometry;\r\n    query.geometryType = \"esriGeometryPolygon\";\r\n    queryTask.execute(query)\r\n    .then(function(response){\r\n      if (response.features.length > 0) {\r\n        deferred.resolve(response.features);\r\n      } else {\r\n        deferred.reject(\"No se encontraron Lotes Puntos para este lote\");\r\n      }\r\n    }, function(error){\r\n      deferred.reject(error);\r\n    });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _lotesPuntosToHis(lotesPunOrig){\r\n    let deferred = new Deferred();\r\n    const featureLayer = new FeatureLayer(\"https://ws.mineco.gob.pe/serverdf/rest/services/pruebas/CARTO_FISCAL_H/FeatureServer/1\");\r\n\r\n    let graphics = []\r\n    lotesPunOrig.forEach(lotePunOrig => {\r\n      let graphic = new Graphic();\r\n      graphic.attributes = lotePunOrig.attributes;\r\n      graphic.geometry = lotePunOrig.geometry;\r\n      graphics.push(graphic);\r\n    });\r\n\r\n    const graphicsParse = JSON.parse(JSON.stringify(graphics))\r\n\r\n    featureLayer.applyEdits(graphics, null, null)\r\n    .then(function(add, update, del){\r\n      deferred.resolve(graphicsParse);\r\n    }, function(err){\r\n      deferred.reject(err);\r\n    });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _deleteLotesPuntosOrig(data){\r\n    let deferred = new Deferred();\r\n    let deleteParams = {\r\n      where: `OBJECTID IN (${data.map((i) => {return i.attributes.OBJECTID})})`,\r\n      f: \"json\"\r\n    };\r\n  \r\n    let requestOptions = {\r\n      url: \"https://ws.mineco.gob.pe/serverdf/rest/services/pruebas/CARTO_FISCAL/FeatureServer/1/deleteFeatures\",\r\n      content: deleteParams,\r\n      handleAs: \"json\",\r\n      callbackParamName: \"callback\"\r\n    };\r\n\r\n    esriRequest(requestOptions, {\r\n      usePost: true\r\n    }).then(\r\n      function(response) {\r\n        deferred.resolve(response.deleteResults);\r\n      }, function(error) {\r\n        deferred.reject(error);\r\n      }\r\n    );\r\n    return deferred.promise;    \r\n  },\r\n\r\n  _addLotesPuntosNew(lotesPun){\r\n    let deferred = new Deferred();\r\n    const featureLayer = new FeatureLayer(\"https://ws.mineco.gob.pe/serverdf/rest/services/pruebas/CARTO_FISCAL/FeatureServer/1\");\r\n    let graphics = []\r\n    lotesPun.forEach(lotePun => {\r\n      let graphic = new Graphic();\r\n      graphic.attributes = lotePun.attributes;\r\n      graphic.geometry = lotePun.geometry;\r\n      graphics.push(graphic);\r\n    });\r\n    featureLayer.applyEdits(graphics, null, null)\r\n    .then(function(adds){\r\n      deferred.resolve(adds);\r\n    }, function(err){\r\n      deferred.reject(err);\r\n    });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _getPrediosOrig(lote){\r\n    let deferred = new Deferred();\r\n    let urlPredios = selfCm.layersMap.getLayerInfoById(idLyrCfPredios).getUrl();\r\n    let queryTask = new QueryTask(urlPredios);\r\n    // Construye la query\r\n    let query = new Query();\r\n    query.returnGeometry = true;\r\n    query.outFields = [\"*\"];\r\n    query.geometry = lote.geometry;\r\n    query.geometryType = \"esriGeometryPolygon\";\r\n    queryTask.execute(query)\r\n    .then(function(response){\r\n      if (response.features.length > 0) {\r\n        deferred.resolve(response.features);\r\n      } else {\r\n        deferred.reject(\"No se encontraron Predios para este lote\");\r\n      }\r\n    }, function(error){\r\n      deferred.reject(error);\r\n    });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _prediosToHis(prediosOrig){\r\n    let deferred = new Deferred();\r\n    const featureLayer = new FeatureLayer(\"https://ws.mineco.gob.pe/serverdf/rest/services/pruebas/CARTO_FISCAL_H/FeatureServer/0\");\r\n\r\n    let graphics = []\r\n    prediosOrig.forEach(predioOrig => {\r\n      let graphic = new Graphic();\r\n      graphic.attributes = predioOrig.attributes;\r\n      graphic.geometry = predioOrig.geometry;\r\n      graphics.push(graphic);\r\n    });\r\n\r\n    const graphicsParse = JSON.parse(JSON.stringify(graphics))\r\n\r\n    featureLayer.applyEdits(graphics, null, null)\r\n    .then(function(add, update, del){\r\n      deferred.resolve(graphicsParse);\r\n    }, function(err){\r\n      deferred.reject(err);\r\n    });\r\n    return deferred.promise;    \r\n  },\r\n\r\n  _deletePrediosOrig(data){\r\n    let deferred = new Deferred();\r\n    let deleteParams = {\r\n      where: `OBJECTID IN (${data.map((i) => {return i.attributes.OBJECTID})})`,\r\n      f: \"json\"\r\n    };\r\n  \r\n    let requestOptions = {\r\n      url: \"https://ws.mineco.gob.pe/serverdf/rest/services/pruebas/CARTO_FISCAL/FeatureServer/0/deleteFeatures\",\r\n      content: deleteParams,\r\n      handleAs: \"json\",\r\n      callbackParamName: \"callback\"\r\n    };\r\n\r\n    esriRequest(requestOptions, {\r\n      usePost: true\r\n    }).then(\r\n      function(response) {\r\n        deferred.resolve(response.deleteResults);\r\n      }, function(error) {\r\n        deferred.reject(error);\r\n      }\r\n    );\r\n    return deferred.promise;\r\n  },\r\n\r\n  _addPrediosNew(predio){\r\n    let deferred = new Deferred();\r\n    const addFeatureUrl = \"https://ws.mineco.gob.pe/serverdf/rest/services/pruebas/CARTO_FISCAL/FeatureServer/0/addFeatures\"\r\n\r\n    let params = {\r\n      features: JSON.stringify([predio]),  // Convertir el objeto de entidad a una cadena JSON\r\n      f: \"json\"\r\n    };\r\n  \r\n    var options = {\r\n      url: addFeatureUrl,\r\n      content: params,\r\n      handleAs: \"json\",\r\n      callbackParamName: \"callback\"\r\n    };\r\n  \r\n    esriRequest(options, {\r\n      usePost: true,\r\n    })\r\n    .then(function(response) {\r\n      if (response.addResults && response.addResults.length > 0) {\r\n        deferred.resolve(predio);\r\n      } else {\r\n        deferred.reject(response);\r\n      }\r\n    }, function(error) {\r\n      deferred.reject(error);\r\n    });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _updateStatusRequests(predioResult){\r\n    _FIELDS_RESPONSE = [\r\n      \"COD_PRE\",\r\n      \"COD_CPU\",\r\n      \"COD_SECT\",\r\n      \"COD_MZN\",\r\n      \"COD_LOTE\",\r\n      \"COD_UU\",\r\n      \"COD_VIA\",\r\n      \"TIPO_UU\",\r\n      \"NOM_UU\",\r\n      \"NOM_REF\",\r\n      \"MZN_URB\",\r\n      \"LOT_URB\",\r\n      \"TIP_VIA\",\r\n      \"NOM_VIA\",\r\n      \"CUADRA\",\r\n      \"LADO\",\r\n      \"DIR_MUN\",\r\n      \"DIR_URB\",\r\n      \"COORD_X\",\r\n      \"COORD_Y\",\r\n      \"RAN_CPU\",\r\n      \"COD_UI\",\r\n      \"COD_VER\"\r\n    ]\r\n\r\n    // la lista predioResults contiene objetos con una propiedad attributes, necesito que todos los objetos tengan solo las propiedades que necesito de acuerdo a la lista _FIELDS_RESPONSE\r\n    let predioResult2 = predioResult.map((predio) => {\r\n      let predio2 = {}\r\n      _FIELDS_RESPONSE.forEach((field) => {\r\n        predio2[field] = predio.attributes[field]\r\n      })\r\n      return predio2\r\n    })\r\n\r\n\r\n\r\n\r\n    let response = {\r\n      \"id\": selfCm.codRequestsCm,\r\n      \"results\": predioResult2\r\n    }\r\n\r\n    console.log(response)\r\n\r\n    selfCm._sendDataToPlatform(response)\r\n  },\r\n\r\n  // ----------------------------------------------\r\n  // ----------------------------------------------\r\n   \r\n  onOpen() {\r\n    console.log('CartoMaintenanceWgt::onOpen');\r\n    let panel = this.getPanel();\r\n    panel.position.height = 700;\r\n    panel.setPosition(panel.position);        \r\n    panel.panelManager.normalizePanel(panel);  \r\n\r\n    this._createToolbar();\r\n\r\n    dojo.query(\".backTrayClsCm\").on('click', this._openFormCase);\r\n    dojo.query(\".tablinksCm\").on('click', this._loadRequestsCm);\r\n    dojo.query(\"#btnObsCaseCm\").on('click', this._openFormObs);\r\n    dojo.query(\".backRequestsClsCm\").on('click', this._openFormObs);\r\n    // dojo.query(\"#goodRequestsCm\").on('click', this._openFormResult);\r\n    dojo.query(\"#showInfoDocCm\").on('click', this._openSupportingDocument)\r\n\r\n    // Reasignacion\r\n    dojo.query(\"#btnDrawMarkerCm\").on('click', this._activateTool);\r\n\r\n    dojo.query(\"#btnFsCm\").on('click', this._ApplyAcumulacionLotes)\r\n    dojo.query(\"#btnDrawLinesDvCm\").on('click', this._activateToolLinesDivision)\r\n    dojo.query(\"#btnApplyDvCm\").on('click', this._ApplyDivideLotes)\r\n    dojo.query(\"#titleCaseCm\").on('click', this._zoomHomeRequests)\r\n    dojo.query(\"#sendDataRsCm\").on('click', this._executeReasignacionGpService)\r\n    dojo.query('#sendDataFsCm').on('click', this._executeAcumulacionGpService)\r\n    dojo.query('#sendDataDvCm').on('click', this._executeSubdivisionGpService)\r\n    dojo.query('#sendDataDtCm').on('click', this._executeInactivarGpService)\r\n    dojo.query('#btnReportCm').on('click', this._exportTableToExcel)\r\n    dojo.query('#imgUploadCm').on('change', this._uploadImagenObs)\r\n    dojo.query('#sendDataObsGrCm').on('click', this._sendObservation)\r\n    dojo.query('#searchTbxCm').on(\"keyup\", this._searchRequestByCodPred)\r\n    dojo.query('.columnDateClsCm').on(\"click\", this._sortedByDate)\r\n    // dojo.query('.columnCaseClsCm').on(\"click\", this._sortedByDate)\r\n    this._loadIniRequestsCm()\r\n\r\n    selfCm.map.addLayer(graphicLayerLabelLineaDivision)\r\n    selfCm.editToolbar = new Edit(selfCm.map);\r\n    selfCm.map.on(\"click\", selfCm._enableEditingLabelsLotesDivision);\r\n    selfCm.editToolbar.on(\"deactivate\", function(evt) {\r\n      if(evt.info.isModified){\r\n        selfCm.map.setInfoWindowOnClick(true)\r\n        // firePerimeterFL.applyEdits(null, [evt.graphic], null);\r\n      }\r\n    });\r\n  },\r\n\r\n\r\n  // onClose(){\r\n  //   console.log('CartoMaintenanceWgt::onClose');\r\n  // },\r\n  // onMinimize(){\r\n  //   console.log('CartoMaintenanceWgt::onMinimize');\r\n  // },\r\n  // onMaximize(){\r\n  //   console.log('CartoMaintenanceWgt::onMaximize');\r\n  // },\r\n  // onSignIn(credential){\r\n  //   console.log('CartoMaintenanceWgt::onSignIn', credential);\r\n  // },\r\n  // onSignOut(){\r\n  //   console.log('CartoMaintenanceWgt::onSignOut');\r\n  // }\r\n  // onPositionChange(){\r\n  //   console.log('CartoMaintenanceWgt::onPositionChange');\r\n  // },\r\n  // resize(){\r\n  //   console.log('CartoMaintenanceWgt::resize');\r\n  // }\r\n});\r\n"]}