{"version":3,"sources":["../../../widgets/CartoMaintenanceWgt/Widget.js"],"names":["declare","BaseWidget","_WidgetsInTemplateMixin","Draw","Edit","Graphic","SimpleFillSymbol","SimpleMarkerSymbol","SimpleLineSymbol","Color","GraphicsLayer","Point","LayerInfos","lang","FeatureLayer","QueryTask","Query","WidgetManager","geometryEngine","Polyline","Polygon","webMercatorUtils","BusyIndicator","Message","turf","XLSX","Deferred","TextSymbol","Font","CaseInfo","StatisticDefinition","esriRequest","SubDivision","Acumulation","Independence","Deactivate","LandAssignment","LandProcess","ToolDraw","UtilityCase","GeometryService","CustomException","SpatialReference","requestToAttendState","requestsObservedState","requestsAttendState","idLyrCatastroFiscal","idLyrCfPredios","idLyrCfLotesPun","idLyrCfEje_vial","idLyrCfNumeracion","idLyrCfArancel","idLyrCfLotes","idLyrCfUnidadesurbanas","idLyrCfParques","idLyrCfManzana","idLyrCfManzanaUrb","idLyrCfSector","idLyrDistricts","iconByState","_UBIGEO_FIELD","_ID_LOTE_P_FIELD","_COD_MZN_FIELD","_F_MZN_FIELD","_COD_SECT_FIELD","_COD_PRE_FIELD","_COD_LOTE_FIELD","toolbarCm","params","URLSearchParams","window","location","search","paramsApp","keys","key","get","symbolPuntoLote","STYLE_SQUARE","STYLE_SOLID","symbolFusionLote","symbolEliminarLote","STYLE_DIAGONAL_CROSS","symbolLoteSelected","symbolDivisionLote","STYLE_DASH","symbolPredio","symbolRightOfWay","symbolPredioSelected","symbolPredioSelected2","symbolSnapPointCm","STYLE_CROSS","idGraphicPredioCm","idGraphicPredioByMaintenance","idGraphicPredioSelectedCm","idGraphicLoteCm","idGraphicLoteSelectedCm","idGraphicPuntoLote","idGraphicFrenteLote","idGraphicLineaDivision","idGraphicLoteDeleteCm","idGraphicLabelLineaDivision","idGraphicLabelCodLote","idGraphicCandidateRightOfWay","idGraphicRightOfWay","symbolByCase","graphicLayerLineaDivision","id","graphicLayerLabelLineaDivision","graphicLayerPredioByMaintenance","graphicLayerPuntoLote","graphicLayerFrenteLote","graphicCandidateRightOfWay","graphicRightOfWay","graphicLayerLotPreview","fontAwesome","document","createElement","src","head","appendChild","baseClass","codRequestsCm","currentTabActive","layersMap","queryUbigeo","case","caseDescription","lotesQuery","idlotes","arancel","codigosPredios","xy","idxLines","cpm","idPredio","editToolbar","idButtonDrawActive","queryRequests","ubigeo","limit","offset","ordering","defaultOffset","currentCount","responseRequests","currentLotsRows","currentLandRows","currentPoinLotsRows","resolutionType","resolutionDocument","floor","urbanLotNumber","statusDrawingRightOfWay","extentBlock","pointLotsNotMediterrnean","currentLandDraw","currentRightOfWayDraw","postCreate","inherited","arguments","_createToolbar","_setInitAppCm","geometryService","config","geometryServiceUrl","selfCm","_getAllLayers","deferred","getInstance","map","itemInfo","then","hitch","layerInfosObj","resolve","catch","reject","err","promise","response","_filterByDistrictCm","_startExtentByDistrictCm","_setToolbarDraw","_showMessage","message","type","lotFeatureLayer","getLayer","anotherToolbar","initToolDraw","controlMeasurementRealTime","measurementLabelApCm","controlMeasurementTable","bodyTbMeasurementApCm","linearDivision","callbackAddLineDivision","_divisorLine","dojo","query","on","activateToolDraw","bind","title","nls","widgetTitle","titleLabel","_showMessagePromise","messagetext","buttons","label","onClick","hide","_showMessageConfirm","messageText","quesstionContinue","mensaje","queryPredios","getLayerInfoById","getFilter","setFilter","where","qTask","getUrl","executeForExtent","setExtent","results","extent","homeWidget","getWidgetsByName","homeDijit","startup","busyIndicator","create","target","domNode","parentNode","backgroundOpacity","_callApiRestServices","baseUrl","url","URL","Object","forEach","searchParams","append","fetch","ok","Error","status","json","console","log","_getRequestsTrayDataCm","responseData","state","data","filter","i","_loadIniRequestsCm","click","_parseDateStringtoFormat","dateString","date","Date","day","getDate","month","getMonth","year","getFullYear","_loadRequestTabActiveCm","evt","currentElementActive","idStatus","_loadRequestsCm","show","applicationListUrl","dataHtml","lands","lnd","join","idType","icon","tbody","innerHTML","tb","getElementsByTagName","length","tableRequestApCm","removeChild","_openFormCase","_openFormResult","removeClass","classList","add","_controlLabelPagination","_changeLimitPagination","parseInt","value","_nextPagePagination","_prevPagePagination","ini","disabled","end","_zoomToPredSelectedEvt","cup","currentTarget","dataset","_zoomToPredSelected","_handleFeatureSelected","feature","featureSelected","setSymbol","addLayer","centerAt","geometry","setTimeout","_removeLayerGraphic","LandCls","Land","prediosLayer","propertyLayer","mode","MODE_ONDEMAND","outFields","codCpu","estado","selectFeatures","SELECTION_NEW","emptyLandSelected","error","_openSupportingDocument","emptyDocSupport","open","focus","executeQueryTask","Promise","execute","_getLandsOriginals","self","LotCls","Lot","queryLands","cpuOriginal","currentLandTabRows","ubigeoFieldName","returnGeometry","urlLands","features","errorGetLand","idLots","attributes","idLotP","_getLotsOriginals","queryLots","urlLots","emptyLotRequests","codMznValues","codSectValues","_getExtentBlock","queryBlock","urlBlock","_getPointLotsOriginals","queryPointLots","urlPointLots","emptyPointLotRequests","_getLandsOriginalsTab","idSolicitud","urlOriginal","landsByApplicationUrl","count","_getOriginalData","_zoomExtentToLote","errorAcumulationLandsNumber","unionPredios","_unionFeatures","getExtent","expand","_zoomHomeRequests","_toggleBodyCaseInfo","closest","querySelector","toggle","_requestCaseInfo","urlResults","resultsByApplication","urlDocSupport","urlAffectedLands","affectedLands","all","_","responseResults","responseDocSupport","responseAffectedLands","rows","idx","contentCard","active","empyLandResultsRequests","support","rowsAffected","addClass","rowsResults","uniqueCodeLands","fusionApCm","divisionApCm","containerToolDrawApCm","eliminacionApCm","_applyIndependenceRefactor","resultCtnApCm","remove","obsCtnApCm","requestTrayApCm","casesCtnApCm","row","rowList","td","deactivate","disableSnapping","bodyTbLinesDvApCm","bodyTbPrediosDvApCm","bodyTbDatosLoteDvApCm","removeAllGraphicsIntoMeasurements","clear","_removeClassActiveButton","_openFormObs","textAreaObsApCm","imageDiv","imgUploadApCm","style","backgroundImage","_FormResult","id_solicitud","caseCm","urlPredioResults","nameCase","resultDeactivate","bodyTbResultsApCm","predio","index","_centerAtPredioResult","replace","_refreshLayersCF","setVisibility","_addToMap","screenPoint","toScreen","pointsSnapping","snappingManager","layers","graphics","getSnappingPoint","errorSnapingLocate","pointGeographic","webMercatorToGeographic","pointGraphic","intersects","tipLot","undefined","containerHelpRightOfWayApCm","stateWidget","getParent","getElementsByClassName","outSpatialReference","queryTask","mediterraneanPointLot","pointLostSnapping","concat","point","puntoLoteGraphic","enableSnapping","layerInfos","layer","name","alwaysSnap","snapPointSymbol","activate","graphicDrawLand","mediterraneanCoords","graphicDrawRightOfWay","setInfoWindowOnClick","_cancelDrawRightOfWay","nameIdLine","polylineGeomUtm","vertices","paths","lastTwoCoords","slice","line","lineString","bearing","coordinates","options","units","addDistance","destintation","destination","vertices2","reverse","lastTwoCoords2","line2","bearing2","point2","destintation2","unshift","polyline","spatialReference","geographicToWebMercator","graphic","_populateTableDrawLine","_addNameToLine","layerId","graphicsLayerIds","includes","removeLayer","_activateToolLinesDivision","deactivateToolbarAnotherToolbar","_activateSnappingByDivision","graphicsLayerInfo","esri","LayerInfo","tolerance","arr","union","_unionFeaturesAcumulation","topology","rings","deletedRings","a","polygonA","b","polygonB","contain","within","push","polygonParents","ring","polygon","check","_getOriginalLots","_addGraphicsPointLotsIndependence","_populateTablePredio","bodyTbPrediosIpApCm","_activateToolPrediosByMaintenance","_addGraphicsAfterPreVisualization","independenceApCm","_ApplyAcumulationLotsRefactor","_addGraphicsPointLotsAndArancel","mediterraneanLotsGeometry","_addGraphicsPointMediterraneanLot","_getMaxCodLot","_ordenarPoligonosNorteSur","maxCodLot","bodyTbDatosLoteFsApCm","bodyTbPrediosFsApCm","_getMidpoint","geodesicLength","midpoint","geodesicDensify","getPoint","_findMidpoint","lengthPolylineChunk","along","_getLongestPolyline","longestPath","path","polylineChunk","wkid","_dividePolygon","poly","lines","divide","cut","item","simplePolygon","idLine","tr","cursor","_deleteRowLine","_zoonToLineDivision","_editaNameLineDivision","elem","graphicLabel","polylineGeom","midPoint","pointLabel","x","y","font","STYLE_NORMAL","VARIANT_NORMAL","WEIGHT_BOLD","txtSym","setOffset","setAlign","ALIGN_END","setHaloColor","setHaloSize","_extent","symbol","text","innerText","refresh","bodyTable","drawFunction","_activateSnappingPredios","graphiclayer","parentElement","resolutiontype","resolutiondocument","urbanlotnumber","graphicROW","_changeValueCodLote","selectedValue","currentSelectId","split","lyr","graphicSelected","selects","select","graphicNotSelected","_changeLotUrb","lot_urb","_centerAtLabelCodLoteDivision","centerAndZoom","_editLoteUrbanoDivision","selectedOptions","_buildDataLoteTable","tableBody","predios","indexCell","className","textContent","num","codigoCell","optionDisabled","option","p","cod_lote","selected","loteUrbCell","loteUrbSelect","optionDisabledLotUrb","cloneNode","request","locationMarker","lotsDividedResults","coordenadasNorte","lotDividedResult","ymax","lotsDividedResultsSorted","sort","coordenadaNorteA","indexOf","coordenadaNorteB","graphicLayerLabelCodLoteDivision","dataLoteTable","labelPoints","_zfill","setColor","setSize","idGraphic","clase","len","Array","fill","estadisticaDef","statisticType","onStatisticField","outStatisticFieldName","outStatistics","result","maxCodLote","resultado","lotLayer","_getPolylinesDrawn","unionGraphicLayerLineaDivision","lineGeometry","_divideLotsByLines","errorLotQuery","polygonGeometry","geomLoteDivided","errorDivideLot","lote","orderByFields","frentes","isItc","hasOwnProperty","unionFrentes","nonIntersectedPolygons","idItcFrentesByLotes","idxNotMediterranean","splice","itcFrentesByLotes","intersect","symbolFrenteLote","Math","random","frente","puntoLoteTurf","puntoLote","PointLotCls","PointLot","arrayPolygon","_ApplyDivideLotesRefactor","emptyLineSubdivision","reorderLayer","_executeAcumulacionGpService","emptyPreviewAccumulation","emptyNewLand","labelCodLotesLayer","_addWarningMessageExecute","labelCodLotesLayerGraphic","codRequests","codLot","lotUrb","coords","newPointLotsGraphics","newLandsGraphics","landUrl","pointLotUrl","lotUrl","arancelUrl","blockUrl","cadastralBlockUrl","lotGraphic","user","caseRequest","executeAcumulation","_removeWarningMessageExecute","successProcess","ErrorEqualUrbanLotWithinBlock","_executeSubdivisionGpService","layerLote","emptyPreviewSubdivision","pred","emptyLotCodeSubdivision","emptyUrbanLotSubdivision","emptyGraphicLandSubdivision","checkLotsWithinLands","emptyLandResultSubdivision","lotUrbArray","duplicateLotUrban","checkDuplicateLotUrbanResults","duplicateLotUrbanResult","executeSubdivision","_executeInactivarGpService","codRequest","cpu","executeDeactivate","finally","buzyElm","imgElm","loadingText","position","topMessage","parseFloat","top","leftImg","left","width","transform","background","zIndex","warningExecute","_executeIndependenceLands","newLands","matrixLand","executeIndependence","_exportTableToExcel","table","headerRow","querySelectorAll","headers","headerCols","h","cols","j","wb","utils","book_new","ws","json_to_sheet","sheetName","book_append_sheet","writeFile","_dataURItoBlob","dataURI","byteString","atob","mimeString","buffer","ArrayBuffer","dataView","Uint8Array","charCodeAt","Blob","_sendObservation","file","files","messageObservation","trim","emptyObservation","emptyImageSupport","reader","FileReader","FormData","onloadend","observationUrl","method","body","successRequestObservation","errorProcessRequestObservation","readAsDataURL","_uploadImagenObs","backgroundSize","backgroundRepeat","backgroundPosition","_searchRequestByCodPred","keyCode","_sortedByDate","columnOrder","val","onOpen","info","isModified"],"mappings":"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","file":"Widget.js","sourcesContent":["import declare from 'dojo/_base/declare';\r\nimport BaseWidget from 'jimu/BaseWidget';\r\nimport _WidgetsInTemplateMixin from 'dijit/_WidgetsInTemplateMixin';\r\nimport Draw from \"esri/toolbars/draw\";\r\nimport Edit from \"esri/toolbars/edit\";\r\nimport Graphic from \"esri/graphic\";\r\nimport SimpleFillSymbol from \"esri/symbols/SimpleFillSymbol\";\r\nimport SimpleMarkerSymbol from \"esri/symbols/SimpleMarkerSymbol\";\r\nimport SimpleLineSymbol from \"esri/symbols/SimpleLineSymbol\";\r\nimport Color from 'dojo/_base/Color';\r\nimport GraphicsLayer from \"esri/layers/GraphicsLayer\"\r\nimport Point from \"esri/geometry/Point\"\r\nimport LayerInfos from \"jimu/LayerInfos/LayerInfos\";\r\nimport lang from \"dojo/_base/lang\";\r\nimport FeatureLayer from \"esri/layers/FeatureLayer\";\r\nimport QueryTask from \"esri/tasks/QueryTask\";\r\nimport Query from \"esri/tasks/query\";\r\nimport WidgetManager from \"jimu/WidgetManager\"\r\nimport geometryEngine from \"esri/geometry/geometryEngine\";\r\nimport Polyline from \"esri/geometry/Polyline\";\r\nimport Polygon from \"esri/geometry/Polygon\";\r\nimport webMercatorUtils from \"esri/geometry/webMercatorUtils\";\r\n// import Geoprocessor from \"esri/tasks/Geoprocessor\";\r\nimport BusyIndicator from 'esri/dijit/util/busyIndicator';\r\nimport Message from \"jimu/dijit/Message\";\r\nimport turf from \"https://unpkg.com/@turf/turf@6/turf.min.js\"\r\nimport XLSX from \"https://unpkg.com/xlsx@0.17.2/dist/xlsx.full.min.js\"\r\nimport Deferred from \"dojo/Deferred\";\r\nimport TextSymbol from \"esri/symbols/TextSymbol\";\r\nimport Font from \"esri/symbols/Font\";\r\nimport CaseInfo from './CaseInfo';\r\nimport StatisticDefinition from \"esri/tasks/StatisticDefinition\"\r\nimport esriRequest from \"esri/request\"\r\nimport SubDivision from './case/Subdivision';\r\nimport Acumulation from './case/Acumulation';\r\nimport Independence from './case/Independence';\r\nimport Deactivate from './case/Deactivate';\r\nimport LandAssignment from './components/LandAssignment';\r\nimport LandProcess from './components/LandProcess';\r\nimport ToolDraw from './components/ToolDraw';\r\n// import LandMatrix from './components/LandMatrix';\r\nimport UtilityCase from './case/UtilityCase';\r\nimport GeometryService from \"esri/tasks/GeometryService\";\r\nimport CustomException from './case/CustomException';\r\nimport SpatialReference from \"esri/SpatialReference\";\r\n// import LengthsParameters from \"esri/tasks/LengthsParameters\";\r\n\r\n\r\n\r\nconst requestToAttendState = \"por_atender\"\r\nconst requestsObservedState = \"observado\"\r\nconst requestsAttendState = \"atendido\"\r\n\r\n\r\n// Layers ids\r\nconst idLyrCatastroFiscal = \"CARTO_FISCAL_6806\"\r\nconst idLyrCfPredios = \"CARTO_FISCAL_8991\"\r\nconst idLyrCfLotesPun = \"CARTO_FISCAL_981\"\r\nconst idLyrCfEje_vial = \"CARTO_FISCAL_6806_2\"\r\nconst idLyrCfNumeracion = \"CARTO_FISCAL_6806_3\"\r\nconst idLyrCfArancel = \"CARTO_FISCAL_4232\"\r\nconst idLyrCfLotes = \"CARTO_FISCAL_2802\"\r\nconst idLyrCfUnidadesurbanas = \"CARTO_FISCAL_6806_6\"\r\nconst idLyrCfParques = \"CARTO_FISCAL_6806_7\"\r\nconst idLyrCfManzana = \"CARTO_FISCAL_6806_8\"\r\nconst idLyrCfManzanaUrb = \"CARTO_FISCAL_6806_9\"\r\nconst idLyrCfSector = \"CARTO_FISCAL_6806_10\"\r\n// const idLyrActpuntoimg = \"ACTUALIZACION_DE_PUNTO_IMG_1890\"\r\nconst idLyrDistricts = \"limites_nacional_1821_2\"\r\n\r\nconst iconByState = {\r\n  \"por_atender\": { 'icon': 'fas fa-pencil-alt', 'id': 'editRequestsCm', 'desc': \"Por atender\", 'idStatus': 1 },\r\n  \"observado\": { 'icon': 'fas fa-pause', 'id': 'obsRequestsCm', 'desc': \"Observado\", 'idStatus': 3 },\r\n  \"atendido\": { 'icon': 'fas fa-check', 'id': 'goodRequestsCm', 'desc': \"Atendido\", 'idStatus': 2 },\r\n}\r\n\r\n// Fields \r\nconst _UBIGEO_FIELD = \"UBIGEO\"\r\nconst _ID_LOTE_P_FIELD = \"ID_LOTE_P\"\r\nconst _COD_MZN_FIELD = \"COD_MZN\"\r\nconst _F_MZN_FIELD = \"F_MZN\"\r\nconst _COD_SECT_FIELD = \"COD_SECT\"\r\nconst _COD_PRE_FIELD = \"COD_PRE\"\r\nconst _COD_LOTE_FIELD = \"COD_LOTE\"\r\n\r\n\r\nlet toolbarCm\r\n\r\nconst params = new URLSearchParams(window.location.search)\r\nconst paramsApp = {}\r\n\r\nfor (let key of params.keys()) {\r\n  paramsApp[key] = params.get(key)\r\n}\r\n\r\n// Styles\r\nconst symbolPuntoLote = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_SQUARE,\r\n  18,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0]), 2),\r\n  new Color([0, 92, 230, 1]\r\n  )\r\n)\r\n\r\nconst symbolFusionLote = new SimpleFillSymbol(\r\n  SimpleFillSymbol.STYLE_SOLID,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0]),\r\n    2\r\n  ),\r\n  new Color([255, 255, 0, 0.25])\r\n)\r\n\r\nconst symbolEliminarLote = new SimpleFillSymbol(\r\n  SimpleFillSymbol.STYLE_DIAGONAL_CROSS,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([100, 100, 100]),\r\n    2\r\n  ),\r\n  new Color([229, 229, 229, 0.9])\r\n)\r\n\r\nconst symbolLoteSelected = new SimpleFillSymbol(\r\n  SimpleFillSymbol.STYLE_SOLID,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0, 0.75]),\r\n    4\r\n  ),\r\n  new Color([0, 255, 0, 0])\r\n)\r\n\r\nconst symbolDivisionLote = new SimpleLineSymbol(\r\n  SimpleLineSymbol.STYLE_DASH,\r\n  new Color([255, 0, 0]),\r\n  2\r\n)\r\n\r\nconst symbolPredio = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_SQUARE,\r\n  18,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0]), 2),\r\n  new Color([235, 69, 95, 1]\r\n  )\r\n)\r\n\r\n// symbolRightOfWay is green\r\nconst symbolRightOfWay = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_SQUARE,\r\n  25,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([0, 255, 0]), 2),\r\n  new Color([102, 187, 106, 0.75])\r\n);\r\n\r\nconst symbolPredioSelected = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_SQUARE, 20,\r\n  new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0]), 4),\r\n  new Color([0, 255, 0, 0])\r\n);\r\n\r\nconst symbolPredioSelected2 = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_SQUARE,\r\n  30,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([0, 183, 205]), 2),\r\n  new Color([0, 255, 255]\r\n  )\r\n);\r\n\r\nconst symbolSnapPointCm = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_CROSS,\r\n  20,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0]),\r\n    2\r\n  ),\r\n  new Color([0, 255, 0, 0.25])\r\n)\r\n\r\n\r\n// Identificadores de graficos\r\nconst idGraphicPredioCm = \"graphicPredioCm2\"\r\nconst idGraphicPredioByMaintenance = \"graphicPredioByMaintenance\"\r\n// const idGraphicLandsByIndependence = \"graphicLandsByIndependence\"\r\nconst idGraphicPredioSelectedCm = \"graphicPredioSelected\"\r\nconst idGraphicLoteCm = \"graphicLoteCm\"\r\nconst idGraphicLoteSelectedCm = \"graphicLoteSelectedCm\"\r\nconst idGraphicPuntoLote = \"graphicPuntoLote\"\r\nconst idGraphicFrenteLote = \"graphicFrenteLote\"\r\nconst idGraphicLineaDivision = \"graphicLineaDivision\"\r\nconst idGraphicLoteDeleteCm = \"graphicLoteDeleteCm\"\r\nconst idGraphicLabelLineaDivision = \"graphicLabelLineaDivision\"\r\nconst idGraphicLabelCodLote = \"graphicLabelCodLoteDivision\"\r\nconst idGraphicCandidateRightOfWay = \"graphicCandidateRightOfWay\"\r\nconst idGraphicRightOfWay = \"graphicRightOfWay\"\r\n\r\n// symbol by case\r\nconst symbolByCase = {\r\n  \"1\": { \"symbol\": symbolPredio },\r\n  \"2\": { \"symbol\": symbolPredio },\r\n  \"3\": { \"symbol\": symbolPredio },\r\n}\r\n\r\n// graphicsLayer main\r\nconst graphicLayerLineaDivision = new GraphicsLayer({\r\n  id: idGraphicLineaDivision,\r\n});\r\n\r\nconst graphicLayerLabelLineaDivision = new GraphicsLayer({\r\n  id: idGraphicLabelLineaDivision,\r\n});\r\n\r\n// let graphicLayerLabelCodLoteDivision = new GraphicsLayer({\r\n//   id: idGraphicLabelCodLote,\r\n// });\r\n\r\nconst graphicLayerPredioByMaintenance = new GraphicsLayer({\r\n  id: idGraphicPredioByMaintenance,\r\n});\r\n\r\nconst graphicLayerPuntoLote = new GraphicsLayer({\r\n  id: idGraphicPuntoLote\r\n});\r\n// creamos grafico de frente de lote\r\nconst graphicLayerFrenteLote = new GraphicsLayer({\r\n  id: idGraphicFrenteLote\r\n});\r\n\r\nconst graphicCandidateRightOfWay = new GraphicsLayer({\r\n  id: idGraphicCandidateRightOfWay\r\n});\r\n\r\n\r\nconst graphicRightOfWay = new GraphicsLayer({\r\n  id: idGraphicRightOfWay\r\n});\r\n\r\n\r\nconst graphicLayerLotPreview = new GraphicsLayer({\r\n  id: idGraphicLoteCm\r\n});\r\n\r\n// const graphicLayerLandsByIndependence = new GraphicsLayer({\r\n//   id: idGraphicLandsByIndependence,\r\n// });\r\n\r\nconst fontAwesome = document.createElement('script');\r\nfontAwesome.src = 'https://use.fontawesome.com/releases/v5.3.1/js/all.js';\r\ndocument.head.appendChild(fontAwesome);\r\n\r\n// To create a widget, you need to derive from BaseWidget.\r\nexport default declare([BaseWidget], {\r\n\r\n  // Custom widget code goes here\r\n\r\n  baseClass: 'carto-maintenance-wgt',\r\n  codRequestsCm: null,\r\n  currentTabActive: requestToAttendState,\r\n  layersMap: [],\r\n  queryUbigeo: paramsApp['ubigeo'] ? `${_UBIGEO_FIELD} = '${paramsApp['ubigeo']}'` : \"1=1\",\r\n  case: 0,\r\n  caseDescription: '',\r\n  lotesQuery: null,\r\n  idlotes: null,\r\n  arancel: null,\r\n  codigosPredios: null,\r\n  xy: [],\r\n  idxLines: 0,\r\n  cpm: '',\r\n  idPredio: '',\r\n  editToolbar: null,\r\n  idButtonDrawActive: '',\r\n  queryRequests: {\r\n    ubigeo: paramsApp['ubigeo'],\r\n    limit: 25,\r\n    offset: 0,\r\n    ordering: \"date\"\r\n  },\r\n  // defaultLimit: 25,\r\n  defaultOffset: 0,\r\n  currentCount: 0,\r\n  responseRequests: null,\r\n  currentLotsRows: null,\r\n  currentLandRows: null,\r\n  currentPoinLotsRows: null,\r\n\r\n  resolutionType: null,\r\n  resolutionDocument: null,\r\n  floor: null,\r\n  urbanLotNumber: null,\r\n  statusDrawingRightOfWay: false,\r\n  extentBlock: null,\r\n  pointLotsNotMediterrnean: null,\r\n  currentLandDraw: null,\r\n  currentRightOfWayDraw: null,\r\n  // toolDraw: new ToolDraw(),\r\n\r\n  // ErrorEqualUrbanLotWithinBlock: new CustomException.ErrorEqualUrbanLotWithinBlock(),\r\n  // currentLotsRowsAsPolygons: null,\r\n\r\n  // add additional properties here\r\n\r\n  // methods to communication with app container:\r\n  postCreate() {\r\n    this.inherited(arguments);\r\n    // this._getAllLayers();\r\n    this._createToolbar();\r\n    this._setInitAppCm();\r\n    this.geometryService = new GeometryService(this.config.geometryServiceUrl);\r\n    selfCm = this;\r\n    // this._filterByDistrictCm();\r\n    // this._startExtentByDistrictCm();\r\n    // this._setToolbarDraw();\r\n    // esri.bundle.toolbars.draw.addPoint = esri.bundle.toolbars.draw.addPoint + \"<br/>Pulsar <strong>CTRL</strong> para activar la alineación\";\r\n    // esri.bundle.toolbars.draw.addShape = esri.bundle.toolbars.draw.addShape + \"<br/>Pulsar <strong>CTRL</strong> para activar la alineación\";\r\n    // esri.bundle.toolbars.draw.resume = esri.bundle.toolbars.draw.resume + \"<br/>Pulsar <strong>CTRL</strong> para activar la alineación\";\r\n    // esri.bundle.toolbars.draw.start = esri.bundle.toolbars.draw.start + \"<br/>Pulsar <strong>CTRL</strong> para activar la alineación\";\r\n  },\r\n  _getAllLayers() {\r\n    const deferred = new Deferred();\r\n    LayerInfos.getInstance(this.map, this.map.itemInfo)\r\n      .then(lang.hitch(this, function (layerInfosObj) {\r\n        // this.layersMap = layerInfosObj;\r\n        return deferred.resolve(layerInfosObj);\r\n      }))\r\n      .catch(err => deferred.reject(err));\r\n    return deferred.promise;\r\n  },\r\n\r\n  _setInitAppCm() {\r\n    return this._getAllLayers()\r\n      .then(response => {\r\n        this.layersMap = response;\r\n        this._filterByDistrictCm();\r\n      })\r\n      .then(() => {\r\n        return this._startExtentByDistrictCm(this.map);\r\n      })\r\n      .then(() => {\r\n        this._setToolbarDraw();\r\n      })\r\n      .catch(err => {\r\n        this._showMessage(err.message, type = \"error\")\r\n      });\r\n  },\r\n\r\n  _setToolbarDraw() {\r\n    ToolDraw.map = this.map;\r\n    // ToolDraw.lotUrl = this.layersMap.getLayerInfoById(idLyrCfLotes).getUrl();\r\n    ToolDraw.lotFeatureLayer = this.map.getLayer(idLyrCfLotes);\r\n    ToolDraw.anotherToolbar = toolbarCm;\r\n    ToolDraw.initToolDraw();\r\n    ToolDraw.controlMeasurementRealTime = this.measurementLabelApCm;\r\n    ToolDraw.controlMeasurementTable = this.bodyTbMeasurementApCm;\r\n    ToolDraw.linearDivision = graphicLayerLineaDivision;\r\n    ToolDraw.callbackAddLineDivision = this._divisorLine;\r\n    dojo.query('#measurementNewCm').on(\"click\", ToolDraw.activateToolDraw.bind(ToolDraw));\r\n\r\n  },\r\n\r\n  _showMessage(message, type = 'message') {\r\n    const title = `${this.nls.widgetTitle}: ${type}`\r\n    switch (type) {\r\n      case 'error':\r\n        new Message({\r\n          type: type,\r\n          titleLabel: title,\r\n          message: message,\r\n        });\r\n        break;\r\n      default:\r\n        new Message({\r\n          type: type,\r\n          titleLabel: title,\r\n          message: message,\r\n        });\r\n        break;\r\n    }\r\n\r\n  },\r\n\r\n  _showMessagePromise(messagetext) {\r\n    const deferred = new Deferred();\r\n    const message = new Message({\r\n      titleLabel: `${this.nls.widgetTitle}`,\r\n      message: messagetext,\r\n      buttons: [{\r\n        label: \"Ok\",\r\n        onClick: function () {\r\n          deferred.resolve(true);\r\n          message.hide();\r\n        }\r\n      }]\r\n    });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _showMessageConfirm(messageText = this.nls.quesstionContinue) {\r\n    const deferred = new Deferred();\r\n    const mensaje = new Message({\r\n      titleLabel: `${this.nls.widgetTitle}: question`,\r\n      message: messageText,\r\n      type: \"question\",\r\n      buttons: [{\r\n        label: \"Sí\",\r\n        onClick: function () {\r\n          deferred.resolve(true);\r\n          mensaje.hide();\r\n        }\r\n      }, {\r\n        label: \"No\",\r\n        onClick: function () {\r\n          deferred.resolve(false);\r\n          mensaje.hide();\r\n        }\r\n      }]\r\n    });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _filterByDistrictCm() {\r\n    let queryPredios = this.layersMap.getLayerInfoById(idLyrCfPredios).getFilter()\r\n    queryPredios = queryPredios ? queryPredios + \" AND \" + this.queryUbigeo : this.queryUbigeo\r\n    this.layersMap.getLayerInfoById(idLyrCfPredios).setFilter(queryPredios)\r\n    this.layersMap.getLayerInfoById(idLyrCfLotesPun).setFilter(this.queryUbigeo)\r\n    this.layersMap.getLayerInfoById(idLyrCfEje_vial).setFilter(this.queryUbigeo)\r\n    this.layersMap.getLayerInfoById(idLyrCfNumeracion).setFilter(this.queryUbigeo)\r\n    this.layersMap.getLayerInfoById(idLyrCfArancel).setFilter(this.queryUbigeo)\r\n    this.layersMap.getLayerInfoById(idLyrCfLotes).setFilter(this.queryUbigeo)\r\n    this.layersMap.getLayerInfoById(idLyrCfUnidadesurbanas).setFilter(this.queryUbigeo)\r\n    this.layersMap.getLayerInfoById(idLyrCfParques).setFilter(this.queryUbigeo)\r\n    this.layersMap.getLayerInfoById(idLyrCfManzana).setFilter(this.queryUbigeo)\r\n    this.layersMap.getLayerInfoById(idLyrCfManzanaUrb).setFilter(this.queryUbigeo)\r\n    this.layersMap.getLayerInfoById(idLyrCfSector).setFilter(this.queryUbigeo)\r\n    // selfCm.layersMap.getLayerInfoById(idLyrActpuntoimg).setFilter(selfCm.queryUbigeo)\r\n  },\r\n\r\n  _startExtentByDistrictCm(map) {\r\n    const deferred = new Deferred();\r\n    const query = new Query()\r\n    query.where = this.queryUbigeo\r\n\r\n    const qTask = new QueryTask(this.layersMap.getLayerInfoById(idLyrDistricts).getUrl())\r\n\r\n    // qTask.executeForExtent(query, (results) => {\r\n    //   this.map.setExtent(results.extent).then(function () {\r\n    //     // get the next scale value from the current scale\r\n    //     const homeWidget = WidgetManager.getInstance().getWidgetsByName(\"HomeButton\");\r\n    //     homeWidget[0].homeDijit.extent = this.map.extent;\r\n    //     deferred.resolve(true);\r\n    //   })\r\n    // }, (error) => {\r\n    //   deferred.reject(error);\r\n    // })\r\n    // return deferred.promise;\r\n\r\n    qTask.executeForExtent(query)\r\n      .then(results => {\r\n        return map.setExtent(results.extent)\r\n      })\r\n      .then(() => {\r\n        const homeWidget = WidgetManager.getInstance().getWidgetsByName(\"HomeButton\");\r\n        homeWidget[0].homeDijit.extent = map.extent;\r\n        deferred.resolve(true);\r\n      })\r\n      .catch(err => deferred.reject(err));\r\n    return deferred.promise;\r\n  },\r\n\r\n  startup() {\r\n    this.inherited(arguments);\r\n\r\n    this.busyIndicator = BusyIndicator.create({\r\n      target: this.domNode.parentNode.parentNode,\r\n      backgroundOpacity: 0\r\n    });\r\n  },\r\n\r\n  _callApiRestServices(baseUrl, params) {\r\n    const url = new URL(baseUrl);\r\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\r\n\r\n    return fetch(url)\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          selfCm.busyIndicator.hide();\r\n          throw new Error(\"HTTP error \" + response.status);\r\n        }\r\n        return response.json();\r\n      })\r\n      .catch(function (err) {\r\n        selfCm.busyIndicator.hide();\r\n        console.log(\"An error occurred while fetching the data.\");\r\n      });\r\n  },\r\n\r\n  _getRequestsTrayDataCm(responseData, state) {\r\n    // Reemplazar todo el metodo para capturar datos de servicio\r\n    const data = responseData.filter((i) => i.status == state);\r\n    return data\r\n  },\r\n\r\n  _loadIniRequestsCm() {\r\n    dojo.query(`#${selfCm.currentTabActive}`)[0].click()\r\n  },\r\n\r\n  _parseDateStringtoFormat(dateString) {\r\n    const date = new Date(dateString)\r\n    const day = date.getDate()\r\n    const month = date.getMonth() + 1\r\n    const year = date.getFullYear()\r\n    return `${day}/${month}/${year}`\r\n  },\r\n\r\n  _loadRequestTabActiveCm(evt) {\r\n    // selfCm.busyIndicator.show();\r\n    selfCm.currentTabActive = evt.target.id;\r\n    selfCm.currentElementActive = evt.target;\r\n    selfCm.queryRequests['id_status'] = iconByState[evt.target.id].idStatus;\r\n    selfCm.queryRequests['offset'] = selfCm.defaultOffset;\r\n    selfCm._loadRequestsCm()\r\n    // .then(selfCm._controlLabelPagination());\r\n  },\r\n\r\n  _loadRequestsCm() {\r\n    selfCm.busyIndicator.show();\r\n    selfCm._callApiRestServices(selfCm.config.applicationListUrl, selfCm.queryRequests).then(response => {\r\n      selfCm.currentCount = response['count'];\r\n\r\n      response = response['results']\r\n      const dataHtml = response.map((i) => `<tr>\r\n                                        <td>${i.id}</td>\r\n                                        <td>${i.type}</td>\r\n                                        <td>${i.lands.map(lnd => lnd['cup']).join(', ')}</td>\r\n                                        <td>${selfCm._parseDateStringtoFormat(i.date)}</td>\r\n                                        <td>\r\n                                          <button id=\"${iconByState[selfCm.currentTabActive].id}\" value=\"${i.idType}\" class=\"stateRequestClsCm\">\r\n                                            <i class=\"${iconByState[selfCm.currentTabActive].icon}\"></i>\r\n                                          </button>\r\n                                        </td>\r\n                                      </tr>`\r\n      )\r\n      const tbody = dojo.create('tbody', { innerHTML: dataHtml.join('') });\r\n      const tb = dojo.query(\".tableRequestClsCm\")[0]\r\n      if (tb.getElementsByTagName(\"tbody\").length > 0) {\r\n        selfCm.tableRequestApCm.removeChild(tb.getElementsByTagName(\"tbody\")[0])\r\n      }\r\n      selfCm.tableRequestApCm.appendChild(tbody);\r\n      if (selfCm.currentTabActive == requestToAttendState) {\r\n        dojo.query(\".stateRequestClsCm\").on('click', selfCm._openFormCase);\r\n      }\r\n      if (selfCm.currentTabActive == requestsAttendState) {\r\n        dojo.query(\".stateRequestClsCm\").on('click', selfCm._openFormResult);\r\n      }\r\n\r\n      dojo.query(\".tablinksCm\").removeClass(\"active\");\r\n      selfCm.currentElementActive.classList.add(\"active\");\r\n      selfCm._controlLabelPagination();\r\n      selfCm.busyIndicator.hide();\r\n    })\r\n  },\r\n\r\n  _changeLimitPagination(evt) {\r\n    selfCm.queryRequests['limit'] = parseInt(evt.target.value);\r\n    selfCm.queryRequests['offset'] = selfCm.defaultOffset;\r\n    selfCm._loadRequestsCm();\r\n  },\r\n\r\n  _nextPagePagination(evt) {\r\n    selfCm.queryRequests['offset'] = selfCm.queryRequests['offset'] + selfCm.queryRequests['limit'];\r\n    selfCm._loadRequestsCm();\r\n  },\r\n\r\n  _prevPagePagination(evt) {\r\n    selfCm.queryRequests['offset'] = selfCm.queryRequests['offset'] - selfCm.queryRequests['limit'];\r\n    // if (selfCm.queryRequests['offset'] < 0) {\r\n    //   selfCm.queryRequests['offset'] = 0; // Ensure offset does not go negative\r\n    // }\r\n    selfCm._loadRequestsCm();\r\n  },\r\n\r\n  _controlLabelPagination() {\r\n    const ini = selfCm.queryRequests['offset'] + 1\r\n    dojo.query(\".buttonPaginationPrevClsCm\")[0].disabled = ini == 1 ? true : false\r\n    const end = selfCm.queryRequests['offset'] + selfCm.queryRequests['limit']\r\n    dojo.query(\".buttonPaginationNextClsCm\")[0].disabled = end >= selfCm.currentCount ? true : false\r\n    dojo.query(\".labelPaginationCtnCm\")[0].innerHTML = `${ini} - ${end} de ${selfCm.currentCount}`\r\n  },\r\n\r\n  _zoomToPredSelectedEvt(evt) {\r\n    // @cpu\r\n    const cup = evt.currentTarget.dataset.cup\r\n    return selfCm._zoomToPredSelected(cup)\r\n  },\r\n\r\n  _handleFeatureSelected(feature) {\r\n    const featureSelected = new GraphicsLayer({\r\n      id: idGraphicPredioSelectedCm\r\n    });\r\n    feature[0].setSymbol(symbolPredioSelected);\r\n    featureSelected.add(feature[0]);\r\n    selfCm.map.addLayer(featureSelected);\r\n    selfCm.map.centerAt(feature[0].geometry);\r\n\r\n    setTimeout(function () {\r\n      // clearInterval(interval);\r\n      selfCm._removeLayerGraphic(idGraphicPredioSelectedCm);\r\n    }, 1000);\r\n  },\r\n\r\n  _zoomToPredSelected(cup) {\r\n    selfCm.busyIndicator.show();\r\n    const deferred = new Deferred();\r\n    const LandCls = new UtilityCase.Land();\r\n    selfCm._removeLayerGraphic(idGraphicPredioSelectedCm);\r\n    const prediosLayer = selfCm.layersMap.getLayerInfoById(idLyrCfPredios);\r\n    const propertyLayer = new FeatureLayer(prediosLayer.getUrl(), {\r\n      mode: FeatureLayer.MODE_ONDEMAND,\r\n      outFields: [\"*\"]\r\n    });\r\n    // crear una consulta para seleccionar la fila deseada\r\n    const query = new Query();\r\n    // @cpu\r\n    query.where = `${_UBIGEO_FIELD} = '${paramsApp['ubigeo']}' and ${LandCls.codCpu} = '${cup}' and ${LandCls.estado} = 1`;\r\n\r\n    // seleccionar la fila\r\n    propertyLayer.selectFeatures(query, FeatureLayer.SELECTION_NEW)\r\n      .then(\r\n        results => {\r\n          if (results.length == 0) {\r\n            throw new Error(selfCm.nls.emptyLandSelected)\r\n          }\r\n          // if (selfCm.case == 2) {\r\n          //   if (results.length < 2) {\r\n          //     throw new Error(selfCm.nls.errorAcumulationLandsNumber);\r\n          //   }\r\n          // }\r\n          selfCm._handleFeatureSelected(results)\r\n          selfCm.busyIndicator.hide();\r\n          return deferred.resolve(results)\r\n        }\r\n      )\r\n      .catch(error => {\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(error.message, type = \"error\")\r\n        deferred.reject(error)\r\n      })\r\n    return deferred.promise;\r\n  },\r\n\r\n  _openSupportingDocument(evt) {\r\n    // check if value is empty\r\n    if (!evt.currentTarget.value) {\r\n      selfCm._showMessage(selfCm.nls.emptyDocSupport, type = \"error\")\r\n      return\r\n    }\r\n    window.open(evt.currentTarget.value, '_blank').focus();\r\n  },\r\n\r\n  executeQueryTask(url, query, type = 'query') {\r\n    return new Promise((resolve, reject) => {\r\n      const qTask = new QueryTask(url);\r\n      switch (type) {\r\n        case 'query':\r\n          qTask.execute(query, resolve, reject);\r\n          break;\r\n        case 'queryForExtent':\r\n          qTask.executeForExtent(query, resolve, reject);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  },\r\n\r\n  _getLandsOriginals() {\r\n    const self = this;\r\n    const deferred = new Deferred();\r\n    const LandCls = new UtilityCase.Land();\r\n    const LotCls = new UtilityCase.Lot();\r\n    const queryLands = new Query();\r\n    // @cpu\r\n    const cpuOriginal = self.currentLandTabRows.map(i => i.cup);\r\n    queryLands.where = `${UtilityCase.ubigeoFieldName} = '${paramsApp['ubigeo']}' and ${LandCls.codCpu} in ('${cpuOriginal.join(\"', '\")}') and ${LandCls.estado} = 1`;\r\n    queryLands.returnGeometry = true;\r\n    queryLands.outFields = [\"*\"];\r\n    const urlLands = self.layersMap.getLayerInfoById(idLyrCfPredios).getUrl();\r\n    self.executeQueryTask(urlLands, queryLands)\r\n      .then(results => {\r\n        if (results.features.length == 0) {\r\n          throw new Error(self.nls.errorGetLand);\r\n        }\r\n        self.currentLandRows = results.features;\r\n        const idLots = self.currentLandRows.map((i) => i.attributes[LotCls.idLotP]);\r\n        deferred.resolve(idLots);\r\n      })\r\n      .catch(error => {\r\n        deferred.reject(error);\r\n      });\r\n    return deferred.promise;\r\n  },\r\n  _getLotsOriginals(idLots) {\r\n    const self = this;\r\n    const LotCls = new UtilityCase.Lot()\r\n    const deferred = new Deferred();\r\n    const queryLots = new Query();\r\n    queryLots.where = `${LotCls.idLotP} in (${idLots.join(\",\")}) and (${UtilityCase.ubigeoFieldName} = ${paramsApp['ubigeo']})`;\r\n    self.lotesQuery = queryLots.where;\r\n    queryLots.returnGeometry = true;\r\n    queryLots.outFields = [\"*\"];\r\n    const urlLots = self.layersMap.getLayerInfoById(idLyrCfLotes).getUrl();\r\n    self.executeQueryTask(urlLots, queryLots)\r\n      .then(results => {\r\n        if (results.features.length == 0) {\r\n          throw new Error(self.nls.emptyLotRequests);\r\n        }\r\n        self.currentLotsRows = results.features;\r\n        const codMznValues = self.currentLotsRows.map((i) => i.attributes[_COD_MZN_FIELD]).join(\",\")\r\n        const codSectValues = self.currentLotsRows.map((i) => i.attributes[_COD_SECT_FIELD]).join(\",\")\r\n        self.arancel = `(${UtilityCase.ubigeoFieldName} = ${paramsApp['ubigeo']}) and ${_COD_MZN_FIELD} in (${codMznValues}) and ${_COD_SECT_FIELD} in (${codSectValues})`;\r\n        self.pointLotsNotMediterrnean = `(${self.arancel}) and (${LotCls.idLotP} NOT IN (${idLots.join(\",\")})) AND TIP_LOT = 1`\r\n        deferred.resolve(idLots);\r\n      })\r\n      .catch(error => {\r\n        deferred.reject(error);\r\n      });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _getExtentBlock(idLots) {\r\n    const self = this;\r\n    const deferred = new Deferred();\r\n    const queryBlock = new Query();\r\n    queryBlock.where = self.arancel;\r\n    const urlBlock = self.layersMap.getLayerInfoById(idLyrCfManzana).getUrl();\r\n    self.executeQueryTask(urlBlock, queryBlock, type = 'queryForExtent')\r\n      .then(results => {\r\n        self.extentBlock = results.extent;\r\n        deferred.resolve(idLots);\r\n      })\r\n      .catch(error => {\r\n        deferred.reject(error);\r\n      });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _getPointLotsOriginals(idLots) {\r\n    const self = this;\r\n    const LotCls = new UtilityCase.Lot()\r\n    const deferred = new Deferred();\r\n    const queryPointLots = new Query();\r\n    queryPointLots.where = `${LotCls.idLotP} in (${idLots.join(\",\")}) and (${UtilityCase.ubigeoFieldName} = ${paramsApp['ubigeo']})`;\r\n    queryPointLots.returnGeometry = true;\r\n    queryPointLots.outFields = [\"*\"];\r\n    const urlPointLots = self.layersMap.getLayerInfoById(idLyrCfLotesPun).getUrl();\r\n    self.executeQueryTask(urlPointLots, queryPointLots)\r\n      .then(results => {\r\n        if (results.features.length == 0) {\r\n          throw new Error(self.nls.emptyPointLotRequests);\r\n        }\r\n        self.currentPoinLotsRows = results.features;\r\n        deferred.resolve(idLots);\r\n      })\r\n      .catch(error => {\r\n        deferred.reject(error);\r\n      });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _getLandsOriginalsTab(idSolicitud) {\r\n    const self = this;\r\n    const deferred = new Deferred();\r\n    const urlOriginal = `${self.config.landsByApplicationUrl}/${idSolicitud}`;\r\n    fetch(urlOriginal)\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error(\"HTTP error \" + response.status);\r\n        }\r\n        return response.json()\r\n      })\r\n      .then(response => {\r\n        if (response.count == 0) {\r\n          throw new Error(self.nls.errorGetLand);\r\n        }\r\n        self.currentLandTabRows = response.results;\r\n        deferred.resolve(self.currentLandTabRows);\r\n      })\r\n      .catch(error => {\r\n        deferred.reject(error);\r\n      });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _getOriginalData(idSolicitud) {\r\n    return this._getLandsOriginalsTab(idSolicitud)\r\n      .then(landsTab => this._getLandsOriginals())\r\n      .then(idLots => this._getPointLotsOriginals(idLots))\r\n      .then(idLots => this._getLotsOriginals(idLots))\r\n      .then(idLots => this._getExtentBlock(idLots))\r\n      .then((idLots) => {\r\n        return idLots;\r\n      })\r\n      .catch(error => {\r\n        return error;\r\n      });\r\n  },\r\n\r\n  _zoomExtentToLote() {\r\n    if (!this.currentLotsRows) {\r\n      return\r\n    }\r\n    if (this.case == 2) {\r\n      if (this.currentLotsRows.length < 2) {\r\n        throw new Error(this.nls.errorAcumulationLandsNumber);\r\n      }\r\n    }\r\n    // if (this.currentLotsRows.length > 1) {\r\n    //   const unionPredios = this._unionFeatures(this.currentLotsRows.map((i) => i.geometry))\r\n    // }\r\n    const unionPredios = this.currentLotsRows.length > 1 ? this._unionFeatures(this.currentLotsRows.map((i) => i.geometry)) : this.currentLotsRows[0].geometry\r\n    this.map.setExtent(unionPredios.getExtent().expand(2))\r\n  },\r\n\r\n  _zoomHomeRequests() {\r\n    return selfCm._zoomExtentToLote()\r\n  },\r\n\r\n  _toggleBodyCaseInfo(evt) {\r\n    this.closest('.caseInfoClsCm').querySelector('.bodyPredInfoClsCm').classList.toggle('active')\r\n  },\r\n\r\n  _requestCaseInfo() {\r\n    selfCm.busyIndicator.show();\r\n    const urlResults = `${selfCm.config.resultsByApplication}/${selfCm.codRequestsCm}`\r\n    const urlDocSupport = `${selfCm.config.applicationListUrl}/${selfCm.codRequestsCm}`\r\n    const urlAffectedLands = `${selfCm.config.affectedLands}/${selfCm.codRequestsCm}`\r\n\r\n    Promise.all([\r\n      selfCm._getOriginalData(selfCm.codRequestsCm),\r\n      fetch(urlResults).then(response => {\r\n        if (!response.ok) {\r\n          selfCm.busyIndicator.hide();\r\n          throw new Error(\"HTTP error \" + response.status);\r\n        }\r\n        return response.json()\r\n      }),\r\n      fetch(urlDocSupport).then(response => response.json()),\r\n      fetch(urlAffectedLands).then(response => {\r\n        if (!response.ok) {\r\n          selfCm.busyIndicator.hide();\r\n          throw new Error(\"HTTP error \" + response.status);\r\n        }\r\n        return response.json()\r\n      })\r\n    ]).then(function ([_, responseResults, responseDocSupport, responseAffectedLands]) {\r\n\r\n      if (_.message) {\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(_.message, type = \"error\");\r\n        // return\r\n      }\r\n\r\n      selfCm.currentLandTabRows = selfCm.currentLandTabRows || [];\r\n      const rows = selfCm.currentLandTabRows.map((i, idx) => {\r\n        return CaseInfo.contentCard(i, 'original', i.cup, active = selfCm.case != 2 ? true : false);\r\n      });\r\n\r\n      if (selfCm.case != 4) {\r\n        if (responseResults.count == 0) {\r\n          selfCm._showMessage(`${selfCm.nls.empyLandResultsRequests} ${selfCm.codRequestsCm}`, type = \"error\");\r\n          selfCm.busyIndicator.hide();\r\n          // return\r\n        }\r\n      }\r\n\r\n      dojo.query(\"#showInfoDocCm\")[0].value = responseDocSupport.support\r\n      dojo.query('.CtnOriginalClsCm')[0].innerHTML = rows.join('');\r\n\r\n      if (selfCm.case == 2 || selfCm.case == 3) {\r\n        if (responseAffectedLands.results.length > 0) {\r\n          const rowsAffected = responseAffectedLands.results.map((i, idx) => {\r\n            return CaseInfo.contentCard(i, 'original', i.cup, active = false);\r\n          });\r\n          dojo.query('.CtnAffectedClsCm')[0].innerHTML = rowsAffected.join('');\r\n          dojo.query('.lblAffectedClsCm').addClass('active');\r\n        }\r\n      } else {\r\n        dojo.query('.CtnAffectedClsCm')[0].innerHTML = '';\r\n        dojo.query('.lblAffectedClsCm').removeClass('active');\r\n      }\r\n\r\n      dojo.query(\".zoomPredInfoClsCm\").on('click', selfCm._zoomToPredSelectedEvt);\r\n\r\n      if (selfCm.case != 4) {\r\n        const rowsResults = responseResults.results.map((i, idx) => {\r\n          return CaseInfo.contentCard(i, 'result', idx + 1, false, true);\r\n        });\r\n        dojo.query('.CtnResultClsCm')[0].innerHTML = rowsResults.join('');\r\n        dojo.query('.lblResultsClsCm').addClass('active');\r\n      } else {\r\n        dojo.query('.CtnResultClsCm')[0].innerHTML = '';\r\n        dojo.query('.lblResultsClsCm').removeClass('active');\r\n      }\r\n\r\n      dojo.query(\".colapsePredInfoClsCm\").on('click', selfCm._toggleBodyCaseInfo);\r\n\r\n      // @cpu\r\n      selfCm.uniqueCodeLands = selfCm.currentLandTabRows.map((i) => i.cup).join(',');\r\n      selfCm.responseRequests = responseResults['results']\r\n\r\n    })\r\n      .then(() => {\r\n        if (selfCm.case === \"2\") {\r\n          selfCm.fusionApCm.classList.toggle('active')\r\n        } else if (selfCm.case === \"3\") {\r\n          selfCm.divisionApCm.classList.toggle('active')\r\n          selfCm.containerToolDrawApCm.classList.toggle('active')\r\n        } else if (selfCm.case === \"4\") {\r\n          selfCm.eliminacionApCm.classList.toggle('active')\r\n        } else if (selfCm.case === \"5\") {\r\n          return selfCm._applyIndependenceRefactor();\r\n        };\r\n      })\r\n      // .then(response => {\r\n      //   if (response) {\r\n\r\n      //   }\r\n      //   return undefined;\r\n      // })\r\n      .then(() => {\r\n        // switch (selfCm.case) {\r\n        //   // case \"1\":\r\n        //   //   selfCm.reasignarApCm.classList.toggle('active')\r\n        //   //   break;\r\n        //   case \"2\":\r\n        //     selfCm.fusionApCm.classList.toggle('active')\r\n        //     break\r\n        //   case \"3\":\r\n        //     selfCm.divisionApCm.classList.toggle('active')\r\n        //     selfCm.containerToolDrawApCm.classList.toggle('active')\r\n        //     break\r\n        //   case \"4\":\r\n        //     selfCm.eliminacionApCm.classList.toggle('active')\r\n        //     break\r\n        //   case \"5\":\r\n        //     selfCm.independenceApCm.classList.toggle('active')\r\n        //     // selfCm.independenceApCm.innerHTML = ''\r\n        //     LandAssignment.title = \"Independización\";\r\n        //     LandAssignment.lands = selfCm.responseRequests;\r\n        //     LandAssignment.pointLots = selfCm.currentPoinLotsRows;\r\n        //     LandAssignment.map = selfCm.map;\r\n        //     LandAssignment.landsSymbol = symbolPredio;\r\n        //     LandAssignment.landsSymbolSelected = symbolPredioSelected2;\r\n        //     LandAssignment.removeAllGraphics();\r\n        //     selfCm._populateTablePredio(selfCm.bodyTbPrediosIpApCm, selfCm._activateToolPrediosByMaintenance)\r\n        //     // selfCm.independenceApCm.appendChild(LandAssignment.renderTableLandAssignment());\r\n\r\n        //     // LandProcess.title = \"Enviar datos\";\r\n        //     // LandProcess.type = \"independence\";\r\n        //     // selfCm.independenceApCm.appendChild(LandProcess.renderButtonProcess());\r\n        //     // dojo.query(`#${LandProcess.id}`).on('click', selfCm._executeIndependenceLands);\r\n        //     // dojo.query(\".pointLotSelectionCm\").on('change', LandAssignment.selectedPointLots.bind(LandAssignment));\r\n        //     // dojo.query('.tableClsCm tr').on('mouseover', LandAssignment.highlightLand.bind(LandAssignment));\r\n        //     // dojo.query('.tableClsCm tr').on('mouseout', LandAssignment.reestartSymbolLand.bind(LandAssignment));\r\n        //     break\r\n        //   default:\r\n        //     break;\r\n        // }\r\n        selfCm.map.addLayer(graphicRightOfWay);\r\n        selfCm.resultCtnApCm.classList.remove('active')\r\n        selfCm.obsCtnApCm.classList.remove('active')\r\n        selfCm.requestTrayApCm.classList.remove('active')\r\n        selfCm.casesCtnApCm.classList.toggle('active')\r\n        selfCm._zoomExtentToLote()\r\n        selfCm.busyIndicator.hide();\r\n      })\r\n      .catch(function (error) {\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(error.message, type = \"error\");\r\n      })\r\n\r\n  },\r\n\r\n  _openFormCase(evt) {\r\n    if (evt.currentTarget.id == \"editRequestsCm\") {\r\n      const row = dojo.query(evt.currentTarget).closest(\"tr\")[0];\r\n      const rowList = dojo.query(\"td\", row).map(td => td.innerHTML);\r\n      selfCm.codRequestsCm = rowList[0]\r\n      selfCm.caseDescription = rowList[1]\r\n      dojo.query('#titleCaseCm')[0].innerHTML = `<span>${selfCm.caseDescription} <span class=\"fa fa-search\" style=\"font-size: 15px\"></span></span>`\r\n\r\n      selfCm.case = evt.currentTarget.value\r\n      selfCm._requestCaseInfo();\r\n\r\n    } else if (evt.currentTarget.id == 'backTrayCm' || evt.currentTarget.id == 'backTrayResultCm') {\r\n      // desactivar el toolbarCm de edicion si esta activado\r\n      toolbarCm.deactivate();\r\n\r\n      // deshabilitar snapping\r\n      selfCm.map.disableSnapping()\r\n      selfCm.bodyTbLinesDvApCm.innerHTML = ''\r\n      selfCm.bodyTbPrediosDvApCm.innerHTML = ''\r\n\r\n      dojo.query(\".caseClsCm\").removeClass(\"active\")\r\n      // remove all graphics layer if exist\r\n      selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n      selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n      selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n      selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n      selfCm._removeLayerGraphic(idGraphicPredioSelectedCm);\r\n      selfCm._removeLayerGraphic(idGraphicLabelCodLote)\r\n      selfCm._removeLayerGraphic(idGraphicRightOfWay);\r\n      selfCm.bodyTbDatosLoteDvApCm.innerHTML = ''\r\n      // selfCm.bodyTbMeasurementApCm.innerHTML = ''\r\n      ToolDraw.removeAllGraphicsIntoMeasurements();\r\n\r\n      graphicLayerLineaDivision.clear();\r\n      graphicLayerLabelLineaDivision.clear();\r\n      graphicLayerPredioByMaintenance.clear();\r\n\r\n      selfCm.lotesQuery = null\r\n      selfCm.arancel = null\r\n      selfCm.xy = []\r\n      selfCm.currentLandTabRows = null;\r\n\r\n      selfCm.casesCtnApCm.classList.remove('active')\r\n      selfCm.resultCtnApCm.classList.remove('active')\r\n      selfCm.containerToolDrawApCm.classList.remove('active')\r\n      selfCm.obsCtnApCm.classList.remove('active')\r\n      selfCm.requestTrayApCm.classList.toggle('active')\r\n      selfCm._removeClassActiveButton()\r\n      dojo.query('.CtnAffectedClsCm')[0].innerHTML = '';\r\n      dojo.query('.lblAffectedClsCm').removeClass('active');\r\n\r\n      if (selfCm.currentTabActive == requestToAttendState) {\r\n        dojo.query(\".tablinksCm.active\")[0].click();\r\n        // selfCm._loadRequestTabActiveCm()\r\n        // selfCm.queryRequests['offset'] = selfCm.defaultOffset;\r\n      }\r\n      selfCm._loadRequestsCm();\r\n      // selfCm._loadIniRequestsCm();\r\n    }\r\n\r\n  },\r\n  _openFormObs() {\r\n    selfCm.textAreaObsApCm.value = ''\r\n    const imageDiv = dojo.query(\".thumbnailClsCm\")[0];\r\n    selfCm.imgUploadApCm.value = ''\r\n    imageDiv.style.backgroundImage = \"none\";\r\n    imageDiv.innerHTML = \"<span class=alignVCenter><i class='far fa-image'></i></span>\";\r\n    dojo.query('#headeRequestsCtnCm')[0].innerHTML = `<span class=\"alignVCenter\">Solicitud: ${selfCm.codRequestsCm}</span>`\r\n    selfCm.casesCtnApCm.classList.toggle(\"active\");\r\n    selfCm.obsCtnApCm.classList.toggle('active')\r\n  },\r\n\r\n  _FormResult(id_solicitud, caseCm) {\r\n    selfCm.busyIndicator.show();\r\n    const urlPredioResults = `${selfCm.config.resultsByApplication}/${id_solicitud}`\r\n    if (caseCm == Deactivate.nameCase) {\r\n      selfCm.busyIndicator.hide();\r\n      selfCm._showMessage(selfCm.nls.resultDeactivate)\r\n      return\r\n    }\r\n    selfCm._callApiRestServices(urlPredioResults, {}).then(function (response) {\r\n      try {\r\n        selfCm.bodyTbResultsApCm.innerHTML = ''\r\n        dojo.query(\"#titleCaseResult\")[0].innerHTML = `<span>Solicitud ${id_solicitud}: ${caseCm}</span>`\r\n\r\n        const rows = response.results.map((predio, index) => {\r\n          return `<tr><td class=\"center-aligned\">${index + 1}</td>\r\n                  <td>${predio['cup']}</td>\r\n                  <td>${predio['address']}</td>\r\n                  <td class=\"center-aligned\">\r\n                    <span id=\"${predio['cup']}_search\" class=\"zoomPredioResultClsCm\"><i class=\"fas fa-search\"></i></span>\r\n                  </td></tr>`\r\n        })\r\n        selfCm.bodyTbResultsApCm.innerHTML = rows.join('')\r\n        dojo.query('.zoomPredioResultClsCm').on('click', selfCm._centerAtPredioResult)\r\n        selfCm.casesCtnApCm.classList.remove(\"active\");\r\n        selfCm.obsCtnApCm.classList.remove('active')\r\n        selfCm.requestTrayApCm.classList.remove('active')\r\n        selfCm.resultCtnApCm.classList.toggle('active')\r\n        selfCm.busyIndicator.hide()\r\n      }\r\n      catch (error) {\r\n        console.log(error)\r\n        selfCm.busyIndicator.hide()\r\n      }\r\n    })\r\n  },\r\n\r\n  _centerAtPredioResult(evt) {\r\n    const cup = evt.currentTarget.id.replace('_search', '')\r\n    selfCm._zoomToPredSelected(cup)\r\n  },\r\n\r\n  _openFormResult(evt) {\r\n    const row = dojo.query(evt.currentTarget).closest(\"tr\")[0];\r\n    const rowList = dojo.query(\"td\", row).map(td => td.innerHTML);\r\n    selfCm.codRequestsCm = rowList[0]\r\n    selfCm.caseDescription = rowList[1]\r\n    selfCm._FormResult(selfCm.codRequestsCm, selfCm.caseDescription)\r\n  },\r\n\r\n  _refreshLayersCF() {\r\n    this.map.getLayer(idLyrCfPredios).setVisibility(false)\r\n    this.map.getLayer(idLyrCfLotesPun).setVisibility(false)\r\n    this.map.getLayer(idLyrCfLotes).setVisibility(false)\r\n    this.map.getLayer(idLyrCfPredios).setVisibility(true)\r\n    this.map.getLayer(idLyrCfLotes).setVisibility(true)\r\n    this.map.getLayer(idLyrCfLotesPun).setVisibility(true)\r\n    // selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(false)\r\n    // selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(true)\r\n  },\r\n\r\n  // Toolbar function\r\n  _createToolbar() {\r\n    toolbarCm = new Draw(this.map);\r\n    toolbarCm.on(\"draw-end\", this._addToMap.bind(this));\r\n  },\r\n\r\n  // _addToMap(evt) {\r\n  //   if (evt.geometry.type === \"point\") {\r\n  //     const screenPoint = selfCm.map.toScreen(evt.geometry)\r\n  //     const deferred = selfCm.map.snappingManager.getSnappingPoint(screenPoint);\r\n  //     deferred.then(function (value) {\r\n  //       if (value !== undefined) {\r\n  //         const point_g = webMercatorUtils.webMercatorToGeographic(new Point(value));\r\n  //         const graphic = new Graphic(point_g, symbolByCase[selfCm.case].symbol);\r\n  //         if (selfCm.case == 1 || selfCm.case == 2) {\r\n\r\n  //           const graphicLayer = new GraphicsLayer({\r\n  //             id: idGraphicPredioCm,\r\n  //           });\r\n  //           graphicLayer.add(graphic);\r\n  //           selfCm.map.addLayer(graphicLayer);\r\n  //           selfCm.xy = [point_g.x, point_g.y]\r\n  //         }\r\n  //         else if (selfCm.case == 3) {\r\n  //           graphic['attributes'] = {\r\n  //             cpm: selfCm.cpm,\r\n  //             id: selfCm.idPredio,\r\n  //             resolutionType: selfCm.resolutionType,\r\n  //             resolutionDocument: selfCm.resolutionDocument,\r\n  //             floor: selfCm.floor,\r\n  //             urbanLotNumber: selfCm.urbanLotNumber,\r\n  //           }\r\n  //           graphicLayerPredioByMaintenance.add(graphic);\r\n  //         }\r\n  //         selfCm.map.setInfoWindowOnClick(true);\r\n  //         toolbarCm.deactivate();\r\n  //         selfCm._removeClassActiveButton()\r\n  //       } else {\r\n  //         selfCm._showMessage(selfCm.nls.errorSnapingLocate, type = \"error\")\r\n  //       }\r\n  //     }, function (error) {\r\n  //       console.log(error);\r\n  //     });\r\n  //   } else if (evt.geometry.type === \"polyline\") {\r\n  //     selfCm._divisorLine(evt.geometry);\r\n  //   }\r\n  // },\r\n\r\n  _addToMap(evt) {\r\n    const deferred = new Deferred();\r\n    if (evt.geometry.type === \"point\") {\r\n      const screenPoint = this.map.toScreen(evt.geometry);\r\n      const pointsSnapping = this.map.snappingManager.layers[0].graphics;\r\n      this.map.snappingManager.getSnappingPoint(screenPoint)\r\n        .then(value => {\r\n          if (!value) {\r\n            // open showMessage but reference this parent scope\r\n            const error = new Error(this.nls.errorSnapingLocate);\r\n            return deferred.reject(error);\r\n          }\r\n\r\n          const pointGeographic = webMercatorUtils.webMercatorToGeographic(new Point(value));\r\n          // const pointEval = this.statusDrawingRightOfWay ? this.currentRightOfWayDraw : this.currentLandDraw;\r\n          const pointGraphic = pointsSnapping.filter(i => geometryEngine.intersects(i.geometry, pointGeographic));\r\n\r\n          if (this.statusDrawingRightOfWay) {\r\n            this.currentRightOfWayDraw = pointGraphic[0];\r\n          } else {\r\n            this.currentLandDraw = pointGraphic[0];\r\n          }\r\n\r\n          if (!this.statusDrawingRightOfWay) {\r\n            if (this.currentLandDraw.attributes.tipLot === 2) {\r\n              return this._showMessageConfirm(\"El lote seleccionado es mediterraneo\\nAhora debe seleccionar el lote paso de servidumbre\")\r\n            }\r\n          }\r\n          // if (this.statusDrawingRightOfWay) {\r\n          //   for (let point of this.map.snappingManager.layers[0].graphics) {\r\n          //     if (geometryEngine.intersects(point.geometry, pointGeographic)) {\r\n          //       this.currentRightOfWayDraw = pointGeographic;\r\n          //       break;\r\n          //     }\r\n          //   }\r\n          // } else {\r\n          //   this.currentLandDraw = pointGeographic;\r\n          // }\r\n\r\n          // // return pointGeographic\r\n          return undefined;\r\n        })\r\n        // .then(() => {\r\n        //   const pointEval = this.statusDrawingRightOfWay ? this.currentRightOfWayDraw : this.currentLandDraw;\r\n        //   const pointGraphic = pointsSnapping.filter(i => geometryEngine.intersects(i.geometry, pointEval));\r\n        //   // if (pointGraphic.length == 0) {\r\n        //   //   this._showMessage(\"No se encontro el punto lote\", type = \"error\");\r\n        //   //   return deferred.reject();\r\n        //   // }\r\n        //   if (!this.statusDrawingRightOfWay) {\r\n        //     if (pointGraphic[0].attributes.tipLot === 2) {\r\n        //       return this._showMessageConfirm(\"El lote seleccionado es mediterraneo\\nAhora debe seleccionar el lote paso de servidumbre\")\r\n        //     }\r\n        //   }\r\n\r\n        //   return undefined;\r\n        // })\r\n        .then(response => {\r\n          // check if response is type boolen or array\r\n          if (typeof response === 'boolean') {\r\n            if (!response) {\r\n              return deferred.reject();\r\n            }\r\n            this.statusDrawingRightOfWay = true;\r\n            // get predio layer and filter\r\n            this.map.getLayer(idLyrCfPredios).setVisibility(false);\r\n            this.map.getLayer(idGraphicPuntoLote).setVisibility(false);\r\n\r\n            if (this.caseCm == 3 || this.caseCm == 2) {\r\n              this.map.getLayer(idGraphicLoteCm).setVisibility(false);\r\n              this.map.getLayer(idGraphicFrenteLote).setVisibility(false);\r\n            }\r\n\r\n            if (this.caseCm == 3) {\r\n              this.map.getLayer(idGraphicLineaDivision).setVisibility(false);\r\n              this.map.getLayer(idGraphicLabelLineaDivision).setVisibility(false)\r\n            };\r\n\r\n            this.map.getLayer(idGraphicPredioByMaintenance).setVisibility(false);\r\n            this.map.getLayer(idLyrCfLotesPun).setVisibility(false);\r\n            this.containerToolDrawApCm.classList.remove('active');\r\n            this.containerHelpRightOfWayApCm.classList.toggle('active');\r\n            const stateWidget = this.getParent().getParent().domNode.getElementsByClassName(\"bar max\");\r\n            if (stateWidget.length > 0) {\r\n              stateWidget[0].click();\r\n            }\r\n            this.map.setExtent(this.extentBlock.expand(2));\r\n            this.busyIndicator.show();\r\n\r\n            const query = new Query();\r\n            query.where = this.pointLotsNotMediterrnean;\r\n            query.returnGeometry = true;\r\n            query.outFields = [\"*\"];\r\n            query.outSpatialReference = new SpatialReference(4326);\r\n            const queryTask = new QueryTask(this.map.getLayer(idLyrCfLotesPun).url);\r\n            return queryTask.execute(query);\r\n          }\r\n          return undefined;\r\n        })\r\n        .then(response => {\r\n          if (response) {\r\n            const mediterraneanPointLot = pointsSnapping.filter(i => i.attributes.tipLot === 1);\r\n            const pointLostSnapping = response.features.concat(mediterraneanPointLot);\r\n            this._removeLayerGraphic(idGraphicCandidateRightOfWay);\r\n\r\n            for (let point of pointLostSnapping) {\r\n              //check if point property geometry\r\n              // const geometry = point.geometry ? point.geometry : point;\r\n              const puntoLoteGraphic = new Graphic(point.geometry, symbolPuntoLote, point.attributes);\r\n              // if (!point.symbol) {\r\n              //   point.setSymbol(symbolPuntoLote);\r\n              // }\r\n\r\n              graphicCandidateRightOfWay.add(puntoLoteGraphic)\r\n            };\r\n\r\n            this.map.addLayer(graphicCandidateRightOfWay);\r\n\r\n\r\n            toolbarCm.deactivate();\r\n            this.map.enableSnapping({\r\n              layerInfos: [{\r\n                id: graphicCandidateRightOfWay.id,\r\n                layer: graphicCandidateRightOfWay,\r\n                name: graphicCandidateRightOfWay.name\r\n              }],\r\n              alwaysSnap: true,\r\n              snapPointSymbol: symbolSnapPointCm,\r\n            });\r\n            toolbarCm.activate(Draw[\"POINT\"]);\r\n          }\r\n        })\r\n        .then(() => {\r\n          if (this.currentLandDraw && !this.statusDrawingRightOfWay) {\r\n            return true;\r\n          } else if (this.currentRightOfWayDraw && this.statusDrawingRightOfWay) {\r\n            this.statusDrawingRightOfWay = false;\r\n            this.map.getLayer(idGraphicCandidateRightOfWay).clear();\r\n            this.map.getLayer(idLyrCfPredios).setVisibility(true);\r\n            this.map.getLayer(idGraphicPuntoLote).setVisibility(true);\r\n            if (this.caseCm == 3 || this.caseCm == 2) {\r\n              this.map.getLayer(idGraphicLoteCm).setVisibility(true);\r\n              this.map.getLayer(idGraphicFrenteLote).setVisibility(true);\r\n            };\r\n            if (this.caseCm == 3) {\r\n              this.map.getLayer(idGraphicLineaDivision).setVisibility(true);\r\n              this.map.getLayer(idGraphicLabelLineaDivision).setVisibility(true)\r\n            };\r\n            this.map.getLayer(idLyrCfLotesPun).setVisibility(true);\r\n            this.map.getLayer(idGraphicPredioByMaintenance).setVisibility(true);\r\n            this.containerHelpRightOfWayApCm.classList.toggle('active');\r\n            return true;\r\n          } else {\r\n            return false;\r\n          }\r\n        })\r\n        .then(response => {\r\n          if (!response) {\r\n            return undefined;\r\n          };\r\n          // const graphic = new Graphic(this.currentLandDraw, symbolPredio);\r\n          const graphicDrawLand = new Graphic(this.currentLandDraw.geometry, symbolPredio);\r\n\r\n          // if (this.case == 2) {\r\n          //   const graphicLayer = new GraphicsLayer({\r\n          //     id: idGraphicPredioCm,\r\n          //   });\r\n          //   graphicLayer.add(graphicDrawLand);\r\n          //   this.map.addLayer(graphicLayer);\r\n          //   this.xy = [this.currentLandDraw.x, this.currentLandDraw.y]\r\n          // }\r\n          // else if (this.case == 3) {\r\n          graphicDrawLand['attributes'] = {\r\n            cpm: this.cpm,\r\n            id: this.idPredio,\r\n            resolutionType: this.resolutionType,\r\n            resolutionDocument: this.resolutionDocument,\r\n            floor: this.floor,\r\n            urbanLotNumber: this.urbanLotNumber,\r\n            tipLot: this.currentRightOfWayDraw ? 2 : 1,\r\n            mediterraneanCoords: this.currentRightOfWayDraw\r\n          }\r\n          graphicLayerPredioByMaintenance.add(graphicDrawLand);\r\n          if (this.currentRightOfWayDraw) {\r\n            const graphicDrawRightOfWay = new Graphic(this.currentRightOfWayDraw.geometry, symbolRightOfWay);\r\n            graphicDrawRightOfWay['attributes'] = {\r\n              id: this.idPredio,\r\n            }\r\n            graphicRightOfWay.add(graphicDrawRightOfWay);\r\n          }\r\n\r\n          this.currentLandDraw = null;\r\n          this.currentRightOfWayDraw = null;\r\n          if (this.case == 3) {\r\n            this.containerToolDrawApCm.classList.add('active');\r\n          }\r\n          // }\r\n          this.map.setInfoWindowOnClick(true);\r\n          toolbarCm.deactivate();\r\n          this._removeClassActiveButton();\r\n          this.busyIndicator.hide();\r\n          const stateWidget = this.getParent().getParent().domNode.getElementsByClassName(\"bar min\");\r\n          if (stateWidget.length > 0) {\r\n            stateWidget[0].click();\r\n          }\r\n          // this._zoomExtentToLote();\r\n        })\r\n        .catch(error => {\r\n          this.busyIndicator.hide();\r\n          this._showMessage(error.message, type = \"error\")\r\n        })\r\n    }\r\n    else if (evt.geometry.type === \"polyline\") {\r\n      selfCm._divisorLine(evt.geometry);\r\n    }\r\n  },\r\n\r\n  _cancelDrawRightOfWay() {\r\n    this.map.getLayer(idGraphicCandidateRightOfWay).clear();\r\n    this.map.getLayer(idLyrCfPredios).setVisibility(true);\r\n    this.map.getLayer(idGraphicPuntoLote).setVisibility(true);\r\n    this.map.getLayer(idGraphicLoteCm).setVisibility(true);\r\n    this.map.getLayer(idGraphicFrenteLote).setVisibility(true);\r\n    this.map.getLayer(idGraphicLineaDivision).setVisibility(true);\r\n    this.map.getLayer(idGraphicLabelLineaDivision).setVisibility(true)\r\n    this.map.getLayer(idLyrCfLotesPun).setVisibility(true);\r\n    this.map.getLayer(idGraphicPredioByMaintenance).setVisibility(true);\r\n    this.currentLandDraw = null;\r\n    this.currentRightOfWayDraw = null;\r\n    if (this.case == 3) {\r\n      this.containerToolDrawApCm.classList.add('active');\r\n    }\r\n    this.containerHelpRightOfWayApCm.classList.toggle('active');\r\n    this.statusDrawingRightOfWay = false;\r\n    this.map.setInfoWindowOnClick(true);\r\n    this.map.disableSnapping();\r\n    toolbarCm.deactivate();\r\n    this._removeClassActiveButton();\r\n    const stateWidget = this.getParent().getParent().domNode.getElementsByClassName(\"bar min\");\r\n    if (stateWidget.length > 0) {\r\n      stateWidget[0].click();\r\n    }\r\n    this.busyIndicator.hide();\r\n  },\r\n\r\n  _divisorLine(geometry) {\r\n    selfCm.idxLines = selfCm.idxLines + 1\r\n    const nameIdLine = `Polyline_${selfCm.idxLines}`\r\n\r\n    const polylineGeomUtm = webMercatorUtils.webMercatorToGeographic(geometry)\r\n    let vertices = polylineGeomUtm.paths[0];\r\n    const lastTwoCoords = vertices.slice(-2);\r\n    const line = turf.lineString(lastTwoCoords);\r\n    const bearing = turf.bearing(turf.point(line.geometry.coordinates[0]), turf.point(line.geometry.coordinates[1]));\r\n    const options = { units: 'meters' };\r\n    const addDistance = 0.1\r\n    const point = turf.point(line.geometry.coordinates[1]);\r\n    const destintation = turf.destination(point, addDistance, bearing, options);\r\n\r\n    // reverse coordinates of line\r\n    let vertices2 = [...vertices];\r\n    vertices2.reverse();\r\n    const lastTwoCoords2 = vertices2.slice(-2);\r\n    const line2 = turf.lineString(lastTwoCoords2);\r\n    const bearing2 = turf.bearing(turf.point(line2.geometry.coordinates[0]), turf.point(line2.geometry.coordinates[1]));\r\n    const point2 = turf.point(line2.geometry.coordinates[1]);\r\n    const destintation2 = turf.destination(point2, addDistance, bearing2, options);\r\n\r\n    vertices[vertices.length - 1] = destintation.geometry.coordinates;\r\n    // add vertices2 first element to vertices\r\n    vertices.unshift(destintation2.geometry.coordinates);\r\n\r\n    const polyline = new Polyline({\r\n      paths: [vertices],\r\n      spatialReference: polylineGeomUtm.spatialReference\r\n    });\r\n    let response = webMercatorUtils.geographicToWebMercator(polyline);\r\n\r\n    const graphic = new Graphic(response, symbolDivisionLote, { id: nameIdLine });\r\n    graphicLayerLineaDivision.add(graphic);\r\n    selfCm._populateTableDrawLine(nameIdLine)\r\n    selfCm._addNameToLine(nameIdLine, response)\r\n    selfCm.map.addLayer(graphicLayerLineaDivision);\r\n    selfCm.map.setInfoWindowOnClick(true);\r\n    toolbarCm.deactivate();\r\n    selfCm._removeClassActiveButton()\r\n  },\r\n\r\n  _removeClassActiveButton() {\r\n    if (dojo.query(`#${selfCm.idButtonDrawActive}`).length > 0) {\r\n      dojo.query(`#${selfCm.idButtonDrawActive}`)[0].classList.remove('activeButton')\r\n    }\r\n  },\r\n\r\n  _removeLayerGraphic(layerId) {\r\n    if (selfCm.map.graphicsLayerIds.includes(layerId)) {\r\n      const layer = selfCm.map.getLayer(layerId);\r\n      layer.clear();\r\n      selfCm.map.removeLayer(selfCm.map.getLayer(layerId));\r\n    }\r\n  },\r\n\r\n  // _activateTool(evt) {\r\n  //   selfCm._removeClassActiveButton()\r\n  //   selfCm.idButtonDrawActive = evt.currentTarget.id\r\n  //   dojo.query(`#${selfCm.idButtonDrawActive}`)[0].classList.add('activeButton')\r\n  //   selfCm._activateSnappingByReasignar();\r\n  //   selfCm.map.setInfoWindowOnClick(false);\r\n  //   selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n  //   toolbarCm.activate(Draw[\"POINT\"]);\r\n  // },\r\n\r\n  // _activateToolAcumulacion(evt) {\r\n  //   selfCm._removeClassActiveButton();\r\n  //   ToolDraw.deactivateToolbarAnotherToolbar();\r\n  //   selfCm.idButtonDrawActive = evt.currentTarget.id;\r\n  //   dojo.query(`#${selfCm.idButtonDrawActive}`)[0].classList.add('activeButton');\r\n\r\n  //   selfCm.cpm = evt.currentTarget.dataset.cpm === 'null' ? null : evt.currentTarget.dataset.cpm;\r\n  //   selfCm.idPredio = evt.currentTarget.parentElement.parentElement.id;\r\n  //   selfCm.resolutionType = evt.currentTarget.dataset.resolutiontype === 'null' ? null : evt.currentTarget.dataset.resolutiontype;\r\n  //   selfCm.resolutionDocument = evt.currentTarget.dataset.resolutiondocument === 'null' ? null : evt.currentTarget.dataset.resolutiondocument;\r\n  //   selfCm.floor = evt.currentTarget.dataset.floor === 'null' ? null : evt.currentTarget.dataset.floor;\r\n  //   selfCm.urbanLotNumber = evt.currentTarget.dataset.urbanlotnumber === 'null' ? null : evt.currentTarget.dataset.urbanlotnumber;\r\n\r\n\r\n  //   // graphics initialize\r\n  //   const graphic = graphicLayerPredioByMaintenance.graphics.filter(item => item.attributes.id === selfCm.idPredio);\r\n  //   graphicLayerPredioByMaintenance.remove(graphic[0]);\r\n\r\n  //   const graphicROW = graphicRightOfWay.graphics.filter(item => item.attributes.id === selfCm.idPredio);\r\n  //   graphicRightOfWay.remove(graphicROW[0]);\r\n\r\n  //   selfCm.map.setInfoWindowOnClick(false);\r\n  //   const graphicLayerPuntoLote = selfCm.map.getLayer(idGraphicPuntoLote);\r\n  //   selfCm._activateSnappingPredios(graphicLayerPuntoLote);\r\n  //   // selfCm._activateSnappingByAcumulacion();\r\n  //   // selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n  //   toolbarCm.activate(Draw[\"POINT\"]);\r\n  // },\r\n\r\n  _activateToolLinesDivision(evt) {\r\n    selfCm._removeClassActiveButton();\r\n    ToolDraw.deactivateToolbarAnotherToolbar();\r\n    selfCm.idButtonDrawActive = evt.currentTarget.id;\r\n    dojo.query(`#${selfCm.idButtonDrawActive}`)[0].classList.add('activeButton');\r\n    selfCm.map.setInfoWindowOnClick(false);\r\n    selfCm._activateSnappingByDivision();\r\n    selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n    selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n    selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n    selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n    selfCm.bodyTbDatosLoteDvApCm.innerHTML = '';\r\n    // selfCm.bodyTbPrediosDvApCm.innerHTML = ''\r\n    graphicLayerPredioByMaintenance.clear();\r\n    toolbarCm.activate(Draw[\"POLYLINE\"]);\r\n  },\r\n\r\n  // _activateSnappingByReasignar() {\r\n  //   const cflayer = selfCm.layersMap.getLayerInfoById(idLyrCfLotesPun)\r\n  //   const propertyLayer = new FeatureLayer(cflayer.getUrl(), {\r\n  //     mode: FeatureLayer.MODE_ONDEMAND,\r\n  //     outFields: [\"*\"]\r\n  //   });\r\n  //   const snapManager = selfCm.map.enableSnapping({\r\n  //     // alwaysSnap: true,\r\n  //     // snapKey: keys.CTRL,\r\n  //     snapPointSymbol: symbolSnapPointCm,\r\n  //     tolerance: 1,\r\n  //   });\r\n  //   // get layerinfo by id of layer to snap\r\n  //   const layerInfos = [{\r\n  //     layer: propertyLayer\r\n  //   }];\r\n\r\n  //   snapManager.setLayerInfos(layerInfos);\r\n  // },\r\n\r\n  // _activateSnappingByAcumulacion() {\r\n  //   const graphicLayerPuntoLote = selfCm.map.getLayer(idGraphicPuntoLote)\r\n  //   const graphicsLayerInfo = new esri.layers.LayerInfo({\r\n  //     id: graphicLayerPuntoLote.id, // El id del `GraphicsLayer`\r\n  //     name: graphicLayerPuntoLote.name, // El nombre del `GraphicsLayer`\r\n  //     layer: graphicLayerPuntoLote // El `GraphicsLayer` a utilizar\r\n  //   });\r\n\r\n  //   // Agregar el `LayerInfo` al mapa y habilitar el snapping\r\n  //   selfCm.map.enableSnapping({\r\n  //     layerInfos: [graphicsLayerInfo], // Agregar el `LayerInfo` al mapa\r\n  //     // alwaysSnap: true,\r\n  //     snapPointSymbol: symbolSnapPointCm,\r\n  //     tolerance: 5,\r\n  //   });\r\n  // },\r\n\r\n  _activateSnappingByDivision() {\r\n    const graphicsLayerInfo = new esri.layers.LayerInfo({\r\n      id: graphicLayerLineaDivision.id, // El id del `GraphicsLayer`\r\n      name: graphicLayerLineaDivision.name, // El nombre del `GraphicsLayer`\r\n      layer: graphicLayerLineaDivision // El `GraphicsLayer` a utilizar\r\n    });\r\n\r\n    // const cflayer = selfCm.layersMap.getLayerInfoById(idLyrCfLotes)\r\n    // const propertyLayer = new FeatureLayer(cflayer.getUrl(), {\r\n    //   mode: FeatureLayer.MODE_ONDEMAND,\r\n    //   outFields: [\"*\"],\r\n    //   where: selfCm.lotesQuery\r\n    // });\r\n    const propertyLayer = selfCm.map.getLayer(idLyrCfLotes)\r\n    // change MODE_ONDEMAND\r\n    propertyLayer.mode = 2;\r\n    // propertyLayer.setAutoGeneralize(false);\r\n\r\n    const layerInfos = [\r\n      {\r\n        layer: propertyLayer\r\n      },\r\n      graphicsLayerInfo\r\n    ];\r\n\r\n    // Agregar el `LayerInfo` al mapa y habilitar el snapping\r\n    selfCm.map.enableSnapping({\r\n      layerInfos: layerInfos, // Agregar el `LayerInfo` al mapa\r\n      alwaysSnap: true,\r\n      snapPointSymbol: symbolSnapPointCm,\r\n      tolerance: 0,\r\n    });\r\n  },\r\n\r\n  // crear una funcion que permita dos poligonos aceptando dos poligonos json como parametros\r\n  // la funcion debe retornar un poligono json\r\n  _unionFeatures(arr) {\r\n    const union = geometryEngine.union(arr);\r\n    return union;\r\n  },\r\n\r\n  _unionFeaturesAcumulation(topology = false) {\r\n    // Creamos grafico de lote fusionado\r\n    // const graphicLayerLotPreview = new GraphicsLayer({\r\n    //   id: idGraphicLoteCm\r\n    // });\r\n\r\n    const arr = selfCm.currentLotsRows.map((i) => i.geometry);\r\n\r\n    const response = selfCm._unionFeatures(arr);\r\n    if (topology) {\r\n      if (response.rings.length > 1) {\r\n        const deletedRings = []\r\n        for (let a of response.rings) {\r\n          const polygonA = new Polygon({\r\n            rings: [a],\r\n            spatialReference: response.spatialReference\r\n          });\r\n          for (let b of response.rings) {\r\n            if (a !== b) {\r\n              const polygonB = new Polygon({\r\n                rings: [b],\r\n                spatialReference: response.spatialReference\r\n              });\r\n              const contain = geometryEngine.within(polygonA, polygonB);\r\n              if (contain) {\r\n                deletedRings.push(b);\r\n              }\r\n            }\r\n          }\r\n        };\r\n        const polygonParents = [];\r\n        for (let ring of response.rings) {\r\n          if (deletedRings.includes(ring)) {\r\n            continue;\r\n          }\r\n          const polygon = new Polygon({\r\n            rings: [ring],\r\n            spatialReference: response.spatialReference\r\n          });\r\n          polygonParents.push(polygon);\r\n        };\r\n\r\n        const check = geometryEngine.union(polygonParents);\r\n\r\n        if (check.rings.length > 1) {\r\n          throw new Error(\"La acumulación no es posible (los predios no son contiguos)\")\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n    const graphic = new Graphic(response, symbolFusionLote, { tipLot: 2 });\r\n\r\n    graphicLayerLotPreview.add(graphic);\r\n    // selfCm.map.addLayer(graphicLayerLotPreview);\r\n    // selfCm.map.setExtent(graphic._extent.expand(1.5), true);\r\n    // return [response];\r\n  },\r\n\r\n  _applyIndependenceRefactor() {\r\n    const deferred = new Deferred();\r\n    // selfCm.busyIndicator.show();\r\n    selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n    selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n    selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n    selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n    selfCm._removeLayerGraphic(idGraphicLoteDeleteCm);\r\n    selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n\r\n    if (!selfCm.lotesQuery) {\r\n      selfCm._showMessage(selfCm.nls.errorGetLand, 'warning');\r\n      selfCm.busyIndicator.hide();\r\n      return\r\n    }\r\n    selfCm._getOriginalLots()\r\n      .then(() => {\r\n        // const arr = selfCm.currentLotsRows.map((i) => i.geometry);\r\n\r\n        // const response = selfCm._unionFeatures(arr);\r\n        // if (topology) {\r\n        //   if (response.rings.length > 1) {\r\n        //     throw new Error(\"La acumulación no es posible (los predios no son contiguos)\")\r\n        //   }\r\n        // }\r\n        // const graphic = new Graphic(selfCm.currentLotsRows[0], symbolFusionLote, { tipLot: 2 });\r\n        graphicLayerLotPreview.add(selfCm.currentLotsRows[0]);\r\n        selfCm._addGraphicsPointLotsIndependence();\r\n        selfCm._populateTablePredio(selfCm.bodyTbPrediosIpApCm, selfCm._activateToolPrediosByMaintenance)\r\n        selfCm._addGraphicsAfterPreVisualization();\r\n        selfCm.map.setExtent(selfCm.currentLotsRows[0].geometry.getExtent().expand(1.5), true);\r\n        selfCm.independenceApCm.classList.toggle('active')\r\n        selfCm.busyIndicator.hide();\r\n        deferred.resolve();\r\n        // return selfCm._addGraphicsPointLotsAndArancel();\r\n      })\r\n      // .then((mediterraneanLotsGeometry) => {\r\n      //   return selfCm._addGraphicsPointMediterraneanLot(mediterraneanLotsGeometry);\r\n      // })\r\n      // .then(() => {\r\n      //   selfCm._populateTablePredio(selfCm.bodyTbPrediosIpApCm, selfCm._activateToolPrediosByMaintenance)\r\n      //   selfCm._addGraphicsAfterPreVisualization();\r\n      //   selfCm.map.setExtent(selfCm.currentLotsRows[0].geometry.getExtent().expand(1.5), true);\r\n      //   selfCm.independenceApCm.classList.toggle('active')\r\n      //   selfCm.busyIndicator.hide();\r\n      //   deferred.resolve();\r\n      // })\r\n      .catch(error => {\r\n        // console.log(error)\r\n        // selfCm.busyIndicator.hide();\r\n        // selfCm._showMessage(error.message, type = \"error\");\r\n        deferred.reject(error);\r\n      })\r\n    return deferred.promise;\r\n  },\r\n\r\n  _ApplyAcumulationLotsRefactor() {\r\n    selfCm.busyIndicator.show();\r\n    selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n    selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n    selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n    selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n    selfCm._removeLayerGraphic(idGraphicLoteDeleteCm);\r\n    selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n\r\n    if (!selfCm.lotesQuery) {\r\n      selfCm._showMessage(selfCm.nls.errorGetLand, 'warning');\r\n      selfCm.busyIndicator.hide();\r\n      return\r\n    }\r\n    return selfCm._getOriginalLots()\r\n      .then(() => {\r\n        // const geomLoteAcumulation = selfCm._unionFeaturesAcumulation(topology = true);\r\n        selfCm._unionFeaturesAcumulation(topology = true);\r\n        return selfCm._addGraphicsPointLotsAndArancel();\r\n      })\r\n      .then((mediterraneanLotsGeometry) => {\r\n        return selfCm._addGraphicsPointMediterraneanLot(mediterraneanLotsGeometry);\r\n      })\r\n      .then(() => {\r\n        return selfCm._getMaxCodLot();\r\n      })\r\n      .then(maxCodLot => {\r\n        selfCm._ordenarPoligonosNorteSur(parseInt(maxCodLot), selfCm.bodyTbDatosLoteFsApCm);\r\n      })\r\n      .then(() => {\r\n        selfCm._populateTablePredio(selfCm.bodyTbPrediosFsApCm, selfCm._activateToolPrediosByMaintenance)\r\n        selfCm._addGraphicsAfterPreVisualization();\r\n        selfCm.map.setExtent(selfCm.currentLotsRows[0].geometry.getExtent().expand(1.5), true);\r\n        selfCm.busyIndicator.hide();\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(error.message, type = \"error\")\r\n      })\r\n    // return selfCm._getOriginalLots()\r\n    //   .then(() => {\r\n    //     // const geomLoteAcumulation = selfCm._unionFeaturesAcumulation(topology = true);\r\n    //     selfCm._unionFeaturesAcumulation(topology = true);\r\n    //     return selfCm._getMaxCodLot();\r\n    //   })\r\n    //   .then(proprsLot => {\r\n    //     selfCm._ordenarPoligonosNorteSur(\r\n    //       proprsLot.polygons,\r\n    //       parseInt(proprsLot.maxCodLote),\r\n    //       selfCm.bodyTbDatosLoteFsApCm\r\n    //     );\r\n    //     selfCm.map.setExtent(proprsLot.polygons[0].getExtent().expand(1.5), true);\r\n    //     return selfCm._addGraphicsPointLotsAndArancel();\r\n    //   })\r\n    //   .then(() => {\r\n    //     selfCm._populateTablePredio(selfCm.bodyTbPrediosFsApCm, selfCm._activateToolAcumulacion)\r\n    //     selfCm.busyIndicator.hide();\r\n    //   })\r\n    //   .catch(error => {\r\n    //     console.log(error)\r\n    //     selfCm.busyIndicator.hide();\r\n    //     selfCm._showMessage(error.message, type = \"error\")\r\n    //   })\r\n  },\r\n\r\n  _getMidpoint(polyline) {\r\n    const length = geometryEngine.geodesicLength(polyline, \"meters\");\r\n    const midpoint = geometryEngine.geodesicDensify(polyline, length / 2, \"meters\").getPoint(0, 0);\r\n    return midpoint;\r\n  },\r\n\r\n  _findMidpoint(polyline) {\r\n    const lengthPolylineChunk = geometryEngine.geodesicLength(polyline, \"meters\")\r\n    const line = turf.lineString(polyline.paths[0]);\r\n    const options = { units: 'meters' };\r\n    const along = turf.along(line, lengthPolylineChunk / 2, options);\r\n    return along\r\n  },\r\n\r\n  // funcion que recibe una polilinea con muchas partes y retorna la parte mas larga como una polilinea\r\n  _getLongestPolyline(polyline) {\r\n    const paths = polyline.paths\r\n    let longestPath = 0\r\n    let response = null;\r\n    for (let path of paths) {\r\n      let polylineChunk = new Polyline({\r\n        paths: [path],\r\n        spatialReference: { wkid: 4326 }\r\n      });\r\n      let lengthPolylineChunk = geometryEngine.geodesicLength(polylineChunk, \"meters\")\r\n      if (lengthPolylineChunk > longestPath) {\r\n        longestPath = lengthPolylineChunk\r\n        response = polylineChunk\r\n      }\r\n    }\r\n    return response\r\n  },\r\n\r\n  // --------------------------------------------------------------\r\n  // SUBDIVISION DE LOTES\r\n  // function that allows dividing a polygon from cutting lines, the parameters will be a polygon and several lines in json format\r\n  // the function must return a polygon json\r\n  // --------------------------------------------------------------\r\n  _dividePolygon(poly, lines) {\r\n    const divide = geometryEngine.cut(poly, lines);\r\n    const response = [];\r\n    for (let item of divide) {\r\n      item.rings.map((i) => {\r\n        const simplePolygon = new Polygon({\r\n          rings: [i],\r\n          spatialReference: item.spatialReference\r\n        });\r\n\r\n        // const simplePolygonG = webMercatorUtils.webMercatorToGeographic(simplePolygon);\r\n        response.push(simplePolygon);\r\n      });\r\n    };\r\n    return response;\r\n  },\r\n\r\n  _populateTableDrawLine(idLine) {\r\n    let row = `<td class=\"center-aligned\">${selfCm.idxLines}</td>\r\n              <td contenteditable=\"true\" id=\"${idLine}_name\">${idLine}</td>\r\n              <td class=\"center-aligned\">\r\n                <span id=\"${idLine}_ext\"><i class=\"fas fa-search\"></i></span>\r\n              </td>\r\n              <td class=\"center-aligned\">\r\n                <span id=\"${idLine}_del\" style=\"color: #FF5722;\"><i class=\"far fa-trash-alt\"></i></span>\r\n              </td>`\r\n    let tr = dojo.create('tr');\r\n    tr.id = idLine;\r\n    tr.innerHTML = row;\r\n    tr.style.cursor = \"pointer\";\r\n    selfCm.bodyTbLinesDvApCm.appendChild(tr)\r\n    dojo.query(`#${idLine}_del`).on('click', selfCm._deleteRowLine);\r\n    dojo.query(`#${idLine}_ext`).on('click', selfCm._zoonToLineDivision);\r\n    dojo.query(`#${idLine}_name`).on('input', selfCm._editaNameLineDivision);\r\n  },\r\n\r\n  _deleteRowLine(evt) {\r\n    let id = evt.currentTarget.id.replace('_del', '');\r\n    let elem = dojo.query(`#${id}`);\r\n    let graphic = graphicLayerLineaDivision.graphics.filter(item => item.attributes.id == id);\r\n    graphicLayerLineaDivision.remove(graphic[0])\r\n    let graphicLabel = graphicLayerLabelLineaDivision.graphics.filter(item => item.attributes.id == id);\r\n    graphicLayerLabelLineaDivision.remove(graphicLabel[0])\r\n    selfCm._removeLayerGraphic(idGraphicLoteCm)\r\n    selfCm._removeLayerGraphic(idGraphicPuntoLote)\r\n    selfCm._removeLayerGraphic(idGraphicFrenteLote)\r\n    selfCm._removeLayerGraphic(idGraphicLabelCodLote)\r\n    graphicLayerPredioByMaintenance.clear()\r\n    elem[0].parentNode.removeChild(elem[0]);\r\n  },\r\n\r\n  _addNameToLine(name, polylineGeom) {\r\n    let polylineGeomUtm = webMercatorUtils.webMercatorToGeographic(polylineGeom)\r\n    let midPoint = selfCm._findMidpoint(polylineGeomUtm)\r\n\r\n    let pointLabel = new Point({\r\n      x: midPoint.geometry.coordinates[0],\r\n      y: midPoint.geometry.coordinates[1],\r\n      spatialReference: { wkid: 4326 }\r\n    })\r\n\r\n    let font = new Font(\"15px\", Font.STYLE_NORMAL, Font.VARIANT_NORMAL, Font.WEIGHT_BOLD, \"Arial\");\r\n    let txtSym = new TextSymbol(name, font, new Color([250, 0, 0, 0.9]));\r\n    txtSym.setOffset(15, 15).setAlign(TextSymbol.ALIGN_END)\r\n    txtSym.setHaloColor(new Color([255, 255, 255]));\r\n    txtSym.setHaloSize(1.5);\r\n    let graphicLabel = new Graphic(pointLabel, txtSym, { id: name });\r\n\r\n    // graphicLayer.add(graphic);\r\n    graphicLayerLabelLineaDivision.add(graphicLabel);\r\n  },\r\n\r\n  _zoonToLineDivision(evt) {\r\n    let id = evt.currentTarget.id.replace('_ext', '');\r\n    let graphic = graphicLayerLabelLineaDivision.graphics.filter(item => item.attributes.id == id);\r\n    selfCm.map.setExtent(graphic[0]._extent, true);\r\n  },\r\n\r\n  _editaNameLineDivision(evt) {\r\n    let id = evt.currentTarget.id.replace('_name', '');\r\n    let graphic = graphicLayerLabelLineaDivision.graphics.filter(item => item.attributes.id == id)\r\n    graphic[0].symbol.text = evt.currentTarget.innerText;\r\n    graphicLayerLabelLineaDivision.refresh()\r\n  },\r\n\r\n  _populateTablePredio(bodyTable, drawFunction) {\r\n    bodyTable.innerHTML = ''\r\n    selfCm.responseRequests.forEach((predio, idx) => {\r\n      const tr = dojo.create('tr');\r\n      tr.id = `predio_${predio['id']}`;\r\n      const row = `<td class=\"center-aligned\">${idx + 1}</td>\r\n                  <td>${predio['address']}</td>\r\n                  <td class=\"center-aligned\">\r\n                   <span \r\n                    id=\"${tr.id}_draw\"\r\n                    data-cpm=${predio['cpm']} \r\n                    data-resolutionType=${predio['resolutionType']} \r\n                    data-resolutionDocument=${predio['resolutionDocument']}\r\n                    data-floor=${predio['floor']}\r\n                    data-urbanLotNumber=${predio['urbanLotNumber']}\r\n                   >\r\n                      <i class=\"fas fa-map-marker-alt\"></i>\r\n                   </span>\r\n                  </td>`\r\n      tr.innerHTML = row;\r\n      tr.style.cursor = \"pointer\";\r\n      bodyTable.appendChild(tr)\r\n      dojo.query(`#${tr.id}_draw`).on('click', drawFunction)\r\n    });\r\n  },\r\n\r\n  _activateSnappingPredios(graphiclayer) {\r\n    // selfCm.map.snappingManager.setLayerInfos([{ layer: graphiclayer }]);\r\n    // selfCm.map.snappingManager.alwaysSnap = true;\r\n    // selfCm.map.snapPointSymbol = symbolSnapPointCm;\r\n    // selfCm.map.enableSnapping();\r\n    const graphicsLayerInfo = new esri.layers.LayerInfo({\r\n      id: graphiclayer.id, // El id del `GraphicsLayer`\r\n      name: graphiclayer.name, // El nombre del `GraphicsLayer`\r\n      layer: graphiclayer // El `GraphicsLayer` a utilizar\r\n    });\r\n\r\n    // Agregar el `LayerInfo` al mapa y habilitar el snapping\r\n    selfCm.map.enableSnapping({\r\n      layerInfos: [graphicsLayerInfo], // Agregar el `LayerInfo` al mapa\r\n      alwaysSnap: true,\r\n      snapPointSymbol: symbolSnapPointCm,\r\n      // tolerance: 5,\r\n    });\r\n  },\r\n\r\n  _activateToolPrediosByMaintenance(evt) {\r\n    // control initialize\r\n    selfCm._removeClassActiveButton()\r\n    ToolDraw.deactivateToolbarAnotherToolbar();\r\n    selfCm._zoomExtentToLote();\r\n    selfCm.idButtonDrawActive = evt.currentTarget.id\r\n    dojo.query(`#${selfCm.idButtonDrawActive}`)[0].classList.add('activeButton')\r\n\r\n    // recovery data\r\n    selfCm.cpm = evt.currentTarget.dataset.cpm === 'null' ? null : evt.currentTarget.dataset.cpm;\r\n    selfCm.idPredio = evt.currentTarget.parentElement.parentElement.id;\r\n    selfCm.resolutionType = evt.currentTarget.dataset.resolutiontype === 'null' ? null : evt.currentTarget.dataset.resolutiontype;\r\n    selfCm.resolutionDocument = evt.currentTarget.dataset.resolutiondocument === 'null' ? null : evt.currentTarget.dataset.resolutiondocument;\r\n    selfCm.floor = evt.currentTarget.dataset.floor === 'null' ? null : evt.currentTarget.dataset.floor;\r\n    selfCm.urbanLotNumber = evt.currentTarget.dataset.urbanlotnumber === 'null' ? null : evt.currentTarget.dataset.urbanlotnumber;\r\n\r\n    // graphics initialize\r\n    const graphic = graphicLayerPredioByMaintenance.graphics.filter(item => item.attributes.id === selfCm.idPredio);\r\n    graphicLayerPredioByMaintenance.remove(graphic[0]);\r\n\r\n    const graphicROW = graphicRightOfWay.graphics.filter(item => item.attributes.id === selfCm.idPredio);\r\n    graphicRightOfWay.remove(graphicROW[0]);\r\n\r\n    selfCm.map.setInfoWindowOnClick(false);\r\n    const graphicLayerPuntoLote = selfCm.map.getLayer(idGraphicPuntoLote);\r\n    selfCm._activateSnappingPredios(graphicLayerPuntoLote);\r\n    toolbarCm.activate(Draw[\"POINT\"]);\r\n  },\r\n\r\n  _changeValueCodLote(evt) {\r\n    const selectedValue = evt.target.value;\r\n    const currentSelectId = evt.target.id;\r\n    const id = evt.target.id.split('_')[1]\r\n    // const idx = evt.target.selectedIndex\r\n    // const cod_lote = evt.target.value\r\n    const lyr = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n    const graphicSelected = lyr.graphics.filter(item => item.attributes.id == `label_${id}`)\r\n    graphicSelected[0].symbol.text = selectedValue\r\n    const selects = dojo.query('.codLoteSelectDvCls');\r\n    selects.forEach(select => {\r\n      if (select.id !== currentSelectId && select.value === selectedValue) {\r\n        select.value = '';\r\n        const graphicNotSelected = lyr.graphics.filter(item => item.attributes.id == `label_${select.id.split('_')[1]}`)\r\n        graphicNotSelected[0].symbol.text = ''\r\n      }\r\n      lyr.refresh()\r\n    });\r\n  },\r\n\r\n  _changeLotUrb(evt) {\r\n    const selectedValue = evt.target.value;\r\n    const currentSelectId = evt.target.id;\r\n    const selects = dojo.query('.loteUrbSelectDvCls');\r\n    const lyr = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n    // const graphicSelected = lyr.graphics.filter(item => item.attributes.id == `label_${id}`)\r\n    selects.forEach(select => {\r\n      if (select.id !== currentSelectId && select.value === selectedValue) {\r\n        select.value = '';\r\n        const graphicNotSelected = lyr.graphics.filter(item => item.attributes.id == `label_${select.id.split('_')[1]}`)\r\n        graphicNotSelected[0].attributes.lot_urb = ''\r\n      }\r\n    });\r\n  },\r\n\r\n  _centerAtLabelCodLoteDivision(evt) {\r\n    let id = evt.currentTarget.id\r\n    let lyr = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n    let graphicSelected = lyr.graphics.filter(item => item.attributes.id == id)\r\n    selfCm.map.centerAndZoom(graphicSelected[0].geometry)\r\n  },\r\n\r\n  _editLoteUrbanoDivision(evt) {\r\n    const id = evt.target.id.replace('loteUrbanoDv_', '');\r\n    const lyr = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n    const graphic = lyr.graphics.filter(item => item.attributes.id == `label_${id}`)\r\n    graphic[0].attributes.lot_urb = evt.target.selectedOptions[0].value\r\n    lyr.refresh()\r\n  },\r\n\r\n  _buildDataLoteTable(tableBody, predios) {\r\n    tableBody.innerHTML = ''\r\n    predios.forEach((predio, index) => {\r\n      const row = document.createElement('tr');\r\n\r\n      // celda de índice\r\n      const indexCell = document.createElement('td');\r\n      indexCell.className = \"center-aligned\"\r\n      indexCell.textContent = predio.num;\r\n      row.appendChild(indexCell);\r\n\r\n      // celda de codigo de predio\r\n      const codigoCell = document.createElement('td');\r\n      const select = document.createElement('select');\r\n      select.className = \"codLoteSelectDvCls\"\r\n      select.id = `codLoteSelectDv_${predio.num}`\r\n\r\n      const optionDisabled = document.createElement('option');\r\n      optionDisabled.value = '';\r\n      optionDisabled.textContent = '---';\r\n      optionDisabled.disabled = true;\r\n      select.appendChild(optionDisabled);\r\n      predios.forEach(p => {\r\n        const option = document.createElement('option');\r\n        option.value = p.cod_lote;\r\n        option.textContent = p.cod_lote;\r\n        if (p.cod_lote === predio.cod_lote) {\r\n          option.selected = true;\r\n        }\r\n        select.appendChild(option);\r\n      });\r\n\r\n      codigoCell.appendChild(select);\r\n      row.appendChild(codigoCell);\r\n\r\n\r\n      const loteUrbCell = document.createElement('td');\r\n      const loteUrbSelect = document.createElement('select');\r\n      loteUrbSelect.className = \"loteUrbSelectDvCls\"\r\n      loteUrbSelect.id = `loteUrbanoDv_${predio.num}`\r\n\r\n      const optionDisabledLotUrb = optionDisabled.cloneNode(true)\r\n      loteUrbSelect.appendChild(optionDisabledLotUrb);\r\n\r\n      selfCm.responseRequests.forEach((request, idx) => {\r\n        const option = document.createElement('option');\r\n        option.value = request.urbanLotNumber;\r\n        option.textContent = request.urbanLotNumber;\r\n        loteUrbSelect.appendChild(option);\r\n        if (predio.num == idx + 1) {\r\n          option.selected = true;\r\n        }\r\n        // selected option by index predio.num\r\n      })\r\n      loteUrbCell.appendChild(loteUrbSelect);\r\n      loteUrbCell.className = \"loteUrbanoDvCls\"\r\n      row.appendChild(loteUrbCell);\r\n\r\n      const locationMarker = document.createElement('td');\r\n      locationMarker.id = predio.id\r\n      locationMarker.className = \"center-aligned\"\r\n      locationMarker.innerHTML = `<span class=\"locationLabelLoteDvCls\" id=\"${predio.id}\"><i class=\"fas fa-search\"></i></span>`\r\n      row.appendChild(locationMarker);\r\n      tableBody.appendChild(row);\r\n      // dojo.query(`#${predio.id}`).on('click', selfCm._centerAtLabelCodLoteDivision)\r\n\r\n    });\r\n    dojo.query('.codLoteSelectDvCls').on('change', selfCm._changeValueCodLote)\r\n    dojo.query('.loteUrbSelectDvCls').on('change', selfCm._changeLotUrb)\r\n    dojo.query('.locationLabelLoteDvCls').on('click', selfCm._centerAtLabelCodLoteDivision)\r\n    dojo.query('.loteUrbanoDvCls').on('change', selfCm._editLoteUrbanoDivision);\r\n\r\n  },\r\n\r\n  _ordenarPoligonosNorteSur(idx, bodyTable) {\r\n    const deferred = new Deferred();\r\n\r\n    const lotsDividedResults = graphicLayerLotPreview.graphics.map(i => i.geometry);\r\n    // Obtener la coordenada más al norte de cada polígono\r\n    const coordenadasNorte = lotsDividedResults.map(lotDividedResult => {\r\n      const extent = lotDividedResult.getExtent();\r\n      return extent.ymax;\r\n    });\r\n\r\n    // Ordenar los polígonos en base a la coordenada más al norte\r\n    const lotsDividedResultsSorted = lotsDividedResults.slice().sort((a, b) => {\r\n      const coordenadaNorteA = coordenadasNorte[lotsDividedResults.indexOf(a)];\r\n      const coordenadaNorteB = coordenadasNorte[lotsDividedResults.indexOf(b)];\r\n      return coordenadaNorteB - coordenadaNorteA; // Ordenar de norte a sur\r\n    });\r\n\r\n    // console.log(poligonos)\r\n\r\n    const graphicLayerLabelCodLoteDivision = new GraphicsLayer({\r\n      id: idGraphicLabelCodLote,\r\n    });\r\n\r\n    const font = new Font(\"20px\", Font.STYLE_NORMAL, Font.VARIANT_NORMAL, Font.WEIGHT_BOLD, \"Arial\");\r\n\r\n    const dataLoteTable = []\r\n\r\n    selfCm.geometryService.labelPoints(lotsDividedResultsSorted)\r\n      .then((labelPoints) => {\r\n        labelPoints.forEach((point, index) => {\r\n          const cod_lote = selfCm._zfill(idx + 1, 3)\r\n          const txtSym = new TextSymbol(cod_lote, font, new Color([250, 0, 0, 1]));\r\n          txtSym.setColor(new esri.Color([0, 0, 0, 1])); // color blanco\r\n          txtSym.setSize(\"12pt\");\r\n          txtSym.setHaloColor(new esri.Color([255, 255, 255, 1]));\r\n          txtSym.setHaloSize(2);\r\n          txtSym.setOffset(15, 15);\r\n          const idGraphic = `label_${index + 1}`\r\n          const graphicLabel = new Graphic(\r\n            point,\r\n            txtSym,\r\n            {\r\n              id: idGraphic,\r\n              lot_urb: selfCm.responseRequests[index].urbanLotNumber,\r\n              clase: 'labelCodLoteDivision',\r\n            });\r\n          graphicLayerLabelCodLoteDivision.add(graphicLabel);\r\n          dataLoteTable.push({ num: index + 1, id: idGraphic, cod_lote: cod_lote })\r\n          idx = idx + 1\r\n        });\r\n        return dataLoteTable\r\n      })\r\n      .then((dataLoteTable) => {\r\n        selfCm._buildDataLoteTable(bodyTable, dataLoteTable)\r\n        selfCm.map.addLayer(graphicLayerLabelCodLoteDivision)\r\n        return deferred.resolve(dataLoteTable);\r\n      })\r\n      .catch((error) => {\r\n        return deferred.reject(error);\r\n      });\r\n\r\n    return deferred.promise;\r\n  },\r\n\r\n  // _enableEditingLabelsLotesDivision(evt) {\r\n  //   if (evt && evt.graphic && evt.graphic.attributes && evt.graphic.attributes.clase == 'labelCodLoteDivision') {\r\n  //     selfCm.map.setInfoWindowOnClick(false)\r\n  //     selfCm.editToolbar.activate(Edit.MOVE, evt.graphic);\r\n  //   } else {\r\n  //     selfCm.editToolbar.deactivate()\r\n  //   }\r\n  // },\r\n\r\n  _zfill(num, len) {\r\n    return (Array(len).fill('0').join('') + num).slice(-len);\r\n  },\r\n\r\n  _getMaxCodLot() {\r\n    const deferred = new Deferred();\r\n    const estadisticaDef = new StatisticDefinition();\r\n    estadisticaDef.statisticType = 'max';\r\n    estadisticaDef.onStatisticField = _COD_LOTE_FIELD;\r\n    estadisticaDef.outStatisticFieldName = \"resultado\";\r\n\r\n    const query = new Query();\r\n    query.where = selfCm.arancel;\r\n    query.outFields = [_COD_LOTE_FIELD];\r\n    query.returnGeometry = false;\r\n    query.outStatistics = [estadisticaDef];\r\n\r\n    const queryTask = new QueryTask(selfCm.map.getLayer(idLyrCfLotes).url);\r\n    queryTask.execute(query)\r\n      .then(result => {\r\n        if (result.features.length > 0) {\r\n          const maxCodLote = result.features[0].attributes.resultado;\r\n          return deferred.resolve(maxCodLote);\r\n        } else {\r\n          return deferred.reject('No se encontraron lotes');\r\n        }\r\n      });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _getOriginalLots() {\r\n    const deferred = new Deferred();\r\n    const self = this;\r\n    const query = new Query();\r\n    query.where = self.lotesQuery;\r\n    // query.where = \"ID_LOTE_P in (1448)\";\r\n    query.returnGeometry = true;\r\n    query.outFields = [\"*\"];\r\n    query.outSpatialReference = new SpatialReference({ wkid: 4326 });\r\n\r\n    const lotLayer = self.map.getLayer(idLyrCfLotes);\r\n    const queryTask = new QueryTask(lotLayer.url);\r\n\r\n    queryTask.execute(query)\r\n      .then((response) => {\r\n        // Acumulacion\r\n        if (self.case == 2) {\r\n          // La acumulacion debe tener como minimo 2 lotes\r\n          if (response.features.length < 2) {\r\n            throw new Error(self.nls.errorAcumulationLandsNumber);\r\n          }\r\n        }\r\n        self.currentLotsRows = response.features;\r\n        return deferred.resolve();\r\n      })\r\n      .catch(err => deferred.reject(err));\r\n    return deferred.promise;\r\n  },\r\n\r\n  // _getOriginalLots(query) {\r\n  //   const selfCm = this;\r\n  //   const deferred = new Deferred();\r\n  //   const params = {\r\n  //     where: query,\r\n  //     returnGeometry: true,\r\n  //     outFields: \"*\",\r\n  //     outSR: 4326,\r\n  //     f: \"json\"\r\n  //   };\r\n\r\n  //   const requestOptions = {\r\n  //     url: `${selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl()}/query`,\r\n  //     content: params,\r\n  //     handleAs: \"json\",\r\n  //     callbackParamName: \"callback\"\r\n  //   };\r\n\r\n  //   esriRequest(requestOptions, { usePost: true })\r\n  //     .then((response) => {\r\n  //       selfCm.currentLotsRows = response.features;\r\n\r\n  //       if (selfCm.case == 2) {\r\n  //         // La acumulacion debe tener como minimo 2 lotes\r\n  //         if (selfCm.currentLotsRows.length < 2) {\r\n  //           throw new Error(selfCm.nls.errorAcumulationLandsNumber);\r\n  //         }\r\n  //       }\r\n  //       // console.log(selfCm.currentLotsRows);\r\n  //       // selfCm.currentLotsRows.forEach(row => {\r\n  //       //   row.geometry = new Polygon({\r\n  //       //     rings: row.geometry.rings,\r\n  //       //     spatialReference: { wkid: 4326 }\r\n  //       //   });\r\n  //       // });\r\n  //       return deferred.resolve();\r\n  //     })\r\n  //     .catch(err => deferred.reject(err));\r\n\r\n  //   return deferred.promise;\r\n  // },\r\n\r\n  _getPolylinesDrawn() {\r\n    const arr = []\r\n    for (let i of graphicLayerLineaDivision.graphics) {\r\n      arr.push(i.geometry);\r\n    }\r\n    const unionGraphicLayerLineaDivision = selfCm._unionFeatures(arr);\r\n\r\n    let lineGeometry = new Polyline({\r\n      paths: unionGraphicLayerLineaDivision.paths,\r\n      spatialReference: { wkid: 102100 }\r\n    });\r\n    lineGeometry = esri.geometry.webMercatorToGeographic(lineGeometry);\r\n    return lineGeometry;\r\n  },\r\n\r\n  _divideLotsByLines() {\r\n    // const geomLote = results.features[0].geometry\r\n    if (selfCm.currentLotsRows.length == 0) {\r\n      selfCm._showMessage(selfCm.nls.errorLotQuery, 'warning');\r\n      return;\r\n    }\r\n    const lineGeometry = selfCm._getPolylinesDrawn();\r\n\r\n    const polygonGeometry = selfCm.currentLotsRows[0].geometry;\r\n\r\n    const geomLoteDivided = selfCm._dividePolygon(polygonGeometry, lineGeometry)\r\n\r\n    if (geomLoteDivided.length == 0) {\r\n      //  genera un mensage show indicando que no se encontro el lote\r\n      throw new Error(selfCm.nls.errorDivideLot);\r\n      // selfCm._showMessage(selfCm.nls.errorDivideLot, type = 'error');\r\n      // return;\r\n    }\r\n\r\n    if (geomLoteDivided.length != selfCm.responseRequests.length) {\r\n      throw new Error(`No se puede proceder con la operación\\nLa cantidad de lotes generados (${geomLoteDivided.length}) es diferente a lo solicitado (${selfCm.responseRequests.length})`);\r\n    }\r\n\r\n    // Creamos grafico de lote fusionado\r\n    // const graphicLayerLotPreview = new GraphicsLayer({\r\n    //   id: idGraphicLoteCm\r\n    // });\r\n\r\n    // iterar sobre los graficos de la capa de division y agregar cada uno a graphicLayerLotPreview\r\n    for (let i of geomLoteDivided) {\r\n      const lote = new Graphic(i, symbolFusionLote, { tipLot: 2 })\r\n\r\n      // agregar el grafico directo al mapa\r\n      graphicLayerLotPreview.add(lote);\r\n    }\r\n    // selfCm.map.addLayer(graphicLayerLotPreview);\r\n  },\r\n\r\n  _addGraphicsPointLotsAndArancel() {\r\n    const deferred = new Deferred();\r\n    const query = new Query();\r\n    query.where = `${selfCm.arancel} and ID_SVIA IS NOT NULL`\r\n    // especificar los campos devueltos\r\n    query.outFields = [_UBIGEO_FIELD, _F_MZN_FIELD];\r\n    query.returnGeometry = true\r\n    // query with order by fields\r\n    query.orderByFields = [_F_MZN_FIELD];\r\n    const qTask = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrCfArancel).getUrl());\r\n    qTask.execute(query, function (results) {\r\n      // Creamos grafico de punto lote\r\n      // const graphicLayerPuntoLote = new GraphicsLayer({\r\n      //   id: idGraphicPuntoLote\r\n      // });\r\n      // // creamos grafico de frente de lote\r\n      // const graphicLayerFrenteLote = new GraphicsLayer({\r\n      //   id: idGraphicFrenteLote\r\n      // });\r\n      // let graphicLayerPredio = new GraphicsLayer({\r\n      //   id: idGraphicPredioCm\r\n      // });\r\n      // const graphicLayerLotPreview = selfCm.map.getLayer(idGraphicLoteCm);\r\n\r\n      if (!graphicLayerLotPreview) {\r\n        return;\r\n      }\r\n      const frentes = {}\r\n      for (let row of results.features) {\r\n        for (let graphic of graphicLayerLotPreview.graphics) {\r\n          const isItc = geometryEngine.intersects(row.geometry, graphic.geometry);\r\n          if (!isItc) {\r\n            continue;\r\n          }\r\n          // saber si un key esta dentro del objeto frentes\r\n          if (!frentes.hasOwnProperty(row.attributes[_F_MZN_FIELD])) {\r\n            frentes[row.attributes[_F_MZN_FIELD]] = row.geometry;\r\n          }\r\n          else {\r\n            // check if row.geometry share a commin coordinate with frentes\r\n            const unionFrentes = geometryEngine.union([frentes[row.attributes[_F_MZN_FIELD]], row.geometry])\r\n            frentes[row.attributes[_F_MZN_FIELD]] = unionFrentes;\r\n          }\r\n        }\r\n      }\r\n\r\n      const nonIntersectedPolygons = graphicLayerLotPreview.graphics.slice();\r\n\r\n      for (let lote of graphicLayerLotPreview.graphics) {\r\n        for (let idx in frentes) {\r\n          const idItcFrentesByLotes = geometryEngine.intersects(lote.geometry, frentes[idx]);\r\n          if (!idItcFrentesByLotes) {\r\n            continue;\r\n          }\r\n          // remove lote from nonIntersectedPolygons\r\n          const idxNotMediterranean = nonIntersectedPolygons.indexOf(lote);\r\n          if (idxNotMediterranean > -1) {\r\n            nonIntersectedPolygons.splice(idxNotMediterranean, 1);\r\n            graphicLayerLotPreview.graphics[idxNotMediterranean].attributes.tipLot = 1\r\n          };\r\n\r\n          const itcFrentesByLotes = geometryEngine.intersect(frentes[idx], lote.geometry)\r\n\r\n          if (!itcFrentesByLotes) {\r\n            continue;\r\n          }\r\n\r\n          for (let row of itcFrentesByLotes.paths) {\r\n            const polylineChunk = new Polyline({\r\n              paths: [row],\r\n              spatialReference: itcFrentesByLotes.spatialReference\r\n            });\r\n            // add frentes to graphicLayerFrenteLote\r\n            const symbolFrenteLote = new SimpleLineSymbol(\r\n              SimpleLineSymbol.STYLE_SOLID,\r\n              new Color(\r\n                [\r\n                  Math.floor(Math.random() * 255),\r\n                  Math.floor(Math.random() * 255),\r\n                  Math.floor(Math.random() * 255)]),\r\n              5\r\n            )\r\n            const frente = new Graphic(polylineChunk, symbolFrenteLote)\r\n            graphicLayerFrenteLote.add(frente);\r\n\r\n            const puntoLoteTurf = selfCm._findMidpoint(polylineChunk)\r\n\r\n            // crear un punto en el mapa\r\n            const puntoLote = new Point({\r\n              x: puntoLoteTurf.geometry.coordinates[0],\r\n              y: puntoLoteTurf.geometry.coordinates[1],\r\n              spatialReference: { wkid: 4326 }\r\n            })\r\n\r\n            // Agregar el punto p al mapa          \r\n            const puntoLoteGraphic = new Graphic(puntoLote, symbolPuntoLote, { tipLot: 1 })\r\n            graphicLayerPuntoLote.add(puntoLoteGraphic)\r\n          };\r\n        }\r\n      }\r\n\r\n      // for (let mediterraneanLot of nonIntersectedPolygons){\r\n      //   const pointLotCenterOfLot = geometryService\r\n      // };\r\n\r\n\r\n      // selfCm.map.addLayer(graphicLayerFrenteLote);\r\n      // selfCm.map.addLayer(graphicLayerPuntoLote);\r\n      // selfCm._removeLayerGraphic(idGraphicPredioByMaintenance);\r\n      // selfCm.map.addLayer(graphicLayerPredioByMaintenance)\r\n      return deferred.resolve(nonIntersectedPolygons);\r\n    });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _addGraphicsPointLotsIndependence() {\r\n    const PointLotCls = new UtilityCase.PointLot();\r\n    for (let row of selfCm.currentPoinLotsRows) {\r\n      const graphic = new Graphic(\r\n        row.geometry,\r\n        symbolPuntoLote,\r\n        {\r\n          tipLot: parseInt(row.attributes[PointLotCls.tipLot])\r\n        }\r\n      );\r\n      graphicLayerPuntoLote.add(graphic);\r\n    }\r\n    // const puntoLote = new Point({\r\n    //   x: puntoLoteTurf.geometry.coordinates[0],\r\n    //   y: puntoLoteTurf.geometry.coordinates[1],\r\n    //   spatialReference: { wkid: 4326 }\r\n    // })\r\n\r\n    // // Agregar el punto p al mapa          \r\n    // const puntoLoteGraphic = new Graphic(puntoLote, symbolPuntoLote, { tipLot: 1 })\r\n    // graphicLayerPuntoLote.add(puntoLoteGraphic)\r\n  },\r\n\r\n  _addGraphicsPointMediterraneanLot(arrayPolygon) {\r\n    const deferred = new Deferred();\r\n    // const LotCls = new UtilityCase.Lot();\r\n    // const tipLot = LotCls.tipLot;\r\n    if (arrayPolygon.length == 0) {\r\n      return deferred.resolve();\r\n    }\r\n    const polygon = arrayPolygon.map(i => i.geometry)\r\n    selfCm.geometryService.labelPoints(polygon)\r\n      .then((labelPoints) => {\r\n        // add graphic to graphicLayerPuntoLote\r\n        for (let point of labelPoints) {\r\n          const puntoLoteGraphic = new Graphic(point, symbolPuntoLote, { tipLot: 2 })\r\n          graphicLayerPuntoLote.add(puntoLoteGraphic)\r\n\r\n        };\r\n        return deferred.resolve();\r\n      })\r\n      .catch((error) => {\r\n        return deferred.reject(error);\r\n      });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _addGraphicsAfterPreVisualization() {\r\n    selfCm.map.addLayer(graphicLayerLotPreview);\r\n    selfCm.map.addLayer(graphicLayerFrenteLote);\r\n    selfCm.map.addLayer(graphicLayerPuntoLote);\r\n    selfCm._removeLayerGraphic(idGraphicPredioByMaintenance);\r\n    selfCm.map.addLayer(graphicLayerPredioByMaintenance)\r\n  },\r\n\r\n  _ApplyDivideLotesRefactor() {\r\n    selfCm.busyIndicator.show();\r\n    toolbarCm.deactivate();\r\n    ToolDraw.deactivateToolbarAnotherToolbar();\r\n    selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n    selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n    selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n    selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n    selfCm._removeLayerGraphic(idGraphicLoteDeleteCm);\r\n    selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n\r\n    // Union all graphics of graphicslayer\r\n    if (graphicLayerLineaDivision.graphics.length == 0) {\r\n      selfCm._showMessage(selfCm.nls.emptyLineSubdivision, 'warning');\r\n      selfCm.busyIndicator.hide();\r\n      return\r\n    }\r\n    if (!selfCm.lotesQuery) {\r\n      selfCm._showMessage(selfCm.nls.errorGetLand, 'warning');\r\n      selfCm.busyIndicator.hide();\r\n      return\r\n    }\r\n    return selfCm._getOriginalLots()\r\n      .then(() => {\r\n        // const geomLoteDivided = selfCm._divideLotsByLines();\r\n        selfCm._divideLotsByLines();\r\n        return selfCm._addGraphicsPointLotsAndArancel();\r\n      })\r\n      .then((mediterraneanLotsGeometry) => {\r\n        return selfCm._addGraphicsPointMediterraneanLot(mediterraneanLotsGeometry);\r\n      })\r\n      .then(() => {\r\n        return selfCm._getMaxCodLot();\r\n      })\r\n      .then(maxCodLot => {\r\n        return selfCm._ordenarPoligonosNorteSur(parseInt(maxCodLot), selfCm.bodyTbDatosLoteDvApCm)\r\n      })\r\n      // .then(() => {\r\n      //   selfCm.map.reorderLayer(selfCm.map.getLayer(idGraphicLoteCm), selfCm.map.graphicsLayerIds.indexOf(graphicLayerLabelLineaDivision.id));\r\n      //   selfCm.map.setExtent(selfCm.currentLotsRows[0].geometry.getExtent().expand(2.5), true);\r\n      // })\r\n      // .then(() => {\r\n      // selfCm._addGraphicsAfterPreVisualization();\r\n      // })\r\n      .then(() => {\r\n        selfCm._populateTablePredio(selfCm.bodyTbPrediosDvApCm, selfCm._activateToolPrediosByMaintenance)\r\n        // selfCm.map.addLayer(graphicLayerLotPreview);\r\n        selfCm._addGraphicsAfterPreVisualization();\r\n        selfCm.map.reorderLayer(selfCm.map.getLayer(idGraphicLoteCm), selfCm.map.graphicsLayerIds.indexOf(graphicLayerLabelLineaDivision.id));\r\n        selfCm.map.setExtent(selfCm.currentLotsRows[0].geometry.getExtent().expand(1.5), true);\r\n        selfCm.busyIndicator.hide();\r\n      })\r\n      .catch(error => {\r\n        // console.log(error)\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(error.message, type = \"error\")\r\n      })\r\n  },\r\n\r\n\r\n  // _ApplyDivideLotesRefactor() {\r\n  //   selfCm.busyIndicator.show();\r\n  //   selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n  //   selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n  //   selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n  //   selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n  //   selfCm._removeLayerGraphic(idGraphicLoteDeleteCm);\r\n  //   selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n\r\n  //   // Union all graphics of graphicslayer\r\n  //   if (graphicLayerLineaDivision.graphics.length == 0) {\r\n  //     selfCm._showMessage(selfCm.nls.emptyLineSubdivision, 'warning');\r\n  //     selfCm.busyIndicator.hide();\r\n  //     return\r\n  //   }\r\n  //   if (!selfCm.lotesQuery) {\r\n  //     selfCm._showMessage(selfCm.nls.errorGetLand, 'warning');\r\n  //     selfCm.busyIndicator.hide();\r\n  //     return\r\n  //   }\r\n  //   return selfCm._getOriginalLots(selfCm.lotesQuery)\r\n  //     .then(originLots => {\r\n  //       // const geomLoteDivided = selfCm._divideLotsByLines();\r\n  //       selfCm._divideLotsByLines();\r\n  //       return selfCm._getMaxCodLot();\r\n  //     })\r\n  //     .then(maxCodLot => {\r\n  //       return selfCm._ordenarPoligonosNorteSur(\r\n  //         parseInt(maxCodLot),\r\n  //         selfCm.bodyTbDatosLoteDvApCm\r\n  //       )\r\n  //     })\r\n  //     .then(() => {\r\n  //       selfCm.map.reorderLayer(selfCm.map.getLayer(idGraphicLoteCm), selfCm.map.graphicsLayerIds.indexOf(graphicLayerLabelLineaDivision.id));\r\n  //       selfCm.map.setExtent(selfCm.currentLotsRows[0].geometry.getExtent().expand(2.5), true);\r\n  //       return selfCm._addGraphicsPointLotsAndArancel();\r\n  //     })\r\n  //     .then((mediterraneanLotsGeometry) => {\r\n  //       return selfCm._addGraphicsPointMediterraneanLot(mediterraneanLotsGeometry);\r\n  //     })\r\n  //     .then(() => {\r\n  //       selfCm._addGraphicsAfterPreVisualization();\r\n  //     })\r\n  //     .then(() => {\r\n  //       selfCm._populateTablePredio(selfCm.bodyTbPrediosDvApCm, selfCm._activateToolPrediosByMaintenance)\r\n  //       selfCm.busyIndicator.hide();\r\n  //     })\r\n  //     .catch(error => {\r\n  //       // console.log(error)\r\n  //       selfCm.busyIndicator.hide();\r\n  //       selfCm._showMessage(error.message, type = \"error\")\r\n  //     })\r\n  // },\r\n\r\n  // // ----------------------------------------------------------------------------------------------\r\n  // // GeoprocessingServices\r\n  // // ----------------------------------------------------------------------------------------------\r\n  // _executeReasignacionGpService(evt) {\r\n  //   if (!selfCm.xy.length) {\r\n  //     selfCm._showMessage(selfCm.nls.emptyNewLocation, type = \"error\")\r\n  //     return\r\n  //   }\r\n  //   selfCm._showMessageConfirm().then(function (result) {\r\n  //     if (result) {\r\n  //       let params = {\r\n  //         \"cod_pred\": selfCm.uniqueCodeLands,\r\n  //         \"ubigeo\": paramsApp['ubigeo'],\r\n  //         \"geometry\": selfCm.xy,\r\n  //         \"user\": paramsApp['username'],\r\n  //         \"id_solicitud\": selfCm.codRequestsCm\r\n  //       }\r\n\r\n  //       // revisar si alguna propiedad tiene valor nulo o indefinido\r\n  //       for (let key in params) {\r\n  //         if (params[key] == null || params[key] == undefined) {\r\n  //           selfCm._showMessage(`Debe especificar el valor de ${key}`, type = \"error\");\r\n  //           return\r\n  //         }\r\n  //       }\r\n  //       selfCm._executeGPService(selfCm.config.reasignacionUrl, params)\r\n  //     }\r\n  //     else {\r\n  //       return\r\n  //     }\r\n  //   })\r\n  // },\r\n\r\n  _executeAcumulacionGpService(evt) {\r\n    const self = this;\r\n    if (!this.lotesQuery) {\r\n      this._showMessage(this.nls.errorGetLand, 'warning');\r\n      this.busyIndicator.hide();\r\n      return\r\n    }\r\n    if (!this.map.getLayer(idGraphicLoteCm)) {\r\n      this._showMessage(this.nls.emptyPreviewAccumulation, type = \"error\")\r\n      return\r\n    }\r\n\r\n    if (!graphicLayerPredioByMaintenance.graphics.length) {\r\n      this._showMessage(this.nls.emptyNewLand, type = \"error\")\r\n      return\r\n    }\r\n    const labelCodLotesLayer = this.map.getLayer(idGraphicLabelCodLote)\r\n\r\n    this._showMessageConfirm()\r\n      .then(function (result) {\r\n        if (result) {\r\n          self.busyIndicator.show();\r\n          self._addWarningMessageExecute()\r\n          const labelCodLotesLayerGraphic = labelCodLotesLayer.graphics;\r\n\r\n          Acumulation.codRequests = self.codRequestsCm;\r\n          Acumulation.currentLotsRows = self.currentLotsRows;\r\n\r\n          Acumulation.attributes = labelCodLotesLayerGraphic.map((i) => {\r\n            return {\r\n              codLot: i.symbol.text,\r\n              lotUrb: i.attributes.lot_urb,\r\n              coords: [\r\n                i.geometry.x,\r\n                i.geometry.y\r\n              ]\r\n            }\r\n          });\r\n\r\n          Acumulation.newPointLotsGraphics = self.map.getLayer(idGraphicPuntoLote).graphics;\r\n          Acumulation.newLandsGraphics = graphicLayerPredioByMaintenance.graphics;\r\n          // Acumulation.newLandsGraphics[0]['codPre'] = self.cpm;\r\n          // Acumulation.newLandsGraphics[0]['id'] = self.idPredio;\r\n          // Acumulation.newLandsGraphics[0]['resolutionType'] = self.resolutionType;\r\n          // Acumulation.newLandsGraphics[0]['resolutionDocument'] = self.resolutionDocument;\r\n          // Acumulation.newLandsGraphics[0]['floor'] = self.floor;\r\n          // Acumulation.newLandsGraphics[0]['urbanLotNumber'] = self.urbanLotNumber;\r\n          Acumulation.landUrl = self.layersMap.getLayerInfoById(idLyrCfPredios).getUrl();\r\n          Acumulation.pointLotUrl = self.layersMap.getLayerInfoById(idLyrCfLotesPun).getUrl();\r\n          Acumulation.lotUrl = self.layersMap.getLayerInfoById(idLyrCfLotes).getUrl();\r\n          Acumulation.arancelUrl = self.layersMap.getLayerInfoById(idLyrCfArancel).getUrl();\r\n          Acumulation.blockUrl = self.layersMap.getLayerInfoById(idLyrCfManzanaUrb).getUrl();\r\n          Acumulation.cadastralBlockUrl = self.layersMap.getLayerInfoById(idLyrCfManzana).getUrl();\r\n          Acumulation.config = self.config;\r\n          Acumulation.lotGraphic = self.map.getLayer(idGraphicLoteCm).graphics;\r\n          Acumulation.ubigeo = paramsApp['ubigeo'];\r\n          Acumulation.user = paramsApp['username'];\r\n          Acumulation.caseRequest = self.case;\r\n          Acumulation.queryBlock = self.arancel;\r\n\r\n\r\n          Acumulation.executeAcumulation()\r\n            .then(response => {\r\n              // self._removeLayerGraphic(idGraphicPredioCm);\r\n              graphicLayerPredioByMaintenance.clear();\r\n              graphicRightOfWay.clear();\r\n              self._removeLayerGraphic(idGraphicLoteCm);\r\n              self._removeLayerGraphic(idGraphicPuntoLote);\r\n              self._removeLayerGraphic(idGraphicFrenteLote);\r\n              self._removeLayerGraphic(idGraphicLabelCodLote);\r\n              self._refreshLayersCF();\r\n              // self.map.getLayer(idLyrCatastroFiscal).setVisibility(false)\r\n              // self.map.getLayer(idLyrCatastroFiscal).setVisibility(true)\r\n              self._FormResult(self.codRequestsCm, self.caseDescription);\r\n              self.busyIndicator.hide();\r\n              self._removeWarningMessageExecute()\r\n              self._showMessage(self.nls.successProcess, type = \"success\");\r\n            })\r\n            .catch(error => {\r\n              // console.log(error)\r\n              // self._removeWarningMessageExecute()\r\n              // self._showMessage(error.message, type = \"error\");\r\n              // self.busyIndicator.hide();\r\n\r\n              self._removeWarningMessageExecute()\r\n              self.busyIndicator.hide();\r\n              if (error.name === CustomException.ErrorEqualUrbanLotWithinBlock.name) {\r\n                return\r\n              } else {\r\n                self._showMessage(error.message, type = \"error\");\r\n              }\r\n            })\r\n        }\r\n        else {\r\n          self.busyIndicator.hide();\r\n          return\r\n        }\r\n      })\r\n  },\r\n\r\n  _executeSubdivisionGpService(evt) {\r\n\r\n    const layerLote = this.map.getLayer(idGraphicLoteCm);\r\n\r\n    if (!this.lotesQuery) {\r\n      this._showMessage(this.nls.errorGetLand, 'warning');\r\n      this.busyIndicator.hide();\r\n      return;\r\n    };\r\n\r\n    if (!layerLote) {\r\n      this._showMessage(this.nls.emptyPreviewSubdivision, type = \"error\");\r\n      return;\r\n    };\r\n\r\n    // Check if all labels have a value\r\n    const labelCodLotesLayer = this.map.getLayer(idGraphicLabelCodLote);\r\n    for (let pred of labelCodLotesLayer.graphics) {\r\n      if (!pred.symbol.text) {\r\n        this._showMessage(this.nls.emptyLotCodeSubdivision, type = \"error\");\r\n        return;\r\n      };\r\n      if (!pred.attributes.lot_urb || pred.attributes.lot_urb === \"...\") {\r\n        this._showMessage(this.nls.emptyUrbanLotSubdivision, type = \"error\");\r\n        return;\r\n      };\r\n    };\r\n\r\n    if (graphicLayerPredioByMaintenance.graphics.length != layerLote.graphics.length) {\r\n      this._showMessage(this.nls.emptyGraphicLandSubdivision, type = \"error\");\r\n      return;\r\n    };\r\n    // Check if all lots have a land\r\n    const checkLotsWithinLands = UtilityCase.checkLotsWithinLands(layerLote.graphics, graphicLayerPredioByMaintenance.graphics);\r\n    if (!checkLotsWithinLands) {\r\n      this._showMessage(this.nls.emptyLandResultSubdivision, type = \"error\");\r\n      return\r\n    };\r\n\r\n    // Check lotUrb\r\n    const lotUrbArray = labelCodLotesLayer.graphics.map(i => i.attributes.lot_urb);\r\n    const duplicateLotUrban = UtilityCase.checkDuplicateLotUrbanResults(lotUrbArray);\r\n    if (duplicateLotUrban.length > 0) {\r\n      this._showMessage(`${this.nls.duplicateLotUrbanResult}: ${duplicateLotUrban}`, type = 'error');\r\n      return;\r\n    };\r\n\r\n    this._showMessageConfirm()\r\n      .then((result) => {\r\n        if (result) {\r\n          this.busyIndicator.show();\r\n          this._addWarningMessageExecute();\r\n          const labelCodLotesLayerGraphic = labelCodLotesLayer.graphics;\r\n\r\n          SubDivision.blockUrl = this.layersMap.getLayerInfoById(idLyrCfManzanaUrb).getUrl();\r\n          SubDivision.lotUrl = this.layersMap.getLayerInfoById(idLyrCfLotes).getUrl();\r\n          SubDivision.pointLotUrl = this.layersMap.getLayerInfoById(idLyrCfLotesPun).getUrl();\r\n          SubDivision.arancelUrl = this.layersMap.getLayerInfoById(idLyrCfArancel).getUrl();\r\n          SubDivision.landUrl = this.layersMap.getLayerInfoById(idLyrCfPredios).getUrl();\r\n          SubDivision.cadastralBlockUrl = this.layersMap.getLayerInfoById(idLyrCfManzana).getUrl();\r\n          SubDivision.currentLotsRows = this.currentLotsRows;\r\n          SubDivision.newPointLotsGraphics = this.map.getLayer(idGraphicPuntoLote).graphics;\r\n          SubDivision.newLandsGraphics = graphicLayerPredioByMaintenance.graphics;\r\n          SubDivision.queryBlock = this.arancel;\r\n          // SubDivision.newLandsGraphics.forEach((i) => {\r\n          //   i['id'] = i.attributes.id.split('_')[1],\r\n          //     i['codPre'] = i.attributes.cpm,\r\n          //     i['resolutionType'] = i.attributes.resolutionType,\r\n          //     i['resolutionDocument'] = i.attributes.resolutionDocument,\r\n          //     i['floor'] = i.attributes.floor,\r\n          //     i['urbanLotNumber'] = i.attributes.urbanLotNumber\r\n          // });\r\n          SubDivision.lotGraphic = layerLote.graphics;\r\n\r\n          SubDivision.attributes = labelCodLotesLayerGraphic.map((i) => {\r\n            return {\r\n              codLot: i.symbol.text,\r\n              lotUrb: i.attributes.lot_urb,\r\n              coords: [\r\n                i.geometry.x,\r\n                i.geometry.y\r\n              ]\r\n            }\r\n          });\r\n\r\n          SubDivision.config = this.config;\r\n          SubDivision.ubigeo = paramsApp['ubigeo'];\r\n          SubDivision.user = paramsApp['username'];\r\n          SubDivision.caseRequest = this.case;\r\n          SubDivision.codRequests = this.codRequestsCm;\r\n\r\n          SubDivision.executeSubdivision()\r\n            .then(response => {\r\n              graphicLayerPredioByMaintenance.clear();\r\n              graphicLayerLineaDivision.clear();\r\n              graphicLayerLabelLineaDivision.clear();\r\n              graphicRightOfWay.clear();\r\n              this._removeLayerGraphic(idGraphicLoteCm);\r\n              this._removeLayerGraphic(idGraphicPuntoLote);\r\n              this._removeLayerGraphic(idGraphicFrenteLote);\r\n              this._removeLayerGraphic(idGraphicLabelCodLote);\r\n              // this.map.getLayer(idLyrCatastroFiscal).setVisibility(false)\r\n              // this.map.getLayer(idLyrCatastroFiscal).setVisibility(true)\r\n              this._refreshLayersCF();\r\n              this._FormResult(this.codRequestsCm, this.caseDescription);\r\n              this.busyIndicator.hide();\r\n              this._removeWarningMessageExecute()\r\n              this._showMessage(this.nls.successProcess, type = \"success\");\r\n            })\r\n            .catch(error => {\r\n              this._removeWarningMessageExecute()\r\n              this.busyIndicator.hide();\r\n              if (error.name === CustomException.ErrorEqualUrbanLotWithinBlock.name) {\r\n                return\r\n              } else {\r\n                this._showMessage(error.message, type = \"error\");\r\n              }\r\n            })\r\n          // .finally(() => {\r\n          //   selfCm.lotesQuery = null;\r\n          // })\r\n        }\r\n        else {\r\n          return\r\n        }\r\n      })\r\n  },\r\n\r\n  _executeInactivarGpService(evt) {\r\n    if (!selfCm.currentLotsRows) {\r\n      selfCm._showMessage(selfCm.nls.emptyLotRequests, type = \"error\")\r\n      return\r\n    }\r\n\r\n    selfCm._showMessageConfirm().then(function (result) {\r\n      if (result) {\r\n        selfCm.busyIndicator.show();\r\n        selfCm._addWarningMessageExecute();\r\n        Deactivate.caseRequest = selfCm.case;\r\n        Deactivate.codRequest = selfCm.codRequestsCm;\r\n        Deactivate.user = paramsApp['username'];\r\n        Deactivate.ubigeo = paramsApp['ubigeo'];\r\n        Deactivate.config = selfCm.config;\r\n        Deactivate.landUrl = selfCm.layersMap.getLayerInfoById(idLyrCfPredios).getUrl();\r\n        Deactivate.cpu = selfCm.uniqueCodeLands;\r\n        Deactivate.currentLotsRows = selfCm.currentLotsRows;\r\n\r\n        Deactivate.executeDeactivate()\r\n          .then(response => {\r\n            // selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(false)\r\n            // selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(true)\r\n            selfCm._refreshLayersCF()\r\n            selfCm._removeWarningMessageExecute()\r\n            selfCm._loadIniRequestsCm()\r\n            dojo.query(\".backTrayClsCm\")[0].click()\r\n            selfCm.busyIndicator.hide();\r\n            selfCm._showMessage(selfCm.nls.successProcess, type = \"success\");\r\n          })\r\n          .catch(error => {\r\n            selfCm._removeWarningMessageExecute()\r\n            selfCm._showMessage(error.message, type = \"error\");\r\n            selfCm.busyIndicator.hide();\r\n          })\r\n          .finally(() => {\r\n            selfCm.currentLotsRows = null;\r\n          })\r\n      }\r\n      else {\r\n        return\r\n      }\r\n    })\r\n  },\r\n\r\n  _addWarningMessageExecute() {\r\n    const self = this;\r\n    const buzyElm = dojo.query(\"#dojox_widget_Standby_0\")[0]\r\n    const imgElm = buzyElm.querySelector(\"img\")\r\n    const loadingText = document.createElement('div');\r\n    loadingText.id = 'loadingTextCustom';\r\n    loadingText.style.position = 'absolute';\r\n    const topMessage = parseFloat(imgElm.style.top) + 80;\r\n    loadingText.style.top = `${topMessage}px`;\r\n    const leftImg = parseFloat(imgElm.style.left) + imgElm.width / 2;\r\n    loadingText.style.left = `${leftImg}px`;\r\n    loadingText.style.transform = 'translate(-50%, -50%)';\r\n    loadingText.style.background = 'white';\r\n    loadingText.style.zIndex = '1000';\r\n    loadingText.innerHTML = self.nls.warningExecute;\r\n\r\n    dojo.query(\"#dojox_widget_Standby_0\")[0].appendChild(loadingText);\r\n  },\r\n\r\n  _removeWarningMessageExecute() {\r\n    dojo.query(\"#loadingTextCustom\")[0].remove();\r\n  },\r\n\r\n  _executeIndependenceLands(evt) {\r\n    if (!this.currentLotsRows) {\r\n      this._showMessage(this.nls.emptyLotRequests, type = \"error\")\r\n      return\r\n    };\r\n    if (!(graphicLayerPredioByMaintenance.graphics.length === this.responseRequests.length)) {\r\n      this._showMessage(this.nls.emptyNewLand, type = \"error\")\r\n      return\r\n    };\r\n\r\n    this._showMessageConfirm()\r\n      .then(result => {\r\n        if (result) {\r\n          this.busyIndicator.show();\r\n          this._addWarningMessageExecute();\r\n          Independence.codRequest = this.codRequestsCm;\r\n          Independence.cadastralBlockUrl = this.layersMap.getLayerInfoById(idLyrCfManzana).getUrl();\r\n          Independence.ubigeo = paramsApp['ubigeo'];\r\n          Independence.user = paramsApp['username'];\r\n          // Independence.newLands = LandAssignment.lands;\r\n          Independence.newLands = graphicLayerPredioByMaintenance.graphics;\r\n          Independence.urlLands = this.map.getLayer(idLyrCfPredios).url;\r\n          Independence.matrixLand = this.currentLandTabRows;\r\n          Independence.config = this.config;\r\n          Independence.currentLotsRows = this.currentLotsRows;\r\n          Independence.currentPoinLotsRows = this.currentPoinLotsRows;\r\n          Independence.caseRequest = this.case;\r\n\r\n          Independence.executeIndependence()\r\n            .then(response => {\r\n              graphicLayerPredioByMaintenance.clear();\r\n              graphicRightOfWay.clear();\r\n              this._removeLayerGraphic(idGraphicLoteCm);\r\n              this._removeLayerGraphic(idGraphicPuntoLote);\r\n              this._removeLayerGraphic(idGraphicFrenteLote);\r\n              this._removeLayerGraphic(idGraphicLabelCodLote);\r\n              this._refreshLayersCF();\r\n              this._FormResult(this.codRequestsCm, this.caseDescription);\r\n              this.busyIndicator.hide();\r\n              this._removeWarningMessageExecute()\r\n              this._showMessage(this.nls.successProcess, type = \"success\");\r\n              // LandAssignment.removeAllGraphics();\r\n              // this._refreshLayersCF();\r\n              // // this.map.getLayer(idLyrCatastroFiscal).setVisibility(false)\r\n              // // this.map.getLayer(idLyrCatastroFiscal).setVisibility(true)\r\n              // this._FormResult(this.codRequestsCm, this.caseDescription);\r\n              // this.busyIndicator.hide();\r\n              // this._removeWarningMessageExecute();\r\n              // this._showMessage(this.nls.successProcess, type = \"success\");\r\n            })\r\n            .catch(error => {\r\n              this._removeWarningMessageExecute();\r\n              this._showMessage(error.message, type = \"error\");\r\n              this.busyIndicator.hide();\r\n            })\r\n          // .finally(() => {\r\n          //   this.currentLotsRows = null;\r\n          // })\r\n        }\r\n        else {\r\n          return\r\n        }\r\n      })\r\n  },\r\n\r\n  // _executeGPService(url, params) {\r\n  //   let urlStatusRequest = `${selfCm.config.applicationListUrl}/${selfCm.codRequestsCm}`\r\n  //   selfCm._callApiRestServices(urlStatusRequest, {}).then(function (result) {\r\n  //     try {\r\n  //       if (result.idStatus != 1) {\r\n  //         throw new Error(`Esta solicitud (${selfCm.codRequestsCm}) ya fue procesada con anterioridad: ${result.date}`)\r\n  //       }\r\n  //       selfCm.busyIndicator.show();\r\n  //       // Agregar un elemento de texto debajo del BusyIndicator\r\n  //       let buzyElm = dojo.query(\"#dojox_widget_Standby_0\")[0]\r\n  //       let imgElm = buzyElm.querySelector(\"img\")\r\n  //       let loadingText = document.createElement('div');\r\n  //       loadingText.id = 'loadingTextCustom';\r\n  //       loadingText.style.position = 'absolute';\r\n  //       let topMessage = parseFloat(imgElm.style.top) + 80;\r\n  //       loadingText.style.top = `${topMessage}px`;\r\n  //       let leftImg = parseFloat(imgElm.style.left) + imgElm.width / 2;\r\n  //       loadingText.style.left = `${leftImg}px`;\r\n  //       loadingText.style.transform = 'translate(-50%, -50%)';\r\n  //       loadingText.style.background = 'white';\r\n  //       loadingText.style.zIndex = '1000';\r\n\r\n  //       dojo.query(\"#dojox_widget_Standby_0\")[0].appendChild(loadingText);\r\n  //       // selfCm._FormResult(selfCm.codRequestsCm, selfCm.caseDescription);\r\n  //       selfCm.gp = new Geoprocessor(url);\r\n  //       selfCm.gp.submitJob(params, selfCm._completeCallback, selfCm._statusCallback);\r\n  //     } catch (error) {\r\n  //       selfCm.busyIndicator.hide();\r\n  //       selfCm._showMessage(error.message, type = \"error\")\r\n  //     }\r\n\r\n  //   })\r\n  // },\r\n\r\n  // _statusCallback(JobInfo) {\r\n  //   selfCm.jobId = JobInfo.jobId\r\n  //   let textMessage = JobInfo.messages.map((message) => { return message.description })\r\n  //   try {\r\n  //     dojo.query(\"#loadingTextCustom\")[0].textContent = textMessage.slice(-1)[0] ? textMessage.slice(-1)[0] : ''\r\n  //   } catch (error) {\r\n  //     console.log(error)\r\n  //   }\r\n  // },\r\n  // _completeCallback(JobInfo) {\r\n  //   switch (JobInfo.jobStatus) {\r\n  //     case \"esriJobSubmitted\":\r\n  //       // El trabajo se ha enviado al servidor y está esperando en la cola.\r\n  //       console.log(\"El trabajo se ha enviado y está esperando en la cola.\");\r\n  //       break;\r\n  //     case \"esriJobExecuting\":\r\n  //       // El trabajo se está ejecutando actualmente en el servidor.\r\n  //       console.log(\"El trabajo se está ejecutando en el servidor.\");\r\n  //       break;\r\n  //     case \"esriJobSucceeded\":\r\n  //       // El trabajo se ha completado satisfactoriamente y los resultados están disponibles.\r\n  //       selfCm.gp.getResultData(JobInfo.jobId, \"response\", function (result) {\r\n  //         if (!result.value.status) {\r\n  //           selfCm.busyIndicator.hide();\r\n  //           selfCm._showMessage(result.value.message, type = \"error\");\r\n  //           return\r\n  //         }\r\n\r\n  //         selfCm._sendDataToPlatform(result.value.response)\r\n\r\n\r\n  //         switch (selfCm.case) {\r\n  //           case \"1\":\r\n  //             selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n  //             break;\r\n  //           case \"2\":\r\n  //             selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n  //             selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n  //             selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n  //             selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n  //             selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n  //             break\r\n  //           case \"3\":\r\n  //             graphicLayerPredioByMaintenance.clear();\r\n  //             graphicLayerLineaDivision.clear();\r\n  //             graphicLayerLabelLineaDivision.clear();\r\n  //             // selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n  //             selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n  //             selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n  //             selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n  //             selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n  //             break\r\n  //           case \"4\":\r\n  //             // dojo.query(\".tablinksCm.active\")[0].click();\r\n  //             selfCm._loadIniRequestsCm()\r\n  //             break\r\n  //           default:\r\n  //             break;\r\n  //         }\r\n  //         selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(false)\r\n  //         selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(true)\r\n  //         if (selfCm.case == \"4\") {\r\n  //           dojo.query(\".backTrayClsCm\")[0].click()\r\n  //         } else {\r\n  //           selfCm._FormResult(selfCm.codRequestsCm, selfCm.caseDescription);\r\n  //         }\r\n  //         // Codigo para mostrar la ventana de resultados\r\n\r\n\r\n  //       })\r\n  //       break;\r\n  //     case \"esriJobFailed\":\r\n  //       // El trabajo ha fallado y no se han podido generar los resultados.\r\n  //       selfCm._showMessage(\"El proceso ha fallado y no se han podido generar los resultados.\", type = \"error\");\r\n  //       break;\r\n  //     case \"esriJobCancelled\":\r\n  //       // El trabajo ha sido cancelado por el usuario.\r\n  //       selfCm._showMessage(\"El proceso ha sido cancelado por el usuario.\");\r\n  //       break;\r\n  //     case \"esriJobTimedOut\":\r\n  //       // El trabajo ha expirado debido a un tiempo de espera.\r\n  //       selfCm._showMessage(\"El proceso ha superado el tiempo de espera necesario para su ejecución.\", type = \"error\");\r\n  //       break;\r\n  //     default:\r\n  //       // El estado del trabajo no se reconoce.\r\n  //       selfCm._showMessage(\"El estado del proceso no se reconoce.\");\r\n  //       break;\r\n  //   }\r\n  //   selfCm.busyIndicator.hide();\r\n  //   // remove 'loadingTextCustom'\r\n  //   dojo.query(\"#loadingTextCustom\")[0].remove();\r\n  // },\r\n  // _cancelProcess(evt) {\r\n  //   selfCm.gp.cancelJob(selfCm.jobId, function (info) {\r\n  //     console.log(info.jobStatus)\r\n  //   });\r\n  // },\r\n\r\n  // _sendDataToPlatform(data) {\r\n  //   for (let predio of data.results) {\r\n  //     predio['ubigeo'] = paramsApp.ubigeo;\r\n  //   }\r\n\r\n  //   data['idType'] = parseInt(selfCm.case)\r\n  //   fetch(selfCm.config.updateStatusApplication, {\r\n  //     method: 'POST', // o 'PUT'\r\n  //     body: JSON.stringify(data), // los datos pueden ser de tipo 'string' o {object}\r\n  //     headers: {\r\n  //       'Content-Type': 'application/json'\r\n  //     }\r\n  //   }).then(res => res.json())\r\n  //     .then(response => selfCm._showMessage('El proceso se completó satisfactoriamente.'))\r\n  //     // .catch(error => console.error('Error:', error));\r\n  //     .catch(error => selfCm._showMessage(error, type = \"error\"));\r\n  // },\r\n\r\n  _exportTableToExcel(evt) {\r\n    // Obtén la tabla HTML\r\n    const table = dojo.query(\"#tableRequestCm\")[0]\r\n    let headerRow = table.querySelector(\"tr\");\r\n    let rows = table.querySelectorAll(\"tr\")\r\n\r\n    let headers = [];\r\n    let headerCols = headerRow.querySelectorAll(\"th\");\r\n    for (let h = 0; h < headerCols.length - 1; h++) {\r\n      headers.push(headerCols[h].innerText);\r\n    }\r\n\r\n    let data = [];\r\n\r\n    // Recorre las filas (ignora la primera fila que contiene los encabezados)\r\n    for (let i = 0; i < rows.length; i++) {\r\n      if (i == 0) continue;\r\n      let row = {}, cols = rows[i].querySelectorAll(\"td\");\r\n\r\n      // Recorre las columnas\r\n      for (let j = 0; j < cols.length - 1; j++) {\r\n        // Usa el texto del encabezado como clave y el texto de la celda como valor\r\n        row[headers[j]] = cols[j].innerText;\r\n      }\r\n\r\n      data.push(row);\r\n    }\r\n\r\n\r\n\r\n    // Convierte el array de objetos en una cadena JSON\r\n    let wb = XLSX.utils.book_new();\r\n\r\n    // Crear una hoja de cálculo a partir de los datos JSON\r\n    let ws = XLSX.utils.json_to_sheet(data);\r\n    let sheetName = selfCm.currentTabActive.replace(\"_\", \" \");\r\n    XLSX.utils.book_append_sheet(wb, ws, sheetName);\r\n\r\n    // Escribir el libro de trabajo y forzar una descarga\r\n    XLSX.writeFile(wb, `reporte_solicitudes_${selfCm.currentTabActive}.xlsx`);\r\n  },\r\n\r\n  _dataURItoBlob(dataURI) {\r\n    var byteString = atob(dataURI.split(',')[1]);\r\n    var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n    var buffer = new ArrayBuffer(byteString.length);\r\n    var dataView = new Uint8Array(buffer);\r\n    for (var i = 0; i < byteString.length; i++) {\r\n      dataView[i] = byteString.charCodeAt(i);\r\n    }\r\n    return new Blob([buffer], { type: mimeString });\r\n  },\r\n\r\n  _sendObservation(evt) {\r\n    selfCm.busyIndicator.show();\r\n    const file = selfCm.imgUploadApCm.files[0];\r\n    const messageObservation = selfCm.textAreaObsApCm.value.trim();\r\n    if (messageObservation == '') {\r\n      selfCm.busyIndicator.hide();\r\n      selfCm._showMessage(selfCm.nls.emptyObservation, type = \"error\");\r\n      return\r\n    }\r\n    if (file == undefined) {\r\n      selfCm.busyIndicator.hide();\r\n      selfCm._showMessage(selfCm.nls.emptyImageSupport, type = \"error\");\r\n      return\r\n    }\r\n    const reader = new FileReader();\r\n    const data = new FormData();\r\n    reader.onloadend = function () {\r\n      data.append('application_id', selfCm.codRequestsCm);\r\n      data.append('description', selfCm.textAreaObsApCm.value);\r\n      data.append('img', selfCm.imgUploadApCm.files[0]);\r\n\r\n      return fetch(selfCm.config.observationUrl, {\r\n        method: 'POST',\r\n        body: data\r\n      })\r\n        .then(response => {\r\n          if (!response.ok) {\r\n            selfCm.busyIndicator.hide();\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n          }\r\n          selfCm.busyIndicator.hide();\r\n          selfCm._showMessagePromise(selfCm.nls.successRequestObservation).then((result) => {\r\n            dojo.query(\".backRequestsClsCm\")[0].click();\r\n            dojo.query(\".backTrayClsCm\")[0].click();\r\n            selfCm._loadIniRequestsCm();\r\n          })\r\n\r\n        }).catch(error => {\r\n          selfCm.busyIndicator.hide();\r\n          selfCm._showMessage(`${selfCm.nls.errorProcessRequestObservation} ${error}`, type = \"error\")\r\n        });\r\n    }\r\n    reader.readAsDataURL(file);\r\n  },\r\n\r\n  _uploadImagenObs(evt) {\r\n    let imageDiv = dojo.query(\".thumbnailClsCm\")[0];\r\n    let file = evt.target.files[0];\r\n    let reader = new FileReader();\r\n\r\n    reader.onloadend = function () {\r\n      imageDiv.innerHTML = \"\";\r\n      imageDiv.style.backgroundImage = 'url(' + reader.result + ')';\r\n      imageDiv.style.backgroundSize = 'contain';\r\n      imageDiv.style.backgroundRepeat = 'no-repeat';\r\n      imageDiv.style.backgroundPosition = 'center';\r\n    }\r\n\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n      imageDiv.innerHTML = \"<span><i class='far fa-image'></i></span>\";\r\n    }\r\n  },\r\n  _searchRequestByCodPred(evt) {\r\n    if (evt.keyCode === 13) {\r\n      if (evt.target.value == '') {\r\n        if ('cup' in selfCm.queryRequests) {\r\n          delete selfCm.queryRequests['cup'];\r\n        }\r\n      } else {\r\n        selfCm.queryRequests['cup'] = evt.target.value;\r\n        // selfCm.queryRequests.limit = selfCm.defaultLimit;\r\n      }\r\n      dojo.query(\".tablinksCm.active\")[0].click();\r\n    }\r\n  },\r\n\r\n  _sortedByDate(evt) {\r\n    const columnOrder = evt.currentTarget.dataset.val\r\n    evt.currentTarget.dataset.val = columnOrder.includes('-') ? columnOrder.replace('-', '') : `-${columnOrder}`\r\n    selfCm.queryRequests['ordering'] = evt.currentTarget.dataset.val;\r\n    selfCm._loadRequestsCm();\r\n    // dojo.query(\".tablinksCm.active\")[0].click();\r\n  },\r\n\r\n\r\n\r\n  onOpen() {\r\n    // this._createToolbar();\r\n\r\n    dojo.query(\".backTrayClsCm\").on('click', this._openFormCase);\r\n    dojo.query(\".tablinksCm\").on('click', this._loadRequestTabActiveCm);\r\n    dojo.query(\"#btnObsCaseCm\").on('click', this._openFormObs);\r\n    dojo.query(\".backRequestsClsCm\").on('click', this._openFormObs);\r\n    // dojo.query(\"#goodRequestsCm\").on('click', this._openFormResult);\r\n    dojo.query(\"#showInfoDocCm\").on('click', this._openSupportingDocument)\r\n\r\n    // Reasignacion\r\n    // dojo.query(\"#btnDrawMarkerCm\").on('click', this._activateTool);\r\n\r\n    dojo.query(\"#btnFsCm\").on('click', this._ApplyAcumulationLotsRefactor)\r\n    dojo.query(\"#btnDrawLinesDvCm\").on('click', this._activateToolLinesDivision)\r\n    dojo.query(\"#btnApplyDvCm\").on('click', this._ApplyDivideLotesRefactor)\r\n    dojo.query(\"#titleCaseCm\").on('click', this._zoomHomeRequests)\r\n    // dojo.query(\"#sendDataRsCm\").on('click', this._executeReasignacionGpService)\r\n    dojo.query('#sendDataFsCm').on('click', this._executeAcumulacionGpService.bind(this));\r\n    dojo.query('#sendDataDvCm').on('click', this._executeSubdivisionGpService.bind(this));\r\n    dojo.query('#sendDataIpCm').on('click', this._executeIndependenceLands.bind(this));\r\n    dojo.query('#sendDataDtCm').on('click', this._executeInactivarGpService);\r\n    dojo.query('#btnReportCm').on('click', this._exportTableToExcel);\r\n    dojo.query('#imgUploadCm').on('change', this._uploadImagenObs);\r\n    dojo.query('#sendDataObsGrCm').on('click', this._sendObservation);\r\n    dojo.query('#searchTbxCm').on(\"keyup\", this._searchRequestByCodPred);\r\n    dojo.query('.columnDateClsCm').on(\"click\", this._sortedByDate);\r\n    dojo.query('.selectLimitClsCm').on(\"change\", this._changeLimitPagination);\r\n    dojo.query('.buttonPaginationPrevClsCm').on(\"click\", this._prevPagePagination);\r\n    dojo.query('.buttonPaginationNextClsCm').on(\"click\", this._nextPagePagination);\r\n    dojo.query('.btnCancelClsCm').on(\"click\", this._cancelDrawRightOfWay.bind(this));\r\n\r\n    // dojo.query('.columnCaseClsCm').on(\"click\", this._sortedByDate)\r\n    this._loadIniRequestsCm()\r\n\r\n    selfCm.map.addLayer(graphicLayerLabelLineaDivision)\r\n    // selfCm.map.addLayer(graphicLayerLandsByIndependence)\r\n    selfCm.editToolbar = new Edit(selfCm.map);\r\n    // selfCm.map.on(\"click\", selfCm._enableEditingLabelsLotesDivision);\r\n    selfCm.editToolbar.on(\"deactivate\", function (evt) {\r\n      if (evt.info.isModified) {\r\n        selfCm.map.setInfoWindowOnClick(true)\r\n        // firePerimeterFL.applyEdits(null, [evt.graphic], null);\r\n      }\r\n    });\r\n  },\r\n\r\n  // this.toolDraw.map = this.map;\r\n\r\n  // onClose(){\r\n  //   console.log('CartoMaintenanceWgt::onClose');\r\n  // },\r\n  // onMinimize(){\r\n  //   console.log('CartoMaintenanceWgt::onMinimize');\r\n  // },\r\n  // onMaximize(){\r\n  //   console.log('CartoMaintenanceWgt::onMaximize');\r\n  // },\r\n  // onSignIn(credential){\r\n  //   console.log('CartoMaintenanceWgt::onSignIn', credential);\r\n  // },\r\n  // onSignOut(){\r\n  //   console.log('CartoMaintenanceWgt::onSignOut');\r\n  // }\r\n  // onPositionChange(){\r\n  //   console.log('CartoMaintenanceWgt::onPositionChange');\r\n  // },\r\n  // resize(){\r\n  //   console.log('CartoMaintenanceWgt::resize');\r\n  // }\r\n});\r\n"]}