{"version":3,"sources":["../../../widgets/CartoMaintenanceWgt/Widget.js"],"names":["declare","BaseWidget","_WidgetsInTemplateMixin","Draw","Edit","Graphic","SimpleFillSymbol","SimpleMarkerSymbol","SimpleLineSymbol","Color","GraphicsLayer","Point","LayerInfos","lang","FeatureLayer","QueryTask","Query","WidgetManager","geometryEngine","Polyline","Polygon","webMercatorUtils","BusyIndicator","Message","turf","XLSX","Deferred","TextSymbol","Font","CaseInfo","StatisticDefinition","esriRequest","SubDivision","Acumulation","Independence","Deactivate","LandAssignment","LandProcess","ToolDraw","UtilityCase","GeometryService","CustomException","SpatialReference","requestToAttendState","requestsObservedState","requestsAttendState","idLyrCatastroFiscal","idLyrCfPredios","idLyrCfLotesPun","idLyrCfEje_vial","idLyrCfNumeracion","idLyrCfArancel","idLyrCfLotes","idLyrCfUnidadesurbanas","idLyrCfParques","idLyrCfManzana","idLyrCfManzanaUrb","idLyrCfSector","idLyrDistricts","iconByState","_UBIGEO_FIELD","_ID_LOTE_P_FIELD","_COD_MZN_FIELD","_F_MZN_FIELD","_COD_SECT_FIELD","_COD_PRE_FIELD","_COD_LOTE_FIELD","toolbarCm","params","URLSearchParams","window","location","search","paramsApp","keys","key","get","symbolPuntoLote","STYLE_SQUARE","STYLE_SOLID","symbolFusionLote","symbolEliminarLote","STYLE_DIAGONAL_CROSS","symbolLoteSelected","symbolDivisionLote","STYLE_DASH","symbolPredio","symbolRightOfWay","symbolPredioSelected","symbolPredioSelected2","symbolSnapPointCm","STYLE_CROSS","idGraphicPredioCm","idGraphicPredioByMaintenance","idGraphicPredioSelectedCm","idGraphicLoteCm","idGraphicLoteSelectedCm","idGraphicPuntoLote","idGraphicFrenteLote","idGraphicLineaDivision","idGraphicLoteDeleteCm","idGraphicLabelLineaDivision","idGraphicLabelCodLote","idGraphicCandidateRightOfWay","idGraphicRightOfWay","symbolByCase","graphicLayerLineaDivision","id","graphicLayerLabelLineaDivision","graphicLayerPredioByMaintenance","graphicLayerPuntoLote","graphicLayerFrenteLote","graphicCandidateRightOfWay","graphicRightOfWay","graphicLayerLotPreview","fontAwesome","document","createElement","src","head","appendChild","baseClass","codRequestsCm","currentTabActive","layersMap","queryUbigeo","case","caseDescription","lotesQuery","idlotes","arancel","codigosPredios","xy","idxLines","cpm","idPredio","editToolbar","idButtonDrawActive","queryRequests","ubigeo","limit","offset","ordering","defaultOffset","currentCount","responseRequests","currentLotsRows","currentLandRows","currentPoinLotsRows","resolutionType","resolutionDocument","floor","urbanLotNumber","statusDrawingRightOfWay","extentBlock","pointLotsNotMediterrnean","currentLandDraw","currentRightOfWayDraw","limitAnother","postCreate","inherited","arguments","_createToolbar","_setInitAppCm","geometryService","config","geometryServiceUrl","selfCm","_getAllLayers","deferred","getInstance","map","itemInfo","then","hitch","layerInfosObj","resolve","catch","reject","err","promise","response","_filterByDistrictCm","_startExtentByDistrictCm","_setToolbarDraw","_showMessage","message","type","lotFeatureLayer","getLayer","anotherToolbar","initToolDraw","controlMeasurementRealTime","measurementLabelApCm","controlMeasurementTable","bodyTbMeasurementApCm","linearDivision","callbackAddLineDivision","_divisorLine","dojo","query","on","activateToolDraw","bind","title","nls","widgetTitle","titleLabel","_showMessagePromise","messagetext","buttons","label","onClick","hide","_showMessageConfirm","messageText","quesstionContinue","mensaje","queryPredios","getLayerInfoById","getFilter","setFilter","where","qTask","getUrl","executeForExtent","setExtent","results","extent","homeWidget","getWidgetsByName","homeDijit","startup","busyIndicator","create","target","domNode","parentNode","backgroundOpacity","_callApiRestServices","baseUrl","url","URL","Object","forEach","searchParams","append","fetch","ok","Error","status","json","console","log","_getRequestsTrayDataCm","responseData","state","data","filter","i","_loadIniRequestsCm","click","_parseDateStringtoFormat","dateString","date","Date","day","getDate","month","getMonth","year","getFullYear","_loadRequestTabActiveCm","evt","currentElementActive","idStatus","_loadRequestsCm","show","applicationListUrl","dataHtml","lands","lnd","join","idType","icon","tbody","innerHTML","tb","getElementsByTagName","length","tableRequestApCm","removeChild","_openFormCase","_openFormResult","removeClass","classList","add","_controlLabelPagination","_changeLimitPagination","parseInt","value","_nextPagePagination","_prevPagePagination","ini","disabled","end","_zoomToPredSelectedEvt","cup","currentTarget","dataset","_zoomToPredSelected","_handleFeatureSelected","feature","setZoom","featureSelected","setSymbol","addLayer","centerAt","geometry","setTimeout","_removeLayerGraphic","LandCls","Land","prediosLayer","propertyLayer","mode","MODE_ONDEMAND","outFields","codCpu","estado","selectFeatures","SELECTION_NEW","emptyLandSelected","error","_openSupportingDocument","emptyDocSupport","open","focus","executeQueryTask","Promise","execute","_getLandsOriginals","self","LotCls","Lot","queryLands","cpuOriginal","currentLandTabRows","ubigeoFieldName","returnGeometry","urlLands","features","errorGetLand","idLots","attributes","idLotP","_getLotsOriginals","queryLots","urlLots","emptyLotRequests","codMznValues","codSectValues","_getExtentBlock","queryBlock","urlBlock","_getPointLotsOriginals","queryPointLots","urlPointLots","emptyPointLotRequests","_getLandsOriginalsTab","idSolicitud","urlOriginal","landsByApplicationUrl","count","_getOriginalData","_zoomExtentToLote","errorAcumulationLandsNumber","unionPredios","_unionFeatures","getExtent","expand","_zoomHomeRequests","_toggleBodyCaseInfo","closest","querySelector","toggle","_requestCaseInfo","urlResults","resultsByApplication","urlDocSupport","urlAffectedLands","affectedLands","all","_","responseResults","responseDocSupport","responseAffectedLands","rows","idx","contentCard","active","empyLandResultsRequests","support","rowsAffected","addClass","rowsResults","uniqueCodeLands","fusionApCm","divisionApCm","containerToolDrawApCm","eliminacionApCm","_applyIndependenceRefactor","resultCtnApCm","remove","obsCtnApCm","requestTrayApCm","casesCtnApCm","row","rowList","td","deactivate","disableSnapping","bodyTbLinesDvApCm","bodyTbPrediosDvApCm","bodyTbDatosLoteDvApCm","removeAllGraphicsIntoMeasurements","clear","_removeClassActiveButton","_openFormObs","textAreaObsApCm","imageDiv","imgUploadApCm","style","backgroundImage","_FormResult","id_solicitud","caseCm","urlPredioResults","nameCase","resultDeactivate","bodyTbResultsApCm","predio","index","_centerAtPredioResult","replace","_refreshLayersCF","setVisibility","_addToMap","screenPoint","toScreen","pointsSnapping","snappingManager","layers","graphics","getSnappingPoint","errorSnapingLocate","pointGeographic","webMercatorToGeographic","pointGraphic","intersects","tipLot","undefined","containerHelpRightOfWayApCm","stateWidget","getParent","getElementsByClassName","outSpatialReference","queryTask","mediterraneanPointLot","pointLostSnapping","concat","point","puntoLoteGraphic","enableSnapping","layerInfos","layer","name","alwaysSnap","snapPointSymbol","activate","graphicDrawLand","mediterraneanCoords","graphicDrawRightOfWay","setInfoWindowOnClick","_cancelDrawRightOfWay","nameIdLine","polylineGeomUtm","vertices","paths","lastTwoCoords","slice","line","lineString","bearing","coordinates","options","units","addDistance","destintation","destination","vertices2","reverse","lastTwoCoords2","line2","bearing2","point2","destintation2","unshift","polyline","spatialReference","geographicToWebMercator","graphic","_populateTableDrawLine","_addNameToLine","layerId","graphicsLayerIds","includes","removeLayer","_activateToolLinesDivision","deactivateToolbarAnotherToolbar","_activateSnappingByDivision","graphicsLayerInfo","esri","LayerInfo","tolerance","arr","union","_unionFeaturesAcumulation","topology","rings","deletedRings","a","polygonA","b","polygonB","contain","within","push","polygonParents","ring","polygon","check","_getOriginalLots","_addGraphicsPointLotsIndependence","_populateTablePredio","bodyTbPrediosIpApCm","_activateToolPrediosByMaintenance","_addGraphicsAfterPreVisualization","independenceApCm","_ApplyAcumulationLotsRefactor","_addGraphicsPointLotsAndArancel","mediterraneanLotsGeometry","_addGraphicsPointMediterraneanLot","_getMaxCodLot","_ordenarPoligonosNorteSur","maxCodLot","bodyTbDatosLoteFsApCm","bodyTbPrediosFsApCm","_getMidpoint","geodesicLength","midpoint","geodesicDensify","getPoint","_findMidpoint","lengthPolylineChunk","along","_getLongestPolyline","longestPath","path","polylineChunk","wkid","_dividePolygon","poly","lines","divide","cut","item","simplePolygon","idLine","tr","cursor","_deleteRowLine","_zoonToLineDivision","_editaNameLineDivision","elem","graphicLabel","polylineGeom","midPoint","pointLabel","x","y","font","STYLE_NORMAL","VARIANT_NORMAL","WEIGHT_BOLD","txtSym","setOffset","setAlign","ALIGN_END","setHaloColor","setHaloSize","_extent","symbol","text","innerText","refresh","bodyTable","drawFunction","_activateSnappingPredios","graphiclayer","parentElement","resolutiontype","resolutiondocument","urbanlotnumber","graphicROW","_changeValueCodLote","selectedValue","currentSelectId","split","lyr","graphicSelected","selects","select","graphicNotSelected","_changeLotUrb","lot_urb","_centerAtLabelCodLoteDivision","centerAndZoom","_editLoteUrbanoDivision","selectedOptions","_buildDataLoteTable","tableBody","predios","indexCell","className","textContent","num","codigoCell","optionDisabled","option","p","cod_lote","selected","loteUrbCell","loteUrbSelect","optionDisabledLotUrb","cloneNode","request","locationMarker","lotsDividedResults","coordenadasNorte","lotDividedResult","ymax","lotsDividedResultsSorted","sort","coordenadaNorteA","indexOf","coordenadaNorteB","graphicLayerLabelCodLoteDivision","dataLoteTable","labelPoints","_zfill","setColor","setSize","idGraphic","clase","len","Array","fill","estadisticaDef","statisticType","onStatisticField","outStatisticFieldName","outStatistics","result","maxCodLote","resultado","lotLayer","_getPolylinesDrawn","unionGraphicLayerLineaDivision","lineGeometry","_divideLotsByLines","errorLotQuery","polygonGeometry","geomLoteDivided","errorDivideLot","lote","orderByFields","frentes","isItc","hasOwnProperty","unionFrentes","nonIntersectedPolygons","idItcFrentesByLotes","idxNotMediterranean","splice","idxLotPreview","itcFrentesByLotes","intersect","symbolFrenteLote","Math","random","frente","puntoLoteTurf","puntoLote","PointLotCls","PointLot","arrayPolygon","_ApplyDivideLotesRefactor","emptyLineSubdivision","reorderLayer","_executeAcumulacionGpService","emptyPreviewAccumulation","emptyNewLand","labelCodLotesLayer","_addWarningMessageExecute","labelCodLotesLayerGraphic","codRequests","codLot","lotUrb","coords","newPointLotsGraphics","newLandsGraphics","landUrl","pointLotUrl","lotUrl","arancelUrl","blockUrl","cadastralBlockUrl","lotGraphic","user","caseRequest","executeAcumulation","_removeWarningMessageExecute","successProcess","ErrorEqualUrbanLotWithinBlock","_executeSubdivisionGpService","layerLote","emptyPreviewSubdivision","pred","emptyLotCodeSubdivision","emptyUrbanLotSubdivision","emptyGraphicLandSubdivision","checkLotsWithinLands","emptyLandResultSubdivision","lotUrbArray","duplicateLotUrban","checkDuplicateLotUrbanResults","duplicateLotUrbanResult","executeSubdivision","_executeInactivarGpService","codRequest","cpu","executeDeactivate","finally","buzyElm","imgElm","loadingText","position","topMessage","parseFloat","top","leftImg","left","width","transform","background","zIndex","warningExecute","_executeIndependenceLands","newLands","matrixLand","executeIndependence","_exportTableToExcel","table","headerRow","querySelectorAll","headers","headerCols","h","cols","j","wb","utils","book_new","ws","json_to_sheet","sheetName","book_append_sheet","writeFile","_dataURItoBlob","dataURI","byteString","atob","mimeString","buffer","ArrayBuffer","dataView","Uint8Array","charCodeAt","Blob","_sendObservation","file","files","messageObservation","trim","emptyObservation","emptyImageSupport","reader","FileReader","FormData","onloadend","observationUrl","method","body","successRequestObservation","errorProcessRequestObservation","readAsDataURL","_uploadImagenObs","backgroundSize","backgroundRepeat","backgroundPosition","_searchRequestByCodPred","keyCode","_sortedByDate","columnOrder","val","onOpen","info","isModified"],"mappings":"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","file":"Widget.js","sourcesContent":["import declare from 'dojo/_base/declare';\r\nimport BaseWidget from 'jimu/BaseWidget';\r\nimport _WidgetsInTemplateMixin from 'dijit/_WidgetsInTemplateMixin';\r\nimport Draw from \"esri/toolbars/draw\";\r\nimport Edit from \"esri/toolbars/edit\";\r\nimport Graphic from \"esri/graphic\";\r\nimport SimpleFillSymbol from \"esri/symbols/SimpleFillSymbol\";\r\nimport SimpleMarkerSymbol from \"esri/symbols/SimpleMarkerSymbol\";\r\nimport SimpleLineSymbol from \"esri/symbols/SimpleLineSymbol\";\r\nimport Color from 'dojo/_base/Color';\r\nimport GraphicsLayer from \"esri/layers/GraphicsLayer\"\r\nimport Point from \"esri/geometry/Point\"\r\nimport LayerInfos from \"jimu/LayerInfos/LayerInfos\";\r\nimport lang from \"dojo/_base/lang\";\r\nimport FeatureLayer from \"esri/layers/FeatureLayer\";\r\nimport QueryTask from \"esri/tasks/QueryTask\";\r\nimport Query from \"esri/tasks/query\";\r\nimport WidgetManager from \"jimu/WidgetManager\"\r\nimport geometryEngine from \"esri/geometry/geometryEngine\";\r\nimport Polyline from \"esri/geometry/Polyline\";\r\nimport Polygon from \"esri/geometry/Polygon\";\r\nimport webMercatorUtils from \"esri/geometry/webMercatorUtils\";\r\n// import Geoprocessor from \"esri/tasks/Geoprocessor\";\r\nimport BusyIndicator from 'esri/dijit/util/busyIndicator';\r\nimport Message from \"jimu/dijit/Message\";\r\nimport turf from \"https://unpkg.com/@turf/turf@6/turf.min.js\"\r\nimport XLSX from \"https://unpkg.com/xlsx@0.17.2/dist/xlsx.full.min.js\"\r\nimport Deferred from \"dojo/Deferred\";\r\nimport TextSymbol from \"esri/symbols/TextSymbol\";\r\nimport Font from \"esri/symbols/Font\";\r\nimport CaseInfo from './CaseInfo';\r\nimport StatisticDefinition from \"esri/tasks/StatisticDefinition\"\r\nimport esriRequest from \"esri/request\"\r\nimport SubDivision from './case/Subdivision';\r\nimport Acumulation from './case/Acumulation';\r\nimport Independence from './case/Independence';\r\nimport Deactivate from './case/Deactivate';\r\nimport LandAssignment from './components/LandAssignment';\r\nimport LandProcess from './components/LandProcess';\r\nimport ToolDraw from './components/ToolDraw';\r\n// import LandMatrix from './components/LandMatrix';\r\nimport UtilityCase from './case/UtilityCase';\r\nimport GeometryService from \"esri/tasks/GeometryService\";\r\nimport CustomException from './case/CustomException';\r\nimport SpatialReference from \"esri/SpatialReference\";\r\n// import LengthsParameters from \"esri/tasks/LengthsParameters\";\r\n\r\n\r\n\r\nconst requestToAttendState = \"por_atender\"\r\nconst requestsObservedState = \"observado\"\r\nconst requestsAttendState = \"atendido\"\r\n\r\n\r\n// Layers ids\r\nconst idLyrCatastroFiscal = \"CARTO_FISCAL_6806\"\r\nconst idLyrCfPredios = \"CARTO_FISCAL_8991\"\r\nconst idLyrCfLotesPun = \"CARTO_FISCAL_981\"\r\nconst idLyrCfEje_vial = \"CARTO_FISCAL_6806_2\"\r\nconst idLyrCfNumeracion = \"CARTO_FISCAL_6806_3\"\r\nconst idLyrCfArancel = \"CARTO_FISCAL_4232\"\r\nconst idLyrCfLotes = \"CARTO_FISCAL_2802\"\r\nconst idLyrCfUnidadesurbanas = \"CARTO_FISCAL_6806_6\"\r\nconst idLyrCfParques = \"CARTO_FISCAL_6806_7\"\r\nconst idLyrCfManzana = \"CARTO_FISCAL_6806_8\"\r\nconst idLyrCfManzanaUrb = \"CARTO_FISCAL_6806_9\"\r\nconst idLyrCfSector = \"CARTO_FISCAL_6806_10\"\r\n// const idLyrActpuntoimg = \"ACTUALIZACION_DE_PUNTO_IMG_1890\"\r\nconst idLyrDistricts = \"limites_nacional_1821_2\"\r\n\r\nconst iconByState = {\r\n  \"por_atender\": { 'icon': 'fas fa-pencil-alt', 'id': 'editRequestsCm', 'desc': \"Por atender\", 'idStatus': 1 },\r\n  \"observado\": { 'icon': 'fas fa-pause', 'id': 'obsRequestsCm', 'desc': \"Observado\", 'idStatus': 3 },\r\n  \"atendido\": { 'icon': 'fas fa-check', 'id': 'goodRequestsCm', 'desc': \"Atendido\", 'idStatus': 2 },\r\n}\r\n\r\n// Fields \r\nconst _UBIGEO_FIELD = \"UBIGEO\"\r\nconst _ID_LOTE_P_FIELD = \"ID_LOTE_P\"\r\nconst _COD_MZN_FIELD = \"COD_MZN\"\r\nconst _F_MZN_FIELD = \"F_MZN\"\r\nconst _COD_SECT_FIELD = \"COD_SECT\"\r\nconst _COD_PRE_FIELD = \"COD_PRE\"\r\nconst _COD_LOTE_FIELD = \"COD_LOTE\"\r\n\r\n\r\nlet toolbarCm\r\n\r\nconst params = new URLSearchParams(window.location.search)\r\nconst paramsApp = {}\r\n\r\nfor (let key of params.keys()) {\r\n  paramsApp[key] = params.get(key)\r\n}\r\n\r\n// Styles\r\nconst symbolPuntoLote = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_SQUARE,\r\n  18,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0]), 2),\r\n  new Color([0, 92, 230, 1]\r\n  )\r\n)\r\n\r\nconst symbolFusionLote = new SimpleFillSymbol(\r\n  SimpleFillSymbol.STYLE_SOLID,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0]),\r\n    2\r\n  ),\r\n  new Color([255, 255, 0, 0.25])\r\n)\r\n\r\nconst symbolEliminarLote = new SimpleFillSymbol(\r\n  SimpleFillSymbol.STYLE_DIAGONAL_CROSS,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([100, 100, 100]),\r\n    2\r\n  ),\r\n  new Color([229, 229, 229, 0.9])\r\n)\r\n\r\nconst symbolLoteSelected = new SimpleFillSymbol(\r\n  SimpleFillSymbol.STYLE_SOLID,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0, 0.75]),\r\n    4\r\n  ),\r\n  new Color([0, 255, 0, 0])\r\n)\r\n\r\nconst symbolDivisionLote = new SimpleLineSymbol(\r\n  SimpleLineSymbol.STYLE_DASH,\r\n  new Color([255, 0, 0]),\r\n  2\r\n)\r\n\r\nconst symbolPredio = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_SQUARE,\r\n  18,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0]), 2),\r\n  new Color([235, 69, 95, 1]\r\n  )\r\n)\r\n\r\n// symbolRightOfWay is green\r\nconst symbolRightOfWay = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_SQUARE,\r\n  25,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([0, 255, 0]), 2),\r\n  new Color([102, 187, 106, 0.75])\r\n);\r\n\r\nconst symbolPredioSelected = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_SQUARE, 20,\r\n  new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0]), 4),\r\n  new Color([0, 255, 0, 0])\r\n);\r\n\r\nconst symbolPredioSelected2 = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_SQUARE,\r\n  30,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([0, 183, 205]), 2),\r\n  new Color([0, 255, 255]\r\n  )\r\n);\r\n\r\nconst symbolSnapPointCm = new SimpleMarkerSymbol(\r\n  SimpleMarkerSymbol.STYLE_CROSS,\r\n  20,\r\n  new SimpleLineSymbol(\r\n    SimpleLineSymbol.STYLE_SOLID,\r\n    new Color([255, 0, 0]),\r\n    2\r\n  ),\r\n  new Color([0, 255, 0, 0.25])\r\n)\r\n\r\n\r\n// Identificadores de graficos\r\nconst idGraphicPredioCm = \"graphicPredioCm2\"\r\nconst idGraphicPredioByMaintenance = \"graphicPredioByMaintenance\"\r\n// const idGraphicLandsByIndependence = \"graphicLandsByIndependence\"\r\nconst idGraphicPredioSelectedCm = \"graphicPredioSelected\"\r\nconst idGraphicLoteCm = \"graphicLoteCm\"\r\nconst idGraphicLoteSelectedCm = \"graphicLoteSelectedCm\"\r\nconst idGraphicPuntoLote = \"graphicPuntoLote\"\r\nconst idGraphicFrenteLote = \"graphicFrenteLote\"\r\nconst idGraphicLineaDivision = \"graphicLineaDivision\"\r\nconst idGraphicLoteDeleteCm = \"graphicLoteDeleteCm\"\r\nconst idGraphicLabelLineaDivision = \"graphicLabelLineaDivision\"\r\nconst idGraphicLabelCodLote = \"graphicLabelCodLoteDivision\"\r\nconst idGraphicCandidateRightOfWay = \"graphicCandidateRightOfWay\"\r\nconst idGraphicRightOfWay = \"graphicRightOfWay\"\r\n\r\n// symbol by case\r\nconst symbolByCase = {\r\n  \"1\": { \"symbol\": symbolPredio },\r\n  \"2\": { \"symbol\": symbolPredio },\r\n  \"3\": { \"symbol\": symbolPredio },\r\n}\r\n\r\n// graphicsLayer main\r\nconst graphicLayerLineaDivision = new GraphicsLayer({\r\n  id: idGraphicLineaDivision,\r\n});\r\n\r\nconst graphicLayerLabelLineaDivision = new GraphicsLayer({\r\n  id: idGraphicLabelLineaDivision,\r\n});\r\n\r\n// let graphicLayerLabelCodLoteDivision = new GraphicsLayer({\r\n//   id: idGraphicLabelCodLote,\r\n// });\r\n\r\nconst graphicLayerPredioByMaintenance = new GraphicsLayer({\r\n  id: idGraphicPredioByMaintenance,\r\n});\r\n\r\nconst graphicLayerPuntoLote = new GraphicsLayer({\r\n  id: idGraphicPuntoLote\r\n});\r\n// creamos grafico de frente de lote\r\nconst graphicLayerFrenteLote = new GraphicsLayer({\r\n  id: idGraphicFrenteLote\r\n});\r\n\r\nconst graphicCandidateRightOfWay = new GraphicsLayer({\r\n  id: idGraphicCandidateRightOfWay\r\n});\r\n\r\n\r\nconst graphicRightOfWay = new GraphicsLayer({\r\n  id: idGraphicRightOfWay\r\n});\r\n\r\n\r\nconst graphicLayerLotPreview = new GraphicsLayer({\r\n  id: idGraphicLoteCm\r\n});\r\n\r\n// const graphicLayerLandsByIndependence = new GraphicsLayer({\r\n//   id: idGraphicLandsByIndependence,\r\n// });\r\n\r\nconst fontAwesome = document.createElement('script');\r\nfontAwesome.src = 'https://use.fontawesome.com/releases/v5.3.1/js/all.js';\r\ndocument.head.appendChild(fontAwesome);\r\n\r\n// To create a widget, you need to derive from BaseWidget.\r\nexport default declare([BaseWidget], {\r\n\r\n  // Custom widget code goes here\r\n\r\n  baseClass: 'carto-maintenance-wgt',\r\n  codRequestsCm: null,\r\n  currentTabActive: requestToAttendState,\r\n  layersMap: [],\r\n  queryUbigeo: paramsApp['ubigeo'] ? `${_UBIGEO_FIELD} = '${paramsApp['ubigeo']}'` : \"1=1\",\r\n  case: 0,\r\n  caseDescription: '',\r\n  lotesQuery: null,\r\n  idlotes: null,\r\n  arancel: null,\r\n  codigosPredios: null,\r\n  xy: [],\r\n  idxLines: 0,\r\n  cpm: '',\r\n  idPredio: '',\r\n  editToolbar: null,\r\n  idButtonDrawActive: '',\r\n  queryRequests: {\r\n    ubigeo: paramsApp['ubigeo'],\r\n    limit: 25,\r\n    offset: 0,\r\n    ordering: \"date\"\r\n  },\r\n  // defaultLimit: 25,\r\n  defaultOffset: 0,\r\n  currentCount: 0,\r\n  responseRequests: null,\r\n  currentLotsRows: null,\r\n  currentLandRows: null,\r\n  currentPoinLotsRows: null,\r\n\r\n  resolutionType: null,\r\n  resolutionDocument: null,\r\n  floor: null,\r\n  urbanLotNumber: null,\r\n  statusDrawingRightOfWay: false,\r\n  extentBlock: null,\r\n  pointLotsNotMediterrnean: null,\r\n  currentLandDraw: null,\r\n  currentRightOfWayDraw: null,\r\n  limitAnother: 10000,\r\n  // toolDraw: new ToolDraw(),\r\n\r\n  // ErrorEqualUrbanLotWithinBlock: new CustomException.ErrorEqualUrbanLotWithinBlock(),\r\n  // currentLotsRowsAsPolygons: null,\r\n\r\n  // add additional properties here\r\n\r\n  // methods to communication with app container:\r\n  postCreate() {\r\n    this.inherited(arguments);\r\n    // this._getAllLayers();\r\n    this._createToolbar();\r\n    this._setInitAppCm();\r\n    this.geometryService = new GeometryService(this.config.geometryServiceUrl);\r\n    selfCm = this;\r\n    // this._filterByDistrictCm();\r\n    // this._startExtentByDistrictCm();\r\n    // this._setToolbarDraw();\r\n    // esri.bundle.toolbars.draw.addPoint = esri.bundle.toolbars.draw.addPoint + \"<br/>Pulsar <strong>CTRL</strong> para activar la alineación\";\r\n    // esri.bundle.toolbars.draw.addShape = esri.bundle.toolbars.draw.addShape + \"<br/>Pulsar <strong>CTRL</strong> para activar la alineación\";\r\n    // esri.bundle.toolbars.draw.resume = esri.bundle.toolbars.draw.resume + \"<br/>Pulsar <strong>CTRL</strong> para activar la alineación\";\r\n    // esri.bundle.toolbars.draw.start = esri.bundle.toolbars.draw.start + \"<br/>Pulsar <strong>CTRL</strong> para activar la alineación\";\r\n  },\r\n  _getAllLayers() {\r\n    const deferred = new Deferred();\r\n    LayerInfos.getInstance(this.map, this.map.itemInfo)\r\n      .then(lang.hitch(this, function (layerInfosObj) {\r\n        // this.layersMap = layerInfosObj;\r\n        return deferred.resolve(layerInfosObj);\r\n      }))\r\n      .catch(err => deferred.reject(err));\r\n    return deferred.promise;\r\n  },\r\n\r\n  _setInitAppCm() {\r\n    return this._getAllLayers()\r\n      .then(response => {\r\n        this.layersMap = response;\r\n        this._filterByDistrictCm();\r\n      })\r\n      .then(() => {\r\n        return this._startExtentByDistrictCm(this.map);\r\n      })\r\n      .then(() => {\r\n        this._setToolbarDraw();\r\n      })\r\n      .catch(err => {\r\n        this._showMessage(err.message, type = \"error\")\r\n      });\r\n  },\r\n\r\n  _setToolbarDraw() {\r\n    ToolDraw.map = this.map;\r\n    // ToolDraw.lotUrl = this.layersMap.getLayerInfoById(idLyrCfLotes).getUrl();\r\n    ToolDraw.lotFeatureLayer = this.map.getLayer(idLyrCfLotes);\r\n    ToolDraw.anotherToolbar = toolbarCm;\r\n    ToolDraw.initToolDraw();\r\n    ToolDraw.controlMeasurementRealTime = this.measurementLabelApCm;\r\n    ToolDraw.controlMeasurementTable = this.bodyTbMeasurementApCm;\r\n    ToolDraw.linearDivision = graphicLayerLineaDivision;\r\n    ToolDraw.callbackAddLineDivision = this._divisorLine;\r\n    dojo.query('#measurementNewCm').on(\"click\", ToolDraw.activateToolDraw.bind(ToolDraw));\r\n\r\n  },\r\n\r\n  _showMessage(message, type = 'message') {\r\n    const title = `${this.nls.widgetTitle}: ${type}`\r\n    switch (type) {\r\n      case 'error':\r\n        new Message({\r\n          type: type,\r\n          titleLabel: title,\r\n          message: message,\r\n        });\r\n        break;\r\n      default:\r\n        new Message({\r\n          type: type,\r\n          titleLabel: title,\r\n          message: message,\r\n        });\r\n        break;\r\n    }\r\n\r\n  },\r\n\r\n  _showMessagePromise(messagetext) {\r\n    const deferred = new Deferred();\r\n    const message = new Message({\r\n      titleLabel: `${this.nls.widgetTitle}`,\r\n      message: messagetext,\r\n      buttons: [{\r\n        label: \"Ok\",\r\n        onClick: function () {\r\n          deferred.resolve(true);\r\n          message.hide();\r\n        }\r\n      }]\r\n    });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _showMessageConfirm(messageText = this.nls.quesstionContinue) {\r\n    const deferred = new Deferred();\r\n    const mensaje = new Message({\r\n      titleLabel: `${this.nls.widgetTitle}: question`,\r\n      message: messageText,\r\n      type: \"question\",\r\n      buttons: [{\r\n        label: \"Sí\",\r\n        onClick: function () {\r\n          deferred.resolve(true);\r\n          mensaje.hide();\r\n        }\r\n      }, {\r\n        label: \"No\",\r\n        onClick: function () {\r\n          deferred.resolve(false);\r\n          mensaje.hide();\r\n        }\r\n      }]\r\n    });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _filterByDistrictCm() {\r\n    let queryPredios = this.layersMap.getLayerInfoById(idLyrCfPredios).getFilter()\r\n    queryPredios = queryPredios ? queryPredios + \" AND \" + this.queryUbigeo : this.queryUbigeo\r\n    this.layersMap.getLayerInfoById(idLyrCfPredios).setFilter(queryPredios)\r\n    this.layersMap.getLayerInfoById(idLyrCfLotesPun).setFilter(this.queryUbigeo)\r\n    this.layersMap.getLayerInfoById(idLyrCfEje_vial).setFilter(this.queryUbigeo)\r\n    this.layersMap.getLayerInfoById(idLyrCfNumeracion).setFilter(this.queryUbigeo)\r\n    this.layersMap.getLayerInfoById(idLyrCfArancel).setFilter(this.queryUbigeo)\r\n    this.layersMap.getLayerInfoById(idLyrCfLotes).setFilter(this.queryUbigeo)\r\n    this.layersMap.getLayerInfoById(idLyrCfUnidadesurbanas).setFilter(this.queryUbigeo)\r\n    this.layersMap.getLayerInfoById(idLyrCfParques).setFilter(this.queryUbigeo)\r\n    this.layersMap.getLayerInfoById(idLyrCfManzana).setFilter(this.queryUbigeo)\r\n    this.layersMap.getLayerInfoById(idLyrCfManzanaUrb).setFilter(this.queryUbigeo)\r\n    this.layersMap.getLayerInfoById(idLyrCfSector).setFilter(this.queryUbigeo)\r\n    // selfCm.layersMap.getLayerInfoById(idLyrActpuntoimg).setFilter(selfCm.queryUbigeo)\r\n  },\r\n\r\n  _startExtentByDistrictCm(map) {\r\n    const deferred = new Deferred();\r\n    const query = new Query()\r\n    query.where = this.queryUbigeo\r\n\r\n    const qTask = new QueryTask(this.layersMap.getLayerInfoById(idLyrDistricts).getUrl())\r\n\r\n    // qTask.executeForExtent(query, (results) => {\r\n    //   this.map.setExtent(results.extent).then(function () {\r\n    //     // get the next scale value from the current scale\r\n    //     const homeWidget = WidgetManager.getInstance().getWidgetsByName(\"HomeButton\");\r\n    //     homeWidget[0].homeDijit.extent = this.map.extent;\r\n    //     deferred.resolve(true);\r\n    //   })\r\n    // }, (error) => {\r\n    //   deferred.reject(error);\r\n    // })\r\n    // return deferred.promise;\r\n\r\n    qTask.executeForExtent(query)\r\n      .then(results => {\r\n        return map.setExtent(results.extent)\r\n      })\r\n      .then(() => {\r\n        const homeWidget = WidgetManager.getInstance().getWidgetsByName(\"HomeButton\");\r\n        homeWidget[0].homeDijit.extent = map.extent;\r\n        deferred.resolve(true);\r\n      })\r\n      .catch(err => deferred.reject(err));\r\n    return deferred.promise;\r\n  },\r\n\r\n  startup() {\r\n    this.inherited(arguments);\r\n\r\n    this.busyIndicator = BusyIndicator.create({\r\n      target: this.domNode.parentNode.parentNode,\r\n      backgroundOpacity: 0\r\n    });\r\n  },\r\n\r\n  _callApiRestServices(baseUrl, params) {\r\n    const url = new URL(baseUrl);\r\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\r\n\r\n    return fetch(url)\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          selfCm.busyIndicator.hide();\r\n          throw new Error(\"HTTP error \" + response.status);\r\n        }\r\n        return response.json();\r\n      })\r\n      .catch(function (err) {\r\n        selfCm.busyIndicator.hide();\r\n        console.log(\"An error occurred while fetching the data.\");\r\n      });\r\n  },\r\n\r\n  _getRequestsTrayDataCm(responseData, state) {\r\n    // Reemplazar todo el metodo para capturar datos de servicio\r\n    const data = responseData.filter((i) => i.status == state);\r\n    return data\r\n  },\r\n\r\n  _loadIniRequestsCm() {\r\n    dojo.query(`#${selfCm.currentTabActive}`)[0].click()\r\n  },\r\n\r\n  _parseDateStringtoFormat(dateString) {\r\n    const date = new Date(dateString)\r\n    const day = date.getDate()\r\n    const month = date.getMonth() + 1\r\n    const year = date.getFullYear()\r\n    return `${day}/${month}/${year}`\r\n  },\r\n\r\n  _loadRequestTabActiveCm(evt) {\r\n    // selfCm.busyIndicator.show();\r\n    selfCm.currentTabActive = evt.target.id;\r\n    selfCm.currentElementActive = evt.target;\r\n    selfCm.queryRequests['id_status'] = iconByState[evt.target.id].idStatus;\r\n    selfCm.queryRequests['offset'] = selfCm.defaultOffset;\r\n    selfCm._loadRequestsCm()\r\n    // .then(selfCm._controlLabelPagination());\r\n  },\r\n\r\n  _loadRequestsCm() {\r\n    selfCm.busyIndicator.show();\r\n    selfCm._callApiRestServices(selfCm.config.applicationListUrl, selfCm.queryRequests).then(response => {\r\n      selfCm.currentCount = response['count'];\r\n\r\n      response = response['results']\r\n      const dataHtml = response.map((i) => `<tr>\r\n                                        <td>${i.id}</td>\r\n                                        <td>${i.type}</td>\r\n                                        <td>${i.lands.map(lnd => lnd['cup']).join(', ')}</td>\r\n                                        <td>${selfCm._parseDateStringtoFormat(i.date)}</td>\r\n                                        <td>\r\n                                          <button id=\"${iconByState[selfCm.currentTabActive].id}\" value=\"${i.idType}\" class=\"stateRequestClsCm\">\r\n                                            <i class=\"${iconByState[selfCm.currentTabActive].icon}\"></i>\r\n                                          </button>\r\n                                        </td>\r\n                                      </tr>`\r\n      )\r\n      const tbody = dojo.create('tbody', { innerHTML: dataHtml.join('') });\r\n      const tb = dojo.query(\".tableRequestClsCm\")[0]\r\n      if (tb.getElementsByTagName(\"tbody\").length > 0) {\r\n        selfCm.tableRequestApCm.removeChild(tb.getElementsByTagName(\"tbody\")[0])\r\n      }\r\n      selfCm.tableRequestApCm.appendChild(tbody);\r\n      if (selfCm.currentTabActive == requestToAttendState) {\r\n        dojo.query(\".stateRequestClsCm\").on('click', selfCm._openFormCase);\r\n      }\r\n      if (selfCm.currentTabActive == requestsAttendState) {\r\n        dojo.query(\".stateRequestClsCm\").on('click', selfCm._openFormResult);\r\n      }\r\n\r\n      dojo.query(\".tablinksCm\").removeClass(\"active\");\r\n      selfCm.currentElementActive.classList.add(\"active\");\r\n      selfCm._controlLabelPagination();\r\n      selfCm.busyIndicator.hide();\r\n    })\r\n  },\r\n\r\n  _changeLimitPagination(evt) {\r\n    selfCm.queryRequests['limit'] = parseInt(evt.target.value);\r\n    selfCm.queryRequests['offset'] = selfCm.defaultOffset;\r\n    selfCm._loadRequestsCm();\r\n  },\r\n\r\n  _nextPagePagination(evt) {\r\n    selfCm.queryRequests['offset'] = selfCm.queryRequests['offset'] + selfCm.queryRequests['limit'];\r\n    selfCm._loadRequestsCm();\r\n  },\r\n\r\n  _prevPagePagination(evt) {\r\n    selfCm.queryRequests['offset'] = selfCm.queryRequests['offset'] - selfCm.queryRequests['limit'];\r\n    // if (selfCm.queryRequests['offset'] < 0) {\r\n    //   selfCm.queryRequests['offset'] = 0; // Ensure offset does not go negative\r\n    // }\r\n    selfCm._loadRequestsCm();\r\n  },\r\n\r\n  _controlLabelPagination() {\r\n    const ini = selfCm.queryRequests['offset'] + 1\r\n    dojo.query(\".buttonPaginationPrevClsCm\")[0].disabled = ini == 1 ? true : false\r\n    const end = selfCm.queryRequests['offset'] + selfCm.queryRequests['limit']\r\n    dojo.query(\".buttonPaginationNextClsCm\")[0].disabled = end >= selfCm.currentCount ? true : false\r\n    dojo.query(\".labelPaginationCtnCm\")[0].innerHTML = `${ini} - ${end} de ${selfCm.currentCount}`\r\n  },\r\n\r\n  _zoomToPredSelectedEvt(evt) {\r\n    // @cpu\r\n    const cup = evt.currentTarget.dataset.cup\r\n    return selfCm._zoomToPredSelected(cup)\r\n  },\r\n\r\n  _handleFeatureSelected(feature) {\r\n    selfCm.map.setZoom(23)\r\n      .then(() => {\r\n        const featureSelected = new GraphicsLayer({\r\n          id: idGraphicPredioSelectedCm\r\n        });\r\n        feature[0].setSymbol(symbolPredioSelected);\r\n        featureSelected.add(feature[0]);\r\n        selfCm.map.addLayer(featureSelected);\r\n        selfCm.map.centerAt(feature[0].geometry);\r\n\r\n        return setTimeout(function () {\r\n          // clearInterval(interval);\r\n          selfCm._removeLayerGraphic(idGraphicPredioSelectedCm);\r\n        }, 1000);\r\n      })\r\n\r\n  },\r\n\r\n  _zoomToPredSelected(cup) {\r\n    selfCm.busyIndicator.show();\r\n    const deferred = new Deferred();\r\n    const LandCls = new UtilityCase.Land();\r\n    selfCm._removeLayerGraphic(idGraphicPredioSelectedCm);\r\n    const prediosLayer = selfCm.layersMap.getLayerInfoById(idLyrCfPredios);\r\n    const propertyLayer = new FeatureLayer(prediosLayer.getUrl(), {\r\n      mode: FeatureLayer.MODE_ONDEMAND,\r\n      outFields: [\"*\"]\r\n    });\r\n    // crear una consulta para seleccionar la fila deseada\r\n    const query = new Query();\r\n    // @cpu\r\n    query.where = `${_UBIGEO_FIELD} = '${paramsApp['ubigeo']}' and ${LandCls.codCpu} = '${cup}' and ${LandCls.estado} = 1`;\r\n\r\n    // seleccionar la fila\r\n    propertyLayer.selectFeatures(query, FeatureLayer.SELECTION_NEW)\r\n      .then(\r\n        results => {\r\n          if (results.length == 0) {\r\n            throw new Error(selfCm.nls.emptyLandSelected)\r\n          }\r\n          // if (selfCm.case == 2) {\r\n          //   if (results.length < 2) {\r\n          //     throw new Error(selfCm.nls.errorAcumulationLandsNumber);\r\n          //   }\r\n          // }\r\n          selfCm._handleFeatureSelected(results)\r\n          selfCm.busyIndicator.hide();\r\n          return deferred.resolve(results)\r\n        }\r\n      )\r\n      .catch(error => {\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(error.message, type = \"error\")\r\n        deferred.reject(error)\r\n      })\r\n    return deferred.promise;\r\n  },\r\n\r\n  _openSupportingDocument(evt) {\r\n    // check if value is empty\r\n    if (!evt.currentTarget.value) {\r\n      selfCm._showMessage(selfCm.nls.emptyDocSupport, type = \"error\")\r\n      return\r\n    }\r\n    window.open(evt.currentTarget.value, '_blank').focus();\r\n  },\r\n\r\n  executeQueryTask(url, query, type = 'query') {\r\n    return new Promise((resolve, reject) => {\r\n      const qTask = new QueryTask(url);\r\n      switch (type) {\r\n        case 'query':\r\n          qTask.execute(query, resolve, reject);\r\n          break;\r\n        case 'queryForExtent':\r\n          qTask.executeForExtent(query, resolve, reject);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  },\r\n\r\n  _getLandsOriginals() {\r\n    const self = this;\r\n    const deferred = new Deferred();\r\n    const LandCls = new UtilityCase.Land();\r\n    const LotCls = new UtilityCase.Lot();\r\n    const queryLands = new Query();\r\n    // @cpu\r\n    const cpuOriginal = self.currentLandTabRows.map(i => i.cup);\r\n    queryLands.where = `${UtilityCase.ubigeoFieldName} = '${paramsApp['ubigeo']}' and ${LandCls.codCpu} in ('${cpuOriginal.join(\"', '\")}') and ${LandCls.estado} = 1`;\r\n    queryLands.returnGeometry = true;\r\n    queryLands.outFields = [\"*\"];\r\n    const urlLands = self.layersMap.getLayerInfoById(idLyrCfPredios).getUrl();\r\n    self.executeQueryTask(urlLands, queryLands)\r\n      .then(results => {\r\n        if (results.features.length == 0) {\r\n          throw new Error(self.nls.errorGetLand);\r\n        }\r\n        self.currentLandRows = results.features;\r\n        const idLots = self.currentLandRows.map((i) => i.attributes[LotCls.idLotP]);\r\n        deferred.resolve(idLots);\r\n      })\r\n      .catch(error => {\r\n        deferred.reject(error);\r\n      });\r\n    return deferred.promise;\r\n  },\r\n  _getLotsOriginals(idLots) {\r\n    const self = this;\r\n    const LotCls = new UtilityCase.Lot()\r\n    const deferred = new Deferred();\r\n    const queryLots = new Query();\r\n    queryLots.where = `${LotCls.idLotP} in (${idLots.join(\",\")}) and (${UtilityCase.ubigeoFieldName} = ${paramsApp['ubigeo']})`;\r\n    self.lotesQuery = queryLots.where;\r\n    queryLots.returnGeometry = true;\r\n    queryLots.outFields = [\"*\"];\r\n    const urlLots = self.layersMap.getLayerInfoById(idLyrCfLotes).getUrl();\r\n    self.executeQueryTask(urlLots, queryLots)\r\n      .then(results => {\r\n        if (results.features.length == 0) {\r\n          throw new Error(self.nls.emptyLotRequests);\r\n        }\r\n        self.currentLotsRows = results.features;\r\n        const codMznValues = self.currentLotsRows.map((i) => i.attributes[_COD_MZN_FIELD]).join(\",\")\r\n        const codSectValues = self.currentLotsRows.map((i) => i.attributes[_COD_SECT_FIELD]).join(\",\")\r\n        self.arancel = `(${UtilityCase.ubigeoFieldName} = ${paramsApp['ubigeo']}) and ${_COD_MZN_FIELD} in (${codMznValues}) and ${_COD_SECT_FIELD} in (${codSectValues})`;\r\n        self.pointLotsNotMediterrnean = `(${self.arancel}) and (${LotCls.idLotP} NOT IN (${idLots.join(\",\")})) AND TIP_LOT = 1`\r\n        deferred.resolve(idLots);\r\n      })\r\n      .catch(error => {\r\n        deferred.reject(error);\r\n      });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _getExtentBlock(idLots) {\r\n    const self = this;\r\n    const deferred = new Deferred();\r\n    const queryBlock = new Query();\r\n    queryBlock.where = self.arancel;\r\n    const urlBlock = self.layersMap.getLayerInfoById(idLyrCfManzana).getUrl();\r\n    self.executeQueryTask(urlBlock, queryBlock, type = 'queryForExtent')\r\n      .then(results => {\r\n        self.extentBlock = results.extent;\r\n        deferred.resolve(idLots);\r\n      })\r\n      .catch(error => {\r\n        deferred.reject(error);\r\n      });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _getPointLotsOriginals(idLots) {\r\n    const self = this;\r\n    const LotCls = new UtilityCase.Lot()\r\n    const deferred = new Deferred();\r\n    const queryPointLots = new Query();\r\n    queryPointLots.where = `${LotCls.idLotP} in (${idLots.join(\",\")}) and (${UtilityCase.ubigeoFieldName} = ${paramsApp['ubigeo']})`;\r\n    queryPointLots.returnGeometry = true;\r\n    queryPointLots.outFields = [\"*\"];\r\n    const urlPointLots = self.layersMap.getLayerInfoById(idLyrCfLotesPun).getUrl();\r\n    self.executeQueryTask(urlPointLots, queryPointLots)\r\n      .then(results => {\r\n        if (results.features.length == 0) {\r\n          throw new Error(self.nls.emptyPointLotRequests);\r\n        }\r\n        self.currentPoinLotsRows = results.features;\r\n        deferred.resolve(idLots);\r\n      })\r\n      .catch(error => {\r\n        deferred.reject(error);\r\n      });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _getLandsOriginalsTab(idSolicitud) {\r\n    const self = this;\r\n    const deferred = new Deferred();\r\n    const urlOriginal = `${self.config.landsByApplicationUrl}/${idSolicitud}`;\r\n    fetch(urlOriginal)\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error(\"HTTP error \" + response.status);\r\n        }\r\n        return response.json()\r\n      })\r\n      .then(response => {\r\n        if (response.count == 0) {\r\n          throw new Error(self.nls.errorGetLand);\r\n        }\r\n        self.currentLandTabRows = response.results;\r\n        deferred.resolve(self.currentLandTabRows);\r\n      })\r\n      .catch(error => {\r\n        deferred.reject(error);\r\n      });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _getOriginalData(idSolicitud) {\r\n    return this._getLandsOriginalsTab(idSolicitud)\r\n      .then(landsTab => this._getLandsOriginals())\r\n      .then(idLots => this._getPointLotsOriginals(idLots))\r\n      .then(idLots => this._getLotsOriginals(idLots))\r\n      .then(idLots => this._getExtentBlock(idLots))\r\n      .then((idLots) => {\r\n        return idLots;\r\n      })\r\n      .catch(error => {\r\n        return error;\r\n      });\r\n  },\r\n\r\n  _zoomExtentToLote() {\r\n    if (!this.currentLotsRows) {\r\n      return\r\n    }\r\n    if (this.case == 2) {\r\n      if (this.currentLotsRows.length < 2) {\r\n        throw new Error(this.nls.errorAcumulationLandsNumber);\r\n      }\r\n    }\r\n    // if (this.currentLotsRows.length > 1) {\r\n    //   const unionPredios = this._unionFeatures(this.currentLotsRows.map((i) => i.geometry))\r\n    // }\r\n    const unionPredios = this.currentLotsRows.length > 1 ? this._unionFeatures(this.currentLotsRows.map((i) => i.geometry)) : this.currentLotsRows[0].geometry\r\n    this.map.setExtent(unionPredios.getExtent().expand(2))\r\n  },\r\n\r\n  _zoomHomeRequests() {\r\n    return selfCm._zoomExtentToLote()\r\n  },\r\n\r\n  _toggleBodyCaseInfo(evt) {\r\n    this.closest('.caseInfoClsCm').querySelector('.bodyPredInfoClsCm').classList.toggle('active')\r\n  },\r\n\r\n  _requestCaseInfo() {\r\n    selfCm.busyIndicator.show();\r\n    const urlResults = `${selfCm.config.resultsByApplication}/${selfCm.codRequestsCm}?limit=${selfCm.limitAnother}`\r\n    const urlDocSupport = `${selfCm.config.applicationListUrl}/${selfCm.codRequestsCm}`\r\n    const urlAffectedLands = `${selfCm.config.affectedLands}/${selfCm.codRequestsCm}?limit=${selfCm.limitAnother}`\r\n\r\n    Promise.all([\r\n      selfCm._getOriginalData(selfCm.codRequestsCm),\r\n      fetch(urlResults).then(response => {\r\n        if (!response.ok) {\r\n          selfCm.busyIndicator.hide();\r\n          throw new Error(\"HTTP error \" + response.status);\r\n        }\r\n        return response.json()\r\n      }),\r\n      fetch(urlDocSupport).then(response => response.json()),\r\n      fetch(urlAffectedLands).then(response => {\r\n        if (!response.ok) {\r\n          selfCm.busyIndicator.hide();\r\n          throw new Error(\"HTTP error \" + response.status);\r\n        }\r\n        return response.json()\r\n      })\r\n    ]).then(function ([_, responseResults, responseDocSupport, responseAffectedLands]) {\r\n\r\n      if (_.message) {\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(_.message, type = \"error\");\r\n        // return\r\n      }\r\n\r\n      selfCm.currentLandTabRows = selfCm.currentLandTabRows || [];\r\n      const rows = selfCm.currentLandTabRows.map((i, idx) => {\r\n        return CaseInfo.contentCard(i, 'original', i.cup, active = selfCm.case != 2 ? true : false);\r\n      });\r\n\r\n      if (selfCm.case != 4) {\r\n        if (responseResults.count == 0) {\r\n          selfCm._showMessage(`${selfCm.nls.empyLandResultsRequests} ${selfCm.codRequestsCm}`, type = \"error\");\r\n          selfCm.busyIndicator.hide();\r\n          // return\r\n        }\r\n      }\r\n\r\n      dojo.query(\"#showInfoDocCm\")[0].value = responseDocSupport.support\r\n      dojo.query('.CtnOriginalClsCm')[0].innerHTML = rows.join('');\r\n\r\n      if (selfCm.case == 2 || selfCm.case == 3) {\r\n        if (responseAffectedLands.results.length > 0) {\r\n          const rowsAffected = responseAffectedLands.results.map((i, idx) => {\r\n            return CaseInfo.contentCard(i, 'original', i.cup, active = false);\r\n          });\r\n          dojo.query('.CtnAffectedClsCm')[0].innerHTML = rowsAffected.join('');\r\n          dojo.query('.lblAffectedClsCm').addClass('active');\r\n        }\r\n      } else {\r\n        dojo.query('.CtnAffectedClsCm')[0].innerHTML = '';\r\n        dojo.query('.lblAffectedClsCm').removeClass('active');\r\n      }\r\n\r\n      dojo.query(\".zoomPredInfoClsCm\").on('click', selfCm._zoomToPredSelectedEvt);\r\n\r\n      if (selfCm.case != 4) {\r\n        const rowsResults = responseResults.results.map((i, idx) => {\r\n          return CaseInfo.contentCard(i, 'result', idx + 1, false, true);\r\n        });\r\n        dojo.query('.CtnResultClsCm')[0].innerHTML = rowsResults.join('');\r\n        dojo.query('.lblResultsClsCm').addClass('active');\r\n      } else {\r\n        dojo.query('.CtnResultClsCm')[0].innerHTML = '';\r\n        dojo.query('.lblResultsClsCm').removeClass('active');\r\n      }\r\n\r\n      dojo.query(\".colapsePredInfoClsCm\").on('click', selfCm._toggleBodyCaseInfo);\r\n\r\n      // @cpu\r\n      selfCm.uniqueCodeLands = selfCm.currentLandTabRows.map((i) => i.cup).join(',');\r\n      selfCm.responseRequests = responseResults['results']\r\n\r\n    })\r\n      .then(() => {\r\n        if (selfCm.case === \"2\") {\r\n          selfCm.fusionApCm.classList.toggle('active')\r\n        } else if (selfCm.case === \"3\") {\r\n          selfCm.divisionApCm.classList.toggle('active')\r\n          selfCm.containerToolDrawApCm.classList.toggle('active')\r\n        } else if (selfCm.case === \"4\") {\r\n          selfCm.eliminacionApCm.classList.toggle('active')\r\n        } else if (selfCm.case === \"5\") {\r\n          return selfCm._applyIndependenceRefactor();\r\n        };\r\n      })\r\n      // .then(response => {\r\n      //   if (response) {\r\n\r\n      //   }\r\n      //   return undefined;\r\n      // })\r\n      .then(() => {\r\n        // switch (selfCm.case) {\r\n        //   // case \"1\":\r\n        //   //   selfCm.reasignarApCm.classList.toggle('active')\r\n        //   //   break;\r\n        //   case \"2\":\r\n        //     selfCm.fusionApCm.classList.toggle('active')\r\n        //     break\r\n        //   case \"3\":\r\n        //     selfCm.divisionApCm.classList.toggle('active')\r\n        //     selfCm.containerToolDrawApCm.classList.toggle('active')\r\n        //     break\r\n        //   case \"4\":\r\n        //     selfCm.eliminacionApCm.classList.toggle('active')\r\n        //     break\r\n        //   case \"5\":\r\n        //     selfCm.independenceApCm.classList.toggle('active')\r\n        //     // selfCm.independenceApCm.innerHTML = ''\r\n        //     LandAssignment.title = \"Independización\";\r\n        //     LandAssignment.lands = selfCm.responseRequests;\r\n        //     LandAssignment.pointLots = selfCm.currentPoinLotsRows;\r\n        //     LandAssignment.map = selfCm.map;\r\n        //     LandAssignment.landsSymbol = symbolPredio;\r\n        //     LandAssignment.landsSymbolSelected = symbolPredioSelected2;\r\n        //     LandAssignment.removeAllGraphics();\r\n        //     selfCm._populateTablePredio(selfCm.bodyTbPrediosIpApCm, selfCm._activateToolPrediosByMaintenance)\r\n        //     // selfCm.independenceApCm.appendChild(LandAssignment.renderTableLandAssignment());\r\n\r\n        //     // LandProcess.title = \"Enviar datos\";\r\n        //     // LandProcess.type = \"independence\";\r\n        //     // selfCm.independenceApCm.appendChild(LandProcess.renderButtonProcess());\r\n        //     // dojo.query(`#${LandProcess.id}`).on('click', selfCm._executeIndependenceLands);\r\n        //     // dojo.query(\".pointLotSelectionCm\").on('change', LandAssignment.selectedPointLots.bind(LandAssignment));\r\n        //     // dojo.query('.tableClsCm tr').on('mouseover', LandAssignment.highlightLand.bind(LandAssignment));\r\n        //     // dojo.query('.tableClsCm tr').on('mouseout', LandAssignment.reestartSymbolLand.bind(LandAssignment));\r\n        //     break\r\n        //   default:\r\n        //     break;\r\n        // }\r\n        selfCm.map.addLayer(graphicRightOfWay);\r\n        selfCm.resultCtnApCm.classList.remove('active')\r\n        selfCm.obsCtnApCm.classList.remove('active')\r\n        selfCm.requestTrayApCm.classList.remove('active')\r\n        selfCm.casesCtnApCm.classList.toggle('active')\r\n        selfCm._zoomExtentToLote()\r\n        selfCm.busyIndicator.hide();\r\n      })\r\n      .catch(function (error) {\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(error.message, type = \"error\");\r\n      })\r\n\r\n  },\r\n\r\n  _openFormCase(evt) {\r\n    if (evt.currentTarget.id == \"editRequestsCm\") {\r\n      const row = dojo.query(evt.currentTarget).closest(\"tr\")[0];\r\n      const rowList = dojo.query(\"td\", row).map(td => td.innerHTML);\r\n      selfCm.codRequestsCm = rowList[0]\r\n      selfCm.caseDescription = rowList[1]\r\n      dojo.query('#titleCaseCm')[0].innerHTML = `<span>${selfCm.caseDescription} <span class=\"fa fa-search\" style=\"font-size: 15px\"></span></span>`\r\n\r\n      selfCm.case = evt.currentTarget.value\r\n      selfCm._requestCaseInfo();\r\n\r\n    } else if (evt.currentTarget.id == 'backTrayCm' || evt.currentTarget.id == 'backTrayResultCm') {\r\n      // desactivar el toolbarCm de edicion si esta activado\r\n      toolbarCm.deactivate();\r\n\r\n      // deshabilitar snapping\r\n      selfCm.map.disableSnapping()\r\n      selfCm.bodyTbLinesDvApCm.innerHTML = ''\r\n      selfCm.bodyTbPrediosDvApCm.innerHTML = ''\r\n\r\n      dojo.query(\".caseClsCm\").removeClass(\"active\")\r\n      // remove all graphics layer if exist\r\n      selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n      selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n      selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n      selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n      selfCm._removeLayerGraphic(idGraphicPredioSelectedCm);\r\n      selfCm._removeLayerGraphic(idGraphicLabelCodLote)\r\n      selfCm._removeLayerGraphic(idGraphicRightOfWay);\r\n      selfCm.bodyTbDatosLoteDvApCm.innerHTML = ''\r\n      // selfCm.bodyTbMeasurementApCm.innerHTML = ''\r\n      ToolDraw.removeAllGraphicsIntoMeasurements();\r\n\r\n      graphicLayerLineaDivision.clear();\r\n      graphicLayerLabelLineaDivision.clear();\r\n      graphicLayerPredioByMaintenance.clear();\r\n\r\n      selfCm.lotesQuery = null\r\n      selfCm.arancel = null\r\n      selfCm.xy = []\r\n      selfCm.currentLandTabRows = null;\r\n\r\n      selfCm.casesCtnApCm.classList.remove('active')\r\n      selfCm.resultCtnApCm.classList.remove('active')\r\n      selfCm.containerToolDrawApCm.classList.remove('active')\r\n      selfCm.obsCtnApCm.classList.remove('active')\r\n      selfCm.requestTrayApCm.classList.toggle('active')\r\n      selfCm._removeClassActiveButton()\r\n      dojo.query('.CtnAffectedClsCm')[0].innerHTML = '';\r\n      dojo.query('.lblAffectedClsCm').removeClass('active');\r\n\r\n      if (selfCm.currentTabActive == requestToAttendState) {\r\n        dojo.query(\".tablinksCm.active\")[0].click();\r\n        // selfCm._loadRequestTabActiveCm()\r\n        // selfCm.queryRequests['offset'] = selfCm.defaultOffset;\r\n      }\r\n      selfCm._loadRequestsCm();\r\n      // selfCm._loadIniRequestsCm();\r\n    }\r\n\r\n  },\r\n  _openFormObs() {\r\n    selfCm.textAreaObsApCm.value = ''\r\n    const imageDiv = dojo.query(\".thumbnailClsCm\")[0];\r\n    selfCm.imgUploadApCm.value = ''\r\n    imageDiv.style.backgroundImage = \"none\";\r\n    imageDiv.innerHTML = \"<span class=alignVCenter><i class='far fa-image'></i></span>\";\r\n    dojo.query('#headeRequestsCtnCm')[0].innerHTML = `<span class=\"alignVCenter\">Solicitud: ${selfCm.codRequestsCm}</span>`\r\n    selfCm.casesCtnApCm.classList.toggle(\"active\");\r\n    selfCm.obsCtnApCm.classList.toggle('active')\r\n  },\r\n\r\n  _FormResult(id_solicitud, caseCm) {\r\n    selfCm.busyIndicator.show();\r\n    const urlPredioResults = `${selfCm.config.resultsByApplication}/${id_solicitud}?limit=${selfCm.limitAnother}`\r\n    if (caseCm == Deactivate.nameCase) {\r\n      selfCm.busyIndicator.hide();\r\n      selfCm._showMessage(selfCm.nls.resultDeactivate)\r\n      return\r\n    }\r\n    selfCm._callApiRestServices(urlPredioResults, {}).then(function (response) {\r\n      try {\r\n        selfCm.bodyTbResultsApCm.innerHTML = ''\r\n        dojo.query(\"#titleCaseResult\")[0].innerHTML = `<span>Solicitud ${id_solicitud}: ${caseCm}</span>`\r\n\r\n        const rows = response.results.map((predio, index) => {\r\n          return `<tr><td class=\"center-aligned\">${index + 1}</td>\r\n                  <td>${predio['cup']}</td>\r\n                  <td>${predio['address']}</td>\r\n                  <td class=\"center-aligned\">\r\n                    <span id=\"${predio['cup']}_search\" class=\"zoomPredioResultClsCm\"><i class=\"fas fa-search\"></i></span>\r\n                  </td></tr>`\r\n        })\r\n        selfCm.bodyTbResultsApCm.innerHTML = rows.join('')\r\n        dojo.query('.zoomPredioResultClsCm').on('click', selfCm._centerAtPredioResult)\r\n        selfCm.casesCtnApCm.classList.remove(\"active\");\r\n        selfCm.obsCtnApCm.classList.remove('active')\r\n        selfCm.requestTrayApCm.classList.remove('active')\r\n        selfCm.resultCtnApCm.classList.toggle('active')\r\n        selfCm.busyIndicator.hide()\r\n      }\r\n      catch (error) {\r\n        console.log(error)\r\n        selfCm.busyIndicator.hide()\r\n      }\r\n    })\r\n  },\r\n\r\n  _centerAtPredioResult(evt) {\r\n    const cup = evt.currentTarget.id.replace('_search', '')\r\n    selfCm._zoomToPredSelected(cup)\r\n  },\r\n\r\n  _openFormResult(evt) {\r\n    const row = dojo.query(evt.currentTarget).closest(\"tr\")[0];\r\n    const rowList = dojo.query(\"td\", row).map(td => td.innerHTML);\r\n    selfCm.codRequestsCm = rowList[0]\r\n    selfCm.caseDescription = rowList[1]\r\n    selfCm._FormResult(selfCm.codRequestsCm, selfCm.caseDescription)\r\n  },\r\n\r\n  _refreshLayersCF() {\r\n    this.map.getLayer(idLyrCfPredios).setVisibility(false)\r\n    this.map.getLayer(idLyrCfLotesPun).setVisibility(false)\r\n    this.map.getLayer(idLyrCfLotes).setVisibility(false)\r\n    this.map.getLayer(idLyrCfPredios).setVisibility(true)\r\n    this.map.getLayer(idLyrCfLotes).setVisibility(true)\r\n    this.map.getLayer(idLyrCfLotesPun).setVisibility(true)\r\n    // selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(false)\r\n    // selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(true)\r\n  },\r\n\r\n  // Toolbar function\r\n  _createToolbar() {\r\n    toolbarCm = new Draw(this.map);\r\n    toolbarCm.on(\"draw-end\", this._addToMap.bind(this));\r\n  },\r\n\r\n  // _addToMap(evt) {\r\n  //   if (evt.geometry.type === \"point\") {\r\n  //     const screenPoint = selfCm.map.toScreen(evt.geometry)\r\n  //     const deferred = selfCm.map.snappingManager.getSnappingPoint(screenPoint);\r\n  //     deferred.then(function (value) {\r\n  //       if (value !== undefined) {\r\n  //         const point_g = webMercatorUtils.webMercatorToGeographic(new Point(value));\r\n  //         const graphic = new Graphic(point_g, symbolByCase[selfCm.case].symbol);\r\n  //         if (selfCm.case == 1 || selfCm.case == 2) {\r\n\r\n  //           const graphicLayer = new GraphicsLayer({\r\n  //             id: idGraphicPredioCm,\r\n  //           });\r\n  //           graphicLayer.add(graphic);\r\n  //           selfCm.map.addLayer(graphicLayer);\r\n  //           selfCm.xy = [point_g.x, point_g.y]\r\n  //         }\r\n  //         else if (selfCm.case == 3) {\r\n  //           graphic['attributes'] = {\r\n  //             cpm: selfCm.cpm,\r\n  //             id: selfCm.idPredio,\r\n  //             resolutionType: selfCm.resolutionType,\r\n  //             resolutionDocument: selfCm.resolutionDocument,\r\n  //             floor: selfCm.floor,\r\n  //             urbanLotNumber: selfCm.urbanLotNumber,\r\n  //           }\r\n  //           graphicLayerPredioByMaintenance.add(graphic);\r\n  //         }\r\n  //         selfCm.map.setInfoWindowOnClick(true);\r\n  //         toolbarCm.deactivate();\r\n  //         selfCm._removeClassActiveButton()\r\n  //       } else {\r\n  //         selfCm._showMessage(selfCm.nls.errorSnapingLocate, type = \"error\")\r\n  //       }\r\n  //     }, function (error) {\r\n  //       console.log(error);\r\n  //     });\r\n  //   } else if (evt.geometry.type === \"polyline\") {\r\n  //     selfCm._divisorLine(evt.geometry);\r\n  //   }\r\n  // },\r\n\r\n  _addToMap(evt) {\r\n    const deferred = new Deferred();\r\n    if (evt.geometry.type === \"point\") {\r\n      const screenPoint = this.map.toScreen(evt.geometry);\r\n      const pointsSnapping = this.map.snappingManager.layers[0].graphics;\r\n      this.map.snappingManager.getSnappingPoint(screenPoint)\r\n        .then(value => {\r\n          if (!value) {\r\n            // open showMessage but reference this parent scope\r\n            const error = new Error(this.nls.errorSnapingLocate);\r\n            return deferred.reject(error);\r\n          }\r\n\r\n          const pointGeographic = webMercatorUtils.webMercatorToGeographic(new Point(value));\r\n          // const pointEval = this.statusDrawingRightOfWay ? this.currentRightOfWayDraw : this.currentLandDraw;\r\n          const pointGraphic = pointsSnapping.filter(i => geometryEngine.intersects(i.geometry, pointGeographic));\r\n\r\n          if (this.statusDrawingRightOfWay) {\r\n            this.currentRightOfWayDraw = pointGraphic[0];\r\n          } else {\r\n            this.currentLandDraw = pointGraphic[0];\r\n          }\r\n\r\n          if (!this.statusDrawingRightOfWay) {\r\n            if (this.currentLandDraw.attributes.tipLot === 2) {\r\n              return this._showMessageConfirm(\"El lote seleccionado es mediterraneo\\nAhora debe seleccionar el lote paso de servidumbre\")\r\n            }\r\n          }\r\n          // if (this.statusDrawingRightOfWay) {\r\n          //   for (let point of this.map.snappingManager.layers[0].graphics) {\r\n          //     if (geometryEngine.intersects(point.geometry, pointGeographic)) {\r\n          //       this.currentRightOfWayDraw = pointGeographic;\r\n          //       break;\r\n          //     }\r\n          //   }\r\n          // } else {\r\n          //   this.currentLandDraw = pointGeographic;\r\n          // }\r\n\r\n          // // return pointGeographic\r\n          return undefined;\r\n        })\r\n        // .then(() => {\r\n        //   const pointEval = this.statusDrawingRightOfWay ? this.currentRightOfWayDraw : this.currentLandDraw;\r\n        //   const pointGraphic = pointsSnapping.filter(i => geometryEngine.intersects(i.geometry, pointEval));\r\n        //   // if (pointGraphic.length == 0) {\r\n        //   //   this._showMessage(\"No se encontro el punto lote\", type = \"error\");\r\n        //   //   return deferred.reject();\r\n        //   // }\r\n        //   if (!this.statusDrawingRightOfWay) {\r\n        //     if (pointGraphic[0].attributes.tipLot === 2) {\r\n        //       return this._showMessageConfirm(\"El lote seleccionado es mediterraneo\\nAhora debe seleccionar el lote paso de servidumbre\")\r\n        //     }\r\n        //   }\r\n\r\n        //   return undefined;\r\n        // })\r\n        .then(response => {\r\n          // check if response is type boolen or array\r\n          if (typeof response === 'boolean') {\r\n            if (!response) {\r\n              return deferred.reject();\r\n            }\r\n            this.statusDrawingRightOfWay = true;\r\n            // get predio layer and filter\r\n            this.map.getLayer(idLyrCfPredios).setVisibility(false);\r\n            this.map.getLayer(idGraphicPuntoLote).setVisibility(false);\r\n\r\n            if (this.caseCm == 3 || this.caseCm == 2) {\r\n              this.map.getLayer(idGraphicLoteCm).setVisibility(false);\r\n              this.map.getLayer(idGraphicFrenteLote).setVisibility(false);\r\n            }\r\n\r\n            if (this.caseCm == 3) {\r\n              this.map.getLayer(idGraphicLineaDivision).setVisibility(false);\r\n              this.map.getLayer(idGraphicLabelLineaDivision).setVisibility(false)\r\n            };\r\n\r\n            this.map.getLayer(idGraphicPredioByMaintenance).setVisibility(false);\r\n            this.map.getLayer(idLyrCfLotesPun).setVisibility(false);\r\n            this.containerToolDrawApCm.classList.remove('active');\r\n            this.containerHelpRightOfWayApCm.classList.toggle('active');\r\n            const stateWidget = this.getParent().getParent().domNode.getElementsByClassName(\"bar max\");\r\n            if (stateWidget.length > 0) {\r\n              stateWidget[0].click();\r\n            }\r\n            this.map.setExtent(this.extentBlock.expand(2));\r\n            this.busyIndicator.show();\r\n\r\n            const query = new Query();\r\n            query.where = this.pointLotsNotMediterrnean;\r\n            query.returnGeometry = true;\r\n            query.outFields = [\"*\"];\r\n            query.outSpatialReference = new SpatialReference(4326);\r\n            const queryTask = new QueryTask(this.map.getLayer(idLyrCfLotesPun).url);\r\n            return queryTask.execute(query);\r\n          }\r\n          return undefined;\r\n        })\r\n        .then(response => {\r\n          if (response) {\r\n            const mediterraneanPointLot = pointsSnapping.filter(i => i.attributes.tipLot === 1);\r\n            const pointLostSnapping = response.features.concat(mediterraneanPointLot);\r\n            this._removeLayerGraphic(idGraphicCandidateRightOfWay);\r\n\r\n            for (let point of pointLostSnapping) {\r\n              //check if point property geometry\r\n              // const geometry = point.geometry ? point.geometry : point;\r\n              const puntoLoteGraphic = new Graphic(point.geometry, symbolPuntoLote, point.attributes);\r\n              // if (!point.symbol) {\r\n              //   point.setSymbol(symbolPuntoLote);\r\n              // }\r\n\r\n              graphicCandidateRightOfWay.add(puntoLoteGraphic)\r\n            };\r\n\r\n            this.map.addLayer(graphicCandidateRightOfWay);\r\n\r\n\r\n            toolbarCm.deactivate();\r\n            this.map.enableSnapping({\r\n              layerInfos: [{\r\n                id: graphicCandidateRightOfWay.id,\r\n                layer: graphicCandidateRightOfWay,\r\n                name: graphicCandidateRightOfWay.name\r\n              }],\r\n              alwaysSnap: true,\r\n              snapPointSymbol: symbolSnapPointCm,\r\n            });\r\n            toolbarCm.activate(Draw[\"POINT\"]);\r\n          }\r\n        })\r\n        .then(() => {\r\n          if (this.currentLandDraw && !this.statusDrawingRightOfWay) {\r\n            return true;\r\n          } else if (this.currentRightOfWayDraw && this.statusDrawingRightOfWay) {\r\n            this.statusDrawingRightOfWay = false;\r\n            this.map.getLayer(idGraphicCandidateRightOfWay).clear();\r\n            this.map.getLayer(idLyrCfPredios).setVisibility(true);\r\n            this.map.getLayer(idGraphicPuntoLote).setVisibility(true);\r\n            if (this.caseCm == 3 || this.caseCm == 2) {\r\n              this.map.getLayer(idGraphicLoteCm).setVisibility(true);\r\n              this.map.getLayer(idGraphicFrenteLote).setVisibility(true);\r\n            };\r\n            if (this.caseCm == 3) {\r\n              this.map.getLayer(idGraphicLineaDivision).setVisibility(true);\r\n              this.map.getLayer(idGraphicLabelLineaDivision).setVisibility(true)\r\n            };\r\n            this.map.getLayer(idLyrCfLotesPun).setVisibility(true);\r\n            this.map.getLayer(idGraphicPredioByMaintenance).setVisibility(true);\r\n            this.containerHelpRightOfWayApCm.classList.toggle('active');\r\n            return true;\r\n          } else {\r\n            return false;\r\n          }\r\n        })\r\n        .then(response => {\r\n          if (!response) {\r\n            return undefined;\r\n          };\r\n          // const graphic = new Graphic(this.currentLandDraw, symbolPredio);\r\n          const graphicDrawLand = new Graphic(this.currentLandDraw.geometry, symbolPredio);\r\n\r\n          // if (this.case == 2) {\r\n          //   const graphicLayer = new GraphicsLayer({\r\n          //     id: idGraphicPredioCm,\r\n          //   });\r\n          //   graphicLayer.add(graphicDrawLand);\r\n          //   this.map.addLayer(graphicLayer);\r\n          //   this.xy = [this.currentLandDraw.x, this.currentLandDraw.y]\r\n          // }\r\n          // else if (this.case == 3) {\r\n          graphicDrawLand['attributes'] = {\r\n            cpm: this.cpm,\r\n            id: this.idPredio,\r\n            resolutionType: this.resolutionType,\r\n            resolutionDocument: this.resolutionDocument,\r\n            floor: this.floor,\r\n            urbanLotNumber: this.urbanLotNumber,\r\n            tipLot: this.currentRightOfWayDraw ? 2 : 1,\r\n            mediterraneanCoords: this.currentRightOfWayDraw\r\n          }\r\n          graphicLayerPredioByMaintenance.add(graphicDrawLand);\r\n          if (this.currentRightOfWayDraw) {\r\n            const graphicDrawRightOfWay = new Graphic(this.currentRightOfWayDraw.geometry, symbolRightOfWay);\r\n            graphicDrawRightOfWay['attributes'] = {\r\n              id: this.idPredio,\r\n            }\r\n            graphicRightOfWay.add(graphicDrawRightOfWay);\r\n          }\r\n\r\n          this.currentLandDraw = null;\r\n          this.currentRightOfWayDraw = null;\r\n          if (this.case == 3) {\r\n            this.containerToolDrawApCm.classList.add('active');\r\n          }\r\n          // }\r\n          this.map.setInfoWindowOnClick(true);\r\n          toolbarCm.deactivate();\r\n          this._removeClassActiveButton();\r\n          this.busyIndicator.hide();\r\n          const stateWidget = this.getParent().getParent().domNode.getElementsByClassName(\"bar min\");\r\n          if (stateWidget.length > 0) {\r\n            stateWidget[0].click();\r\n          }\r\n          // this._zoomExtentToLote();\r\n        })\r\n        .catch(error => {\r\n          this.busyIndicator.hide();\r\n          this._showMessage(error.message, type = \"error\")\r\n        })\r\n    }\r\n    else if (evt.geometry.type === \"polyline\") {\r\n      selfCm._divisorLine(evt.geometry);\r\n    }\r\n  },\r\n\r\n  _cancelDrawRightOfWay() {\r\n    this.map.getLayer(idGraphicCandidateRightOfWay).clear();\r\n    this.map.getLayer(idLyrCfPredios).setVisibility(true);\r\n    this.map.getLayer(idGraphicPuntoLote).setVisibility(true);\r\n    this.map.getLayer(idGraphicLoteCm).setVisibility(true);\r\n    this.map.getLayer(idGraphicFrenteLote).setVisibility(true);\r\n    this.map.getLayer(idGraphicLineaDivision).setVisibility(true);\r\n    this.map.getLayer(idGraphicLabelLineaDivision).setVisibility(true)\r\n    this.map.getLayer(idLyrCfLotesPun).setVisibility(true);\r\n    this.map.getLayer(idGraphicPredioByMaintenance).setVisibility(true);\r\n    this.currentLandDraw = null;\r\n    this.currentRightOfWayDraw = null;\r\n    if (this.case == 3) {\r\n      this.containerToolDrawApCm.classList.add('active');\r\n    }\r\n    this.containerHelpRightOfWayApCm.classList.toggle('active');\r\n    this.statusDrawingRightOfWay = false;\r\n    this.map.setInfoWindowOnClick(true);\r\n    this.map.disableSnapping();\r\n    toolbarCm.deactivate();\r\n    this._removeClassActiveButton();\r\n    const stateWidget = this.getParent().getParent().domNode.getElementsByClassName(\"bar min\");\r\n    if (stateWidget.length > 0) {\r\n      stateWidget[0].click();\r\n    }\r\n    this.busyIndicator.hide();\r\n  },\r\n\r\n  _divisorLine(geometry) {\r\n    selfCm.idxLines = selfCm.idxLines + 1\r\n    const nameIdLine = `Polyline_${selfCm.idxLines}`\r\n\r\n    const polylineGeomUtm = webMercatorUtils.webMercatorToGeographic(geometry)\r\n    let vertices = polylineGeomUtm.paths[0];\r\n    const lastTwoCoords = vertices.slice(-2);\r\n    const line = turf.lineString(lastTwoCoords);\r\n    const bearing = turf.bearing(turf.point(line.geometry.coordinates[0]), turf.point(line.geometry.coordinates[1]));\r\n    const options = { units: 'meters' };\r\n    const addDistance = 0.1\r\n    const point = turf.point(line.geometry.coordinates[1]);\r\n    const destintation = turf.destination(point, addDistance, bearing, options);\r\n\r\n    // reverse coordinates of line\r\n    let vertices2 = [...vertices];\r\n    vertices2.reverse();\r\n    const lastTwoCoords2 = vertices2.slice(-2);\r\n    const line2 = turf.lineString(lastTwoCoords2);\r\n    const bearing2 = turf.bearing(turf.point(line2.geometry.coordinates[0]), turf.point(line2.geometry.coordinates[1]));\r\n    const point2 = turf.point(line2.geometry.coordinates[1]);\r\n    const destintation2 = turf.destination(point2, addDistance, bearing2, options);\r\n\r\n    vertices[vertices.length - 1] = destintation.geometry.coordinates;\r\n    // add vertices2 first element to vertices\r\n    vertices.unshift(destintation2.geometry.coordinates);\r\n\r\n    const polyline = new Polyline({\r\n      paths: [vertices],\r\n      spatialReference: polylineGeomUtm.spatialReference\r\n    });\r\n    let response = webMercatorUtils.geographicToWebMercator(polyline);\r\n\r\n    const graphic = new Graphic(response, symbolDivisionLote, { id: nameIdLine });\r\n    graphicLayerLineaDivision.add(graphic);\r\n    selfCm._populateTableDrawLine(nameIdLine)\r\n    selfCm._addNameToLine(nameIdLine, response)\r\n    selfCm.map.addLayer(graphicLayerLineaDivision);\r\n    selfCm.map.setInfoWindowOnClick(true);\r\n    toolbarCm.deactivate();\r\n    selfCm._removeClassActiveButton()\r\n  },\r\n\r\n  _removeClassActiveButton() {\r\n    if (dojo.query(`#${selfCm.idButtonDrawActive}`).length > 0) {\r\n      dojo.query(`#${selfCm.idButtonDrawActive}`)[0].classList.remove('activeButton')\r\n    }\r\n  },\r\n\r\n  _removeLayerGraphic(layerId) {\r\n    if (selfCm.map.graphicsLayerIds.includes(layerId)) {\r\n      const layer = selfCm.map.getLayer(layerId);\r\n      layer.clear();\r\n      selfCm.map.removeLayer(selfCm.map.getLayer(layerId));\r\n    }\r\n  },\r\n\r\n  // _activateTool(evt) {\r\n  //   selfCm._removeClassActiveButton()\r\n  //   selfCm.idButtonDrawActive = evt.currentTarget.id\r\n  //   dojo.query(`#${selfCm.idButtonDrawActive}`)[0].classList.add('activeButton')\r\n  //   selfCm._activateSnappingByReasignar();\r\n  //   selfCm.map.setInfoWindowOnClick(false);\r\n  //   selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n  //   toolbarCm.activate(Draw[\"POINT\"]);\r\n  // },\r\n\r\n  // _activateToolAcumulacion(evt) {\r\n  //   selfCm._removeClassActiveButton();\r\n  //   ToolDraw.deactivateToolbarAnotherToolbar();\r\n  //   selfCm.idButtonDrawActive = evt.currentTarget.id;\r\n  //   dojo.query(`#${selfCm.idButtonDrawActive}`)[0].classList.add('activeButton');\r\n\r\n  //   selfCm.cpm = evt.currentTarget.dataset.cpm === 'null' ? null : evt.currentTarget.dataset.cpm;\r\n  //   selfCm.idPredio = evt.currentTarget.parentElement.parentElement.id;\r\n  //   selfCm.resolutionType = evt.currentTarget.dataset.resolutiontype === 'null' ? null : evt.currentTarget.dataset.resolutiontype;\r\n  //   selfCm.resolutionDocument = evt.currentTarget.dataset.resolutiondocument === 'null' ? null : evt.currentTarget.dataset.resolutiondocument;\r\n  //   selfCm.floor = evt.currentTarget.dataset.floor === 'null' ? null : evt.currentTarget.dataset.floor;\r\n  //   selfCm.urbanLotNumber = evt.currentTarget.dataset.urbanlotnumber === 'null' ? null : evt.currentTarget.dataset.urbanlotnumber;\r\n\r\n\r\n  //   // graphics initialize\r\n  //   const graphic = graphicLayerPredioByMaintenance.graphics.filter(item => item.attributes.id === selfCm.idPredio);\r\n  //   graphicLayerPredioByMaintenance.remove(graphic[0]);\r\n\r\n  //   const graphicROW = graphicRightOfWay.graphics.filter(item => item.attributes.id === selfCm.idPredio);\r\n  //   graphicRightOfWay.remove(graphicROW[0]);\r\n\r\n  //   selfCm.map.setInfoWindowOnClick(false);\r\n  //   const graphicLayerPuntoLote = selfCm.map.getLayer(idGraphicPuntoLote);\r\n  //   selfCm._activateSnappingPredios(graphicLayerPuntoLote);\r\n  //   // selfCm._activateSnappingByAcumulacion();\r\n  //   // selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n  //   toolbarCm.activate(Draw[\"POINT\"]);\r\n  // },\r\n\r\n  _activateToolLinesDivision(evt) {\r\n    selfCm._removeClassActiveButton();\r\n    ToolDraw.deactivateToolbarAnotherToolbar();\r\n    selfCm.idButtonDrawActive = evt.currentTarget.id;\r\n    dojo.query(`#${selfCm.idButtonDrawActive}`)[0].classList.add('activeButton');\r\n    selfCm.map.setInfoWindowOnClick(false);\r\n    selfCm._activateSnappingByDivision();\r\n    selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n    selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n    selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n    selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n    selfCm.bodyTbDatosLoteDvApCm.innerHTML = '';\r\n    // selfCm.bodyTbPrediosDvApCm.innerHTML = ''\r\n    graphicLayerPredioByMaintenance.clear();\r\n    toolbarCm.activate(Draw[\"POLYLINE\"]);\r\n  },\r\n\r\n  // _activateSnappingByReasignar() {\r\n  //   const cflayer = selfCm.layersMap.getLayerInfoById(idLyrCfLotesPun)\r\n  //   const propertyLayer = new FeatureLayer(cflayer.getUrl(), {\r\n  //     mode: FeatureLayer.MODE_ONDEMAND,\r\n  //     outFields: [\"*\"]\r\n  //   });\r\n  //   const snapManager = selfCm.map.enableSnapping({\r\n  //     // alwaysSnap: true,\r\n  //     // snapKey: keys.CTRL,\r\n  //     snapPointSymbol: symbolSnapPointCm,\r\n  //     tolerance: 1,\r\n  //   });\r\n  //   // get layerinfo by id of layer to snap\r\n  //   const layerInfos = [{\r\n  //     layer: propertyLayer\r\n  //   }];\r\n\r\n  //   snapManager.setLayerInfos(layerInfos);\r\n  // },\r\n\r\n  // _activateSnappingByAcumulacion() {\r\n  //   const graphicLayerPuntoLote = selfCm.map.getLayer(idGraphicPuntoLote)\r\n  //   const graphicsLayerInfo = new esri.layers.LayerInfo({\r\n  //     id: graphicLayerPuntoLote.id, // El id del `GraphicsLayer`\r\n  //     name: graphicLayerPuntoLote.name, // El nombre del `GraphicsLayer`\r\n  //     layer: graphicLayerPuntoLote // El `GraphicsLayer` a utilizar\r\n  //   });\r\n\r\n  //   // Agregar el `LayerInfo` al mapa y habilitar el snapping\r\n  //   selfCm.map.enableSnapping({\r\n  //     layerInfos: [graphicsLayerInfo], // Agregar el `LayerInfo` al mapa\r\n  //     // alwaysSnap: true,\r\n  //     snapPointSymbol: symbolSnapPointCm,\r\n  //     tolerance: 5,\r\n  //   });\r\n  // },\r\n\r\n  _activateSnappingByDivision() {\r\n    const graphicsLayerInfo = new esri.layers.LayerInfo({\r\n      id: graphicLayerLineaDivision.id, // El id del `GraphicsLayer`\r\n      name: graphicLayerLineaDivision.name, // El nombre del `GraphicsLayer`\r\n      layer: graphicLayerLineaDivision // El `GraphicsLayer` a utilizar\r\n    });\r\n\r\n    // const cflayer = selfCm.layersMap.getLayerInfoById(idLyrCfLotes)\r\n    // const propertyLayer = new FeatureLayer(cflayer.getUrl(), {\r\n    //   mode: FeatureLayer.MODE_ONDEMAND,\r\n    //   outFields: [\"*\"],\r\n    //   where: selfCm.lotesQuery\r\n    // });\r\n    const propertyLayer = selfCm.map.getLayer(idLyrCfLotes)\r\n    // change MODE_ONDEMAND\r\n    propertyLayer.mode = 2;\r\n    // propertyLayer.setAutoGeneralize(false);\r\n\r\n    const layerInfos = [\r\n      {\r\n        layer: propertyLayer\r\n      },\r\n      graphicsLayerInfo\r\n    ];\r\n\r\n    // Agregar el `LayerInfo` al mapa y habilitar el snapping\r\n    selfCm.map.enableSnapping({\r\n      layerInfos: layerInfos, // Agregar el `LayerInfo` al mapa\r\n      alwaysSnap: false,\r\n      snapPointSymbol: symbolSnapPointCm,\r\n      tolerance: 0,\r\n    });\r\n  },\r\n\r\n  // crear una funcion que permita dos poligonos aceptando dos poligonos json como parametros\r\n  // la funcion debe retornar un poligono json\r\n  _unionFeatures(arr) {\r\n    const union = geometryEngine.union(arr);\r\n    return union;\r\n  },\r\n\r\n  _unionFeaturesAcumulation(topology = false) {\r\n    // Creamos grafico de lote fusionado\r\n    // const graphicLayerLotPreview = new GraphicsLayer({\r\n    //   id: idGraphicLoteCm\r\n    // });\r\n\r\n    const arr = selfCm.currentLotsRows.map((i) => i.geometry);\r\n\r\n    const response = selfCm._unionFeatures(arr);\r\n    if (topology) {\r\n      if (response.rings.length > 1) {\r\n        const deletedRings = []\r\n        for (let a of response.rings) {\r\n          const polygonA = new Polygon({\r\n            rings: [a],\r\n            spatialReference: response.spatialReference\r\n          });\r\n          for (let b of response.rings) {\r\n            if (a !== b) {\r\n              const polygonB = new Polygon({\r\n                rings: [b],\r\n                spatialReference: response.spatialReference\r\n              });\r\n              const contain = geometryEngine.within(polygonA, polygonB);\r\n              if (contain) {\r\n                deletedRings.push(b);\r\n              }\r\n            }\r\n          }\r\n        };\r\n        const polygonParents = [];\r\n        for (let ring of response.rings) {\r\n          if (deletedRings.includes(ring)) {\r\n            continue;\r\n          }\r\n          const polygon = new Polygon({\r\n            rings: [ring],\r\n            spatialReference: response.spatialReference\r\n          });\r\n          polygonParents.push(polygon);\r\n        };\r\n\r\n        const check = geometryEngine.union(polygonParents);\r\n\r\n        if (check.rings.length > 1) {\r\n          throw new Error(\"La acumulación no es posible (los predios no son contiguos)\")\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n    const graphic = new Graphic(response, symbolFusionLote, { tipLot: 2 });\r\n\r\n    graphicLayerLotPreview.add(graphic);\r\n    // selfCm.map.addLayer(graphicLayerLotPreview);\r\n    // selfCm.map.setExtent(graphic._extent.expand(1.5), true);\r\n    // return [response];\r\n  },\r\n\r\n  _applyIndependenceRefactor() {\r\n    const deferred = new Deferred();\r\n    // selfCm.busyIndicator.show();\r\n    selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n    selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n    selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n    selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n    selfCm._removeLayerGraphic(idGraphicLoteDeleteCm);\r\n    selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n\r\n    if (!selfCm.lotesQuery) {\r\n      selfCm._showMessage(selfCm.nls.errorGetLand, 'warning');\r\n      selfCm.busyIndicator.hide();\r\n      return\r\n    }\r\n    selfCm._getOriginalLots()\r\n      .then(() => {\r\n        // const arr = selfCm.currentLotsRows.map((i) => i.geometry);\r\n\r\n        // const response = selfCm._unionFeatures(arr);\r\n        // if (topology) {\r\n        //   if (response.rings.length > 1) {\r\n        //     throw new Error(\"La acumulación no es posible (los predios no son contiguos)\")\r\n        //   }\r\n        // }\r\n        // const graphic = new Graphic(selfCm.currentLotsRows[0], symbolFusionLote, { tipLot: 2 });\r\n        graphicLayerLotPreview.add(selfCm.currentLotsRows[0]);\r\n        selfCm._addGraphicsPointLotsIndependence();\r\n        selfCm._populateTablePredio(selfCm.bodyTbPrediosIpApCm, selfCm._activateToolPrediosByMaintenance)\r\n        selfCm._addGraphicsAfterPreVisualization();\r\n        selfCm.map.setExtent(selfCm.currentLotsRows[0].geometry.getExtent().expand(1.5), true);\r\n        selfCm.independenceApCm.classList.toggle('active')\r\n        selfCm.busyIndicator.hide();\r\n        deferred.resolve();\r\n        // return selfCm._addGraphicsPointLotsAndArancel();\r\n      })\r\n      // .then((mediterraneanLotsGeometry) => {\r\n      //   return selfCm._addGraphicsPointMediterraneanLot(mediterraneanLotsGeometry);\r\n      // })\r\n      // .then(() => {\r\n      //   selfCm._populateTablePredio(selfCm.bodyTbPrediosIpApCm, selfCm._activateToolPrediosByMaintenance)\r\n      //   selfCm._addGraphicsAfterPreVisualization();\r\n      //   selfCm.map.setExtent(selfCm.currentLotsRows[0].geometry.getExtent().expand(1.5), true);\r\n      //   selfCm.independenceApCm.classList.toggle('active')\r\n      //   selfCm.busyIndicator.hide();\r\n      //   deferred.resolve();\r\n      // })\r\n      .catch(error => {\r\n        // console.log(error)\r\n        // selfCm.busyIndicator.hide();\r\n        // selfCm._showMessage(error.message, type = \"error\");\r\n        deferred.reject(error);\r\n      })\r\n    return deferred.promise;\r\n  },\r\n\r\n  _ApplyAcumulationLotsRefactor() {\r\n    selfCm.busyIndicator.show();\r\n    selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n    selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n    selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n    selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n    selfCm._removeLayerGraphic(idGraphicLoteDeleteCm);\r\n    selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n\r\n    if (!selfCm.lotesQuery) {\r\n      selfCm._showMessage(selfCm.nls.errorGetLand, 'warning');\r\n      selfCm.busyIndicator.hide();\r\n      return\r\n    }\r\n    return selfCm._getOriginalLots()\r\n      .then(() => {\r\n        // const geomLoteAcumulation = selfCm._unionFeaturesAcumulation(topology = true);\r\n        selfCm._unionFeaturesAcumulation(topology = true);\r\n        return selfCm._addGraphicsPointLotsAndArancel();\r\n      })\r\n      .then((mediterraneanLotsGeometry) => {\r\n        return selfCm._addGraphicsPointMediterraneanLot(mediterraneanLotsGeometry);\r\n      })\r\n      .then(() => {\r\n        return selfCm._getMaxCodLot();\r\n      })\r\n      .then(maxCodLot => {\r\n        selfCm._ordenarPoligonosNorteSur(parseInt(maxCodLot), selfCm.bodyTbDatosLoteFsApCm);\r\n      })\r\n      .then(() => {\r\n        selfCm._populateTablePredio(selfCm.bodyTbPrediosFsApCm, selfCm._activateToolPrediosByMaintenance)\r\n        selfCm._addGraphicsAfterPreVisualization();\r\n        selfCm.map.setExtent(selfCm.currentLotsRows[0].geometry.getExtent().expand(1.5), true);\r\n        selfCm.busyIndicator.hide();\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(error.message, type = \"error\")\r\n      })\r\n    // return selfCm._getOriginalLots()\r\n    //   .then(() => {\r\n    //     // const geomLoteAcumulation = selfCm._unionFeaturesAcumulation(topology = true);\r\n    //     selfCm._unionFeaturesAcumulation(topology = true);\r\n    //     return selfCm._getMaxCodLot();\r\n    //   })\r\n    //   .then(proprsLot => {\r\n    //     selfCm._ordenarPoligonosNorteSur(\r\n    //       proprsLot.polygons,\r\n    //       parseInt(proprsLot.maxCodLote),\r\n    //       selfCm.bodyTbDatosLoteFsApCm\r\n    //     );\r\n    //     selfCm.map.setExtent(proprsLot.polygons[0].getExtent().expand(1.5), true);\r\n    //     return selfCm._addGraphicsPointLotsAndArancel();\r\n    //   })\r\n    //   .then(() => {\r\n    //     selfCm._populateTablePredio(selfCm.bodyTbPrediosFsApCm, selfCm._activateToolAcumulacion)\r\n    //     selfCm.busyIndicator.hide();\r\n    //   })\r\n    //   .catch(error => {\r\n    //     console.log(error)\r\n    //     selfCm.busyIndicator.hide();\r\n    //     selfCm._showMessage(error.message, type = \"error\")\r\n    //   })\r\n  },\r\n\r\n  _getMidpoint(polyline) {\r\n    const length = geometryEngine.geodesicLength(polyline, \"meters\");\r\n    const midpoint = geometryEngine.geodesicDensify(polyline, length / 2, \"meters\").getPoint(0, 0);\r\n    return midpoint;\r\n  },\r\n\r\n  _findMidpoint(polyline) {\r\n    const lengthPolylineChunk = geometryEngine.geodesicLength(polyline, \"meters\")\r\n    const line = turf.lineString(polyline.paths[0]);\r\n    const options = { units: 'meters' };\r\n    const along = turf.along(line, lengthPolylineChunk / 2, options);\r\n    return along\r\n  },\r\n\r\n  // funcion que recibe una polilinea con muchas partes y retorna la parte mas larga como una polilinea\r\n  _getLongestPolyline(polyline) {\r\n    const paths = polyline.paths\r\n    let longestPath = 0\r\n    let response = null;\r\n    for (let path of paths) {\r\n      let polylineChunk = new Polyline({\r\n        paths: [path],\r\n        spatialReference: { wkid: 4326 }\r\n      });\r\n      let lengthPolylineChunk = geometryEngine.geodesicLength(polylineChunk, \"meters\")\r\n      if (lengthPolylineChunk > longestPath) {\r\n        longestPath = lengthPolylineChunk\r\n        response = polylineChunk\r\n      }\r\n    }\r\n    return response\r\n  },\r\n\r\n  // --------------------------------------------------------------\r\n  // SUBDIVISION DE LOTES\r\n  // function that allows dividing a polygon from cutting lines, the parameters will be a polygon and several lines in json format\r\n  // the function must return a polygon json\r\n  // --------------------------------------------------------------\r\n  _dividePolygon(poly, lines) {\r\n    const divide = geometryEngine.cut(poly, lines);\r\n    const response = [];\r\n    for (let item of divide) {\r\n      item.rings.map((i) => {\r\n        const simplePolygon = new Polygon({\r\n          rings: [i],\r\n          spatialReference: item.spatialReference\r\n        });\r\n\r\n        // const simplePolygonG = webMercatorUtils.webMercatorToGeographic(simplePolygon);\r\n        response.push(simplePolygon);\r\n      });\r\n    };\r\n    return response;\r\n  },\r\n\r\n  _populateTableDrawLine(idLine) {\r\n    let row = `<td class=\"center-aligned\">${selfCm.idxLines}</td>\r\n              <td contenteditable=\"true\" id=\"${idLine}_name\">${idLine}</td>\r\n              <td class=\"center-aligned\">\r\n                <span id=\"${idLine}_ext\"><i class=\"fas fa-search\"></i></span>\r\n              </td>\r\n              <td class=\"center-aligned\">\r\n                <span id=\"${idLine}_del\" style=\"color: #FF5722;\"><i class=\"far fa-trash-alt\"></i></span>\r\n              </td>`\r\n    let tr = dojo.create('tr');\r\n    tr.id = idLine;\r\n    tr.innerHTML = row;\r\n    tr.style.cursor = \"pointer\";\r\n    selfCm.bodyTbLinesDvApCm.appendChild(tr)\r\n    dojo.query(`#${idLine}_del`).on('click', selfCm._deleteRowLine);\r\n    dojo.query(`#${idLine}_ext`).on('click', selfCm._zoonToLineDivision);\r\n    dojo.query(`#${idLine}_name`).on('input', selfCm._editaNameLineDivision);\r\n  },\r\n\r\n  _deleteRowLine(evt) {\r\n    let id = evt.currentTarget.id.replace('_del', '');\r\n    let elem = dojo.query(`#${id}`);\r\n    let graphic = graphicLayerLineaDivision.graphics.filter(item => item.attributes.id == id);\r\n    graphicLayerLineaDivision.remove(graphic[0])\r\n    let graphicLabel = graphicLayerLabelLineaDivision.graphics.filter(item => item.attributes.id == id);\r\n    graphicLayerLabelLineaDivision.remove(graphicLabel[0])\r\n    selfCm._removeLayerGraphic(idGraphicLoteCm)\r\n    selfCm._removeLayerGraphic(idGraphicPuntoLote)\r\n    selfCm._removeLayerGraphic(idGraphicFrenteLote)\r\n    selfCm._removeLayerGraphic(idGraphicLabelCodLote)\r\n    graphicLayerPredioByMaintenance.clear()\r\n    elem[0].parentNode.removeChild(elem[0]);\r\n  },\r\n\r\n  _addNameToLine(name, polylineGeom) {\r\n    let polylineGeomUtm = webMercatorUtils.webMercatorToGeographic(polylineGeom)\r\n    let midPoint = selfCm._findMidpoint(polylineGeomUtm)\r\n\r\n    let pointLabel = new Point({\r\n      x: midPoint.geometry.coordinates[0],\r\n      y: midPoint.geometry.coordinates[1],\r\n      spatialReference: { wkid: 4326 }\r\n    })\r\n\r\n    let font = new Font(\"15px\", Font.STYLE_NORMAL, Font.VARIANT_NORMAL, Font.WEIGHT_BOLD, \"Arial\");\r\n    let txtSym = new TextSymbol(name, font, new Color([250, 0, 0, 0.9]));\r\n    txtSym.setOffset(15, 15).setAlign(TextSymbol.ALIGN_END)\r\n    txtSym.setHaloColor(new Color([255, 255, 255]));\r\n    txtSym.setHaloSize(1.5);\r\n    let graphicLabel = new Graphic(pointLabel, txtSym, { id: name });\r\n\r\n    // graphicLayer.add(graphic);\r\n    graphicLayerLabelLineaDivision.add(graphicLabel);\r\n  },\r\n\r\n  _zoonToLineDivision(evt) {\r\n    let id = evt.currentTarget.id.replace('_ext', '');\r\n    let graphic = graphicLayerLabelLineaDivision.graphics.filter(item => item.attributes.id == id);\r\n    selfCm.map.setExtent(graphic[0]._extent, true);\r\n  },\r\n\r\n  _editaNameLineDivision(evt) {\r\n    let id = evt.currentTarget.id.replace('_name', '');\r\n    let graphic = graphicLayerLabelLineaDivision.graphics.filter(item => item.attributes.id == id)\r\n    graphic[0].symbol.text = evt.currentTarget.innerText;\r\n    graphicLayerLabelLineaDivision.refresh()\r\n  },\r\n\r\n  _populateTablePredio(bodyTable, drawFunction) {\r\n    bodyTable.innerHTML = ''\r\n    selfCm.responseRequests.forEach((predio, idx) => {\r\n      const tr = dojo.create('tr');\r\n      tr.id = `predio_${predio['id']}`;\r\n      const row = `<td class=\"center-aligned\">${idx + 1}</td>\r\n                  <td>${predio['address']}</td>\r\n                  <td class=\"center-aligned\">\r\n                   <span \r\n                    id=\"${tr.id}_draw\"\r\n                    data-cpm=${predio['cpm']} \r\n                    data-resolutionType=${predio['resolutionType']} \r\n                    data-resolutionDocument=${predio['resolutionDocument']}\r\n                    data-floor=${predio['floor']}\r\n                    data-urbanLotNumber=${predio['urbanLotNumber']}\r\n                   >\r\n                      <i class=\"fas fa-map-marker-alt\"></i>\r\n                   </span>\r\n                  </td>`\r\n      tr.innerHTML = row;\r\n      tr.style.cursor = \"pointer\";\r\n      bodyTable.appendChild(tr)\r\n      dojo.query(`#${tr.id}_draw`).on('click', drawFunction)\r\n    });\r\n  },\r\n\r\n  _activateSnappingPredios(graphiclayer) {\r\n    // selfCm.map.snappingManager.setLayerInfos([{ layer: graphiclayer }]);\r\n    // selfCm.map.snappingManager.alwaysSnap = true;\r\n    // selfCm.map.snapPointSymbol = symbolSnapPointCm;\r\n    // selfCm.map.enableSnapping();\r\n    const graphicsLayerInfo = new esri.layers.LayerInfo({\r\n      id: graphiclayer.id, // El id del `GraphicsLayer`\r\n      name: graphiclayer.name, // El nombre del `GraphicsLayer`\r\n      layer: graphiclayer // El `GraphicsLayer` a utilizar\r\n    });\r\n\r\n    // Agregar el `LayerInfo` al mapa y habilitar el snapping\r\n    selfCm.map.enableSnapping({\r\n      layerInfos: [graphicsLayerInfo], // Agregar el `LayerInfo` al mapa\r\n      alwaysSnap: true,\r\n      snapPointSymbol: symbolSnapPointCm,\r\n      // tolerance: 5,\r\n    });\r\n  },\r\n\r\n  _activateToolPrediosByMaintenance(evt) {\r\n    // control initialize\r\n    selfCm._removeClassActiveButton()\r\n    ToolDraw.deactivateToolbarAnotherToolbar();\r\n    selfCm._zoomExtentToLote();\r\n    selfCm.idButtonDrawActive = evt.currentTarget.id\r\n    dojo.query(`#${selfCm.idButtonDrawActive}`)[0].classList.add('activeButton')\r\n\r\n    // recovery data\r\n    selfCm.cpm = evt.currentTarget.dataset.cpm === 'null' ? null : evt.currentTarget.dataset.cpm;\r\n    selfCm.idPredio = evt.currentTarget.parentElement.parentElement.id;\r\n    selfCm.resolutionType = evt.currentTarget.dataset.resolutiontype === 'null' ? null : evt.currentTarget.dataset.resolutiontype;\r\n    selfCm.resolutionDocument = evt.currentTarget.dataset.resolutiondocument === 'null' ? null : evt.currentTarget.dataset.resolutiondocument;\r\n    selfCm.floor = evt.currentTarget.dataset.floor === 'null' ? null : evt.currentTarget.dataset.floor;\r\n    selfCm.urbanLotNumber = evt.currentTarget.dataset.urbanlotnumber === 'null' ? null : evt.currentTarget.dataset.urbanlotnumber;\r\n\r\n    // graphics initialize\r\n    const graphic = graphicLayerPredioByMaintenance.graphics.filter(item => item.attributes.id === selfCm.idPredio);\r\n    graphicLayerPredioByMaintenance.remove(graphic[0]);\r\n\r\n    const graphicROW = graphicRightOfWay.graphics.filter(item => item.attributes.id === selfCm.idPredio);\r\n    graphicRightOfWay.remove(graphicROW[0]);\r\n\r\n    selfCm.map.setInfoWindowOnClick(false);\r\n    const graphicLayerPuntoLote = selfCm.map.getLayer(idGraphicPuntoLote);\r\n    selfCm._activateSnappingPredios(graphicLayerPuntoLote);\r\n    toolbarCm.activate(Draw[\"POINT\"]);\r\n  },\r\n\r\n  _changeValueCodLote(evt) {\r\n    const selectedValue = evt.target.value;\r\n    const currentSelectId = evt.target.id;\r\n    const id = evt.target.id.split('_')[1]\r\n    // const idx = evt.target.selectedIndex\r\n    // const cod_lote = evt.target.value\r\n    const lyr = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n    const graphicSelected = lyr.graphics.filter(item => item.attributes.id == `label_${id}`)\r\n    graphicSelected[0].symbol.text = selectedValue\r\n    const selects = dojo.query('.codLoteSelectDvCls');\r\n    selects.forEach(select => {\r\n      if (select.id !== currentSelectId && select.value === selectedValue) {\r\n        select.value = '';\r\n        const graphicNotSelected = lyr.graphics.filter(item => item.attributes.id == `label_${select.id.split('_')[1]}`)\r\n        graphicNotSelected[0].symbol.text = ''\r\n      }\r\n      lyr.refresh()\r\n    });\r\n  },\r\n\r\n  _changeLotUrb(evt) {\r\n    const selectedValue = evt.target.value;\r\n    const currentSelectId = evt.target.id;\r\n    const selects = dojo.query('.loteUrbSelectDvCls');\r\n    const lyr = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n    // const graphicSelected = lyr.graphics.filter(item => item.attributes.id == `label_${id}`)\r\n    selects.forEach(select => {\r\n      if (select.id !== currentSelectId && select.value === selectedValue) {\r\n        select.value = '';\r\n        const graphicNotSelected = lyr.graphics.filter(item => item.attributes.id == `label_${select.id.split('_')[1]}`)\r\n        graphicNotSelected[0].attributes.lot_urb = ''\r\n      }\r\n    });\r\n  },\r\n\r\n  _centerAtLabelCodLoteDivision(evt) {\r\n    let id = evt.currentTarget.id\r\n    let lyr = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n    let graphicSelected = lyr.graphics.filter(item => item.attributes.id == id)\r\n    selfCm.map.centerAndZoom(graphicSelected[0].geometry)\r\n  },\r\n\r\n  _editLoteUrbanoDivision(evt) {\r\n    const id = evt.target.id.replace('loteUrbanoDv_', '');\r\n    const lyr = selfCm.map.getLayer(idGraphicLabelCodLote)\r\n    const graphic = lyr.graphics.filter(item => item.attributes.id == `label_${id}`)\r\n    graphic[0].attributes.lot_urb = evt.target.selectedOptions[0].value\r\n    lyr.refresh()\r\n  },\r\n\r\n  _buildDataLoteTable(tableBody, predios) {\r\n    tableBody.innerHTML = ''\r\n    predios.forEach((predio, index) => {\r\n      const row = document.createElement('tr');\r\n\r\n      // celda de índice\r\n      const indexCell = document.createElement('td');\r\n      indexCell.className = \"center-aligned\"\r\n      indexCell.textContent = predio.num;\r\n      row.appendChild(indexCell);\r\n\r\n      // celda de codigo de predio\r\n      const codigoCell = document.createElement('td');\r\n      const select = document.createElement('select');\r\n      select.className = \"codLoteSelectDvCls\"\r\n      select.id = `codLoteSelectDv_${predio.num}`\r\n\r\n      const optionDisabled = document.createElement('option');\r\n      optionDisabled.value = '';\r\n      optionDisabled.textContent = '---';\r\n      optionDisabled.disabled = true;\r\n      select.appendChild(optionDisabled);\r\n      predios.forEach(p => {\r\n        const option = document.createElement('option');\r\n        option.value = p.cod_lote;\r\n        option.textContent = p.cod_lote;\r\n        if (p.cod_lote === predio.cod_lote) {\r\n          option.selected = true;\r\n        }\r\n        select.appendChild(option);\r\n      });\r\n\r\n      codigoCell.appendChild(select);\r\n      row.appendChild(codigoCell);\r\n\r\n\r\n      const loteUrbCell = document.createElement('td');\r\n      const loteUrbSelect = document.createElement('select');\r\n      loteUrbSelect.className = \"loteUrbSelectDvCls\"\r\n      loteUrbSelect.id = `loteUrbanoDv_${predio.num}`\r\n\r\n      const optionDisabledLotUrb = optionDisabled.cloneNode(true)\r\n      loteUrbSelect.appendChild(optionDisabledLotUrb);\r\n\r\n      selfCm.responseRequests.forEach((request, idx) => {\r\n        const option = document.createElement('option');\r\n        option.value = request.urbanLotNumber;\r\n        option.textContent = request.urbanLotNumber;\r\n        loteUrbSelect.appendChild(option);\r\n        if (predio.num == idx + 1) {\r\n          option.selected = true;\r\n        }\r\n        // selected option by index predio.num\r\n      })\r\n      loteUrbCell.appendChild(loteUrbSelect);\r\n      loteUrbCell.className = \"loteUrbanoDvCls\"\r\n      row.appendChild(loteUrbCell);\r\n\r\n      const locationMarker = document.createElement('td');\r\n      locationMarker.id = predio.id\r\n      locationMarker.className = \"center-aligned\"\r\n      locationMarker.innerHTML = `<span class=\"locationLabelLoteDvCls\" id=\"${predio.id}\"><i class=\"fas fa-search\"></i></span>`\r\n      row.appendChild(locationMarker);\r\n      tableBody.appendChild(row);\r\n      // dojo.query(`#${predio.id}`).on('click', selfCm._centerAtLabelCodLoteDivision)\r\n\r\n    });\r\n    dojo.query('.codLoteSelectDvCls').on('change', selfCm._changeValueCodLote)\r\n    dojo.query('.loteUrbSelectDvCls').on('change', selfCm._changeLotUrb)\r\n    dojo.query('.locationLabelLoteDvCls').on('click', selfCm._centerAtLabelCodLoteDivision)\r\n    dojo.query('.loteUrbanoDvCls').on('change', selfCm._editLoteUrbanoDivision);\r\n\r\n  },\r\n\r\n  _ordenarPoligonosNorteSur(idx, bodyTable) {\r\n    const deferred = new Deferred();\r\n\r\n    const lotsDividedResults = graphicLayerLotPreview.graphics.map(i => i.geometry);\r\n    // Obtener la coordenada más al norte de cada polígono\r\n    const coordenadasNorte = lotsDividedResults.map(lotDividedResult => {\r\n      const extent = lotDividedResult.getExtent();\r\n      return extent.ymax;\r\n    });\r\n\r\n    // Ordenar los polígonos en base a la coordenada más al norte\r\n    const lotsDividedResultsSorted = lotsDividedResults.slice().sort((a, b) => {\r\n      const coordenadaNorteA = coordenadasNorte[lotsDividedResults.indexOf(a)];\r\n      const coordenadaNorteB = coordenadasNorte[lotsDividedResults.indexOf(b)];\r\n      return coordenadaNorteB - coordenadaNorteA; // Ordenar de norte a sur\r\n    });\r\n\r\n    // console.log(poligonos)\r\n\r\n    const graphicLayerLabelCodLoteDivision = new GraphicsLayer({\r\n      id: idGraphicLabelCodLote,\r\n    });\r\n\r\n    const font = new Font(\"20px\", Font.STYLE_NORMAL, Font.VARIANT_NORMAL, Font.WEIGHT_BOLD, \"Arial\");\r\n\r\n    const dataLoteTable = []\r\n\r\n    selfCm.geometryService.labelPoints(lotsDividedResultsSorted)\r\n      .then((labelPoints) => {\r\n        labelPoints.forEach((point, index) => {\r\n          const cod_lote = selfCm._zfill(idx + 1, 3)\r\n          const txtSym = new TextSymbol(cod_lote, font, new Color([250, 0, 0, 1]));\r\n          txtSym.setColor(new esri.Color([0, 0, 0, 1])); // color blanco\r\n          txtSym.setSize(\"12pt\");\r\n          txtSym.setHaloColor(new esri.Color([255, 255, 255, 1]));\r\n          txtSym.setHaloSize(2);\r\n          txtSym.setOffset(15, 15);\r\n          const idGraphic = `label_${index + 1}`\r\n          const graphicLabel = new Graphic(\r\n            point,\r\n            txtSym,\r\n            {\r\n              id: idGraphic,\r\n              lot_urb: selfCm.responseRequests[index].urbanLotNumber,\r\n              clase: 'labelCodLoteDivision',\r\n            });\r\n          graphicLayerLabelCodLoteDivision.add(graphicLabel);\r\n          dataLoteTable.push({ num: index + 1, id: idGraphic, cod_lote: cod_lote })\r\n          idx = idx + 1\r\n        });\r\n        return dataLoteTable\r\n      })\r\n      .then((dataLoteTable) => {\r\n        selfCm._buildDataLoteTable(bodyTable, dataLoteTable)\r\n        selfCm.map.addLayer(graphicLayerLabelCodLoteDivision)\r\n        return deferred.resolve(dataLoteTable);\r\n      })\r\n      .catch((error) => {\r\n        return deferred.reject(error);\r\n      });\r\n\r\n    return deferred.promise;\r\n  },\r\n\r\n  // _enableEditingLabelsLotesDivision(evt) {\r\n  //   if (evt && evt.graphic && evt.graphic.attributes && evt.graphic.attributes.clase == 'labelCodLoteDivision') {\r\n  //     selfCm.map.setInfoWindowOnClick(false)\r\n  //     selfCm.editToolbar.activate(Edit.MOVE, evt.graphic);\r\n  //   } else {\r\n  //     selfCm.editToolbar.deactivate()\r\n  //   }\r\n  // },\r\n\r\n  _zfill(num, len) {\r\n    return (Array(len).fill('0').join('') + num).slice(-len);\r\n  },\r\n\r\n  _getMaxCodLot() {\r\n    const deferred = new Deferred();\r\n    const estadisticaDef = new StatisticDefinition();\r\n    estadisticaDef.statisticType = 'max';\r\n    estadisticaDef.onStatisticField = _COD_LOTE_FIELD;\r\n    estadisticaDef.outStatisticFieldName = \"resultado\";\r\n\r\n    const query = new Query();\r\n    query.where = selfCm.arancel;\r\n    query.outFields = [_COD_LOTE_FIELD];\r\n    query.returnGeometry = false;\r\n    query.outStatistics = [estadisticaDef];\r\n\r\n    const queryTask = new QueryTask(selfCm.map.getLayer(idLyrCfLotes).url);\r\n    queryTask.execute(query)\r\n      .then(result => {\r\n        if (result.features.length > 0) {\r\n          const maxCodLote = result.features[0].attributes.resultado;\r\n          return deferred.resolve(maxCodLote);\r\n        } else {\r\n          return deferred.reject('No se encontraron lotes');\r\n        }\r\n      });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _getOriginalLots() {\r\n    const deferred = new Deferred();\r\n    const self = this;\r\n    const query = new Query();\r\n    query.where = self.lotesQuery;\r\n    // query.where = \"ID_LOTE_P in (1448)\";\r\n    query.returnGeometry = true;\r\n    query.outFields = [\"*\"];\r\n    query.outSpatialReference = new SpatialReference({ wkid: 4326 });\r\n\r\n    const lotLayer = self.map.getLayer(idLyrCfLotes);\r\n    const queryTask = new QueryTask(lotLayer.url);\r\n\r\n    queryTask.execute(query)\r\n      .then((response) => {\r\n        // Acumulacion\r\n        if (self.case == 2) {\r\n          // La acumulacion debe tener como minimo 2 lotes\r\n          if (response.features.length < 2) {\r\n            throw new Error(self.nls.errorAcumulationLandsNumber);\r\n          }\r\n        }\r\n        self.currentLotsRows = response.features;\r\n        return deferred.resolve();\r\n      })\r\n      .catch(err => deferred.reject(err));\r\n    return deferred.promise;\r\n  },\r\n\r\n  // _getOriginalLots(query) {\r\n  //   const selfCm = this;\r\n  //   const deferred = new Deferred();\r\n  //   const params = {\r\n  //     where: query,\r\n  //     returnGeometry: true,\r\n  //     outFields: \"*\",\r\n  //     outSR: 4326,\r\n  //     f: \"json\"\r\n  //   };\r\n\r\n  //   const requestOptions = {\r\n  //     url: `${selfCm.layersMap.getLayerInfoById(idLyrCfLotes).getUrl()}/query`,\r\n  //     content: params,\r\n  //     handleAs: \"json\",\r\n  //     callbackParamName: \"callback\"\r\n  //   };\r\n\r\n  //   esriRequest(requestOptions, { usePost: true })\r\n  //     .then((response) => {\r\n  //       selfCm.currentLotsRows = response.features;\r\n\r\n  //       if (selfCm.case == 2) {\r\n  //         // La acumulacion debe tener como minimo 2 lotes\r\n  //         if (selfCm.currentLotsRows.length < 2) {\r\n  //           throw new Error(selfCm.nls.errorAcumulationLandsNumber);\r\n  //         }\r\n  //       }\r\n  //       // console.log(selfCm.currentLotsRows);\r\n  //       // selfCm.currentLotsRows.forEach(row => {\r\n  //       //   row.geometry = new Polygon({\r\n  //       //     rings: row.geometry.rings,\r\n  //       //     spatialReference: { wkid: 4326 }\r\n  //       //   });\r\n  //       // });\r\n  //       return deferred.resolve();\r\n  //     })\r\n  //     .catch(err => deferred.reject(err));\r\n\r\n  //   return deferred.promise;\r\n  // },\r\n\r\n  _getPolylinesDrawn() {\r\n    const arr = []\r\n    for (let i of graphicLayerLineaDivision.graphics) {\r\n      arr.push(i.geometry);\r\n    }\r\n    const unionGraphicLayerLineaDivision = selfCm._unionFeatures(arr);\r\n\r\n    let lineGeometry = new Polyline({\r\n      paths: unionGraphicLayerLineaDivision.paths,\r\n      spatialReference: { wkid: 102100 }\r\n    });\r\n    lineGeometry = esri.geometry.webMercatorToGeographic(lineGeometry);\r\n    return lineGeometry;\r\n  },\r\n\r\n  _divideLotsByLines() {\r\n    // const geomLote = results.features[0].geometry\r\n    if (selfCm.currentLotsRows.length == 0) {\r\n      selfCm._showMessage(selfCm.nls.errorLotQuery, 'warning');\r\n      return;\r\n    }\r\n    const lineGeometry = selfCm._getPolylinesDrawn();\r\n\r\n    const polygonGeometry = selfCm.currentLotsRows[0].geometry;\r\n\r\n    const geomLoteDivided = selfCm._dividePolygon(polygonGeometry, lineGeometry)\r\n\r\n    if (geomLoteDivided.length == 0) {\r\n      //  genera un mensage show indicando que no se encontro el lote\r\n      throw new Error(selfCm.nls.errorDivideLot);\r\n      // selfCm._showMessage(selfCm.nls.errorDivideLot, type = 'error');\r\n      // return;\r\n    }\r\n\r\n    if (geomLoteDivided.length != selfCm.responseRequests.length) {\r\n      throw new Error(`No se puede proceder con la operación\\nLa cantidad de lotes generados (${geomLoteDivided.length}) es diferente a lo solicitado (${selfCm.responseRequests.length})`);\r\n    }\r\n\r\n    // Creamos grafico de lote fusionado\r\n    // const graphicLayerLotPreview = new GraphicsLayer({\r\n    //   id: idGraphicLoteCm\r\n    // });\r\n\r\n    // iterar sobre los graficos de la capa de division y agregar cada uno a graphicLayerLotPreview\r\n    for (let i of geomLoteDivided) {\r\n      const lote = new Graphic(i, symbolFusionLote, { tipLot: 2 })\r\n\r\n      // agregar el grafico directo al mapa\r\n      graphicLayerLotPreview.add(lote);\r\n    }\r\n    // selfCm.map.addLayer(graphicLayerLotPreview);\r\n  },\r\n\r\n  _addGraphicsPointLotsAndArancel() {\r\n    const deferred = new Deferred();\r\n    const query = new Query();\r\n    query.where = `${selfCm.arancel} and ID_SVIA IS NOT NULL`\r\n    // especificar los campos devueltos\r\n    query.outFields = [_UBIGEO_FIELD, _F_MZN_FIELD];\r\n    query.returnGeometry = true\r\n    // query with order by fields\r\n    query.orderByFields = [_F_MZN_FIELD];\r\n    const qTask = new QueryTask(selfCm.layersMap.getLayerInfoById(idLyrCfArancel).getUrl());\r\n    qTask.execute(query, function (results) {\r\n      // Creamos grafico de punto lote\r\n      // const graphicLayerPuntoLote = new GraphicsLayer({\r\n      //   id: idGraphicPuntoLote\r\n      // });\r\n      // // creamos grafico de frente de lote\r\n      // const graphicLayerFrenteLote = new GraphicsLayer({\r\n      //   id: idGraphicFrenteLote\r\n      // });\r\n      // let graphicLayerPredio = new GraphicsLayer({\r\n      //   id: idGraphicPredioCm\r\n      // });\r\n      // const graphicLayerLotPreview = selfCm.map.getLayer(idGraphicLoteCm);\r\n\r\n      if (!graphicLayerLotPreview) {\r\n        return;\r\n      }\r\n      const frentes = {}\r\n      for (let row of results.features) {\r\n        for (let graphic of graphicLayerLotPreview.graphics) {\r\n          const isItc = geometryEngine.intersects(row.geometry, graphic.geometry);\r\n          if (!isItc) {\r\n            continue;\r\n          }\r\n          // saber si un key esta dentro del objeto frentes\r\n          if (!frentes.hasOwnProperty(row.attributes[_F_MZN_FIELD])) {\r\n            frentes[row.attributes[_F_MZN_FIELD]] = row.geometry;\r\n          }\r\n          else {\r\n            // check if row.geometry share a commin coordinate with frentes\r\n            const unionFrentes = geometryEngine.union([frentes[row.attributes[_F_MZN_FIELD]], row.geometry])\r\n            frentes[row.attributes[_F_MZN_FIELD]] = unionFrentes;\r\n          }\r\n        }\r\n      }\r\n\r\n      const nonIntersectedPolygons = graphicLayerLotPreview.graphics.slice();\r\n\r\n      for (let lote of graphicLayerLotPreview.graphics) {\r\n        for (let idx in frentes) {\r\n          const idItcFrentesByLotes = geometryEngine.intersects(lote.geometry, frentes[idx]);\r\n          if (!idItcFrentesByLotes) {\r\n            continue;\r\n          }\r\n          // remove lote from nonIntersectedPolygons\r\n          const idxNotMediterranean = nonIntersectedPolygons.indexOf(lote);\r\n          if (idxNotMediterranean > -1) {\r\n            nonIntersectedPolygons.splice(idxNotMediterranean, 1);\r\n            const idxLotPreview = graphicLayerLotPreview.graphics.indexOf(lote);\r\n            graphicLayerLotPreview.graphics[idxLotPreview].attributes.tipLot = 1;\r\n            // graphicLayerLotPreview.graphics[idxNotMediterranean].attributes.tipLot = 1\r\n          };\r\n\r\n          const itcFrentesByLotes = geometryEngine.intersect(frentes[idx], lote.geometry)\r\n\r\n          if (!itcFrentesByLotes) {\r\n            continue;\r\n          }\r\n\r\n          for (let row of itcFrentesByLotes.paths) {\r\n            const polylineChunk = new Polyline({\r\n              paths: [row],\r\n              spatialReference: itcFrentesByLotes.spatialReference\r\n            });\r\n            // add frentes to graphicLayerFrenteLote\r\n            const symbolFrenteLote = new SimpleLineSymbol(\r\n              SimpleLineSymbol.STYLE_SOLID,\r\n              new Color(\r\n                [\r\n                  Math.floor(Math.random() * 255),\r\n                  Math.floor(Math.random() * 255),\r\n                  Math.floor(Math.random() * 255)]),\r\n              5\r\n            )\r\n            const frente = new Graphic(polylineChunk, symbolFrenteLote)\r\n            graphicLayerFrenteLote.add(frente);\r\n\r\n            const puntoLoteTurf = selfCm._findMidpoint(polylineChunk)\r\n\r\n            // crear un punto en el mapa\r\n            const puntoLote = new Point({\r\n              x: puntoLoteTurf.geometry.coordinates[0],\r\n              y: puntoLoteTurf.geometry.coordinates[1],\r\n              spatialReference: { wkid: 4326 }\r\n            })\r\n\r\n            // Agregar el punto p al mapa          \r\n            const puntoLoteGraphic = new Graphic(puntoLote, symbolPuntoLote, { tipLot: 1 })\r\n            graphicLayerPuntoLote.add(puntoLoteGraphic)\r\n          };\r\n        }\r\n      }\r\n\r\n      // for (let mediterraneanLot of nonIntersectedPolygons){\r\n      //   const pointLotCenterOfLot = geometryService\r\n      // };\r\n\r\n\r\n      // selfCm.map.addLayer(graphicLayerFrenteLote);\r\n      // selfCm.map.addLayer(graphicLayerPuntoLote);\r\n      // selfCm._removeLayerGraphic(idGraphicPredioByMaintenance);\r\n      // selfCm.map.addLayer(graphicLayerPredioByMaintenance)\r\n      return deferred.resolve(nonIntersectedPolygons);\r\n    });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _addGraphicsPointLotsIndependence() {\r\n    const PointLotCls = new UtilityCase.PointLot();\r\n    for (let row of selfCm.currentPoinLotsRows) {\r\n      const graphic = new Graphic(\r\n        row.geometry,\r\n        symbolPuntoLote,\r\n        {\r\n          tipLot: parseInt(row.attributes[PointLotCls.tipLot])\r\n        }\r\n      );\r\n      graphicLayerPuntoLote.add(graphic);\r\n    }\r\n    // const puntoLote = new Point({\r\n    //   x: puntoLoteTurf.geometry.coordinates[0],\r\n    //   y: puntoLoteTurf.geometry.coordinates[1],\r\n    //   spatialReference: { wkid: 4326 }\r\n    // })\r\n\r\n    // // Agregar el punto p al mapa          \r\n    // const puntoLoteGraphic = new Graphic(puntoLote, symbolPuntoLote, { tipLot: 1 })\r\n    // graphicLayerPuntoLote.add(puntoLoteGraphic)\r\n  },\r\n\r\n  _addGraphicsPointMediterraneanLot(arrayPolygon) {\r\n    const deferred = new Deferred();\r\n    // const LotCls = new UtilityCase.Lot();\r\n    // const tipLot = LotCls.tipLot;\r\n    if (arrayPolygon.length == 0) {\r\n      return deferred.resolve();\r\n    }\r\n    const polygon = arrayPolygon.map(i => i.geometry)\r\n    selfCm.geometryService.labelPoints(polygon)\r\n      .then((labelPoints) => {\r\n        // add graphic to graphicLayerPuntoLote\r\n        for (let point of labelPoints) {\r\n          const puntoLoteGraphic = new Graphic(point, symbolPuntoLote, { tipLot: 2 })\r\n          graphicLayerPuntoLote.add(puntoLoteGraphic)\r\n\r\n        };\r\n        return deferred.resolve();\r\n      })\r\n      .catch((error) => {\r\n        return deferred.reject(error);\r\n      });\r\n    return deferred.promise;\r\n  },\r\n\r\n  _addGraphicsAfterPreVisualization() {\r\n    selfCm.map.addLayer(graphicLayerLotPreview);\r\n    selfCm.map.addLayer(graphicLayerFrenteLote);\r\n    selfCm.map.addLayer(graphicLayerPuntoLote);\r\n    selfCm._removeLayerGraphic(idGraphicPredioByMaintenance);\r\n    selfCm.map.addLayer(graphicLayerPredioByMaintenance)\r\n  },\r\n\r\n  _ApplyDivideLotesRefactor() {\r\n    selfCm.busyIndicator.show();\r\n    toolbarCm.deactivate();\r\n    ToolDraw.deactivateToolbarAnotherToolbar();\r\n    selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n    selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n    selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n    selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n    selfCm._removeLayerGraphic(idGraphicLoteDeleteCm);\r\n    selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n\r\n    // Union all graphics of graphicslayer\r\n    if (graphicLayerLineaDivision.graphics.length == 0) {\r\n      selfCm._showMessage(selfCm.nls.emptyLineSubdivision, 'warning');\r\n      selfCm.busyIndicator.hide();\r\n      return\r\n    }\r\n    if (!selfCm.lotesQuery) {\r\n      selfCm._showMessage(selfCm.nls.errorGetLand, 'warning');\r\n      selfCm.busyIndicator.hide();\r\n      return\r\n    }\r\n    return selfCm._getOriginalLots()\r\n      .then(() => {\r\n        // const geomLoteDivided = selfCm._divideLotsByLines();\r\n        selfCm._divideLotsByLines();\r\n        return selfCm._addGraphicsPointLotsAndArancel();\r\n      })\r\n      .then((mediterraneanLotsGeometry) => {\r\n        return selfCm._addGraphicsPointMediterraneanLot(mediterraneanLotsGeometry);\r\n      })\r\n      .then(() => {\r\n        return selfCm._getMaxCodLot();\r\n      })\r\n      .then(maxCodLot => {\r\n        return selfCm._ordenarPoligonosNorteSur(parseInt(maxCodLot), selfCm.bodyTbDatosLoteDvApCm)\r\n      })\r\n      // .then(() => {\r\n      //   selfCm.map.reorderLayer(selfCm.map.getLayer(idGraphicLoteCm), selfCm.map.graphicsLayerIds.indexOf(graphicLayerLabelLineaDivision.id));\r\n      //   selfCm.map.setExtent(selfCm.currentLotsRows[0].geometry.getExtent().expand(2.5), true);\r\n      // })\r\n      // .then(() => {\r\n      // selfCm._addGraphicsAfterPreVisualization();\r\n      // })\r\n      .then(() => {\r\n        selfCm._populateTablePredio(selfCm.bodyTbPrediosDvApCm, selfCm._activateToolPrediosByMaintenance)\r\n        // selfCm.map.addLayer(graphicLayerLotPreview);\r\n        selfCm._addGraphicsAfterPreVisualization();\r\n        selfCm.map.reorderLayer(selfCm.map.getLayer(idGraphicLoteCm), selfCm.map.graphicsLayerIds.indexOf(graphicLayerLabelLineaDivision.id));\r\n        selfCm.map.setExtent(selfCm.currentLotsRows[0].geometry.getExtent().expand(1.5), true);\r\n        selfCm.busyIndicator.hide();\r\n      })\r\n      .catch(error => {\r\n        // console.log(error)\r\n        selfCm.busyIndicator.hide();\r\n        selfCm._showMessage(error.message, type = \"error\")\r\n      })\r\n  },\r\n\r\n\r\n  // _ApplyDivideLotesRefactor() {\r\n  //   selfCm.busyIndicator.show();\r\n  //   selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n  //   selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n  //   selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n  //   selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n  //   selfCm._removeLayerGraphic(idGraphicLoteDeleteCm);\r\n  //   selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n\r\n  //   // Union all graphics of graphicslayer\r\n  //   if (graphicLayerLineaDivision.graphics.length == 0) {\r\n  //     selfCm._showMessage(selfCm.nls.emptyLineSubdivision, 'warning');\r\n  //     selfCm.busyIndicator.hide();\r\n  //     return\r\n  //   }\r\n  //   if (!selfCm.lotesQuery) {\r\n  //     selfCm._showMessage(selfCm.nls.errorGetLand, 'warning');\r\n  //     selfCm.busyIndicator.hide();\r\n  //     return\r\n  //   }\r\n  //   return selfCm._getOriginalLots(selfCm.lotesQuery)\r\n  //     .then(originLots => {\r\n  //       // const geomLoteDivided = selfCm._divideLotsByLines();\r\n  //       selfCm._divideLotsByLines();\r\n  //       return selfCm._getMaxCodLot();\r\n  //     })\r\n  //     .then(maxCodLot => {\r\n  //       return selfCm._ordenarPoligonosNorteSur(\r\n  //         parseInt(maxCodLot),\r\n  //         selfCm.bodyTbDatosLoteDvApCm\r\n  //       )\r\n  //     })\r\n  //     .then(() => {\r\n  //       selfCm.map.reorderLayer(selfCm.map.getLayer(idGraphicLoteCm), selfCm.map.graphicsLayerIds.indexOf(graphicLayerLabelLineaDivision.id));\r\n  //       selfCm.map.setExtent(selfCm.currentLotsRows[0].geometry.getExtent().expand(2.5), true);\r\n  //       return selfCm._addGraphicsPointLotsAndArancel();\r\n  //     })\r\n  //     .then((mediterraneanLotsGeometry) => {\r\n  //       return selfCm._addGraphicsPointMediterraneanLot(mediterraneanLotsGeometry);\r\n  //     })\r\n  //     .then(() => {\r\n  //       selfCm._addGraphicsAfterPreVisualization();\r\n  //     })\r\n  //     .then(() => {\r\n  //       selfCm._populateTablePredio(selfCm.bodyTbPrediosDvApCm, selfCm._activateToolPrediosByMaintenance)\r\n  //       selfCm.busyIndicator.hide();\r\n  //     })\r\n  //     .catch(error => {\r\n  //       // console.log(error)\r\n  //       selfCm.busyIndicator.hide();\r\n  //       selfCm._showMessage(error.message, type = \"error\")\r\n  //     })\r\n  // },\r\n\r\n  // // ----------------------------------------------------------------------------------------------\r\n  // // GeoprocessingServices\r\n  // // ----------------------------------------------------------------------------------------------\r\n  // _executeReasignacionGpService(evt) {\r\n  //   if (!selfCm.xy.length) {\r\n  //     selfCm._showMessage(selfCm.nls.emptyNewLocation, type = \"error\")\r\n  //     return\r\n  //   }\r\n  //   selfCm._showMessageConfirm().then(function (result) {\r\n  //     if (result) {\r\n  //       let params = {\r\n  //         \"cod_pred\": selfCm.uniqueCodeLands,\r\n  //         \"ubigeo\": paramsApp['ubigeo'],\r\n  //         \"geometry\": selfCm.xy,\r\n  //         \"user\": paramsApp['username'],\r\n  //         \"id_solicitud\": selfCm.codRequestsCm\r\n  //       }\r\n\r\n  //       // revisar si alguna propiedad tiene valor nulo o indefinido\r\n  //       for (let key in params) {\r\n  //         if (params[key] == null || params[key] == undefined) {\r\n  //           selfCm._showMessage(`Debe especificar el valor de ${key}`, type = \"error\");\r\n  //           return\r\n  //         }\r\n  //       }\r\n  //       selfCm._executeGPService(selfCm.config.reasignacionUrl, params)\r\n  //     }\r\n  //     else {\r\n  //       return\r\n  //     }\r\n  //   })\r\n  // },\r\n\r\n  _executeAcumulacionGpService(evt) {\r\n    const self = this;\r\n    if (!this.lotesQuery) {\r\n      this._showMessage(this.nls.errorGetLand, 'warning');\r\n      this.busyIndicator.hide();\r\n      return\r\n    }\r\n    if (!this.map.getLayer(idGraphicLoteCm)) {\r\n      this._showMessage(this.nls.emptyPreviewAccumulation, type = \"error\")\r\n      return\r\n    }\r\n\r\n    if (!graphicLayerPredioByMaintenance.graphics.length) {\r\n      this._showMessage(this.nls.emptyNewLand, type = \"error\")\r\n      return\r\n    }\r\n    const labelCodLotesLayer = this.map.getLayer(idGraphicLabelCodLote)\r\n\r\n    this._showMessageConfirm()\r\n      .then(function (result) {\r\n        if (result) {\r\n          self.busyIndicator.show();\r\n          self._addWarningMessageExecute()\r\n          const labelCodLotesLayerGraphic = labelCodLotesLayer.graphics;\r\n\r\n          Acumulation.codRequests = self.codRequestsCm;\r\n          Acumulation.currentLotsRows = self.currentLotsRows;\r\n\r\n          Acumulation.attributes = labelCodLotesLayerGraphic.map((i) => {\r\n            return {\r\n              codLot: i.symbol.text,\r\n              lotUrb: i.attributes.lot_urb,\r\n              coords: [\r\n                i.geometry.x,\r\n                i.geometry.y\r\n              ]\r\n            }\r\n          });\r\n\r\n          Acumulation.newPointLotsGraphics = self.map.getLayer(idGraphicPuntoLote).graphics;\r\n          Acumulation.newLandsGraphics = graphicLayerPredioByMaintenance.graphics;\r\n          // Acumulation.newLandsGraphics[0]['codPre'] = self.cpm;\r\n          // Acumulation.newLandsGraphics[0]['id'] = self.idPredio;\r\n          // Acumulation.newLandsGraphics[0]['resolutionType'] = self.resolutionType;\r\n          // Acumulation.newLandsGraphics[0]['resolutionDocument'] = self.resolutionDocument;\r\n          // Acumulation.newLandsGraphics[0]['floor'] = self.floor;\r\n          // Acumulation.newLandsGraphics[0]['urbanLotNumber'] = self.urbanLotNumber;\r\n          Acumulation.landUrl = self.layersMap.getLayerInfoById(idLyrCfPredios).getUrl();\r\n          Acumulation.pointLotUrl = self.layersMap.getLayerInfoById(idLyrCfLotesPun).getUrl();\r\n          Acumulation.lotUrl = self.layersMap.getLayerInfoById(idLyrCfLotes).getUrl();\r\n          Acumulation.arancelUrl = self.layersMap.getLayerInfoById(idLyrCfArancel).getUrl();\r\n          Acumulation.blockUrl = self.layersMap.getLayerInfoById(idLyrCfManzanaUrb).getUrl();\r\n          Acumulation.cadastralBlockUrl = self.layersMap.getLayerInfoById(idLyrCfManzana).getUrl();\r\n          Acumulation.config = self.config;\r\n          Acumulation.lotGraphic = self.map.getLayer(idGraphicLoteCm).graphics;\r\n          Acumulation.ubigeo = paramsApp['ubigeo'];\r\n          Acumulation.user = paramsApp['username'];\r\n          Acumulation.caseRequest = self.case;\r\n          Acumulation.queryBlock = self.arancel;\r\n          Acumulation.queryLots = self.lotesQuery;\r\n\r\n\r\n          Acumulation.executeAcumulation()\r\n            .then(response => {\r\n              // self._removeLayerGraphic(idGraphicPredioCm);\r\n              graphicLayerPredioByMaintenance.clear();\r\n              graphicRightOfWay.clear();\r\n              self._removeLayerGraphic(idGraphicLoteCm);\r\n              self._removeLayerGraphic(idGraphicPuntoLote);\r\n              self._removeLayerGraphic(idGraphicFrenteLote);\r\n              self._removeLayerGraphic(idGraphicLabelCodLote);\r\n              self._refreshLayersCF();\r\n              // self.map.getLayer(idLyrCatastroFiscal).setVisibility(false)\r\n              // self.map.getLayer(idLyrCatastroFiscal).setVisibility(true)\r\n              self._FormResult(self.codRequestsCm, self.caseDescription);\r\n              self.busyIndicator.hide();\r\n              self._removeWarningMessageExecute()\r\n              self._showMessage(self.nls.successProcess, type = \"success\");\r\n            })\r\n            .catch(error => {\r\n              // console.log(error)\r\n              // self._removeWarningMessageExecute()\r\n              // self._showMessage(error.message, type = \"error\");\r\n              // self.busyIndicator.hide();\r\n\r\n              self._removeWarningMessageExecute()\r\n              self.busyIndicator.hide();\r\n              if (error.name === CustomException.ErrorEqualUrbanLotWithinBlock.name) {\r\n                return\r\n              } else {\r\n                self._showMessage(error.message, type = \"error\");\r\n              }\r\n            })\r\n        }\r\n        else {\r\n          self.busyIndicator.hide();\r\n          return\r\n        }\r\n      })\r\n  },\r\n\r\n  _executeSubdivisionGpService(evt) {\r\n\r\n    const layerLote = this.map.getLayer(idGraphicLoteCm);\r\n\r\n    if (!this.lotesQuery) {\r\n      this._showMessage(this.nls.errorGetLand, 'warning');\r\n      this.busyIndicator.hide();\r\n      return;\r\n    };\r\n\r\n    if (!layerLote) {\r\n      this._showMessage(this.nls.emptyPreviewSubdivision, type = \"error\");\r\n      return;\r\n    };\r\n\r\n    // Check if all labels have a value\r\n    const labelCodLotesLayer = this.map.getLayer(idGraphicLabelCodLote);\r\n    for (let pred of labelCodLotesLayer.graphics) {\r\n      if (!pred.symbol.text) {\r\n        this._showMessage(this.nls.emptyLotCodeSubdivision, type = \"error\");\r\n        return;\r\n      };\r\n      if (!pred.attributes.lot_urb || pred.attributes.lot_urb === \"...\") {\r\n        this._showMessage(this.nls.emptyUrbanLotSubdivision, type = \"error\");\r\n        return;\r\n      };\r\n    };\r\n\r\n    if (graphicLayerPredioByMaintenance.graphics.length != layerLote.graphics.length) {\r\n      this._showMessage(this.nls.emptyGraphicLandSubdivision, type = \"error\");\r\n      return;\r\n    };\r\n    // Check if all lots have a land\r\n    const checkLotsWithinLands = UtilityCase.checkLotsWithinLands(layerLote.graphics, graphicLayerPredioByMaintenance.graphics);\r\n    if (!checkLotsWithinLands) {\r\n      this._showMessage(this.nls.emptyLandResultSubdivision, type = \"error\");\r\n      return\r\n    };\r\n\r\n    // Check lotUrb\r\n    const lotUrbArray = labelCodLotesLayer.graphics.map(i => i.attributes.lot_urb);\r\n    const duplicateLotUrban = UtilityCase.checkDuplicateLotUrbanResults(lotUrbArray);\r\n    if (duplicateLotUrban.length > 0) {\r\n      this._showMessage(`${this.nls.duplicateLotUrbanResult}: ${duplicateLotUrban}`, type = 'error');\r\n      return;\r\n    };\r\n\r\n    this._showMessageConfirm()\r\n      .then((result) => {\r\n        if (result) {\r\n          this.busyIndicator.show();\r\n          this._addWarningMessageExecute();\r\n          const labelCodLotesLayerGraphic = labelCodLotesLayer.graphics;\r\n\r\n          SubDivision.blockUrl = this.layersMap.getLayerInfoById(idLyrCfManzanaUrb).getUrl();\r\n          SubDivision.lotUrl = this.layersMap.getLayerInfoById(idLyrCfLotes).getUrl();\r\n          SubDivision.pointLotUrl = this.layersMap.getLayerInfoById(idLyrCfLotesPun).getUrl();\r\n          SubDivision.arancelUrl = this.layersMap.getLayerInfoById(idLyrCfArancel).getUrl();\r\n          SubDivision.landUrl = this.layersMap.getLayerInfoById(idLyrCfPredios).getUrl();\r\n          SubDivision.cadastralBlockUrl = this.layersMap.getLayerInfoById(idLyrCfManzana).getUrl();\r\n          SubDivision.currentLotsRows = this.currentLotsRows;\r\n          SubDivision.newPointLotsGraphics = this.map.getLayer(idGraphicPuntoLote).graphics;\r\n          SubDivision.newLandsGraphics = graphicLayerPredioByMaintenance.graphics;\r\n          SubDivision.queryBlock = this.arancel;\r\n          // SubDivision.newLandsGraphics.forEach((i) => {\r\n          //   i['id'] = i.attributes.id.split('_')[1],\r\n          //     i['codPre'] = i.attributes.cpm,\r\n          //     i['resolutionType'] = i.attributes.resolutionType,\r\n          //     i['resolutionDocument'] = i.attributes.resolutionDocument,\r\n          //     i['floor'] = i.attributes.floor,\r\n          //     i['urbanLotNumber'] = i.attributes.urbanLotNumber\r\n          // });\r\n          SubDivision.lotGraphic = layerLote.graphics;\r\n\r\n          SubDivision.attributes = labelCodLotesLayerGraphic.map((i) => {\r\n            return {\r\n              codLot: i.symbol.text,\r\n              lotUrb: i.attributes.lot_urb,\r\n              coords: [\r\n                i.geometry.x,\r\n                i.geometry.y\r\n              ]\r\n            }\r\n          });\r\n\r\n          SubDivision.config = this.config;\r\n          SubDivision.ubigeo = paramsApp['ubigeo'];\r\n          SubDivision.user = paramsApp['username'];\r\n          SubDivision.caseRequest = this.case;\r\n          SubDivision.codRequests = this.codRequestsCm;\r\n          SubDivision.queryLots = this.lotesQuery;\r\n\r\n          SubDivision.executeSubdivision()\r\n            .then(response => {\r\n              graphicLayerPredioByMaintenance.clear();\r\n              graphicLayerLineaDivision.clear();\r\n              graphicLayerLabelLineaDivision.clear();\r\n              graphicRightOfWay.clear();\r\n              this._removeLayerGraphic(idGraphicLoteCm);\r\n              this._removeLayerGraphic(idGraphicPuntoLote);\r\n              this._removeLayerGraphic(idGraphicFrenteLote);\r\n              this._removeLayerGraphic(idGraphicLabelCodLote);\r\n              // this.map.getLayer(idLyrCatastroFiscal).setVisibility(false)\r\n              // this.map.getLayer(idLyrCatastroFiscal).setVisibility(true)\r\n              this._refreshLayersCF();\r\n              this._FormResult(this.codRequestsCm, this.caseDescription);\r\n              this.busyIndicator.hide();\r\n              this._removeWarningMessageExecute()\r\n              this._showMessage(this.nls.successProcess, type = \"success\");\r\n            })\r\n            .catch(error => {\r\n              this._removeWarningMessageExecute()\r\n              this.busyIndicator.hide();\r\n              if (error.name === CustomException.ErrorEqualUrbanLotWithinBlock.name) {\r\n                return\r\n              } else {\r\n                this._showMessage(error.message, type = \"error\");\r\n              }\r\n            })\r\n          // .finally(() => {\r\n          //   selfCm.lotesQuery = null;\r\n          // })\r\n        }\r\n        else {\r\n          return\r\n        }\r\n      })\r\n  },\r\n\r\n  _executeInactivarGpService(evt) {\r\n    if (!selfCm.currentLotsRows) {\r\n      selfCm._showMessage(selfCm.nls.emptyLotRequests, type = \"error\")\r\n      return\r\n    }\r\n\r\n    selfCm._showMessageConfirm().then(function (result) {\r\n      if (result) {\r\n        selfCm.busyIndicator.show();\r\n        selfCm._addWarningMessageExecute();\r\n        Deactivate.caseRequest = selfCm.case;\r\n        Deactivate.codRequest = selfCm.codRequestsCm;\r\n        Deactivate.user = paramsApp['username'];\r\n        Deactivate.ubigeo = paramsApp['ubigeo'];\r\n        Deactivate.config = selfCm.config;\r\n        Deactivate.landUrl = selfCm.layersMap.getLayerInfoById(idLyrCfPredios).getUrl();\r\n        Deactivate.cpu = selfCm.uniqueCodeLands;\r\n        Deactivate.currentLotsRows = selfCm.currentLotsRows;\r\n\r\n        Deactivate.executeDeactivate()\r\n          .then(response => {\r\n            // selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(false)\r\n            // selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(true)\r\n            selfCm._refreshLayersCF()\r\n            selfCm._removeWarningMessageExecute()\r\n            selfCm._loadIniRequestsCm()\r\n            dojo.query(\".backTrayClsCm\")[0].click()\r\n            selfCm.busyIndicator.hide();\r\n            selfCm._showMessage(selfCm.nls.successProcess, type = \"success\");\r\n          })\r\n          .catch(error => {\r\n            selfCm._removeWarningMessageExecute()\r\n            selfCm._showMessage(error.message, type = \"error\");\r\n            selfCm.busyIndicator.hide();\r\n          })\r\n          .finally(() => {\r\n            selfCm.currentLotsRows = null;\r\n          })\r\n      }\r\n      else {\r\n        return\r\n      }\r\n    })\r\n  },\r\n\r\n  _addWarningMessageExecute() {\r\n    const self = this;\r\n    const buzyElm = dojo.query(\"#dojox_widget_Standby_0\")[0]\r\n    const imgElm = buzyElm.querySelector(\"img\")\r\n    const loadingText = document.createElement('div');\r\n    loadingText.id = 'loadingTextCustom';\r\n    loadingText.style.position = 'absolute';\r\n    const topMessage = parseFloat(imgElm.style.top) + 80;\r\n    loadingText.style.top = `${topMessage}px`;\r\n    const leftImg = parseFloat(imgElm.style.left) + imgElm.width / 2;\r\n    loadingText.style.left = `${leftImg}px`;\r\n    loadingText.style.transform = 'translate(-50%, -50%)';\r\n    loadingText.style.background = 'white';\r\n    loadingText.style.zIndex = '1000';\r\n    loadingText.innerHTML = self.nls.warningExecute;\r\n\r\n    dojo.query(\"#dojox_widget_Standby_0\")[0].appendChild(loadingText);\r\n  },\r\n\r\n  _removeWarningMessageExecute() {\r\n    dojo.query(\"#loadingTextCustom\")[0].remove();\r\n  },\r\n\r\n  _executeIndependenceLands(evt) {\r\n    if (!this.currentLotsRows) {\r\n      this._showMessage(this.nls.emptyLotRequests, type = \"error\")\r\n      return\r\n    };\r\n    if (!(graphicLayerPredioByMaintenance.graphics.length === this.responseRequests.length)) {\r\n      this._showMessage(this.nls.emptyNewLand, type = \"error\")\r\n      return\r\n    };\r\n\r\n    this._showMessageConfirm()\r\n      .then(result => {\r\n        if (result) {\r\n          this.busyIndicator.show();\r\n          this._addWarningMessageExecute();\r\n          Independence.codRequest = this.codRequestsCm;\r\n          Independence.cadastralBlockUrl = this.layersMap.getLayerInfoById(idLyrCfManzana).getUrl();\r\n          Independence.ubigeo = paramsApp['ubigeo'];\r\n          Independence.user = paramsApp['username'];\r\n          // Independence.newLands = LandAssignment.lands;\r\n          Independence.newLands = graphicLayerPredioByMaintenance.graphics;\r\n          Independence.urlLands = this.map.getLayer(idLyrCfPredios).url;\r\n          Independence.matrixLand = this.currentLandTabRows;\r\n          Independence.config = this.config;\r\n          Independence.currentLotsRows = this.currentLotsRows;\r\n          Independence.currentPoinLotsRows = this.currentPoinLotsRows;\r\n          Independence.caseRequest = this.case;\r\n\r\n          Independence.executeIndependence()\r\n            .then(response => {\r\n              graphicLayerPredioByMaintenance.clear();\r\n              graphicRightOfWay.clear();\r\n              this._removeLayerGraphic(idGraphicLoteCm);\r\n              this._removeLayerGraphic(idGraphicPuntoLote);\r\n              this._removeLayerGraphic(idGraphicFrenteLote);\r\n              this._removeLayerGraphic(idGraphicLabelCodLote);\r\n              this._refreshLayersCF();\r\n              this._FormResult(this.codRequestsCm, this.caseDescription);\r\n              this.busyIndicator.hide();\r\n              this._removeWarningMessageExecute()\r\n              this._showMessage(this.nls.successProcess, type = \"success\");\r\n              // LandAssignment.removeAllGraphics();\r\n              // this._refreshLayersCF();\r\n              // // this.map.getLayer(idLyrCatastroFiscal).setVisibility(false)\r\n              // // this.map.getLayer(idLyrCatastroFiscal).setVisibility(true)\r\n              // this._FormResult(this.codRequestsCm, this.caseDescription);\r\n              // this.busyIndicator.hide();\r\n              // this._removeWarningMessageExecute();\r\n              // this._showMessage(this.nls.successProcess, type = \"success\");\r\n            })\r\n            .catch(error => {\r\n              this._removeWarningMessageExecute();\r\n              this._showMessage(error.message, type = \"error\");\r\n              this.busyIndicator.hide();\r\n            })\r\n          // .finally(() => {\r\n          //   this.currentLotsRows = null;\r\n          // })\r\n        }\r\n        else {\r\n          return\r\n        }\r\n      })\r\n  },\r\n\r\n  // _executeGPService(url, params) {\r\n  //   let urlStatusRequest = `${selfCm.config.applicationListUrl}/${selfCm.codRequestsCm}`\r\n  //   selfCm._callApiRestServices(urlStatusRequest, {}).then(function (result) {\r\n  //     try {\r\n  //       if (result.idStatus != 1) {\r\n  //         throw new Error(`Esta solicitud (${selfCm.codRequestsCm}) ya fue procesada con anterioridad: ${result.date}`)\r\n  //       }\r\n  //       selfCm.busyIndicator.show();\r\n  //       // Agregar un elemento de texto debajo del BusyIndicator\r\n  //       let buzyElm = dojo.query(\"#dojox_widget_Standby_0\")[0]\r\n  //       let imgElm = buzyElm.querySelector(\"img\")\r\n  //       let loadingText = document.createElement('div');\r\n  //       loadingText.id = 'loadingTextCustom';\r\n  //       loadingText.style.position = 'absolute';\r\n  //       let topMessage = parseFloat(imgElm.style.top) + 80;\r\n  //       loadingText.style.top = `${topMessage}px`;\r\n  //       let leftImg = parseFloat(imgElm.style.left) + imgElm.width / 2;\r\n  //       loadingText.style.left = `${leftImg}px`;\r\n  //       loadingText.style.transform = 'translate(-50%, -50%)';\r\n  //       loadingText.style.background = 'white';\r\n  //       loadingText.style.zIndex = '1000';\r\n\r\n  //       dojo.query(\"#dojox_widget_Standby_0\")[0].appendChild(loadingText);\r\n  //       // selfCm._FormResult(selfCm.codRequestsCm, selfCm.caseDescription);\r\n  //       selfCm.gp = new Geoprocessor(url);\r\n  //       selfCm.gp.submitJob(params, selfCm._completeCallback, selfCm._statusCallback);\r\n  //     } catch (error) {\r\n  //       selfCm.busyIndicator.hide();\r\n  //       selfCm._showMessage(error.message, type = \"error\")\r\n  //     }\r\n\r\n  //   })\r\n  // },\r\n\r\n  // _statusCallback(JobInfo) {\r\n  //   selfCm.jobId = JobInfo.jobId\r\n  //   let textMessage = JobInfo.messages.map((message) => { return message.description })\r\n  //   try {\r\n  //     dojo.query(\"#loadingTextCustom\")[0].textContent = textMessage.slice(-1)[0] ? textMessage.slice(-1)[0] : ''\r\n  //   } catch (error) {\r\n  //     console.log(error)\r\n  //   }\r\n  // },\r\n  // _completeCallback(JobInfo) {\r\n  //   switch (JobInfo.jobStatus) {\r\n  //     case \"esriJobSubmitted\":\r\n  //       // El trabajo se ha enviado al servidor y está esperando en la cola.\r\n  //       console.log(\"El trabajo se ha enviado y está esperando en la cola.\");\r\n  //       break;\r\n  //     case \"esriJobExecuting\":\r\n  //       // El trabajo se está ejecutando actualmente en el servidor.\r\n  //       console.log(\"El trabajo se está ejecutando en el servidor.\");\r\n  //       break;\r\n  //     case \"esriJobSucceeded\":\r\n  //       // El trabajo se ha completado satisfactoriamente y los resultados están disponibles.\r\n  //       selfCm.gp.getResultData(JobInfo.jobId, \"response\", function (result) {\r\n  //         if (!result.value.status) {\r\n  //           selfCm.busyIndicator.hide();\r\n  //           selfCm._showMessage(result.value.message, type = \"error\");\r\n  //           return\r\n  //         }\r\n\r\n  //         selfCm._sendDataToPlatform(result.value.response)\r\n\r\n\r\n  //         switch (selfCm.case) {\r\n  //           case \"1\":\r\n  //             selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n  //             break;\r\n  //           case \"2\":\r\n  //             selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n  //             selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n  //             selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n  //             selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n  //             selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n  //             break\r\n  //           case \"3\":\r\n  //             graphicLayerPredioByMaintenance.clear();\r\n  //             graphicLayerLineaDivision.clear();\r\n  //             graphicLayerLabelLineaDivision.clear();\r\n  //             // selfCm._removeLayerGraphic(idGraphicPredioCm);\r\n  //             selfCm._removeLayerGraphic(idGraphicLoteCm);\r\n  //             selfCm._removeLayerGraphic(idGraphicPuntoLote);\r\n  //             selfCm._removeLayerGraphic(idGraphicFrenteLote);\r\n  //             selfCm._removeLayerGraphic(idGraphicLabelCodLote);\r\n  //             break\r\n  //           case \"4\":\r\n  //             // dojo.query(\".tablinksCm.active\")[0].click();\r\n  //             selfCm._loadIniRequestsCm()\r\n  //             break\r\n  //           default:\r\n  //             break;\r\n  //         }\r\n  //         selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(false)\r\n  //         selfCm.map.getLayer(idLyrCatastroFiscal).setVisibility(true)\r\n  //         if (selfCm.case == \"4\") {\r\n  //           dojo.query(\".backTrayClsCm\")[0].click()\r\n  //         } else {\r\n  //           selfCm._FormResult(selfCm.codRequestsCm, selfCm.caseDescription);\r\n  //         }\r\n  //         // Codigo para mostrar la ventana de resultados\r\n\r\n\r\n  //       })\r\n  //       break;\r\n  //     case \"esriJobFailed\":\r\n  //       // El trabajo ha fallado y no se han podido generar los resultados.\r\n  //       selfCm._showMessage(\"El proceso ha fallado y no se han podido generar los resultados.\", type = \"error\");\r\n  //       break;\r\n  //     case \"esriJobCancelled\":\r\n  //       // El trabajo ha sido cancelado por el usuario.\r\n  //       selfCm._showMessage(\"El proceso ha sido cancelado por el usuario.\");\r\n  //       break;\r\n  //     case \"esriJobTimedOut\":\r\n  //       // El trabajo ha expirado debido a un tiempo de espera.\r\n  //       selfCm._showMessage(\"El proceso ha superado el tiempo de espera necesario para su ejecución.\", type = \"error\");\r\n  //       break;\r\n  //     default:\r\n  //       // El estado del trabajo no se reconoce.\r\n  //       selfCm._showMessage(\"El estado del proceso no se reconoce.\");\r\n  //       break;\r\n  //   }\r\n  //   selfCm.busyIndicator.hide();\r\n  //   // remove 'loadingTextCustom'\r\n  //   dojo.query(\"#loadingTextCustom\")[0].remove();\r\n  // },\r\n  // _cancelProcess(evt) {\r\n  //   selfCm.gp.cancelJob(selfCm.jobId, function (info) {\r\n  //     console.log(info.jobStatus)\r\n  //   });\r\n  // },\r\n\r\n  // _sendDataToPlatform(data) {\r\n  //   for (let predio of data.results) {\r\n  //     predio['ubigeo'] = paramsApp.ubigeo;\r\n  //   }\r\n\r\n  //   data['idType'] = parseInt(selfCm.case)\r\n  //   fetch(selfCm.config.updateStatusApplication, {\r\n  //     method: 'POST', // o 'PUT'\r\n  //     body: JSON.stringify(data), // los datos pueden ser de tipo 'string' o {object}\r\n  //     headers: {\r\n  //       'Content-Type': 'application/json'\r\n  //     }\r\n  //   }).then(res => res.json())\r\n  //     .then(response => selfCm._showMessage('El proceso se completó satisfactoriamente.'))\r\n  //     // .catch(error => console.error('Error:', error));\r\n  //     .catch(error => selfCm._showMessage(error, type = \"error\"));\r\n  // },\r\n\r\n  _exportTableToExcel(evt) {\r\n    // Obtén la tabla HTML\r\n    const table = dojo.query(\"#tableRequestCm\")[0]\r\n    let headerRow = table.querySelector(\"tr\");\r\n    let rows = table.querySelectorAll(\"tr\")\r\n\r\n    let headers = [];\r\n    let headerCols = headerRow.querySelectorAll(\"th\");\r\n    for (let h = 0; h < headerCols.length - 1; h++) {\r\n      headers.push(headerCols[h].innerText);\r\n    }\r\n\r\n    let data = [];\r\n\r\n    // Recorre las filas (ignora la primera fila que contiene los encabezados)\r\n    for (let i = 0; i < rows.length; i++) {\r\n      if (i == 0) continue;\r\n      let row = {}, cols = rows[i].querySelectorAll(\"td\");\r\n\r\n      // Recorre las columnas\r\n      for (let j = 0; j < cols.length - 1; j++) {\r\n        // Usa el texto del encabezado como clave y el texto de la celda como valor\r\n        row[headers[j]] = cols[j].innerText;\r\n      }\r\n\r\n      data.push(row);\r\n    }\r\n\r\n\r\n\r\n    // Convierte el array de objetos en una cadena JSON\r\n    let wb = XLSX.utils.book_new();\r\n\r\n    // Crear una hoja de cálculo a partir de los datos JSON\r\n    let ws = XLSX.utils.json_to_sheet(data);\r\n    let sheetName = selfCm.currentTabActive.replace(\"_\", \" \");\r\n    XLSX.utils.book_append_sheet(wb, ws, sheetName);\r\n\r\n    // Escribir el libro de trabajo y forzar una descarga\r\n    XLSX.writeFile(wb, `reporte_solicitudes_${selfCm.currentTabActive}.xlsx`);\r\n  },\r\n\r\n  _dataURItoBlob(dataURI) {\r\n    var byteString = atob(dataURI.split(',')[1]);\r\n    var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n    var buffer = new ArrayBuffer(byteString.length);\r\n    var dataView = new Uint8Array(buffer);\r\n    for (var i = 0; i < byteString.length; i++) {\r\n      dataView[i] = byteString.charCodeAt(i);\r\n    }\r\n    return new Blob([buffer], { type: mimeString });\r\n  },\r\n\r\n  _sendObservation(evt) {\r\n    selfCm.busyIndicator.show();\r\n    const file = selfCm.imgUploadApCm.files[0];\r\n    const messageObservation = selfCm.textAreaObsApCm.value.trim();\r\n    if (messageObservation == '') {\r\n      selfCm.busyIndicator.hide();\r\n      selfCm._showMessage(selfCm.nls.emptyObservation, type = \"error\");\r\n      return\r\n    }\r\n    if (file == undefined) {\r\n      selfCm.busyIndicator.hide();\r\n      selfCm._showMessage(selfCm.nls.emptyImageSupport, type = \"error\");\r\n      return\r\n    }\r\n    const reader = new FileReader();\r\n    const data = new FormData();\r\n    reader.onloadend = function () {\r\n      data.append('application_id', selfCm.codRequestsCm);\r\n      data.append('description', selfCm.textAreaObsApCm.value);\r\n      data.append('img', selfCm.imgUploadApCm.files[0]);\r\n\r\n      return fetch(selfCm.config.observationUrl, {\r\n        method: 'POST',\r\n        body: data\r\n      })\r\n        .then(response => {\r\n          if (!response.ok) {\r\n            selfCm.busyIndicator.hide();\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n          }\r\n          selfCm.busyIndicator.hide();\r\n          selfCm._showMessagePromise(selfCm.nls.successRequestObservation).then((result) => {\r\n            dojo.query(\".backRequestsClsCm\")[0].click();\r\n            dojo.query(\".backTrayClsCm\")[0].click();\r\n            selfCm._loadIniRequestsCm();\r\n          })\r\n\r\n        }).catch(error => {\r\n          selfCm.busyIndicator.hide();\r\n          selfCm._showMessage(`${selfCm.nls.errorProcessRequestObservation} ${error}`, type = \"error\")\r\n        });\r\n    }\r\n    reader.readAsDataURL(file);\r\n  },\r\n\r\n  _uploadImagenObs(evt) {\r\n    let imageDiv = dojo.query(\".thumbnailClsCm\")[0];\r\n    let file = evt.target.files[0];\r\n    let reader = new FileReader();\r\n\r\n    reader.onloadend = function () {\r\n      imageDiv.innerHTML = \"\";\r\n      imageDiv.style.backgroundImage = 'url(' + reader.result + ')';\r\n      imageDiv.style.backgroundSize = 'contain';\r\n      imageDiv.style.backgroundRepeat = 'no-repeat';\r\n      imageDiv.style.backgroundPosition = 'center';\r\n    }\r\n\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n      imageDiv.innerHTML = \"<span><i class='far fa-image'></i></span>\";\r\n    }\r\n  },\r\n  _searchRequestByCodPred(evt) {\r\n    if (evt.keyCode === 13) {\r\n      if (evt.target.value == '') {\r\n        if ('cup' in selfCm.queryRequests) {\r\n          delete selfCm.queryRequests['cup'];\r\n        }\r\n      } else {\r\n        selfCm.queryRequests['cup'] = evt.target.value;\r\n        // selfCm.queryRequests.limit = selfCm.defaultLimit;\r\n      }\r\n      dojo.query(\".tablinksCm.active\")[0].click();\r\n    }\r\n  },\r\n\r\n  _sortedByDate(evt) {\r\n    const columnOrder = evt.currentTarget.dataset.val\r\n    evt.currentTarget.dataset.val = columnOrder.includes('-') ? columnOrder.replace('-', '') : `-${columnOrder}`\r\n    selfCm.queryRequests['ordering'] = evt.currentTarget.dataset.val;\r\n    selfCm._loadRequestsCm();\r\n    // dojo.query(\".tablinksCm.active\")[0].click();\r\n  },\r\n\r\n\r\n\r\n  onOpen() {\r\n    // this._createToolbar();\r\n\r\n    dojo.query(\".backTrayClsCm\").on('click', this._openFormCase);\r\n    dojo.query(\".tablinksCm\").on('click', this._loadRequestTabActiveCm);\r\n    dojo.query(\"#btnObsCaseCm\").on('click', this._openFormObs);\r\n    dojo.query(\".backRequestsClsCm\").on('click', this._openFormObs);\r\n    // dojo.query(\"#goodRequestsCm\").on('click', this._openFormResult);\r\n    dojo.query(\"#showInfoDocCm\").on('click', this._openSupportingDocument)\r\n\r\n    // Reasignacion\r\n    // dojo.query(\"#btnDrawMarkerCm\").on('click', this._activateTool);\r\n\r\n    dojo.query(\"#btnFsCm\").on('click', this._ApplyAcumulationLotsRefactor)\r\n    dojo.query(\"#btnDrawLinesDvCm\").on('click', this._activateToolLinesDivision)\r\n    dojo.query(\"#btnApplyDvCm\").on('click', this._ApplyDivideLotesRefactor)\r\n    dojo.query(\"#titleCaseCm\").on('click', this._zoomHomeRequests)\r\n    // dojo.query(\"#sendDataRsCm\").on('click', this._executeReasignacionGpService)\r\n    dojo.query('#sendDataFsCm').on('click', this._executeAcumulacionGpService.bind(this));\r\n    dojo.query('#sendDataDvCm').on('click', this._executeSubdivisionGpService.bind(this));\r\n    dojo.query('#sendDataIpCm').on('click', this._executeIndependenceLands.bind(this));\r\n    dojo.query('#sendDataDtCm').on('click', this._executeInactivarGpService);\r\n    dojo.query('#btnReportCm').on('click', this._exportTableToExcel);\r\n    dojo.query('#imgUploadCm').on('change', this._uploadImagenObs);\r\n    dojo.query('#sendDataObsGrCm').on('click', this._sendObservation);\r\n    dojo.query('#searchTbxCm').on(\"keyup\", this._searchRequestByCodPred);\r\n    dojo.query('.columnDateClsCm').on(\"click\", this._sortedByDate);\r\n    dojo.query('.selectLimitClsCm').on(\"change\", this._changeLimitPagination);\r\n    dojo.query('.buttonPaginationPrevClsCm').on(\"click\", this._prevPagePagination);\r\n    dojo.query('.buttonPaginationNextClsCm').on(\"click\", this._nextPagePagination);\r\n    dojo.query('.btnCancelClsCm').on(\"click\", this._cancelDrawRightOfWay.bind(this));\r\n\r\n    // dojo.query('.columnCaseClsCm').on(\"click\", this._sortedByDate)\r\n    this._loadIniRequestsCm()\r\n\r\n    selfCm.map.addLayer(graphicLayerLabelLineaDivision)\r\n    // selfCm.map.addLayer(graphicLayerLandsByIndependence)\r\n    selfCm.editToolbar = new Edit(selfCm.map);\r\n    // selfCm.map.on(\"click\", selfCm._enableEditingLabelsLotesDivision);\r\n    selfCm.editToolbar.on(\"deactivate\", function (evt) {\r\n      if (evt.info.isModified) {\r\n        selfCm.map.setInfoWindowOnClick(true)\r\n        // firePerimeterFL.applyEdits(null, [evt.graphic], null);\r\n      }\r\n    });\r\n  },\r\n\r\n  // this.toolDraw.map = this.map;\r\n\r\n  // onClose(){\r\n  //   console.log('CartoMaintenanceWgt::onClose');\r\n  // },\r\n  // onMinimize(){\r\n  //   console.log('CartoMaintenanceWgt::onMinimize');\r\n  // },\r\n  // onMaximize(){\r\n  //   console.log('CartoMaintenanceWgt::onMaximize');\r\n  // },\r\n  // onSignIn(credential){\r\n  //   console.log('CartoMaintenanceWgt::onSignIn', credential);\r\n  // },\r\n  // onSignOut(){\r\n  //   console.log('CartoMaintenanceWgt::onSignOut');\r\n  // }\r\n  // onPositionChange(){\r\n  //   console.log('CartoMaintenanceWgt::onPositionChange');\r\n  // },\r\n  // resize(){\r\n  //   console.log('CartoMaintenanceWgt::resize');\r\n  // }\r\n});\r\n"]}